Unnamed: 0	Language	Question	SPARQL	Response	lang_det	Original_Index	Prompt	Generated_SPARQL	Generated_response	TP	FP	FN	Error type	Error subtype	Error location
1600	en	How can we find out about dark-tagged tales?	"prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT COUNT(DISTINCT ?story) as ?stories
WHERE {
?story golem:keyword ""Dark-ish"" .
}"	[{'stories': Value(typed-literal:'94')}]	ENGLISH	1064	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow specific guidelines to ensure accuracy and correctness:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: Can you tell me how many stories include Dark Remus Lupin?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT COUNT(DISTINCT ?story) as ?stories
WHERE {
?story golem:keyword ""Dark Remus Lupin"" .
}
    </SPARQL>

    ###
    

    Question: What is the count of stories featuring Dark Remus Lupin?  

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT COUNT(DISTINCT ?story) as ?stories
WHERE {
?story golem:keyword ""Dark Remus Lupin"" .
}
    </SPARQL>

    ###
    

    Question: How many stories are tagged as Dark Remus Lupin?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT COUNT(DISTINCT ?story) as ?stories
WHERE {
?story golem:keyword ""Dark Remus Lupin"" .
}
    </SPARQL>

    ###
    

Question: How can we find out about dark-tagged tales?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT COUNT(DISTINCT ?story) as ?stories
WHERE {
?story golem:keyword ""dark"" .
}
"	[{'stories': Value(typed-literal:'0')}]	0	1	1	Failed NER		Paraphrasing
1124	en	Is His First Choice His Best Option?  	"prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT DISTINCT ?series ?collection ?content_warning ?romantic_category (GROUP_CONCAT(DISTINCT ?keyword; separator="", "") AS ?keywords) ?summary
WHERE {
?story golem:title ""His First Choice"" .
?story golem:keyword ?keyword .
?story golem:romanticCategory ?romantic_category .
?story golem:series ?series .
?story golem:collections ?collection .
?story golem:contentWarning ?content_warning .
?story golem:summary ?summary .
}"	"[{'series': Value(literal:'None'), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'Creator Chose Not To Use Archive Warnings'), 'romantic_category': Value(literal:'F/M'), 'keywords': Value(literal:""Angst, Love, Romance, Valentine's Day, being picked first, no to settling""), 'summary': Value(literal:'Molly is tired of being unloved and passed over. She wants a special someone but she wants to be his first choice, not the good-enough girl to pass the time with until someone of value is finally free to pursue. But when she literally runs into her partner from Care of Magical Creatures class on her way back from Hogsmeade, will she finally find exactly what she is looking for?')}, {'series': Value(literal:'911 Weeks [4]'), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'No Archive Warnings Apply'), 'romantic_category': Value(literal:'M/M'), 'keywords': Value(literal:'911week2020, Bad Things Happen Bingo, Family, Fluff, Loneliness, Love Confessions'), 'summary': Value(literal:""Buck feels lonely, like everyone around him has a family, someone who cares about them more than anything, but he doesn't. Turns out he is wrong."")}, {'series': Value(literal:""Mrs Bennet's Daughters Universe [2]""), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'Major Character Death'), 'romantic_category': Value(literal:'Gen'), 'keywords': Value(literal:""But is forced to develop grudging respect., Humour, Judgey-Judginess, Lizzy was named after her, Looking Down From On High, Mrs Bennet's Perspective, She does NOT like Charlotte Lucas, They're not dissimilar, We meet Mrs Bennet's mother""), 'summary': Value(literal:'In the Mrs Bennet\'s Daughters universe, the first Mrs Bennet is dead, and the second (Charlotte Lucas) is tasked with bringing up her daughters. What does Mrs Bennet think of the arrangement? And all the goings on at Longbourn, in her absence? Now we can find out... ÒHe is marrying Charlotte LUCAS!Ó Mrs Bennet wailed. ÒCHARLOTTE LUCAS. The little tramp!Ó *** ""Charlotte Lucas has just told Lady Lucas that Jane shall have two thousand pounds on her come out, and so will each girl when their time comes.Ó Mrs Bennet flapped her hands excitedly. ""I suppose I shall have to like her now."" ""She has taken very good care of your girls in your stead, and there are many who would not have been so generous.Ó ÒVery well.... But, I will not really like her until I see how well she does for them in marriage. THAT is the material concern.Ó *You probably don\'t need to read MBD first, this is pretty easy to follow by itself.*')}, {'series': Value(literal:""Mrs Bennet's Daughters Universe [2]""), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'Major Character Death'), 'romantic_category': Value(literal:'F/M'), 'keywords': Value(literal:""But is forced to develop grudging respect., Humour, Judgey-Judginess, Lizzy was named after her, Looking Down From On High, Mrs Bennet's Perspective, She does NOT like Charlotte Lucas, They're not dissimilar, We meet Mrs Bennet's mother""), 'summary': Value(literal:'In the Mrs Bennet\'s Daughters universe, the first Mrs Bennet is dead, and the second (Charlotte Lucas) is tasked with bringing up her daughters. What does Mrs Bennet think of the arrangement? And all the goings on at Longbourn, in her absence? Now we can find out... ÒHe is marrying Charlotte LUCAS!Ó Mrs Bennet wailed. ÒCHARLOTTE LUCAS. The little tramp!Ó *** ""Charlotte Lucas has just told Lady Lucas that Jane shall have two thousand pounds on her come out, and so will each girl when their time comes.Ó Mrs Bennet flapped her hands excitedly. ""I suppose I shall have to like her now."" ""She has taken very good care of your girls in your stead, and there are many who would not have been so generous.Ó ÒVery well.... But, I will not really like her until I see how well she does for them in marriage. THAT is the material concern.Ó *You probably don\'t need to read MBD first, this is pretty easy to follow by itself.*')}]"	ENGLISH	735	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow specific guidelines to ensure accuracy and correctness:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: Could a key person succumb to their vice?  

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT DISTINCT ?warning
WHERE { 
?story golem:title ""bad habit"" .
?story golem:contentWarning ?warning .
FILTER(?warning = ""Major Character Death"")
}
    </SPARQL>

    ###
    

    Question: In a challenging scenario, which roles bring hope into the mix?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT ?characters
WHERE { 
?story golem:title ""hopeless (but you give me hope)"" .
?story golem:characters ?characters .
}
    </SPARQL>

    ###
    

    Question: What are the main ideas explored in Surviving Together?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT DISTINCT  (GROUP_CONCAT(DISTINCT ?keyword; separator="", "") AS ?keywords )
WHERE { 
?story golem:title ""Surviving Together"" .
?story golem:keyword ?keyword .
}
    </SPARQL>

    ###
    

Question: Is His First Choice His Best Option?  

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT ?option (GROUP_CONCAT(DISTINCT ?rating; separator="", "") AS ?ratings)
WHERE { 
?story golem:title ""His First Choice"" .
?story golem:title ?option .
?story golem:rating ?rating .
}
GROUP BY ?option
"	[{'option': Value(literal:'His First Choice'), 'ratings': Value(literal:'Teen And Up Audiences')}]	0	1	1	Misparaphrase		Paraphrasing
1208	en	Is there a major figure who dies due to their bad habit?  	"prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT DISTINCT ?warning
WHERE { 
?story golem:title ""bad habit"" .
?story golem:contentWarning ?warning .
FILTER(?warning = ""Major Character Death"")
}"	[{'warning': Value(literal:'Major Character Death')}]	ENGLISH	760	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow specific guidelines to ensure accuracy and correctness:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: Does any major character pass away in Quartet?  

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT DISTINCT ?warning
WHERE { 
?story golem:title ""Quartet"" .
?story golem:contentWarning ?warning .
FILTER(?warning = ""Major Character Death"")
}
    </SPARQL>

    ###
    

    Question: Does any significant figure pass away in Ghost's Rebellion?  

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT DISTINCT ?warning
WHERE { 
?story golem:title ""Ghost's Rebellion"" .
?story golem:contentWarning ?warning .
FILTER(?warning = ""Major Character Death"")
}
    </SPARQL>

    ###
    

    Question: Are there major characters who die in Quartet?  

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT DISTINCT ?warning
WHERE { 
?story golem:title ""Quartet"" .
?story golem:contentWarning ?warning .
FILTER(?warning = ""Major Character Death"")
}
    </SPARQL>

    ###
    

Question: Is there a major figure who dies due to their bad habit?  

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT DISTINCT ?character ?warning
WHERE { 
?story golem:title ?title .
?story golem:contentWarning ?warning .
?story golem:characters ?character .
FILTER(?warning = ""Major Character Death"" && regex(str(?title), ""bad habit"", ""i""))
}
"	"[{'character': Value(literal:'Dorcas Meadowes'), 'warning': Value(literal:'Major Character Death')}, {'character': Value(literal:'James Potter'), 'warning': Value(literal:'Major Character Death')}, {'character': Value(literal:'Lily Evans'), 'warning': Value(literal:'Major Character Death')}, {'character': Value(literal:'Marlene McKinnon'), 'warning': Value(literal:'Major Character Death')}, {'character': Value(literal:'Mary Macdonald'), 'warning': Value(literal:'Major Character Death')}, {'character': Value(literal:'Narcissa Black Malfoy'), 'warning': Value(literal:'Major Character Death')}, {'character': Value(literal:'Peter Pettigrew'), 'warning': Value(literal:'Major Character Death')}, {'character': Value(literal:'Regulus Black'), 'warning': Value(literal:'Major Character Death')}, {'character': Value(literal:'Remus Lupin'), 'warning': Value(literal:'Major Character Death')}, {'character': Value(literal:'Severus Snape'), 'warning': Value(literal:'Major Character Death')}, {'character': Value(literal:'Sirius Black'), 'warning': Value(literal:'Major Character Death')}, {'character': Value(literal:'Tom Riddle'), 'warning': Value(literal:'Major Character Death')}, {'character': Value(literal:'Bartemius Crouch Jr.'), 'warning': Value(literal:'Major Character Death')}, {'character': Value(literal:'Evan Rosier'), 'warning': Value(literal:'Major Character Death')}, {'character': Value(literal:'Frank Longbottom'), 'warning': Value(literal:'Major Character Death')}, {'character': Value(literal:'Alice Fortescue'), 'warning': Value(literal:'Major Character Death')}, {'character': Value(literal:'Technoblade (Video Blogging RPF)'), 'warning': Value(literal:'Major Character Death')}, {'character': Value(literal:'TommyInnit (Video Blogging RPF)'), 'warning': Value(literal:'Major Character Death')}, {'character': Value(literal:'Wilbur Soot'), 'warning': Value(literal:'Major Character Death')}, {'character': Value(literal:'Phil Watson (Video Blogging RPF)'), 'warning': Value(literal:'Major Character Death')}, {'character': Value(literal:'Jschlatt (Video Blogging RPF)'), 'warning': Value(literal:'Major Character Death')}, {'character': Value(literal:'Last 3 just implied'), 'warning': Value(literal:'Major Character Death')}, {'character': Value(literal:'Jonathan Byers'), 'warning': Value(literal:'Major Character Death')}, {'character': Value(literal:'Nancy Wheeler'), 'warning': Value(literal:'Major Character Death')}, {'character': Value(literal:'Robin Buckley'), 'warning': Value(literal:'Major Character Death')}, {'character': Value(literal:'Steve Harrington'), 'warning': Value(literal:'Major Character Death')}, {'character': Value(literal:'Dustin Henderson'), 'warning': Value(literal:'Major Character Death')}, {'character': Value(literal:'Eddie Munson'), 'warning': Value(literal:'Major Character Death')}, {'character': Value(literal:'The Party (Stranger Things)'), 'warning': Value(literal:'Major Character Death')}, {'character': Value(literal:'Female Courier'), 'warning': Value(literal:'Major Character Death')}, {'character': Value(literal:'Arcade Gannon'), 'warning': Value(literal:'Major Character Death')}, {'character': Value(literal:'Craig Boone'), 'warning': Value(literal:'Major Character Death')}, {'character': Value(literal:'Rose of Sharon Cassidy'), 'warning': Value(literal:'Major Character Death')}, {'character': Value(literal:'Carla Boone'), 'warning': Value(literal:'Major Character Death')}, {'character': Value(literal:'Benny (Fallout)'), 'warning': Value(literal:'Major Character Death')}, {'character': Value(literal:'The Van Graffs'), 'warning': Value(literal:'Major Character Death')}, {'character': Value(literal:'Dr. Eggman | Dr. Robotnik'), 'warning': Value(literal:'Major Character Death')}, {'character': Value(literal:'Sonic the Hedgehog'), 'warning': Value(literal:'Major Character Death')}, {'character': Value(literal:'Knuckles the Echidna'), 'warning': Value(literal:'Major Character Death')}, {'character': Value(literal:'Miles ""Tails"" Prower'), 'warning': Value(literal:'Major Character Death')}, {'character': Value(literal:'Agent Stone (Sonic the Hedgehog 2020)'), 'warning': Value(literal:'Major Character Death')}, {'character': Value(literal:'Wade Whipple'), 'warning': Value(literal:'Major Character Death')}, {'character': Value(literal:'Erwin Smith'), 'warning': Value(literal:'Major Character Death')}, {'character': Value(literal:'Furlan Church'), 'warning': Value(literal:'Major Character Death')}, {'character': Value(literal:'Hange Zo'), 'warning': Value(literal:'Major Character Death')}, {'character': Value(literal:'Isabel Magnolia'), 'warning': Value(literal:'Major Character Death')}, {'character': Value(literal:'Levi (Shingeki no Kyojin)'), 'warning': Value(literal:'Major Character Death')}, {'character': Value(literal:'Mikasa Ackerman'), 'warning': Value(literal:'Major Character Death')}, {'character': Value(literal:'Mike Zacharias'), 'warning': Value(literal:'Major Character Death')}, {'character': Value(literal:'Moblit Berner'), 'warning': Value(literal:'Major Character Death')}, {'character': Value(literal:'Nanaba (Shingeki no Kyojin)'), 'warning': Value(literal:'Major Character Death')}, {'character': Value(literal:'Bakura Ryou'), 'warning': Value(literal:'Major Character Death')}, {'character': Value(literal:'Yami Bakura'), 'warning': Value(literal:'Major Character Death')}, {'character': Value(literal:'Clay | Dream (Video Blogging RPF)'), 'warning': Value(literal:'Major Character Death')}, {'character': Value(literal:'Alexis | Quackity'), 'warning': Value(literal:'Major Character Death')}, {'character': Value(literal:'Ranboo (Video Blogging RPF)'), 'warning': Value(literal:'Major Character Death')}, {'character': Value(literal:'Toby Smith | Tubbo'), 'warning': Value(literal:'Major Character Death')}, {'character': Value(literal:'Niki | Nihachu'), 'warning': Value(literal:'Major Character Death')}, {'character': Value(literal:'Eret (Video Blogging RPF)'), 'warning': Value(literal:'Major Character Death')}, {'character': Value(literal:'Harry Hart | Galahad'), 'warning': Value(literal:'Major Character Death')}, {'character': Value(literal:'Percival (Kingsman)'), 'warning': Value(literal:'Major Character Death')}, {'character': Value(literal:'Roxy Morton | Lancelot'), 'warning': Value(literal:'Major Character Death')}, {'character': Value(literal:'James | Lancelot (Kingsman)'), 'warning': Value(literal:'Major Character Death')}, {'character': Value(literal:'Chester King | Arthur'), 'warning': Value(literal:'Major Character Death')}]"	0	1	1	Misparaphrase		Paraphrasing
323	en	It never entered my mind's key points or topics.  	"prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT DISTINCT  (GROUP_CONCAT(DISTINCT ?keyword; separator="", "") AS ?keywords )
WHERE { 
?story golem:title ""It never entered my mind"" .
?story golem:keyword ?keyword .
}"	[{'keywords': Value(literal:'Alternate Universe - Ilvermorny, Developing Relationship, Enemies to Friends to Lovers, Ilvermorny, Post-Battle of Hogwarts, Post-War, Professors')}]	ENGLISH	179	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow specific guidelines to ensure accuracy and correctness:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: What stories is minor ocÕs irrelevant to the storyline featured in?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT ?title
WHERE { 
?story golem:title ?title .
?story golem:characters ""minor ocÕs irrelevant to the storyline"" .
}
    </SPARQL>

    ###
    

    Question: What does Theodore Not Send's story about Luna entail?  

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT DISTINCT ?series ?collection ?content_warning ?romantic_category (GROUP_CONCAT(DISTINCT ?keyword; separator="", "") AS ?keywords) ?summary
WHERE {
?story golem:title ""Theodore Not Sends little girl Luna a Sext"" .
?story golem:keyword ?keyword .
?story golem:romanticCategory ?romantic_category .
?story golem:series ?series .
?story golem:collections ?collection .
?story golem:contentWarning ?content_warning .
?story golem:summary ?summary .
}
    </SPARQL>

    ###
    

    Question: Can you identify the main themes of All was right?  

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT DISTINCT  (GROUP_CONCAT(DISTINCT ?keyword; separator="", "") AS ?keywords )
WHERE { 
?story golem:title ""All was right"" .
?story golem:keyword ?keyword .
}
    </SPARQL>

    ###
    

Question: It never entered my mind's key points or topics.  

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT DISTINCT (GROUP_CONCAT(DISTINCT ?keyword; separator="", "") AS ?keywords)
WHERE { 
?story golem:title ""It never entered my mind's key points or topics"" .
?story golem:keyword ?keyword .
}
"	[{'keywords': Value(literal:'')}]	0	1	1	Misparaphrase		Paraphrasing
868	en	What actors bring optimism even when faced with difficult circumstances?	"prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT ?characters
WHERE { 
?story golem:title ""hopeless (but you give me hope)"" .
?story golem:characters ?characters .
}"	[{'characters': Value(literal:'James Potter')}, {'characters': Value(literal:'Regulus Black')}, {'characters': Value(literal:'Remus Lupin')}, {'characters': Value(literal:'Sirius Black')}]	ENGLISH	538	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow specific guidelines to ensure accuracy and correctness:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: Does a smile have an immense value compared to others?  

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT DISTINCT ?chapters ?words
WHERE { 
?story golem:title ""A smile is worth everything"" .
?story golem:numberOfChapters ?chapters .
?story golem:numberOfWords ?words .
}
    </SPARQL>

    ###
    

    Question: Is a smile as valuable as any other aspect?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT DISTINCT ?chapters ?words
WHERE { 
?story golem:title ""A smile is worth everything"" .
?story golem:numberOfChapters ?chapters .
?story golem:numberOfWords ?words .
}
    </SPARQL>

    ###
    

    Question: Who is Mutual Pining - Character in various stories about?  

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT ?title
WHERE { 
?story golem:title ?title .
?story golem:characters ""Mutual Pining - Character"" .
}
    </SPARQL>

    ###
    

Question: What actors bring optimism even when faced with difficult circumstances?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT DISTINCT ?actor ?name
WHERE { 
?story golem:characters ?character .
?character foaf:name ?name .
FILTER(regex(?name, ""optimism"", ""i""))
}
"	[]	0	0	1	Misparaphrase		Paraphrasing
1525	en	Let me see the summaries about Pupas right away.  	"prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT DISTINCT ?summary
WHERE { 
?story golem:fandom ""Pupa"" .
?story golem:summary ?summary .
}"	[{'summary': Value(literal:'Sometimes, they say that learning the truth is painful. Ishida Naoki learnt this the hard way. But when curiosity strikes, he cannot help but to take notice of the flow of events unfolding in front of his eyes. However, maybe he has bitten off more than he can chew...? Originally posted on FFn on 27th July 2015')}]	ENGLISH	1007	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow specific guidelines to ensure accuracy and correctness:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: Show summaries for ______.  

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT DISTINCT ?summary
WHERE { 
?story golem:fandom ""______"" .
?story golem:summary ?summary .
}
    </SPARQL>

    ###
    

    Question: Show me a quick summary of Il Volo.  

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT DISTINCT ?summary
WHERE { 
?story golem:fandom ""Il Volo"" .
?story golem:summary ?summary .
}
    </SPARQL>

    ###
    

    Question: Find concise summaries about DC vs vampire narratives.

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT DISTINCT ?summary
WHERE { 
?story golem:fandom ""DC vs. Vampires"" .
?story golem:summary ?summary .
}
    </SPARQL>

    ###
    

Question: Let me see the summaries about Pupas right away.  

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT DISTINCT ?summary
WHERE { 
?story golem:fandom ""Pupas"" .
?story golem:summary ?summary .
}
"	[]	0	0	1	Failed NER		Paraphrasing
1574	en	Please provide a brief overview of Il Volo episodes.  	"prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT DISTINCT ?summary
WHERE { 
?story golem:fandom ""Il Volo"" .
?story golem:summary ?summary .
}"	"[{'summary': Value(literal:'_______________(Seir_n)___Gianluca___________ *___Ignazio_______Gianluca______Piero________ *_________...__________')}, {'summary': Value(literal:""ad un matrimonio di un'amica in comune Alessandra incontra, dopo tanto tempo, Piero Barone (suo vecchio migliore amico di infanzia).... in compagnia di due suoi amici, Ignazio Boschetto e Gianluca Ginoble. Alla festa lei conosce subito Gianluca. Diventeranno amici? Nascer fra i due qualcosa?"")}, {'summary': Value(literal:'Frank se siente infeliz desde que Gerard le puso punto final a ese amor prohibido que mantenan a escondidas (desde que eran adolescentes) al enterarse que Frank se iba a casar con Jamia, y aun as se arrepiente de haberlo perdido, porque segn l, Gerard era el verdadero motivo para ser feliz. Tanto Anna como Sophia se preocupan por l, y con el paso del tiempo, tanto ellas como sus sobrinas Cherry y Lily, y la nica amiga de las gemelas Bandit (hija de Gerard) se dan cuenta de que Frank an sigue enamorado de Gerard, y las dos amigas harn lo posible para tratar de ayudarlo y harn lo posible para que vuelva a ser feliz. ÀFrank ser lo suficiente para recuperar su felicidad?')}, {'summary': Value(literal:'Alright whose bright idea was it to not just to put the modern Eurovision participants in country separated houses on the same block,but put them in the same group chat as personified nations?')}, {'summary': Value(literal:""Ad Agrabah la vita  molto dura. C' chi riesce a sopravvivere e chi invece per farlo deve rubare. Piero  uno di quelli, un ragazzo povero che non fa altro che sognare di essere felice e ricco. Un giorno si scontra - proprio letteralmente - con il principe Ignazio che si trovava al mercato per puro caso, per distrarsi dalla vita di palazzo... E si ritrova poi ad aiutare quel poveretto. Ma continuer il giovane principe ad aiutare Piero? Che cosa accadr? Piero riuscir a compiere il suo sogno?"")}, {'summary': Value(literal:'Where Ignazio is bored, Piero is homesick and some cheering up is needed :D')}, {'summary': Value(literal:'It had been like this for a while now. They never had enough time, but being on tour, you simply had to take the time you could get and be happy with it..')}, {'summary': Value(literal:'Mafia!AU or *When there is literally no content of Il Volo so you say fuck it and write some yourself*')}, {'summary': Value(literal:""CONTROL Verb (used with object), controlled, controlling. 1. to exercise restraint or direction over; dominate; command. 2. to hold in check; curb: [ to control a horse; to control one's emotions ]"")}, {'summary': Value(literal:'""Truth be told, he wasnÕt sure if it came out right, but one quick glance at Michele told him that at least their manager was pleased with him. So.. mission accomplished? Lying was a sin. None of this sat well with him at all.. ""')}, {'summary': Value(literal:'Piero gets sick in the middle of the night. Ignazio is there to help him.')}, {'summary': Value(literal:'A little fantasy on what may happen after mixing cold Italian wine and hot Italian men. I was just trying to write a sketch on Ignazio/OFC but then mr. Ginoble suddenly decided to join... :D (Disclaimer: English is not my native language!)')}, {'summary': Value(literal:'Some sing to be admired, some just to be heard. He sang to forget.')}, {'summary': Value(literal:""Prompt from anon: can you please do a piero/Ignazio Drabble were Ignazio is insanely in love with piero and piero finds out, and then he starts growing feelings for Ignazio and Ignazio thinks he's not in love with him but he pity's him."")}, {'summary': Value(literal:""Ignazio has temporal amnesia, and forgets about everything except his early years at the age of 16. Will he remember his daughter and husband before it's too late? Found out inside... Drabble series."")}, {'summary': Value(literal:'Prompt:  where Piero and Ignazio kiss for the first time... Pignazio Drabble')}, {'summary': Value(literal:'Prompt : Piero and Ignazio are in a relationship. And Piero wants to come out to everyone including their best friend and band mate ,gianluca. And Ignazio just want to be with Piero and have a good time.')}, {'summary': Value(literal:""Prompt: they are drunk and fooling around with each other and Ignazio unexpectedly gave something to Piero Te voglio bene assaje ma tanto tanto bene sai  una catena ormai. che scioglie il sangue dint'e vene sai..."")}, {'summary': Value(literal:""Sometimes you don't know if reality and dream are part of the same story. Where one ends and other begins, and in what side you are."")}, {'summary': Value(literal:'""Ricordami quando guarderai con gli occhi del passato, quando niente torner pi come  stato e sar ormai invisibile per te."" Based on il volo song ricordami...')}, {'summary': Value(literal:""Can you please do a Drabble or OS were ignazio has an accident and now has temporal amnesia and he doesn't remember him dating piero, until the very end and then make up"")}, {'summary': Value(literal:'a situation where Pi ask Igna why he was so close to him during the concert few hours before their discussion ^^')}, {'summary': Value(literal:""could you write an OS where Piero completely zooms out, like in that video where Gian 'wakes' him up, but Ignazio does it by, idk, feeding him cake or something?"")}, {'summary': Value(literal:""hey can you please do a pignazio One shot were its their daughter's bday and they call her up the stage ,in one of their concerts,and sing to her a song ,of your choice"")}, {'summary': Value(literal:""one where Igna et Piero are really close to each other in backstage during a Gianluca's solo"")}, {'summary': Value(literal:'None')}, {'summary': Value(literal:""OS were ignazio can't stop grabbing piero's ass lol"")}, {'summary': Value(literal:'Piero is depressed because of his recent break up with Ignazio and only tequila shots will cheer him up.')}, {'summary': Value(literal:'a one shot were Piero tries to make Ignazio jealous But he fails to do so and igna laughs at him?')}, {'summary': Value(literal:'were Piero looses his glasses and he has to wear contacts for the rest of the day and he feels ugly and insecure without his red glasses but ignazio is there to tell him the opposite __')}, {'summary': Value(literal:'Prompt: can you please do a cheesy Drabble with pignazio at latinamericanmusicawards')}, {'summary': Value(literal:'A game gone wrong. Pretty cliche but why the hell not?')}, {'summary': Value(literal:'__________Il volo______ #Gianazio')}]"	ENGLISH	1049	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow specific guidelines to ensure accuracy and correctness:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: What shows or series include Massimo Torricelli?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT ?title
WHERE { 
?story golem:title ?title .
?story golem:characters ""Massimo Torricelli"" .
}
    </SPARQL>

    ###
    

    Question: What episodes feature __?  

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT ?title
WHERE { 
?story golem:title ?title .
?story golem:characters ""__"" .
}
    </SPARQL>

    ###
    

    Question: Can you provide summaries of the New Blood TV episodes?  

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT DISTINCT ?summary
WHERE { 
?story golem:fandom ""New Blood (TV)"" .
?story golem:summary ?summary .
}
    </SPARQL>

    ###
    

Question: Please provide a brief overview of Il Volo episodes.  

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT DISTINCT ?overview
WHERE { 
?story golem:fandom ""Il Volo"" .
?story golem:summary ?overview .
}
"	"[{'overview': Value(literal:'_______________(Seir_n)___Gianluca___________ *___Ignazio_______Gianluca______Piero________ *_________...__________')}, {'overview': Value(literal:""ad un matrimonio di un'amica in comune Alessandra incontra, dopo tanto tempo, Piero Barone (suo vecchio migliore amico di infanzia).... in compagnia di due suoi amici, Ignazio Boschetto e Gianluca Ginoble. Alla festa lei conosce subito Gianluca. Diventeranno amici? Nascer fra i due qualcosa?"")}, {'overview': Value(literal:'Frank se siente infeliz desde que Gerard le puso punto final a ese amor prohibido que mantenan a escondidas (desde que eran adolescentes) al enterarse que Frank se iba a casar con Jamia, y aun as se arrepiente de haberlo perdido, porque segn l, Gerard era el verdadero motivo para ser feliz. Tanto Anna como Sophia se preocupan por l, y con el paso del tiempo, tanto ellas como sus sobrinas Cherry y Lily, y la nica amiga de las gemelas Bandit (hija de Gerard) se dan cuenta de que Frank an sigue enamorado de Gerard, y las dos amigas harn lo posible para tratar de ayudarlo y harn lo posible para que vuelva a ser feliz. ÀFrank ser lo suficiente para recuperar su felicidad?')}, {'overview': Value(literal:'Alright whose bright idea was it to not just to put the modern Eurovision participants in country separated houses on the same block,but put them in the same group chat as personified nations?')}, {'overview': Value(literal:""Ad Agrabah la vita  molto dura. C' chi riesce a sopravvivere e chi invece per farlo deve rubare. Piero  uno di quelli, un ragazzo povero che non fa altro che sognare di essere felice e ricco. Un giorno si scontra - proprio letteralmente - con il principe Ignazio che si trovava al mercato per puro caso, per distrarsi dalla vita di palazzo... E si ritrova poi ad aiutare quel poveretto. Ma continuer il giovane principe ad aiutare Piero? Che cosa accadr? Piero riuscir a compiere il suo sogno?"")}, {'overview': Value(literal:'Where Ignazio is bored, Piero is homesick and some cheering up is needed :D')}, {'overview': Value(literal:'It had been like this for a while now. They never had enough time, but being on tour, you simply had to take the time you could get and be happy with it..')}, {'overview': Value(literal:'Mafia!AU or *When there is literally no content of Il Volo so you say fuck it and write some yourself*')}, {'overview': Value(literal:""CONTROL Verb (used with object), controlled, controlling. 1. to exercise restraint or direction over; dominate; command. 2. to hold in check; curb: [ to control a horse; to control one's emotions ]"")}, {'overview': Value(literal:'""Truth be told, he wasnÕt sure if it came out right, but one quick glance at Michele told him that at least their manager was pleased with him. So.. mission accomplished? Lying was a sin. None of this sat well with him at all.. ""')}, {'overview': Value(literal:'Piero gets sick in the middle of the night. Ignazio is there to help him.')}, {'overview': Value(literal:'A little fantasy on what may happen after mixing cold Italian wine and hot Italian men. I was just trying to write a sketch on Ignazio/OFC but then mr. Ginoble suddenly decided to join... :D (Disclaimer: English is not my native language!)')}, {'overview': Value(literal:'Some sing to be admired, some just to be heard. He sang to forget.')}, {'overview': Value(literal:""Prompt from anon: can you please do a piero/Ignazio Drabble were Ignazio is insanely in love with piero and piero finds out, and then he starts growing feelings for Ignazio and Ignazio thinks he's not in love with him but he pity's him."")}, {'overview': Value(literal:""Ignazio has temporal amnesia, and forgets about everything except his early years at the age of 16. Will he remember his daughter and husband before it's too late? Found out inside... Drabble series."")}, {'overview': Value(literal:'Prompt:  where Piero and Ignazio kiss for the first time... Pignazio Drabble')}, {'overview': Value(literal:'Prompt : Piero and Ignazio are in a relationship. And Piero wants to come out to everyone including their best friend and band mate ,gianluca. And Ignazio just want to be with Piero and have a good time.')}, {'overview': Value(literal:""Prompt: they are drunk and fooling around with each other and Ignazio unexpectedly gave something to Piero Te voglio bene assaje ma tanto tanto bene sai  una catena ormai. che scioglie il sangue dint'e vene sai..."")}, {'overview': Value(literal:""Sometimes you don't know if reality and dream are part of the same story. Where one ends and other begins, and in what side you are."")}, {'overview': Value(literal:'""Ricordami quando guarderai con gli occhi del passato, quando niente torner pi come  stato e sar ormai invisibile per te."" Based on il volo song ricordami...')}, {'overview': Value(literal:""Can you please do a Drabble or OS were ignazio has an accident and now has temporal amnesia and he doesn't remember him dating piero, until the very end and then make up"")}, {'overview': Value(literal:'a situation where Pi ask Igna why he was so close to him during the concert few hours before their discussion ^^')}, {'overview': Value(literal:""could you write an OS where Piero completely zooms out, like in that video where Gian 'wakes' him up, but Ignazio does it by, idk, feeding him cake or something?"")}, {'overview': Value(literal:""hey can you please do a pignazio One shot were its their daughter's bday and they call her up the stage ,in one of their concerts,and sing to her a song ,of your choice"")}, {'overview': Value(literal:""one where Igna et Piero are really close to each other in backstage during a Gianluca's solo"")}, {'overview': Value(literal:'None')}, {'overview': Value(literal:""OS were ignazio can't stop grabbing piero's ass lol"")}, {'overview': Value(literal:'Piero is depressed because of his recent break up with Ignazio and only tequila shots will cheer him up.')}, {'overview': Value(literal:'a one shot were Piero tries to make Ignazio jealous But he fails to do so and igna laughs at him?')}, {'overview': Value(literal:'were Piero looses his glasses and he has to wear contacts for the rest of the day and he feels ugly and insecure without his red glasses but ignazio is there to tell him the opposite __')}, {'overview': Value(literal:'Prompt: can you please do a cheesy Drabble with pignazio at latinamericanmusicawards')}, {'overview': Value(literal:'A game gone wrong. Pretty cliche but why the hell not?')}, {'overview': Value(literal:'__________Il volo______ #Gianazio')}]"	0	1	1	Evaluation method error	Different var name	Query generation
339	en	What are the key terms of This Town Is Only Gonna Get Worse?	"prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT DISTINCT  (GROUP_CONCAT(DISTINCT ?keyword; separator="", "") AS ?keywords )
WHERE { 
?story golem:title ""This Town Is Only Gonna Get Worse"" .
?story golem:keyword ?keyword .
}"	[{'keywords': Value(literal:'Depression, Emotional/Psychological Abuse, Implied/Referenced Child Abuse, Lack of Communication')}]	ENGLISH	195	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow specific guidelines to ensure accuracy and correctness:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many stories are tagged as fire slugs?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT COUNT(DISTINCT ?story) as ?stories
WHERE {
?story golem:keyword ""fire slugs"" .
}
    </SPARQL>

    ###
    

    Question: What sections does Disaster and Chaos : Snippets belong to?  

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT DISTINCT ?collections
WHERE { 
?story golem:title ""Disaster and Chaos : Snippets"" .
?story golem:collections ?collections .
}
    </SPARQL>

    ###
    

    Question: Can you summarize ______?  

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT DISTINCT ?summary
WHERE { 
?story golem:fandom ""______"" .
?story golem:summary ?summary .
}
    </SPARQL>

    ###
    

Question: What are the key terms of This Town Is Only Gonna Get Worse?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT DISTINCT ?keyword
WHERE { 
?story golem:title ""This Town Is Only Gonna Get Worse"" .
?story golem:keyword ?keyword .
}
"	[{'keyword': Value(literal:'Depression')}, {'keyword': Value(literal:'Emotional/Psychological Abuse')}, {'keyword': Value(literal:'Implied/Referenced Child Abuse')}, {'keyword': Value(literal:'Lack of Communication')}]	0	1	1	Evaluation method error	Non-grouped	Query generation
915	en	Which set contains Recompense and Redress together?  	"prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT DISTINCT ?series
WHERE { 
?story golem:title ""Recompense and Redress"" .
?story golem:series ?series .
}"	[{'series': Value(literal:'None')}]	ENGLISH	572	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow specific guidelines to ensure accuracy and correctness:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: Which collection is Obligate part of?  

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT DISTINCT ?collections
WHERE { 
?story golem:title ""Obliviate"" .
?story golem:collections ?collections .
}
    </SPARQL>

    ###
    

    Question: # Which set includes me now?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT DISTINCT ?collections
WHERE { 
?story golem:title ""so I kind of love you"" .
?story golem:collections ?collections .
}
    </SPARQL>

    ###
    

    Question: What collection does Obligate belong to?  

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT DISTINCT ?collections
WHERE { 
?story golem:title ""Obliviate"" .
?story golem:collections ?collections .
}
    </SPARQL>

    ###
    

Question: Which set contains Recompense and Redress together?  

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT DISTINCT ?set WHERE {
  {?story1 golem:title ""Recompense"" .} UNION {?story2 golem:title ""Redress""}
  ?set golem:collections ?story1, ?story2.
}
"	[]	0	0	1	Misparaphrase		Paraphrasing
1150	en	How is Surprise defined?	"prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT DISTINCT ?series ?collection ?content_warning ?romantic_category (GROUP_CONCAT(DISTINCT ?keyword; separator="", "") AS ?keywords) ?summary
WHERE {
?story golem:title ""Surprise"" .
?story golem:keyword ?keyword .
?story golem:romanticCategory ?romantic_category .
?story golem:series ?series .
?story golem:collections ?collection .
?story golem:contentWarning ?content_warning .
?story golem:summary ?summary .
}"	"[{'series': Value(literal:'Iontach Draochta [14]'), 'collection': Value(literal:'Happy Birthday Hermione!, Marvelously Magical Bingo 2019'), 'content_warning': Value(literal:'No Archive Warnings Apply'), 'romantic_category': Value(literal:'F/M'), 'keywords': Value(literal:'Birthday Party, Crossover, Drabble, Post-Avengers: Endgame (Movie), Post-Avengers: Infinity War Part 1 (Movie)'), 'summary': Value(literal:'She may have only received a letter from him for her birthday, but she knows him by now. Or so she thought.')}, {'series': Value(literal:'None'), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'Creator Chose Not To Use Archive Warnings'), 'romantic_category': Value(literal:'Multi'), 'keywords': Value(literal:'Alternate Universe, Drinking Games, Ficlet, Polyamory, SPN Rare Ships Creation Challenge'), 'summary': Value(literal:'Meg has secretly been in a relationship with both Dean and Cas for almost two months. When she unthinkingly kisses Cas during a drinking game, how can the action be explained away?')}, {'series': Value(literal:'None'), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'No Archive Warnings Apply'), 'romantic_category': Value(literal:'F/M'), 'keywords': Value(literal:'Ficlet'), 'summary': Value(literal:'Life with George was never dull.')}, {'series': Value(literal:'SWpolyamoryweek 2016 [2]'), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'Creator Chose Not To Use Archive Warnings'), 'romantic_category': Value(literal:'Multi'), 'keywords': Value(literal:'Alternate Universe - Hogwarts, Polyamory'), 'summary': Value(literal:'And, yes, he was a Big Bad Slytherin cuddling his two boyfriends in a blanket fort in the second floor girlÕs bathroom. So what? Or: Wolffe gets a surprise for his birthday from his two boyfriends')}, {'series': Value(literal:'None'), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'Creator Chose Not To Use Archive Warnings'), 'romantic_category': Value(literal:'F/M'), 'keywords': Value(literal:""Gender bend fic, I blame that comment on tumbler about robron not worrying same as tess's pregnancy scare""), 'summary': Value(literal:'Aaron has some news for Robert')}, {'series': Value(literal:'Multifandom Tumblr Ficlets/Drabbles [3]'), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'No Archive Warnings Apply'), 'romantic_category': Value(literal:'F/F'), 'keywords': Value(literal:'Christmas, Ficlet, Fluff, established relatonship, poor Happy, surprise'), 'summary': Value(literal:'Comments and feedback are always welcome! <3')}, {'series': Value(literal:'None'), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'No Archive Warnings Apply'), 'romantic_category': Value(literal:'M/M'), 'keywords': Value(literal:""Birthday, Birthday Presents, Birthday Sex, Daryl deserves a happy birthday, Desus lives!, Established Relationship, Fluff, Fluff and Smut, Lovey-Dovey, Paul sucks at baking, Tooth-Rotting Fluff, but he tries anyway, cake time, for some reason i'm really into cake fics right now...""), 'summary': Value(literal:""One of the most basic tropes you can come up with for fanfiction prompts. It's Daryl's birthday, and he's never had a good one. But Paul is going to change that."")}, {'series': Value(literal:'The MilLife Chronicles [6]'), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'No Archive Warnings Apply'), 'romantic_category': Value(literal:'M/M'), 'keywords': Value(literal:'Romantic Fluff'), 'summary': Value(literal:'surprise: s__pra_z; noun: an unexpected event.')}, {'series': Value(literal:'The Tethras Hawkes [20]'), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'No Archive Warnings Apply'), 'romantic_category': Value(literal:'F/M'), 'keywords': Value(literal:'Birthday, Family Fluff, Fluff, Sweet'), 'summary': Value(literal:""Rose may not celebrate her birthday but her children certainly won't let that happen."")}, {'series': Value(literal:'Nobody Compares [4]'), 'collection': Value(literal:'""I Used to Be a Baker"" FicFest'), 'content_warning': Value(literal:'No Archive Warnings Apply'), 'romantic_category': Value(literal:'M/M'), 'keywords': Value(literal:'Boys In Love, Boys Kissing, Surfing'), 'summary': Value(literal:""Liam's birthday is coming up. Zayn thinks a party is in order. After all, they might as well make the most of their time together. Harry bakes a cake. And there's a surprise. Only question is, for whom?"")}, {'series': Value(literal:'None'), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'Creator Chose Not To Use Archive Warnings'), 'romantic_category': Value(literal:'F/M'), 'keywords': Value(literal:'Bucky comes home, Fluff, Implied Smut, Sweet, just an idea'), 'summary': Value(literal:'Bucky comes home when reader isnÕt expecting it.')}, {'series': Value(literal:'None'), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'Creator Chose Not To Use Archive Warnings'), 'romantic_category': Value(literal:'M/M'), 'keywords': Value(literal:'ABO, AU, Omega Verse'), 'summary': Value(literal:'Wei Wuxian turns out to be a late bloomer and Wen Ning had great control over his senses when it to omegas in heat, butÉ. Alpha Bunny Boy!Wen Ning x Omega Cat Boy!Wei Wuxian')}, {'series': Value(literal:'None'), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'No Archive Warnings Apply'), 'romantic_category': Value(literal:'M/M'), 'keywords': Value(literal:'Alternate Universe, Established Relationship, Fluff, Soldier!Dean'), 'summary': Value(literal:'Prompt: soldier!Dean is discharged after his last tour and surprises Cas at work. They cry and kiss and hug and one of CastielÕs coworkers gets the whole thing on video.')}, {'series': Value(literal:'None'), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'Creator Chose Not To Use Archive Warnings'), 'romantic_category': Value(literal:'F/M'), 'keywords': Value(literal:'CHeerleader!Reader, High School AU, Modern AU, Punk!Levi'), 'summary': Value(literal:""Punk!Levi and Cheerleader!Reader. It's been a year since you and Levi Ackerman started dating and it's been a wonderful year. But when your anniversary lands on the same day as a football game, it throws a wrench in your plans to spend the day with Levi. And when he refuses to go cheer you on at the football game, it puts a wrench in your plans for the day."")}, {'series': Value(literal:'Tumblr Prompts [6]'), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'No Archive Warnings Apply'), 'romantic_category': Value(literal:'M/M'), 'keywords': Value(literal:'Fluff, domestic AU'), 'summary': Value(literal:'Sam and Gabriel decorate their guest bedroom.')}, {'series': Value(literal:'None'), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'Creator Chose Not To Use Archive Warnings'), 'romantic_category': Value(literal:'F/M'), 'keywords': Value(literal:'Baby, Fluff, Pregnancy, idk how to tag, surprise guest ;)'), 'summary': Value(literal:'just a one shot from the drafts i never ended up posting!')}, {'series': Value(literal:'Tiny Dancer [2]'), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'No Archive Warnings Apply'), 'romantic_category': Value(literal:'M/M'), 'keywords': Value(literal:'Alternate Universe - Modern Setting, PWP, Sexual Roleplay, bodyguard!qui-gon, idol!obi-wan'), 'summary': Value(literal:'_MV___________________________________________')}, {'series': Value(literal:'None'), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'Creator Chose Not To Use Archive Warnings'), 'romantic_category': Value(literal:'Gen'), 'keywords': Value(literal:'Acts of Kindness, Canon-Typical Behavior, Canon-Typical Violence, Family Fluff, Fluff, Happy Ending, Kindness, Light-Hearted, Morty is sus of everyone, Outer Space, Platonic Relationships, Protective Rick, Surprise Ending, Surprises, Suspicions'), 'summary': Value(literal:'Rick is acting a bit off during this adventure, and Morty keeps his guard up against both his grandfather and the enemies. Just what is Rick up to?')}, {'series': Value(literal:'Kinktober [22]'), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'No Archive Warnings Apply'), 'romantic_category': Value(literal:'F/M'), 'keywords': Value(literal:'Phone Sex, Romance, Size Difference, Smut'), 'summary': Value(literal:'Away from each other, Hayden and Natasha keep things steamy over the phone.')}, {'series': Value(literal:'My Hero Academia/Boku no Hero Academia [2]'), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'No Archive Warnings Apply'), 'romantic_category': Value(literal:'M/M'), 'keywords': Value(literal:'Established Relationship, Happy Birthday Shinsou Hitoshi, Long-Distance Relationship'), 'summary': Value(literal:'Denki surprises Hitoshi.')}, {'series': Value(literal:'Pretty Boys [2]'), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'No Archive Warnings Apply'), 'romantic_category': Value(literal:'M/M'), 'keywords': Value(literal:'Anal Sex, Bottom Hinata Hajime, First Time Bottoming, First Time Topping, Hajime has sensitive nipples, Lingerie, Nipple Play, No Plot/Plotless, Partially Clothed Sex, Rimming, Rough Sex, Top Komaeda Nagito, chest worship, probably'), 'summary': Value(literal:'Hajime has a surprise for Nagito')}, {'series': Value(literal:'State OCs: 100-word Drabbles [1]'), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'No Archive Warnings Apply'), 'romantic_category': Value(literal:'Gen'), 'keywords': Value(literal:'Drabble, Humor, States'), 'summary': Value(literal:'California is freaked out by a little surprise for her in the shower.')}, {'series': Value(literal:'None'), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'Creator Chose Not To Use Archive Warnings'), 'romantic_category': Value(literal:'M/M'), 'keywords': Value(literal:'Aaron Burr Is Randolph EmersonÕs Dad, Alexander Hamilton is a Little Shit, Bisexual Alexander Hamilton, Human Disaster Aaron Burr, Human Disaster Alexander Hamilton, Implied/Referenced Violence, Plot Twists, Thomas Jefferson Being an Asshole, Thomas Jefferson is So Done'), 'summary': Value(literal:'ÒThese are the document files for a certain RandolphÕs job employment, ethnicity, race, age, date of birth,..Ó AlexanderÕs words got longer and slower as he went down the list of information on the six pages of documents held. ÒParents.Ó Alexander whispered, almost inaudible to the taller man in front of him. But oh, he heard it. He heard it loud and clear, alright. ThatÕs when Thomas changed his confused expression to a blank, emotionless expression. HIs poker face. He lifted his eyes a bit to look Alexander in the eyes. AlexanderÕs smirked as he continues, ÒPage 4.Ó Alexander stated simply as he watched his partner turn to the desired page. There in front of his eyes. Printed bold and loud in black ink. Thomas read,')}, {'series': Value(literal:'None'), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'No Archive Warnings Apply'), 'romantic_category': Value(literal:'F/M'), 'keywords': Value(literal:'Adopted Shinsou Hitoshi, Established Relationship, First Kiss, First Love, Fluff, League of Villains Shenanigans (My Hero Academia), Married Aizawa Shouta | Eraserhead/Yamada Hizashi | Present Mic, Original female character is adopted and 18'), 'summary': Value(literal:""A light breeze blew over Y/n's upper arms, causing her body to tremble. Automatically, she pulled the blanket higher with her left hand and tucked her other arm underneath. A relieved exhale escaped her as she felt the familiar warmth and now wanted to sleep peacefully on. However, the sudden drop in temperature had awakened something, causing her to wonder where it came from. Slowly, she opened her eyes just a crack. Her vision, blurred at first, became clearer after a while and she realised that her large narrow window was open. Moonlight fell into her room and the white curtains moved in the wind. A tall figure in a black suit stood there. His face was covered with a white mask which only two dots were visible as eyes. A cloak, also dark, waved around his slender body."")}, {'series': Value(literal:'None'), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'Creator Chose Not To Use Archive Warnings'), 'romantic_category': Value(literal:'M/M'), 'keywords': Value(literal:'Drabble, Horror, merry christmas?'), 'summary': Value(literal:""Jonathan has failed every attempt to surprise his boyfriend of 5 years, Evan. Now, he's taking it up a notch."")}, {'series': Value(literal:'None'), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'No Archive Warnings Apply'), 'romantic_category': Value(literal:'M/M'), 'keywords': Value(literal:'Aftercare, Alternate Universe, Anal Fingering, BDSM, Biting, Blindfolds, Bottom Even Bech N¾sheim, Dom/sub, Facials, Forced Orgasm, Kitten!Even, Plot What Plot/Porn Without Plot, Polite Dom, Porn, Praise Kink, Rope Bondage, Rough Oral Sex, Safe Sane and Consensual, Sex Toys, Shameless Smut, Smut, Suspension, Top Isak Valtersen, daddy!isak, rigging'), 'summary': Value(literal:""A smutty scene where Isak finds the secret toy stash of his one night stand. I try to keep the BDSM etiquette as intact as this setting allows, but this is *not* a how-to. This is a sexual fantasy, not a manual. If you're curious about BDSM, there are great sources of information both online and in real life. Educate yourself and stay safe. Dedicated to my wife, and my partner in crime of plotting and headcanons."")}, {'series': Value(literal:'None'), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'No Archive Warnings Apply'), 'romantic_category': Value(literal:'M/M'), 'keywords': Value(literal:'Manipulation, Surprise Kissing'), 'summary': Value(literal:'Nibral always gets what he wants.')}, {'series': Value(literal:'None'), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'No Archive Warnings Apply'), 'romantic_category': Value(literal:'Multi'), 'keywords': Value(literal:'Community: temps_mort, Fluff, Polyamory, Post-Canon, Triad - Freeform'), 'summary': Value(literal:'Vyse gets a nice surprise gift from Aika and Fina.')}, {'series': Value(literal:'None'), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'Creator Chose Not To Use Archive Warnings'), 'romantic_category': Value(literal:'Other'), 'keywords': Value(literal:'AU, Alternate Universe - Modern Setting, Crack, Crossdressing, Crossover, Crossover Pairings, Scheming'), 'summary': Value(literal:'Sesshoumaru is not amused.')}, {'series': Value(literal:'None'), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'No Archive Warnings Apply'), 'romantic_category': Value(literal:'Other'), 'keywords': Value(literal:'Anal Sex, Creampie, Dirty Talk, Double Penetration, Felching, Finger Sucking, Kissing, Knotting, Mildly Dubious Consent, Sticky Sexual Interfacing (Transformers), Threesome, Vaginal Sex'), 'summary': Value(literal:'Deathsaurus surprises Tarn in the middle of getting hot and heavy.')}, {'series': Value(literal:'None'), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'Creator Chose Not To Use Archive Warnings'), 'romantic_category': Value(literal:'F/M'), 'keywords': Value(literal:""Drabble, JoJo's Bizarre Adventure Part 2: Battle Tendency, JoJo's Bizarre Adventure Part 2: Battle Tendency Spoilers, Not Canon Compliant, One-Sided Attraction, Post-JoJo's Bizarre Adventure Part 2: Battle Tendency""), 'summary': Value(literal:'Idk, found an old drabble I made and I quite enjoy it :) I hope others can enjoy it, Part 2 is one of my favorite parts in all honesty other than Part 3 lol <3 enjoy this random thing')}, {'series': Value(literal:'None'), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'Creator Chose Not To Use Archive Warnings'), 'romantic_category': Value(literal:'Gen'), 'keywords': Value(literal:'Fluff, John being a bit dim, Mycroft being a bit interfering, Sherlock being a bit dim, but he means well, lol'), 'summary': Value(literal:'""Do you know what day it is tomorrow, Sherlock?""')}, {'series': Value(literal:'None'), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'Creator Chose Not To Use Archive Warnings'), 'romantic_category': Value(literal:'F/M'), 'keywords': Value(literal:'Drabble, Future Fic'), 'summary': Value(literal:'Kira has important news for Scott.')}, {'series': Value(literal:'None'), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'Creator Chose Not To Use Archive Warnings'), 'romantic_category': Value(literal:'F/M'), 'keywords': Value(literal:'Angst, Fluff, Smut, Surprises, Unplanned Pregnancy'), 'summary': Value(literal:'You are a hunter who is dating Sam and everything is going great, until you get an unexpected surprise. You(reader) discovers your pregnant.')}, {'series': Value(literal:'None'), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'No Archive Warnings Apply'), 'romantic_category': Value(literal:'F/M'), 'keywords': Value(literal:'Fluff, Humor, Married Couple, Mild Language, Mild Sexual Content, Post-Series'), 'summary': Value(literal:""It was a routine creature excursion until Connor ran into a new complication: Abby's ex-boyfriend."")}, {'series': Value(literal:'Life After the Fall [2]'), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'Creator Chose Not To Use Archive Warnings'), 'romantic_category': Value(literal:'M/M'), 'keywords': Value(literal:'Hannigram - Freeform, Post-Canon, Post-Episode: s03e13 The Wrath of the Lamb'), 'summary': Value(literal:'Will gets a surprise, Hannibal does too.')}, {'series': Value(literal:'None'), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'Creator Chose Not To Use Archive Warnings'), 'romantic_category': Value(literal:'M/M'), 'keywords': Value(literal:'A Happy Short For Once'), 'summary': Value(literal:""Early March. Jon stomps home, feeling like shit, and comes home to the peculiar sight of Richie standing outside the apartment, doing nothing in particular. He's acting like he normally does, but it's still kind of odd."")}, {'series': Value(literal:'None'), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'Underage'), 'romantic_category': Value(literal:'M/M'), 'keywords': Value(literal:'Anal Beads, Anal Fingering, Anal Sex, Ass Play, Bakugou Katsuki Swears A Lot, Bakugou Katsuki is a Good Friend, Birthday Fluff, Birthday Presents, Birthday Smut, Bottom Midoriya Izuku, Cute Midoriya Izuku, Edgeplay, Eventual Smut, Gay Sex, Happy Birthday Midoriya Izuku, Nipple Licking, Nipple Play, Overstimulation, Prostate Massage, Rough Sex, Sex Toys, Top Bakugou Katsuki, Underage Sex, Vibrators'), 'summary': Value(literal:""When Katsuki rushes back, he himself was surprised to see the picture in front of him. The ray of sunshine that went through the window hit green hair making itÉglow. The older one in the room felt a strange pull in his chest. Then the pull in his chest turned into a warmth that pooled in his stomach as a tongue licked pink lips making Katsuki hyperaware of those pretty lips, ÒIÕm waiting, Kacchan, I know you're there.Ó The lips curled into a slight grin. Did he know he was seducing Katsuki?"")}, {'series': Value(literal:'None'), 'collection': Value(literal:'Pinch Hits from the Void: Season One'), 'content_warning': Value(literal:'No Archive Warnings Apply'), 'romantic_category': Value(literal:'Gen'), 'keywords': Value(literal:'Kidnapping, Kinoko Kingdom on Dream Team SMP (Video Blogging RPF), Mentioned Antfrost (Video Blogging RPF), Mentioned Karl Jacobs, Mentioned Sam | Awesamdude, Mentioned Sapnap (Video Blogging RPF), The Badlands on Dream SMP (Video Blogging RPF)'), 'summary': Value(literal:'BadBoyHalo loses track of the days following the prison break, leading him to be thoroughly confused when he gets kidnapped seemingly at random.')}, {'series': Value(literal:'None'), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'Creator Chose Not To Use Archive Warnings'), 'romantic_category': Value(literal:'F/F'), 'keywords': Value(literal:'Soulmate AU, strippergram'), 'summary': Value(literal:'Jemma throws Fitz a surprise birthday party, and ends up getting him the best gift of all. Without even knowing she was. Honestly, she was just trying to get him something fun...')}, {'series': Value(literal:'None'), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'No Archive Warnings Apply'), 'romantic_category': Value(literal:'F/M'), 'keywords': Value(literal:'Nudity, Sexual Humor, i think the title says it all?'), 'summary': Value(literal:""Murder, Artemis reminded herself, is illegal. requested by anonymous for #6: is there a reason you're naked in my bed?"")}, {'series': Value(literal:'Mcreyes Winter Break 2018 [8]'), 'collection': Value(literal:'McReyes Winter Break'), 'content_warning': Value(literal:'No Archive Warnings Apply'), 'romantic_category': Value(literal:'M/M'), 'keywords': Value(literal:'Anal Sex, Oral Sex, Rimming, Strip Tease'), 'summary': Value(literal:'McCree insists on playing the part of Santa at the office Christmas party this year, and wants Gabriel to make his costume. But maybe Gabe should have been a little more suspicious when he mentioned Fareeha was fine with the idea, too, before he agreed. McReyes Winter Break 2018 -> Day 8: Sexy Santa Outfits')}, {'series': Value(literal:'None'), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'No Archive Warnings Apply'), 'romantic_category': Value(literal:'Other'), 'keywords': Value(literal:'Alternate Universe - Soulmates, Romantic Soulmates, Soulmates'), 'summary': Value(literal:""You've put off meeting your soulmate for so long, and you have no idea who they are."")}, {'series': Value(literal:'Moments in Time: A Close Up [16]'), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'No Archive Warnings Apply'), 'romantic_category': Value(literal:'F/M'), 'keywords': Value(literal:'Alternate Universe - Modern Setting, Established Relationship, FBI Itachi, ME Sakura, Romance and Fluff, Slice of Life'), 'summary': Value(literal:'35 Emergency: Surprise. She was the master of throwing curve balls. Yet it was the straight ones that always got him. Moment in Time Drabble: Itachi had always been one to plan ahead, leaving no room for failure. Or a state of emergency. And then he met her. She never completely planned things, there was always something unexpected happening to her. Hectic. And for once he was glad of his organizational ability. One of the biggest things that he learned from her was that planning only went so far. Life throws in unseen bumps along the way all the time. Some are good. Some arenÕt. And some are emergencies no matter what. Like this. ÒYouÕre pregnant?Ó She smiled excitedly. ÒIsnÕt it great?Ó He nodded, knowing he should have expected it. HeÕd married the woman who taught him that nothing always went according to plan and that surprises happened, after all.')}, {'series': Value(literal:'Surprises [1]'), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'No Archive Warnings Apply'), 'romantic_category': Value(literal:'Multi'), 'keywords': Value(literal:'Fluff, i guess?? is the tag for this probably, just a general feel good fic attempt folks, rated t because ichi says the fuck word'), 'summary': Value(literal:'Ichimatsu gets to meet someone very, very special.')}, {'series': Value(literal:'None'), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'No Archive Warnings Apply'), 'romantic_category': Value(literal:'M/M'), 'keywords': Value(literal:'Comedy, Fingering, Fluff and Smut, Post-Canon, dr3 spoilers, fun with a robot hand, post-dr3'), 'summary': Value(literal:'All Komaeda wanted was to surprise Hinata in bed. Too bad his damn luck had to strike again.')}, {'series': Value(literal:'None'), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'Creator Chose Not To Use Archive Warnings'), 'romantic_category': Value(literal:'F/M'), 'keywords': Value(literal:'Alternate Universe - High School, Hand Job, Language, Male Solo, Masturbation, NSFW, Oneshot, Picture Unperfect, Smut, some intense grinding'), 'summary': Value(literal:""Kagome visits her boyfriend's house with the intention of surprising him, but as it turns out, she's the one who gets one hell of a surprise."")}, {'series': Value(literal:'Porn Challenge Drabbles [3]'), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'No Archive Warnings Apply'), 'romantic_category': Value(literal:'M/M'), 'keywords': Value(literal:'Rating: NC17, Sex Toys, je 100'), 'summary': Value(literal:'None')}, {'series': Value(literal:'None'), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'No Archive Warnings Apply'), 'romantic_category': Value(literal:'M/M'), 'keywords': Value(literal:""Apple Pie, Bakery, Established Relationship, Fluff, Hinata just wants to surprise Kenma and I think it's cute, Timeskip, games store, happy Kenma""), 'summary': Value(literal:'Being well known in Japan, itÕs hard for Kenma and Hinata to go out together and not be bombarded with questions or phones in their faces, followed by the squealing fans and desperate reporters. And sure, Kenma isnÕt as anxious as he used to be in high school, but things like that put him off going outside, even when heÕs going alone. Kenma would much rather just go to the games store or the bakery in peace rather than have all that attention, and Hinata knows that. ThatÕs why he decided to flash the money they both have for once.')}, {'series': Value(literal:'None'), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'Creator Chose Not To Use Archive Warnings'), 'romantic_category': Value(literal:'F/M'), 'keywords': Value(literal:'Established Relationship, Fluff, Unplanned Pregnancy'), 'summary': Value(literal:""Mukuro has some news and she doesn't how Makoto will react."")}, {'series': Value(literal:'KunikiDazai Week 2019 [2]'), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'No Archive Warnings Apply'), 'romantic_category': Value(literal:'M/M'), 'keywords': Value(literal:'Casino!AU, Developing Relationship, Flirting'), 'summary': Value(literal:'Kunikida thought he had seen it all')}, {'series': Value(literal:'Lacunas [7]'), 'collection': Value(literal:'Animal Kingdom _ Deran Cody / Adrian Dolan'), 'content_warning': Value(literal:'Creator Chose Not To Use Archive Warnings'), 'romantic_category': Value(literal:'M/M'), 'keywords': Value(literal:'Canon Compliant, Smut'), 'summary': Value(literal:'What happens before Billy interrupts the end of the sex scene in Libertad (0309).')}, {'series': Value(literal:'None'), 'collection': Value(literal:'Limited Theatrical Release 2020'), 'content_warning': Value(literal:'No Archive Warnings Apply'), 'romantic_category': Value(literal:'F/F'), 'keywords': Value(literal:'Sex Pollen (sort of!), pixie dust'), 'summary': Value(literal:'The pixie dust was everywhere when Vidia arrived.')}, {'series': Value(literal:'Artemis & Apollo Ryder - MEA [2]'), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'No Archive Warnings Apply'), 'romantic_category': Value(literal:'F/F'), 'keywords': Value(literal:'Custom Female Ryder | Sara, Fluff, Kissing'), 'summary': Value(literal:'Suvi\'s working in the tech lab. Artemis surprises her. From the tumblr prompt: ""When one personÕs face is scrunched up, and the other one kisses their lips/nose/forehead.""')}, {'series': Value(literal:'None'), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'No Archive Warnings Apply'), 'romantic_category': Value(literal:'F/M'), 'keywords': Value(literal:'PWP, Smut'), 'summary': Value(literal:""Umm this is super old and I just found it last night so I posted it . Should warm anyone up :) unfortunately it's unfinished"")}, {'series': Value(literal:'Tumblr Drabbles [1]'), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'Creator Chose Not To Use Archive Warnings'), 'romantic_category': Value(literal:'M/M'), 'keywords': Value(literal:'Fluff, Kissing, Men of Letters Headquarters, Sex Toys, Slash, Team Free Love'), 'summary': Value(literal:""Castiel admits to Charlie that he misses his lovers a lot when they're separated. She offers a solution."")}, {'series': Value(literal:'None'), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'Creator Chose Not To Use Archive Warnings'), 'romantic_category': Value(literal:'F/M'), 'keywords': Value(literal:'Alpha Bakugou Katsuki, Alpha Shinsou Hitoshi, Alpha/Beta, Alpha/Beta/Omega Dynamics, Beta Kirishima Eijirou, Female Kirishima Eijirou, Non-Traditional Alpha/Beta/Omega Dynamics, Omega Kaminari Denki, Unplanned Pregnancy'), 'summary': Value(literal:'Third year Bakugo and Fem!Kirishima have been together since second year and everything is going to well for the two of them. The two of them have a bright future for them and there is nothing that could surprise them.')}, {'series': Value(literal:'None'), 'collection': Value(literal:'Favorite Fanficition from Animes'), 'content_warning': Value(literal:'No Archive Warnings Apply'), 'romantic_category': Value(literal:'M/M'), 'keywords': Value(literal:'It surprised everyone, no really'), 'summary': Value(literal:""Sena really didn't know how it happened."")}, {'series': Value(literal:'None'), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'No Archive Warnings Apply'), 'romantic_category': Value(literal:'M/M'), 'keywords': Value(literal:""Canon Compliant, Declarations Of Love, Domestic Fluff, Established Relationship, Kissing, Living Together, Pet Names, Romance, Valentine's Day""), 'summary': Value(literal:'""Magnus?"" He called into the darkness and Alexander briefly wondered why he hadn\'t at least turned on the lights himself but he was too used to be extra cautious when something felt off and this was certainly a situation that asked for caution. ""I\'m in the kitchen, dear,"" came Magnus voice and Alec immediately felt his muscles relax because there was no hint of a threat in the other\'s voice. Maybe his lover was right and he should learn to leave work outside of the door because the possibilities of something crucial happening to the High Warlock of Brooklyn were admittedly pretty slim. He knew his boyfriend could take care of himself but in his line of work, Alexander was way too used to expecting the worst and it was impossible to shake this habit off.')}, {'series': Value(literal:'None'), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'Creator Chose Not To Use Archive Warnings'), 'romantic_category': Value(literal:'M/M'), 'keywords': Value(literal:'Childbirth, Implied Sexual Content, Mech Preg'), 'summary': Value(literal:'After being ignored for a solid week, Grimlock goes to see Bee for a much needed talk, and gives some very unexpected help.')}, {'series': Value(literal:'Elrond & Estel [8]'), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'Creator Chose Not To Use Archive Warnings'), 'romantic_category': Value(literal:'Gen'), 'keywords': Value(literal:'Alternate Universe, Challenge Response, Elrond & Estel Series, Family, Father-Son Relationship, Horror, Mystery, Tissue Warning'), 'summary': Value(literal:'The warm sequel of ""White Blanket"". Estel felt that his adar had left him, and he get his surprise, and he found that he is not alone. Series: Elrond & Estel [8]')}, {'series': Value(literal:'None'), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'Creator Chose Not To Use Archive Warnings'), 'romantic_category': Value(literal:'F/M'), 'keywords': Value(literal:'Im too tired for tags, POV Bucky Barnes, Sexy Times'), 'summary': Value(literal:""Sam's girlfriend has a surprise for him but there are even more in store for the happy couple. Warnings: Spanking, choking, breeding, oral, sexy sex"")}, {'series': Value(literal:'None'), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'No Archive Warnings Apply'), 'romantic_category': Value(literal:'M/M'), 'keywords': Value(literal:'gender neutral reader'), 'summary': Value(literal:""Klaus is (slightly) frustrated at how he isn't able to get your attention after so many failed attempts. Maybe something new will get you to look at him."")}, {'series': Value(literal:'The Thick of It mini-fics [26]'), 'collection': Value(literal:"	ENGLISH	750	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow specific guidelines to ensure accuracy and correctness:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: Where does Future Shocks appear?  

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT DISTINCT ?publisher
WHERE { 
?story golem:title ""Future Shocks"" .
?story golem:publisher ?publisher .
}
    </SPARQL>

    ###
    

    Question: What are the keywords of That Secret We Never Knew?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT DISTINCT  (GROUP_CONCAT(DISTINCT ?keyword; separator="", "") AS ?keywords )
WHERE { 
?story golem:title ""That Secret We Never Knew"" .
?story golem:keyword ?keyword .
}
    </SPARQL>

    ###
    

    Question: A Simple Twist was written by whom?  

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT DISTINCT ?author
WHERE { 
?story golem:title ""A Simple Twist"" .
?story golem:author ?author .
}
    </SPARQL>

    ###
    

Question: How is Surprise defined?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT DISTINCT ?definition
WHERE { 
?concept golem:title ""Surprise"" .
?concept golem:definition ?definition .
}
"	[]	0	0	1	Misparaphrase		Paraphrasing
3268	es	ÀCmo se calculan las Zero no Kiseki disponibles?	"prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT (COUNT(DISTINCT ?story) as ?uploads)
WHERE {
?story golem:fandom ""Zero no Kiseki"" .
}"	[{'uploads': Value(typed-literal:'7')}]	SPANISH	1720	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow specific guidelines to ensure accuracy and correctness:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ÀCmo many kudos se le otorgan a If only?  

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT DISTINCT ?kudos
WHERE { 
?story golem:title ""If only, if only"" .
?story golem:numberOfKudos ?kudos .
}
    </SPARQL>

    ###
    

    Question: ÀCuntas cuentas de___ existen?  

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT (COUNT(DISTINCT ?story) as ?uploads)
WHERE {
?story golem:fandom ""___"" .
}
    </SPARQL>

    ###
    

    Question: ÀCul es la cantidad de kudos que dieron las Of spring and treacle?  

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT DISTINCT ?kudos
WHERE { 
?story golem:title ""Of spring and treacle tarts"" .
?story golem:numberOfKudos ?kudos .
}
    </SPARQL>

    ###
    

Question: ÀCmo se calculan las Zero no Kiseki disponibles?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT DISTINCT ?zeroNoKiseki
WHERE { 
?story golem:title ""Zero no Kiseki"" .
?story golem:numberOfChapters ?zeroNoKiseki .
}
"	[]	0	0	1	Misparaphrase		Paraphrasing
1131	en	What kind of show is Mad Tea Party?	"prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT DISTINCT ?series ?collection ?content_warning ?romantic_category (GROUP_CONCAT(DISTINCT ?keyword; separator="", "") AS ?keywords) ?summary
WHERE {
?story golem:title ""Mad Tea Party"" .
?story golem:keyword ?keyword .
?story golem:romanticCategory ?romantic_category .
?story golem:series ?series .
?story golem:collections ?collection .
?story golem:contentWarning ?content_warning .
?story golem:summary ?summary .
}"	"[{'series': Value(literal:'None'), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'No Archive Warnings Apply'), 'romantic_category': Value(literal:'Gen'), 'keywords': Value(literal:'Drug Use, Non-Consensual Drug Use, back on my shit again, welcome back to me'), 'summary': Value(literal:""Mad Hatter wants to have a tea party, but his guests aren't too keen on being there themselves."")}, {'series': Value(literal:'None'), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'No Archive Warnings Apply'), 'romantic_category': Value(literal:'Gen'), 'keywords': Value(literal:""Disney World, Fluff, Hotel, Mad Tea Party, One Shot, Peter Pan's Flight, Plane, Pre-Pandemic, boy band, dizzy - Freeform""), 'summary': Value(literal:'Pure fluff. Juan and Luke have a challenge on who can spin the tea cups at Disney World faster.')}, {'series': Value(literal:'None'), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'No Archive Warnings Apply'), 'romantic_category': Value(literal:'Gen'), 'keywords': Value(literal:'Crossover, Humor, One Shot, WhoVengerLock'), 'summary': Value(literal:'Even evil masterminds enjoy tea.')}, {'series': Value(literal:'None'), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'Graphic Depictions Of Violence'), 'romantic_category': Value(literal:'Multi'), 'keywords': Value(literal:'Alice in Wonderland References, Alternate Canon, Alternate Character Interpretation, Alternate Universe - Once Upon a Time Fusion, Awkward Conversations, Backstory, Breaking the Fourth Wall, Cannibalism, Crazy Mad Hatter | Jefferson, Crossovers & Fandom Fusions, Dark Comedy, Dark Fantasy, Food, Madness, Mythology References, Mytology, Nonsense, Prequel, References to Canon, Sweeney Todd References, Tea Parties'), 'summary': Value(literal:'A certain Demon Barber wakes up in Wonderland and finds himself among the mad crowd at the wildest tea party in fabled history.')}]"	ENGLISH	742	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow specific guidelines to ensure accuracy and correctness:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: What show does Good morning, Harry belong to?  

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT DISTINCT ?series
WHERE { 
?story golem:title ""Good morning, Harry"" .
?story golem:series ?series .
}
    </SPARQL>

    ###
    

    Question: Which TV shows include Tracey Stewart as a guest or regular?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT ?title
WHERE { 
?story golem:title ?title .
?story golem:characters ""Tracey Stewart"" .
}
    </SPARQL>

    ###
    

    Question: Which TV series features Good morning, Harry?  

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT DISTINCT ?series
WHERE { 
?story golem:title ""Good morning, Harry"" .
?story golem:series ?series .
}
    </SPARQL>

    ###
    

Question: What kind of show is Mad Tea Party?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT DISTINCT ?showType
WHERE { 
?story golem:title ""Mad Tea Party"" .
?story golem:publicationStatus ?showType .
}
"	[{'showType': Value(literal:'In-Progress')}, {'showType': Value(literal:'Completed')}]	0	1	1	Wrong predicate	Wrong choice	Query generation
895	en	What is the Hunger Games movie released on July 28th?  	"prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT DISTINCT ?series
WHERE { 
?story golem:title ""July 28th Hunger Games"" .
?story golem:series ?series .
}"	[{'series': Value(literal:'My Hunger Games Simulations [3]')}]	ENGLISH	554	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow specific guidelines to ensure accuracy and correctness:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: When was the movie released?  

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT DISTINCT ?date
WHERE { 
?story golem:title ""crave"" .
?story golem:datePublished ?date .
}
    </SPARQL>

    ###
    

    Question: Is there a known release date for Those Dead Eyes as part of the Harry Potter books?  

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT DISTINCT ?date
WHERE { 
?story golem:title ""Those Dead Eyes (Harry Potter)"" .
?story golem:datePublished ?date .
}
    </SPARQL>

    ###
    

    Question: When did it come out?  

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT DISTINCT ?date
WHERE { 
?story golem:title ""grab the kitchen scissors"" .
?story golem:datePublished ?date .
}
    </SPARQL>

    ###
    

Question: What is the Hunger Games movie released on July 28th?  

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 

SELECT DISTINCT ?movie ?date WHERE { 
?movie golem:title ""The Hunger Games"" .
?movie golem:datePublished ?date .
FILTER(?date = ""2012-07-28"")
}
"	[]	0	0	1	Failed NER		Paraphrasing
566	en	What is the duration of The Universe Has Different Plans?  	"prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT DISTINCT ?chapters ?words
WHERE { 
?story golem:title ""The Universe Has Different Plans"" .
?story golem:numberOfChapters ?chapters .
?story golem:numberOfWords ?words .
}"	[{'chapters': Value(typed-literal:'5'), 'words': Value(typed-literal:'10748')}]	ENGLISH	311	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow specific guidelines to ensure accuracy and correctness:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How long is We're What?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT DISTINCT ?chapters ?words
WHERE { 
?story golem:title ""We're What"" .
?story golem:numberOfChapters ?chapters .
?story golem:numberOfWords ?words .
}
    </SPARQL>

    ###
    

    Question: Does What the Future Holds consist of how many chapters?  

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT DISTINCT ?chapters
WHERE { 
?story golem:title ""What the Future Holds"" .
?story golem:numberOfChapters ?chapters .
}
    </SPARQL>

    ###
    

    Question: How many chapters does What the Future Holds have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT DISTINCT ?chapters
WHERE { 
?story golem:title ""What the Future Holds"" .
?story golem:numberOfChapters ?chapters .
}
    </SPARQL>

    ###
    

Question: What is the duration of The Universe Has Different Plans?  

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT DISTINCT ?duration
WHERE { 
?story golem:title ""The Universe Has Different Plans"" .
?story golem:numberOfChapters ?chapters .
?chapters dc:duration ?duration .
}
"	[]	0	0	1	Wrong predicate	Non-GOLEM	Query generation
2133	es	ÀHa terminado la Bae watching?	"prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT DISTINCT ?status
WHERE { 
?story golem:title ""Bae-watch"" .
?story golem:publicationStatus ?status .
}"	[{'status': Value(literal:'Completed')}]	SPANISH	1213	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow specific guidelines to ensure accuracy and correctness:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ÀEst completada la historia Snape Watches the Puppy Bowl?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT DISTINCT ?status
WHERE { 
?story golem:title ""Snape Watches the Puppy Bowl"" .
?story golem:publicationStatus ?status .
}
    </SPARQL>

    ###
    

    Question: ÀHas concluido la graba de ""Snape Watches the Puppy Bowl""?  

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT DISTINCT ?status
WHERE { 
?story golem:title ""Snape Watches the Puppy Bowl"" .
?story golem:publicationStatus ?status .
}
    </SPARQL>

    ###
    

    Question: ÀLa graba de ""Snape Watches the Puppy Bowl"" est termine?  

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT DISTINCT ?status
WHERE { 
?story golem:title ""Snape Watches the Puppy Bowl"" .
?story golem:publicationStatus ?status .
}
    </SPARQL>

    ###
    

Question: ÀHa terminado la Bae watching?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
SELECT DISTINCT ?status
WHERE { 
?story golem:title ""Bae watching"" .
?story golem:publicationStatus ?status .
}
"	[]	0	0	1	Failed NER		Paraphrasing
2939	es	ÀCmo many kudos se le otorgan a If only?  	"prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT DISTINCT ?kudos
WHERE { 
?story golem:title ""If only, if only"" .
?story golem:numberOfKudos ?kudos .
}"	[{'kudos': Value(typed-literal:'12')}, {'kudos': Value(typed-literal:'247')}, {'kudos': Value(typed-literal:'18')}]	SPANISH	1559	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow specific guidelines to ensure accuracy and correctness:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ÀCuntos Kudos reciben las historias de ___ de media?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT AVG(?kudos) AS ?average_number_of_kudos
WHERE {
?story golem:fandom ""___"" .
?story golem:numberOfKudos ?kudos .
}
    </SPARQL>

    ###
    

    Question: ÀCuntos Kudos reciben las historias de _______ de media?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT AVG(?kudos) AS ?average_number_of_kudos
WHERE {
?story golem:fandom ""_______"" .
?story golem:numberOfKudos ?kudos .
}
    </SPARQL>

    ###
    

    Question: ÀCuntos Kudos recibi A Cauldron Full of Hot, Strong Love?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT DISTINCT ?kudos
WHERE { 
?story golem:title ""A Cauldron Full of Hot, Strong Love"" .
?story golem:numberOfKudos ?kudos .
}
    </SPARQL>

    ###
    

Question: ÀCmo many kudos se le otorgan a If only?  

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT ?kudos
WHERE { 
?story golem:title ""If only"" .
?story golem:numberOfKudos ?kudos .
}
"	[{'kudos': Value(typed-literal:'10')}, {'kudos': Value(typed-literal:'69')}, {'kudos': Value(typed-literal:'133')}, {'kudos': Value(typed-literal:'87')}, {'kudos': Value(typed-literal:'13')}, {'kudos': Value(typed-literal:'12')}, {'kudos': Value(typed-literal:'4')}, {'kudos': Value(typed-literal:'48')}, {'kudos': Value(typed-literal:'24')}, {'kudos': Value(typed-literal:'120')}, {'kudos': Value(typed-literal:'6')}, {'kudos': Value(typed-literal:'216')}, {'kudos': Value(literal:'None')}, {'kudos': Value(typed-literal:'102')}, {'kudos': Value(typed-literal:'12')}, {'kudos': Value(typed-literal:'129')}, {'kudos': Value(typed-literal:'28')}, {'kudos': Value(typed-literal:'18')}, {'kudos': Value(typed-literal:'1')}, {'kudos': Value(typed-literal:'32')}, {'kudos': Value(typed-literal:'23')}, {'kudos': Value(typed-literal:'26')}, {'kudos': Value(typed-literal:'9')}, {'kudos': Value(typed-literal:'38')}, {'kudos': Value(typed-literal:'110')}, {'kudos': Value(typed-literal:'106')}, {'kudos': Value(typed-literal:'6')}, {'kudos': Value(typed-literal:'8')}, {'kudos': Value(typed-literal:'596')}, {'kudos': Value(typed-literal:'599')}, {'kudos': Value(typed-literal:'13')}, {'kudos': Value(typed-literal:'11')}, {'kudos': Value(typed-literal:'6')}, {'kudos': Value(literal:'None')}, {'kudos': Value(typed-literal:'7')}, {'kudos': Value(typed-literal:'81')}, {'kudos': Value(typed-literal:'13')}, {'kudos': Value(typed-literal:'34')}, {'kudos': Value(typed-literal:'43')}, {'kudos': Value(typed-literal:'1')}, {'kudos': Value(typed-literal:'3')}, {'kudos': Value(typed-literal:'43')}, {'kudos': Value(typed-literal:'29')}, {'kudos': Value(typed-literal:'20')}, {'kudos': Value(typed-literal:'106')}, {'kudos': Value(typed-literal:'21')}, {'kudos': Value(typed-literal:'225')}, {'kudos': Value(typed-literal:'21')}, {'kudos': Value(typed-literal:'16')}, {'kudos': Value(typed-literal:'1')}, {'kudos': Value(typed-literal:'19')}, {'kudos': Value(typed-literal:'14')}, {'kudos': Value(typed-literal:'19')}, {'kudos': Value(typed-literal:'161')}, {'kudos': Value(typed-literal:'5')}, {'kudos': Value(typed-literal:'152')}, {'kudos': Value(typed-literal:'49')}, {'kudos': Value(typed-literal:'18')}, {'kudos': Value(typed-literal:'86')}, {'kudos': Value(typed-literal:'19')}, {'kudos': Value(typed-literal:'173')}, {'kudos': Value(typed-literal:'472')}, {'kudos': Value(typed-literal:'189')}, {'kudos': Value(typed-literal:'14')}, {'kudos': Value(literal:'None')}, {'kudos': Value(typed-literal:'22')}]	0	1	1	Failed NER		Paraphrasing
947	en	Locate various-length stories	"prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT DISTINCT ?title
WHERE { 
?story golem:title ?title .
?story golem:numberOfChapters ?chapters .
FILTER(?chapters > 1)
}"	"[{'title': Value(literal:'Harry and his Pet Family')}, {'title': Value(literal:'Mini Padfoot')}, {'title': Value(literal:'Aquae vitae')}, {'title': Value(literal:'wizards and runners')}, {'title': Value(literal:'The Only Beautiful Thing in the World')}, {'title': Value(literal:'Harry Potter and the Act of Moving Forward')}, {'title': Value(literal:'Some Kind of Magic')}, {'title': Value(literal:'all for one (and one for all)')}, {'title': Value(literal:'But If The Sky Is Empty [And There Are No More Gods]')}, {'title': Value(literal:'Mischief Managed')}, {'title': Value(literal:'Blueberry Muffins')}, {'title': Value(literal:'When Magic Gets Real')}, {'title': Value(literal:'The Prank')}, {'title': Value(literal:'a chance (to do good)')}, {'title': Value(literal:""Ari Potter And The Philosopher's Stone"")}, {'title': Value(literal:'Hogwarts Karaoke Night')}, {'title': Value(literal:'Harry Potter, the Prisoner, and the Masked Man')}, {'title': Value(literal:'Harry Potter and the Ninja of Fire')}, {'title': Value(literal:'In A Flash: a series of unrelated drabbles and other flash fiction')}, {'title': Value(literal:'Return to Leaf Tower')}, {'title': Value(literal:'Trouble Is A Friend')}, {'title': Value(literal:'True Monster')}, {'title': Value(literal:'if u like pina coladas')}, {'title': Value(literal:'Ophiuchus: The Serpent Bearer - The Story of Narcissa Malfoy')}, {'title': Value(literal:'Quicksand')}, {'title': Value(literal:'Ghosts of the Past')}, {'title': Value(literal:'Starfish')}, {'title': Value(literal:'Healing Scars')}, {'title': Value(literal:'Flowers in the abyss')}, {'title': Value(literal:'On The Theory of Spontaneous Generation')}, {'title': Value(literal:'The Downsides of Pranking')}, {'title': Value(literal:'The New Era (HP and Avengers crossover)')}, {'title': Value(literal:'The Bet')}, {'title': Value(literal:'do you want to play?')}, {'title': Value(literal:'Something Old, Something New')}, {'title': Value(literal:'Wandr')}, {'title': Value(literal:'Half-Blood of Too Many Worlds')}, {'title': Value(literal:'Harry Potter and The Dead Eaters.')}, {'title': Value(literal:'Worthy')}, {'title': Value(literal:'Pressure Points')}, {'title': Value(literal:'Spotless as You')}, {'title': Value(literal:'every night before i sleep (i like to think you think of me)')}, {'title': Value(literal:'My Hogwarts')}, {'title': Value(literal:'Our Minds Work in Odd Ways (But We Like It Like That)')}, {'title': Value(literal:'Harry Potter Short fic collection')}, {'title': Value(literal:'Snape and Other Drugs PART 1 & 2')}, {'title': Value(literal:'Unexpected')}, {'title': Value(literal:""Eight Valentine's Days"")}, {'title': Value(literal:""Let's hurt tonight (If love is pain)"")}, {'title': Value(literal:'Indecipherable')}, {'title': Value(literal:'We Are But Mortals')}, {'title': Value(literal:'Of Houses And Homes')}, {'title': Value(literal:'The Delphi Chronicles')}, {'title': Value(literal:'31 Days of January Word Challenge')}, {'title': Value(literal:'a summer at camp hogwarts')}, {'title': Value(literal:'The Masked Musician')}, {'title': Value(literal:'Bouquet')}, {'title': Value(literal:'Curtain Call')}, {'title': Value(literal:'In The Cracks Of Light, I Dreamed Of You')}, {'title': Value(literal:'In The Cracks Of Light, I Dreamed Of You (On Hiatus)')}, {'title': Value(literal:'You Keep Me Waiting')}, {'title': Value(literal:'Albus Severus Potter.')}, {'title': Value(literal:'hold on tight')}, {'title': Value(literal:'dreaming of you')}, {'title': Value(literal:'A Speck of Hope')}, {'title': Value(literal:'Fish and the Boy Who Lived')}, {'title': Value(literal:'Auror Alert: Archie is a Bean Thief')}, {'title': Value(literal:'Turning Leaves')}, {'title': Value(literal:'The Muse of Madness')}, {'title': Value(literal:'Maybe Sprout Wings')}, {'title': Value(literal:'The Purveyors of Aid to Magical Mischief Makers')}, {'title': Value(literal:'For the Greater Good')}, {'title': Value(literal:'Flirt')}, {'title': Value(literal:'Wild World')}, {'title': Value(literal:'A Question of Taste')}, {'title': Value(literal:'His Most Vivid Memories')}, {'title': Value(literal:'Tearful Wishes')}, {'title': Value(literal:'Pathetic')}, {'title': Value(literal:'A Little Different')}, {'title': Value(literal:'Learning to Live Again')}, {'title': Value(literal:'Entrapped we trust')}, {'title': Value(literal:'In which Hermione is a Zabini (hiatus)')}, {'title': Value(literal:'Alteration of Reality')}, {'title': Value(literal:'Down the Rabbit Hole')}, {'title': Value(literal:'symphony in (W)G major')}, {'title': Value(literal:""Don't Make Me Beg"")}, {'title': Value(literal:'Best Friends /// Wolfstar')}, {'title': Value(literal:'The Thought That Counts')}, {'title': Value(literal:'Reformation')}, {'title': Value(literal:'Open Wounds')}, {'title': Value(literal:'Adrift')}, {'title': Value(literal:""I Don't Care About What You Believe"")}, {'title': Value(literal:'Behind Locked Doors')}, {'title': Value(literal:'How Could I Ever Refuse')}, {'title': Value(literal:'Maledictus Creaturae')}, {'title': Value(literal:'Can You Just Say That You Hate Me? (Drarry)')}, {'title': Value(literal:'ADE  Archived')}, {'title': Value(literal:'the other side')}, {'title': Value(literal:'The Rosier Runaway: A Sirius Black Love Story')}, {'title': Value(literal:'Nothing Like You')}, {'title': Value(literal:'Alexandra')}, {'title': Value(literal:'Random One-Shot: A Collection')}, {'title': Value(literal:'Remus Lupin and Chronic Illness')}, {'title': Value(literal:'A Prince and his Veela')}, {'title': Value(literal:'Our Hill of Stars')}, {'title': Value(literal:'Hogwarts SMP')}, {'title': Value(literal:'Hogwarts: Camp of Wilderness and Waterfalls')}, {'title': Value(literal:'Teenagers')}, {'title': Value(literal:'The Fake Out')}, {'title': Value(literal:'Resurrection Stone')}, {'title': Value(literal:'Nothing Compares (The Moments That Made Us)')}, {'title': Value(literal:'The Moments That Made Us')}, {'title': Value(literal:'I had a dream, I got everything I wanted')}, {'title': Value(literal:'Nostalgic for a time we never knew')}, {'title': Value(literal:'Happy News?')}, {'title': Value(literal:'A Path Beyond the Light')}, {'title': Value(literal:'Eclipse')}, {'title': Value(literal:'Learning Friendship')}, {'title': Value(literal:'Heartache Tonight')}, {'title': Value(literal:'The Way OotP Should Have Gone')}, {'title': Value(literal:'The Black Heir')}, {'title': Value(literal:""The Blue moon's Star"")}, {'title': Value(literal:'Noble')}, {'title': Value(literal:'Dead Poets Society')}, {'title': Value(literal:'Impetus Divide')}, {'title': Value(literal:'The Greater Evil')}, {'title': Value(literal:'A Little Word: Viktor and Hermione Year 3')}, {'title': Value(literal:'Memories and Dreams')}, {'title': Value(literal:'Hey, Little Trouble')}, {'title': Value(literal:'Gold Rush')}, {'title': Value(literal:'Twelve (and a bit) Hours')}, {'title': Value(literal:'The Purrification of one Hermione Granger')}, {'title': Value(literal:'Things Fall Apart')}, {'title': Value(literal:'Time After Time')}, {'title': Value(literal:'My Special One')}, {'title': Value(literal:'Listen to me in the dark')}, {'title': Value(literal:'Foriegn Student Transfers are never a Good Idea')}, {'title': Value(literal:'Zero Tolerance Policy: The Evil of Justice')}, {'title': Value(literal:""Curses Aren't The Only Things That Break"")}, {'title': Value(literal:'Dumbledoor and the Popular Kids')}, {'title': Value(literal:'Allies and Enemies')}, {'title': Value(literal:""I'm not a kitten... Okay, I'm Kitten"")}, {'title': Value(literal:'Only Sirius')}, {'title': Value(literal:'Non-Toxic Masculinity')}, {'title': Value(literal:'The One Where Regulus Texts a lot')}, {'title': Value(literal:'[Podfic] Teenage Wasteland')}, {'title': Value(literal:'Seventh Horcrux')}, {'title': Value(literal:'There and Back Again: Ronald Weasley and Beginning With A Stone')}, {'title': Value(literal:'The Stars, The Moon, and The Storm')}, {'title': Value(literal:'a veil of great surprises')}, {'title': Value(literal:'Barely Functioning, Deeply Loved')}, {'title': Value(literal:'Scorpius, Lily and the Dragons')}, {'title': Value(literal:'i want to learn to love in kind (cause you were all i ever longed for)')}, {'title': Value(literal:'Being Myself')}, {'title': Value(literal:'A Second Chance')}, {'title': Value(literal:'All I Wanted Was You')}, {'title': Value(literal:'The World Has Gone Crazy')}, {'title': Value(literal:'Through the Wings and Darkness')}, {'title': Value(literal:'Going Home')}, {'title': Value(literal:'The Last Energybender: Earth')}, {'title': Value(literal:'A New Day - HP')}, {'title': Value(literal:'TOOBK Art')}, {'title': Value(literal:'SOS (We Made a Mistake)')}, {'title': Value(literal:'A better man than us')}, {'title': Value(literal:""I'm What?!"")}, {'title': Value(literal:'Harry Potter: The Return Of The Chosen One Part 1')}, {'title': Value(literal:'Lucius x Sirius')}, {'title': Value(literal:'Book 4: Of Cunningness and Tournaments')}, {'title': Value(literal:'What you had and what you lost')}, {'title': Value(literal:'1D in Hogwarts (Au)')}, {'title': Value(literal:'Unordinary Children')}, {'title': Value(literal:'Tithonus')}, {'title': Value(literal:'Wolfstar')}, {'title': Value(literal:'Wolfstar One shots')}, {'title': Value(literal:'LohikrmeÕs Diary')}, {'title': Value(literal:'The Spring of 1912')}, {'title': Value(literal:'Entombed')}, {'title': Value(literal:'Halloween')}, {'title': Value(literal:'figure 8')}, {'title': Value(literal:'Arms open wide')}, {'title': Value(literal:'Brush my teeth')}, {'title': Value(literal:'It all happens in a second')}, {'title': Value(literal:'Professor Levesque; The New DADA Teacher')}, {'title': Value(literal:'A Collection of Magical One Shots')}, {'title': Value(literal:""My Own Soul's Warning"")}, {'title': Value(literal:'You know where to find me')}, {'title': Value(literal:'cedar and smoke')}, {'title': Value(literal:""How Many Times Harry's Nearly Died"")}, {'title': Value(literal:'Unforeseen')}, {'title': Value(literal:'The Power He Knows')}, {'title': Value(literal:'Harry Potter and the St Gloriana School of Witchcraft')}, {'title': Value(literal:'Beneath the Willow Tree')}, {'title': Value(literal:'O Mine Enemy')}, {'title': Value(literal:'Why, Gryffindor? (remus lupin x reader)')}, {'title': Value(literal:'You make my thighs want to socially distance')}, {'title': Value(literal:'Angelic Intervention')}, {'title': Value(literal:'Broken Record')}, {'title': Value(literal:'Apollo and Selene')}, {'title': Value(literal:'A Death Eater or A Joke Shop Owner')}, {'title': Value(literal:'Persephone & Hades')}, {'title': Value(literal:'Little Wolf')}, {'title': Value(literal:'Never in a Billion Years')}, {'title': Value(literal:'The Oasis')}, {'title': Value(literal:'Harmony One-Shots')}, {'title': Value(literal:'Sugar and Spice')}, {'title': Value(literal:'Melting the Ice')}, {'title': Value(literal:'The Extremely Heated and Controversial Courtship of One Percy Weasley')}, {'title': Value(literal:'Peregrine')}, {'title': Value(literal:'Ripples')}, {'title': Value(literal:'The Engagement')}, {'title': Value(literal:'some velvet morning, years too late')}, {'title': Value(literal:'The Noble House of Dagworth-Granger')}, {'title': Value(literal:'Woyunoks')}, {'title': Value(literal:'For Him')}, {'title': Value(literal:'Sunlight')}, {'title': Value(literal:""A Coward's War"")}, {'title': Value(literal:'Delicate')}, {'title': Value(literal:'The Price of Glory')}, {'title': Value(literal:'The Right Path')}, {'title': Value(literal:'All For Her')}, {'title': Value(literal:'SiriusÕs First Night at Hogwarts')}, {'title': Value(literal:'Gradually')}, {'title': Value(literal:'The Freak and his Savior')}, {'title': Value(literal:'All That Remains')}, {'title': Value(literal:'Potter Exposed')}, {'title': Value(literal:'The Seventh Year')}, {'title': Value(literal:'Enough is Enough')}, {'title': Value(literal:'Truth, love, and war')}, {'title': Value(literal:'A Little Slice of Heaven')}, {'title': Value(literal:'Dearest Daughter')}, {'title': Value(literal:'The Bond')}, {'title': Value(literal:'Hesitant And Honourable, But Both So Haggard')}, {'title': Value(literal:'Mnage  Deux')}, {'title': Value(literal:'Outlander: The White Queen Prequel Stories')}, {'title': Value(literal:'Outlander: The White Queen')}, {'title': Value(literal:'The Nightingale, Vol 1')}, {'title': Value(literal:'War Children')}, {'title': Value(literal:'Take it In')}, {'title': Value(literal:'Outlander: The White Princess')}, {'title': Value(literal:'______ ______________-__.__ _')}, {'title': Value(literal:'Draco Dormiens')}, {'title': Value(literal:'What the World Is')}, {'title': Value(literal:'The Seventh Stardrop')}, {'title': Value(literal:'Outlines for Fics That You Can Use If You Want')}, {'title': Value(literal:'Something Darker than Black')}, {'title': Value(literal:'Color Me Rare')}, {'title': Value(literal:'White ash')}, {'title': Value(literal:'Amor Libertatis')}, {'title': Value(literal:'nowhere to go but forward')}, {'title': Value(literal:'The Ballad of Rhea Lestrange')}, {'title': Value(literal:'Draco Malfoy and the Trans Exclusionary Radical Feminist')}, {'title': Value(literal:'I Clutched my Life and Wished It Kept')}, {'title': Value(literal:'What Ever Happened To Those Innocent Young Boys?')}, {'title': Value(literal:'Desirable')}, {'title': Value(literal:'A Chance to Breathe')}, {'title': Value(literal:'Harry Potter-Porters in Ireland')}, {'title': Value(literal:'Exile')}, {'title': Value(literal:'Body Swap')}, {'title': Value(literal:'Colour Theory')}, {'title': Value(literal:'Darling')}, {'title': Value(literal:'Blackmailed')}, {'title': Value(literal:'The Bodyguard - Timelines & Notes')}, {'title': Value(literal:'Awaiting Redemption')}, {'title': Value(literal:'The Deal')}, {'title': Value(literal:'Stag')}, {'title': Value(literal:'Week 1: Blue/Calm')}, {'title': Value(literal:'Happily Ever After (Hiatus)')}, {'title': Value(literal:'Touch starved - Tomarry')}, {'title': Value(literal:'The Honey Society')}, {'title': Value(literal:""Alecto's Surprise Party"")}, {'title': Value(literal:'On Winters Breath, I Await a Guardian')}, {'title': Value(literal:'Motionless')}, {'title': Value(literal:'Wolfstar Drabbles')}, {'title': Value(literal:'Blackbird')}, {'title': Value(literal:'The Time of our Miserable Lives')}, {'title': Value(literal:'Of Horn And Halo')}, {'title': Value(literal:'One Wizard to Bind Them')}, {'title': Value(literal:'Percy and the Fastest Quest in History')}, {'title': Value(literal:'Twenty-Eight Days of Kinkmas')}, {'title': Value(literal:'Love Perpetually')}, {'title': Value(literal:'Down Memory Lane')}, {'title': Value(literal:""A dragon tamer's spark"")}, {'title': Value(literal:'remembering')}, {'title': Value(literal:'truly charmed (spell it out for me?)')}, {'title': Value(literal:'Daddy May I')}, {'title': Value(literal:'Black Comes in Reds')}, {'title': Value(literal:""Joke's on you"")}, {'title': Value(literal:'magic')}, {'title': Value(literal:'Love Replies')}, {'title': Value(literal:'Harry Potter and The Accidental Animagus')}, {'title': Value(literal:'The Romanian Puzzle Box')}, {'title': Value(literal:'Fallen From Glory')}, {'title': Value(literal:'Strawberry Gashes')}, {'title': Value(literal:'Falling Into You')}, {'title': Value(literal:'Mind of Shadows')}, {'title': Value(literal:'Books')}, {'title': Value(literal:'The Ministry Can Suck It')}, {'title': Value(literal:""Numinous (It Was All Harry's Fault)"")}, {'title': Value(literal:'Whale of a Tale')}, {'title': Value(literal:'Thorns & Roses _Bellatrix Lestrange X Fem!OC')}, {'title': Value(literal:'Naruto of The Wizarding World')}, {'title': Value(literal:'A Lost Soul')}, {'title': Value(literal:""Harry's Dating Escapades"")}, {'title': Value(literal:'Dark Sensations')}, {'title': Value(literal:'Sirius Black and the Reversal of Fate')}, {'title': Value(literal:'ÒSheÕs just a friend, ok?Ó')}, {'title': Value(literal:'Time of Night')}, {'title': Value(literal:'Before He Was Voldemort')}, {'title': Value(literal:'Bullet with Butterfly Wings')}, {'title': Value(literal:'Bottles & Broomsticks')}, {'title': Value(literal:'Not for Nothing')}, {'title': Value(literal:'__________ | ______')}, {'title': Value(literal:'Edward meets his soulmate')}, {'title': Value(literal:'Crossroads')}, {'title': Value(literal:'You + Me: The Remix')}, {'title': Value(literal:'Draco Regulus Black and the Modern Marauders')}, {'title': Value(literal:'How Remus Met Marlene')}, {'title': Value(literal:'The Other Side (Draco x Oc)')}, {'title': Value(literal:'The Girl That Was Never Meant to Be')}, {'title': Value(literal:'The Trouble With Love and Cauldrons')}, {'title': Value(literal:'Everybody Wants To Put Me Down')}, {'title': Value(literal:'An Auror Prepper Error')}, {'title': Value(literal:'new scars grow')}, {'title': Value(literal:""What's mine is yours but still definitely mine"")}, {'title': Value(literal:""A Pureblood's Secret"")}, {'title': Value(literal:'Wonderful Tonight')}, {'title': Value(literal:'Colours of Rare')}, {'title': Value(literal:'This Side of the Sky')}, {'title': Value(literal:'Diversion and Seduction')}, {'title': Value(literal:'When It Gets Dark, We Go Home')}, {'title': Value(literal:'Magic: The Universal Force')}, {'title': Value(literal:""He couldn't lie to himself anymore"")}, {'title': Value(literal:'Everything You Do Is Magic')}, {'title': Value(literal:'Midnight Girls')}, {'title': Value(literal:'Letters to Snakeface, and the conversations in between.')}, {'title': Value(literal:'R u shy?')}, {'title': Value(literal:'Inescapable')}, {'title': Value(literal:'A Vow Of Love')}, {'title': Value(literal:'Ron and his boys')}, {'title': Value(literal:'What Chance Do I Have?')}, {'title': Value(literal:'Unprecedented Competition')}, {'title': Value(literal:'heat this side facing up')}, {'title': Value(literal:'House of Snakes')}, {'title': Value(literal:""don't go wasting your emotion"")}, {'title': Value(literal:'A Secret Place (ENTIRE COMBINED TRILOGY)|| Draco Malfoy')}, {'title': Value(literal:'Fire Burn and Cauldron Bubble')}, {'title': Value(literal:'Community Service')}, {'title': Value(literal:'Lucky to be Alive')}, {'title': Value(literal:'therapy')}, {'title': Value(literal:'I Saw Her Standing There')}, {'title': Value(literal:'Marked //t.r.//')}, {'title': Value(literal:'Ruse Of Sinners')}, {'title': Value(literal:'No Home Like the One IÕve Got')}, {'title': Value(literal:'Girl who lived to be an Omega')}, {'title': Value(literal:'Something to Remember')}, {'title': Value(literal:'Sunsets and sunrises are gone, only concrete walls are seen')}, {'title': Value(literal:'The love you give me')}, {'title': Value(literal:'Secret Ingredient')}, {'title': Value(literal:'Intemartecium|| Dramione')}, {'title': Value(literal:'________ ______ ______ ________-__.__ _')}, {'title': Value(literal:'An Era Of Magic/Chaldea gets sent to Hogwarts bc Singularity')}, {'title': Value(literal:'A very Jily time')}, {'title': Value(literal:'Hawthorne')}, {'title': Value(literal:'Numb | George Weasley')}, {'title': Value(literal:'The Girl Who Vanished (Years 1-2)')}, {'title': Value(literal:'The Pick-Up Artist')}, {'title': Value(literal:'Echoes in the Glass')}, {'title': Value(literal:'Professor Malfoy')}, {'title': Value(literal:""dragon's princess || marauders"")}, {'title': Value(literal:'Love Measured by Data')}, {'title': Value(literal:'Raven')}, {'title': Value(literal:'foolish angel ; d.m')}, {'title': Value(literal:'The Late Bloomer')}, {'title': Value(literal:'A new feeling')}, {'title': Value(literal:'I Wanna Feel You From The Inside')}, {'title': Value(literal:'Beauty and the Beast')}, {'title': Value(literal:'Harry Potter and the Witchcrafters')}, {'title': Value(literal:'Finding Love through the darkness')}, {'title': Value(literal:'Moon and Stars')}, {'title': Value(literal:'If You Could Be Anywhere')}, {'title': Value(literal:'________ ______ ________ ____________-__.__ _')}, {'title': Value(literal:'Little mudblood (Draco X Reader)')}, {'title': Value(literal:'Cursed | Draco Malfoy.')}, {'title': Value(literal:'Paper Rings; Fred Weasley')}, {'title': Value(literal:'Touch Of Fear')}, {'title': Value(literal:'In His Bones')}, {'title': Value(literal:'GAME NIGHT | G. WEASLEY')}, {'title': Value(literal:'Beauty Tears |Harry Potter|')}, {'title': Value(literal:'What does it take to be royal?')}, {'title': Value(literal:'A Beautiful Mess')}, {'title': Value(literal:'Everyone needs a friend (Severus POV)')}, {'title': Value(literal:'Two Halves of a Whole')}, {'title': Value(literal:'Aisles')}, {'title': Value(literal:'""Up To No Good""')}, {'title': Value(literal:'Becoming a Weasley')}, {'title': Value(literal:'His Slytherin Lady')}, {'title': Value(literal:'Runaway')}, {'title': Value(literal:'Pride and Polyjuice Potion')}, {'title': Value(literal:'Surprise Soulmates')}, {'title': Value(literal:'Desi Clubs, Plant Catastrophes and Other Such Holiday Hindrances')}, {'title': Value(literal:'who is he')}, {'title': Value(literal:'Coping With Silence')}, {'title': Value(literal:'Off To The Races')}, {'title': Value(literal:'Yours Truly ; Charlie Weasley')}, {'title': Value(literal:'Letters By Candlelight')}, {'title': Value(literal:'Dear Fred,')}, {'title': Value(literal:'The Storm Within')}, {'title': Value(literal:'All She Needs')}, {'title': Value(literal:'The Trauma From The Lockdown')}, {'title': Value(literal:'misery')}, {'title': Value(literal:'Arora Black Potter Banner Stark')}, {'title': Value(literal:'Rosier & the Year of the Snake')}, {'title': Value(literal:'A New Suprise')}, {'title': Value(literal:'Howler')}, {'title': Value(literal:'The Girl Who Fought')}, {'title': Value(literal:'The Fall of Me')}, {'title': Value(literal:""Valentine's Day"")}, {'title': Value(literal:'THE UNFORTUNATE STORY OF THE NOT SO PERFECT TRIO | Draco Malfoy x Fem!Reader x Blaise Zabini')}, {'title': Value(literal:'The Fireside')}, {'title': Value(literal:'Black Fire, Dark Light')}, {'title': Value(literal:'Four weddings and us')}, {'title': Value(literal:'My Favourite Book')}, {'title': Value(literal:""Valentine's Day Snarry Art"")}, {'title': Value(literal:'Seducing the Slytherin')}, {'title': Value(literal:'Little Things')}, {'title': Value(literal:'Evil Author Day 2021: PJO Crossovers')}, {'title': Value(literal:'Why does it hurt to be near you?')}, {'title': Value(literal:'______________________ ________|__________ ____________')}, {'title': Value(literal:'As Much As I Ever Could')}, {'title': Value(literal:'Tim Ihansha Ð Adventures at Hogwarts')}, {'title': Value(literal:'A Hogwarts Love Story')}, {'title': Value(literal:'Redemption')}, {'title': Value(literal:'Catalyst')}, {'title': Value(literal:'Stages of Life')}, {'title': Value(literal:'Scarred Hearts')}, {'title': Value(literal:'Book Smarts')}, {'title': Value(literal:'crave')}, {'title': Value(literal:'Their Man Potter')}, {'title': Value(literal:""You'll Be In My Heart"")}, {'title': Value(literal:'The Benefactor')}, {'title': Value(literal:'choke me like you hate me (but you love me)')}, {'title': Value(literal:'Benefits |Fred Weasley|')}, {'title': Value(literal:'Looking After Hermione')}, {'title': Value(literal:'stay in your arms (without falling to your feet)')}, {'title': Value(literal:'For her own')}, {'title': Value(literal:""Reaper's Choice"")}, {'title': Value(literal:'That Snape Boy')}, {'title': Value(literal:'Protector | Draco Malfoy')}, {'title': Value(literal:'Harry Potter and the Weasley Influence')}, {'title': Value(literal:'The Devil Himself')}, {'title': Value(literal:'Flowers in Her Hair')}, {'title': Value(literal:'The Wizard King of Westeros')}, {'title': Value(literal:'Sine Nomine')}, {'title': Value(literal:'From Moony to Dada to Horcrux Hunter')}, {'title': Value(literal:'Ceremonials')}, {'title': Value(literal:'Baby Harry')}, {'title': Value(literal:'Strumpet')}, {'title': Value(literal:'Dark Blood')}, {'title': Value(literal:'Believe me, love, it was the nightingale')}, {'title': Value(literal:'Hope and Healing')}, {'title': Value(literal:""I don't hate you"")}, {'title': Value(literal:'Fate or Fortune')}, {'title': Value(literal:'Quidditch Games and Wedding Rings')}, {'title': Value(literal:'Unending Night Festival')}, {'title': Value(literal:'Not So Abnormal Feelings')}, {'title': Value(literal:'The Runaway')}, {'title': Value(literal:'The three girls')}, {'title': Value(literal:'Visions Unseen')}, {'title': Value(literal:'Six Feet Apart')}, {'title': Value(literal:'When hatred and love collide')}, {'title': Value(literal:'Let us remember')}, {'title': Value(literal:'Paint Splatters')}, {'title': Value(literal:'Roommates')}, {'title': Value(literal:'MalfoyÕs Mistress')}, {'title': Value(literal:'At Her Command')}, {'title': Value(literal:'To Find Your Soulmate')}, {'title': Value(literal:'Emerald')}, {'title': Value(literal:'Glutton for Punishment')}, {'title': Value(literal:'Unsatisfied (Unwanted?)')}, {'title': Value(literal:""Snape's Regret"")}, {'title': Value(literal:'Hibernaculum')}, {'title': Value(literal:'Something Like a Hero')}, {'title': Value(literal:""Voldemort's very successful guide to reuniting a family."")}, {'title': Value(literal:'The Contamination')}, {'title': Value(literal:""The Potioneer's Assistant Rebrewed"")}, {'title': Value(literal:'The Sweet New Life of One Tom Marvolo Riddle')}, {'title': Value(literal:'Shades')}, {'title': Value(literal:'Must(elid) Have You')}, {'title': Value(literal:""5 Times Albus Dumbledore Should've Said I Love You (and 1 Time He Shouldn't Have)"")}, {'title': Value(literal:'Your Finally Mine')}, {'title': Value(literal:'Bad dream')}, {'title': Value(literal:'Book 1: A Brother by Spirit')}, {'title': Value(literal:'Prefect Marks')}, {'title': Value(literal:'Harry Potter and The Two Towers')}, {'title': Value(literal:'Potionary Confinement')}, {'title': Value(literal:'Neither Water Nor Shade')}, {'title': Value(literal:'ItÕs Just Magic')}, {'title': Value(literal:'Soft Prongs')}, {'title': Value(literal:'Dear Diary of Mine (Original)')}, {'title': Value(literal:'More Than That')}, {'title': Value(literal:'Blood Flower')}, {'title': Value(literal:'Dear Harry....')}, {'title': Value(literal:'Furor')}, {'title': Value(literal:'The greatest Man I ever knew')}, {'title': Value(literal:'Posturing and Prose')}, {'title': Value(literal:'Contractually Obligated')}, {'title': Value(literal:'Weekend with Baby')}, {'title': Value(literal:'All the Pretty Colours')}, {'title': Value(literal:'Like A Pigeon in Flight')}, {'title': Value(literal:'Top female reader x bottom various')}, {'title': Value(literal:'Tartan Books & Longing Looks')}, {'title': Value(literal:'The Legacy of Slytherin')}, {'title': Value(literal:'The Quintessence')}, {'title': Value(literal:'Lovely little secret')}, {'title': Value(literal:'Two of them- An Adoption')}, {'title': Value(literal:'______________')}, {'title': Value(literal:'The Brightest Star')}, {'title': Value(literal:'Nico Di Angelo at Hogwarts')}, {'title': Value(literal:'Luck')}, {'title': Value(literal:'An unfortold twist')}, {'title': Value(literal:'The Wesley Twins| Smut Imagines')}, {'title': Value(literal:'Playing with Fire')}, {'title': Value(literal:'The Badgers, The Snake, The Eagle and The Lions')}, {'title': Value(literal:""Song of the Shepherd's Dog"")}, {'title': Value(literal:'My Angel ~ DM Short Story')}, {'title': Value(literal:'Timelines')}, {'title': Value(literal:'Falling, Enduring, And Retching')}, {'title': Value(literal:'Think too Much')}, {'title': Value(literal:'Hermione Granger and the Time Travel Mishap')}, {'title': Value(literal:'Beyond this place of wrath and tears')}, {'title': Value(literal:'Mute')}, {'title': Value(literal:'Twice the Tournament Trouble')}, {'title': Value(literal:'What Kind of Love')}, {'title': Value(literal:'Falling In and Apart')}, {'title': Value(literal:'Hearts are Blind')}, {'title': Value(literal:'The Story of Eli Black Part 1: 1959-1981')}, {'title': Value(literal:'The Story of Eli Black')}, {'title': Value(literal:'Fingertips | Fred Weasley')}, {'title': Value(literal:'Perry Hotter and the Vanishing Virginity')}, {'title': Value(literal:'Home for the Holidays')}, {'title': Value(literal:'The Girl Most Wanted')}, {'title': Value(literal:'Hell and You')}, {'title': Value(literal:'Pets Get What Pets Deserve')}, {'title': Value(literal:'Broken Promises')}, {'title': Value(literal:'Semester Of Love')}, {'title': Value(literal:'Secrets')}, {'title': Value(literal:'His Wildflower')}, {'title': Value(literal:""I Can't Sleep (D.M. x O.C.)"")}, {'title': Value(literal:'The only slytherin')}, {'title': Value(literal:""Jade Potter and the Philosopher's Stone"")}, {'title': Value(literal:'chocolate teacher')}, {'title': Value(literal:'Suitcase of Memories')}, {'title': Value(literal:'Night Magic')}, {'title': Value(literal:'An Eternal Promise')}, {'title': Value(literal:'I Solemnly Swear')}, {'title': Value(literal:'all the colors of the wind')}, {'title': Value(literal:'Violent Delights')}, {'title': Value(literal:'Luna Lovegood: the Invisible Girl')}, {'title': Value(literal:'How to make a difference')}, {'title': Value(literal:'Harry Potter smutÕs')}, {'title': Value(literal:'thatÕs how i lose you')}, {'title': Value(literal:'The Life and Times of Four Self-Proclaimed Mischief Makers')}, {'title': Value(literal:'Vowed')}, {'title': Value(literal:""Severus' new companion"")}, {'title': Value(literal:'Absolution')}, {'title': Value(literal:'Harry potter oneshots')}, {'title': Value(literal:'Little Snake - Fred Weasley')}, {'title': Value(literal:'Chasing Through The Woods - The Wolf Within')}, {'title': Value(literal:'[COVER ART] Color Me Enamored by peachpety')}, {'title': Value(literal:'Live Forever')}, {'title': Value(literal:'Ghost of You')}, {'title': Value(literal:'Memory Lane')}, {'title': Value(literal:'Pay You A Gallion')}, {'title': Value(literal:'The Mystery of the Horrifying House')}, {'title': Value(literal:'More than just a dance')}, {'title': Value(literal:'Imperium; D.M')}, {'title': Value(literal:'The Hole')}, {'title': Value(literal:'Art: A Gallant Rescue')}, {'title': Value(literal:'Erase the Future (Collab with BookwormCM18)')}, {'title': Value(literal:'Blueberries')}, {'title': Value(literal:'Beautiful Words')}, {'title': Value(literal:'Writing on the Wall')}, {'title': Value(literal:'The Cabin Trip')}, {'title': Value(literal:'Prophecy #34')}, {'title': Value(literal:'Bright- Ron and Hermione Drabbles')}, {'title': Value(literal:'Yummy')}, {'title': Value(literal:'Last Holiday')}, {'title': Value(literal:'A Hogwarts Detective Mystery')}, {'title': Value(literal:'Indebted Bonds')}, {'title': Value(literal:'a Bohemian Rhapsody')}, {'title': Value(literal:'the pull of the sea')}, {'title': Value(literal:'Dr Martens, Magic and Mischief')}, {'title': Value(literal:'Hogwart boys smut')}, {'title': Value(literal:'Linspace')}, {'title': Value(literal:""Advent Calendar 2020 - Munich Marauders' Fanfiction"")}, {'title': Value(literal:'Stag Do')}, {'title': Value(literal:'Written In The Stars')}, {'title': Value(literal:'A Place We Were')}, {'title': Value(literal:'Odd courtship but great sex')}, {'title': Value(literal:'where we land')}, {'title': Value(literal:'Week 4: Orange / Creativity')}, {'title': Value(literal:'Sirius and Remus')}, {'title': Value(literal:'This Time Around')}, {'title': Value(literal:'A Dance With Destiny')}, {'title': Value(literal:'Bedtime Story')}, {'title': Value(literal:'Trash')}, {'title': Value(literal:'Late')}, {'title': Value(literal:'Wit Beyond Measure')}, {'title': Value(literal:'Leave us with Nothing')}, {'title': Value(literal:'The Hollow Spirit')}, {'title': Value(literal:'Ask away')}, {'title': Value(literal:'The Snake That Was Struck By Lightning')}, {'title': Value(literal:'Forbidden Love')}, {'title': Value(literal:'Choosing Hope')}, {'title': Value(literal:'Hogwarts High // Fred Weasley')}, {'title': Value(literal:'the stance of the sea and the absence of green')}, {'title': Value(literal:'Bitten')}, {'title': Value(literal:'Safe')}, {'title': Value(literal:'Till Death Never Parts Us')}, {'title': Value(literal:'Decreed By Law')}, {'title': Value(literal:'Bean Genie')}, {'title': Value(literal:'Killing Yourself to Live')}, {'title': Value(literal:'flash HP fics')}, {'title': Value(literal:'Wolfstar Oneshots')}, {'title': Value(literal:'Libraries Gave Us Power')}, {'title': Value(literal:'10 Hints')}, {'title': Value(literal:'The Dangers of Trying Magical Steroids and Other Dumb Ideas')}, {'title': Value(literal:'From this point forward')}, {'title': Value(literal:'How NOT to act in front of your crush')}, {'titl"	ENGLISH	604	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow specific guidelines to ensure accuracy and correctness:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: Help find short summaries of Fandom stories  

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT DISTINCT ?summary
WHERE { 
?story golem:fandom ""stony - Fandom"" .
?story golem:summary ?summary .
}
    </SPARQL>

    ###
    

    Question: Where can I get brief summaries of Fandom stories?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT DISTINCT ?summary
WHERE { 
?story golem:fandom ""stony - Fandom"" .
?story golem:summary ?summary .
}
    </SPARQL>

    ###
    

    Question: Show me summaries of ______ stories

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT DISTINCT ?summary
WHERE { 
?story golem:fandom ""______"" .
?story golem:summary ?summary .
}
    </SPARQL>

    ###
    

Question: Locate various-length stories

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT DISTINCT ?story ?summary
WHERE { 
?story golem:fandom ""various-length"" .
?story golem:summary ?summary .
}
"	[]	0	0	1	Misparaphrase		Paraphrasing
1042	en	Where do you stand as my flesh and blood, no matter how you feel about it?	"prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT DISTINCT ?publisher
WHERE { 
?story golem:title ""you're my flesh and blood, whether you like it or not"" .
?story golem:publisher ?publisher .
}"	[{'publisher': Value(literal:'archiveofourown.org')}]	ENGLISH	677	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow specific guidelines to ensure accuracy and correctness:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: Who is included in the story of No-One But You?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT ?characters
WHERE { 
?story golem:title ""No-One But You (Only The Good Die Young)"" .
?story golem:characters ?characters .
}
    </SPARQL>

    ###
    

    Question: Will you share how long ""Will You Stay with Me"" lasts?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT DISTINCT ?chapters ?words
WHERE { 
?story golem:title ""Will You Stay with Me?"" .
?story golem:numberOfChapters ?chapters .
?story golem:numberOfWords ?words .
}
    </SPARQL>

    ###
    

    Question: How long will it last: ""Will You Stay with Me""?  

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT DISTINCT ?chapters ?words
WHERE { 
?story golem:title ""Will You Stay with Me?"" .
?story golem:numberOfChapters ?chapters .
?story golem:numberOfWords ?words .
}
    </SPARQL>

    ###
    

Question: Where do you stand as my flesh and blood, no matter how you feel about it?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT ?summary
WHERE { 
?story golem:title ""Where do you stand as my flesh and blood, no matter how you feel about it?"" .
?story golem:summary ?summary .
}
"	[]	0	0	1	Failed NER		Paraphrasing
330	en	List the primary topics explored in All was right.  	"prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT DISTINCT  (GROUP_CONCAT(DISTINCT ?keyword; separator="", "") AS ?keywords )
WHERE { 
?story golem:title ""All was right"" .
?story golem:keyword ?keyword .
}"	[{'keywords': Value(literal:'Cuddling & Snuggling, Emotional Hurt/Comfort, First Kiss, Hogwarts, Hurt/Comfort, Idiots in Love, Love Confessions, Marauders Era (Harry Potter), Sharing a Bed, remus is overly emotional, sirius is oblivious, wolfstar')}]	ENGLISH	186	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow specific guidelines to ensure accuracy and correctness:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: What posts were made during 2015?  

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT DISTINCT ?title
WHERE { 
?story golem:datePublished ?date .
?story golem:title ?title .
FILTER(YEAR(xsd:datetime(?date))=2015) .
}
    </SPARQL>

    ###
    

    Question: The responses are as follows:

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT COUNT(DISTINCT ?story) as ?stories
WHERE {
?story golem:story_id ?id
}
    </SPARQL>

    ###
    

    Question: What are the essential topics covered in Surviving Together?  

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT DISTINCT  (GROUP_CONCAT(DISTINCT ?keyword; separator="", "") AS ?keywords )
WHERE { 
?story golem:title ""Surviving Together"" .
?story golem:keyword ?keyword .
}
    </SPARQL>

    ###
    

Question: List the primary topics explored in All was right.  

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT DISTINCT ?keyword
WHERE { 
?story golem:title ""All was right"" .
?story golem:keyword ?keyword .
}
"	[{'keyword': Value(literal:'Cuddling & Snuggling')}, {'keyword': Value(literal:'Emotional Hurt/Comfort')}, {'keyword': Value(literal:'First Kiss')}, {'keyword': Value(literal:'Hurt/Comfort')}, {'keyword': Value(literal:'Idiots in Love')}, {'keyword': Value(literal:'Love Confessions')}, {'keyword': Value(literal:'Marauders Era (Harry Potter)')}, {'keyword': Value(literal:'Sharing a Bed')}, {'keyword': Value(literal:'wolfstar')}, {'keyword': Value(literal:'Hogwarts')}, {'keyword': Value(literal:'sirius is oblivious')}, {'keyword': Value(literal:'remus is overly emotional')}]	0	1	1	Evaluation method error	Non-grouped	Query generation
1123	en	WhatÕs His Top Option?  	"prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT DISTINCT ?series ?collection ?content_warning ?romantic_category (GROUP_CONCAT(DISTINCT ?keyword; separator="", "") AS ?keywords) ?summary
WHERE {
?story golem:title ""His First Choice"" .
?story golem:keyword ?keyword .
?story golem:romanticCategory ?romantic_category .
?story golem:series ?series .
?story golem:collections ?collection .
?story golem:contentWarning ?content_warning .
?story golem:summary ?summary .
}"	"[{'series': Value(literal:'None'), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'Creator Chose Not To Use Archive Warnings'), 'romantic_category': Value(literal:'F/M'), 'keywords': Value(literal:""Angst, Love, Romance, Valentine's Day, being picked first, no to settling""), 'summary': Value(literal:'Molly is tired of being unloved and passed over. She wants a special someone but she wants to be his first choice, not the good-enough girl to pass the time with until someone of value is finally free to pursue. But when she literally runs into her partner from Care of Magical Creatures class on her way back from Hogsmeade, will she finally find exactly what she is looking for?')}, {'series': Value(literal:'911 Weeks [4]'), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'No Archive Warnings Apply'), 'romantic_category': Value(literal:'M/M'), 'keywords': Value(literal:'911week2020, Bad Things Happen Bingo, Family, Fluff, Loneliness, Love Confessions'), 'summary': Value(literal:""Buck feels lonely, like everyone around him has a family, someone who cares about them more than anything, but he doesn't. Turns out he is wrong."")}, {'series': Value(literal:""Mrs Bennet's Daughters Universe [2]""), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'Major Character Death'), 'romantic_category': Value(literal:'Gen'), 'keywords': Value(literal:""But is forced to develop grudging respect., Humour, Judgey-Judginess, Lizzy was named after her, Looking Down From On High, Mrs Bennet's Perspective, She does NOT like Charlotte Lucas, They're not dissimilar, We meet Mrs Bennet's mother""), 'summary': Value(literal:'In the Mrs Bennet\'s Daughters universe, the first Mrs Bennet is dead, and the second (Charlotte Lucas) is tasked with bringing up her daughters. What does Mrs Bennet think of the arrangement? And all the goings on at Longbourn, in her absence? Now we can find out... ÒHe is marrying Charlotte LUCAS!Ó Mrs Bennet wailed. ÒCHARLOTTE LUCAS. The little tramp!Ó *** ""Charlotte Lucas has just told Lady Lucas that Jane shall have two thousand pounds on her come out, and so will each girl when their time comes.Ó Mrs Bennet flapped her hands excitedly. ""I suppose I shall have to like her now."" ""She has taken very good care of your girls in your stead, and there are many who would not have been so generous.Ó ÒVery well.... But, I will not really like her until I see how well she does for them in marriage. THAT is the material concern.Ó *You probably don\'t need to read MBD first, this is pretty easy to follow by itself.*')}, {'series': Value(literal:""Mrs Bennet's Daughters Universe [2]""), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'Major Character Death'), 'romantic_category': Value(literal:'F/M'), 'keywords': Value(literal:""But is forced to develop grudging respect., Humour, Judgey-Judginess, Lizzy was named after her, Looking Down From On High, Mrs Bennet's Perspective, She does NOT like Charlotte Lucas, They're not dissimilar, We meet Mrs Bennet's mother""), 'summary': Value(literal:'In the Mrs Bennet\'s Daughters universe, the first Mrs Bennet is dead, and the second (Charlotte Lucas) is tasked with bringing up her daughters. What does Mrs Bennet think of the arrangement? And all the goings on at Longbourn, in her absence? Now we can find out... ÒHe is marrying Charlotte LUCAS!Ó Mrs Bennet wailed. ÒCHARLOTTE LUCAS. The little tramp!Ó *** ""Charlotte Lucas has just told Lady Lucas that Jane shall have two thousand pounds on her come out, and so will each girl when their time comes.Ó Mrs Bennet flapped her hands excitedly. ""I suppose I shall have to like her now."" ""She has taken very good care of your girls in your stead, and there are many who would not have been so generous.Ó ÒVery well.... But, I will not really like her until I see how well she does for them in marriage. THAT is the material concern.Ó *You probably don\'t need to read MBD first, this is pretty easy to follow by itself.*')}]"	ENGLISH	734	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow specific guidelines to ensure accuracy and correctness:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: Could a key person succumb to their vice?  

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT DISTINCT ?warning
WHERE { 
?story golem:title ""bad habit"" .
?story golem:contentWarning ?warning .
FILTER(?warning = ""Major Character Death"")
}
    </SPARQL>

    ###
    

    Question: What is someone interested in?  

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT DISTINCT ?series ?collection ?content_warning ?romantic_category (GROUP_CONCAT(DISTINCT ?keyword; separator="", "") AS ?keywords) ?summary
WHERE {
?story golem:title ""What the Heart Wants"" .
?story golem:keyword ?keyword .
?story golem:romanticCategory ?romantic_category .
?story golem:series ?series .
?story golem:collections ?collection .
?story golem:contentWarning ?content_warning .
?story golem:summary ?summary .
}
    </SPARQL>

    ###
    

    Question: Which programs does Tom_ Rosick_ act in?  

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT ?title
WHERE { 
?story golem:title ?title .
?story golem:characters ""Tom_ Rosick_"" .
}
    </SPARQL>

    ###
    

Question: WhatÕs His Top Option?  

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT DISTINCT ?top_partner (GROUP_CONCAT(DISTINCT ?pairing; separator="", "") AS ?pairings)
WHERE { 
?story golem:title ""His Top Option"" .
?story golem:topPartner ?top_partner .
?story golem:romanticCategory ?romantic_category .
?story golem:noOfPairings ?num_pairings .
?story golem:topPartnerPairings ?pairing .
}
GROUP BY ?top_partner ?romantic_category ?num_pairings
"	[]	0	0	1	Failed NER		Paraphrasing
766	en	In which collection is Obligate located?  	"prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT DISTINCT ?collections
WHERE { 
?story golem:title ""Obliviate"" .
?story golem:collections ?collections .
}"	"[{'collections': Value(literal:'None')}, {'collections': Value(literal:'Dramione WIPS')}, {'collections': Value(literal:'Chocolate Box - Round 7')}, {'collections': Value(literal:""Books I would lose sleep over, Fics to Find the Time For, Imma read it again, Mirage664's Read and Loved, Well-Written HP Fanfiction Collection, great harry fics"")}, {'collections': Value(literal:'2015 Sherlolly Big Bang Challenge')}, {'collections': Value(literal:'BBC Merlin Rare Fair')}, {'collections': Value(literal:'Marvelously Magical Bingo 2020')}, {'collections': Value(literal:'KakuHida Week')}]"	ENGLISH	453	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow specific guidelines to ensure accuracy and correctness:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: To which collections is the item Justice and Learning located in?  

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT DISTINCT ?collections
WHERE { 
?story golem:title ""Justice and Learning"" .
?story golem:collections ?collections .
}
    </SPARQL>

    ###
    

    Question: # Which collection are you in?  

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT DISTINCT ?collections
WHERE { 
?story golem:title ""so I kind of love you"" .
?story golem:collections ?collections .
}
    </SPARQL>

    ###
    

    Question: What collections is The Letters From No One part of?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT DISTINCT ?collections
WHERE { 
?story golem:title ""The Letters From No One"" .
?story golem:collections ?collections .
}
    </SPARQL>

    ###
    

Question: In which collection is Obligate located?  

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT DISTINCT ?collections
WHERE { 
?story golem:title ""Obligate"" .
?story golem:collections ?collections .
}
"	[{'collections': Value(literal:'None')}]	0	1	1	Failed NER		Paraphrasing
319	en	What are the essential elements of Tequila Sunrise?	"prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT DISTINCT  (GROUP_CONCAT(DISTINCT ?keyword; separator="", "") AS ?keywords )
WHERE { 
?story golem:title ""Tequila Sunrise"" .
?story golem:keyword ?keyword .
}"	"[{'keywords': Value(literal:""(Possible) Infidelity, 13 Days of Clexa, 31 Days of Fanfiction Challenge, A teeny tiny fic to release me from my slumber, AU, Additional Warnings In Author's Note, Aftercare, Age Difference, Aged-Up Character(s), Album: Fine Line (Harry Styles), Alcohol, Alcohol Abuse/Alcoholism, Alien Biology, Alien Sex, Aliens, Alternate Canon, Alternate Reality, Alternate Universe, Alternate Universe - Aliens, Alternate Universe - Bar/Pub, Alternate Universe - College/University, Alternate Universe - Everyone Lives/Nobody Dies, Alternate Universe - Human, Alternate Universe - Idols, Alternate Universe - Modern Setting, Alternate Universe - No Quirks (My Hero Academia), Alternate Universe - Pro Heroes (My Hero Academia), Alternate Universe - Supernatural Elements, Alternate Universe - Vampire, Ambiguous Relationships, Anal Sex, Angst, Angst with a Happy Ending, Antifans, Attempted Murder, BTS is 6, Bartender AU, Betrayal, Biting, Blood, Blood Drinking, Blood and Injury, Blow Jobs, Bottom Park Jimin (BTS), Busan buddies, Canon Compliant, Character Study, Choking, Clextober, Clextober 2019, Clubbing, Coming Out, Community: Iyhedonism, Condoms, Consensual Somnophilia, Crack, Creampie, Crossdressing, Cuddling & Snuggling, Daddy Kink, Dancer Park Jimin (BTS), Day 8: Vampires/Werewolves, Diners, Drama, Drink, Drinking, Drunk Sex, Drunken Flirting, Drunken Shenanigans, Drunkenness, Dry Humping, Dubious Morality, Eden's Twilight, Emotional Hurt/Comfort, Emotions, Enemies to Friends to Lovers, Established Relationship, Explicit Language, Explicit Sexual Content, Fake Marriage, Fake/Pretend Relationship, Fame, Famous BTS, Fanboy Jimin, Female Harry Potter, First Meetings, Flirting, Fluff, Fluff and Angst, Fluff and Humor, Fluff and Smut, Fluffy Ending, Forgiveness, French Kissing, Friendship/Love, Frottage, Future Angst, Future Fic, Gay, Getting Together, Girls' Night Out, Gore, Graham's dad was a horrible person, Group chat, Hangover, Happy Ending, Hiding, Horror, Human Sides (Sanders Sides), Human/Vampire Relationship, Hurt/Comfort, Idol Jeon Jungkook, Idol Jung Hoseok | J-Hope, Idol Kim Namjoon | RM, Idol Kim Seokjin | Jin, Idol Kim Taehyung | V, Idol Min Yoongi | Suga, Immortality, Implied Sexual Content, Implied/Referenced Dubious Consent, It's Not Crack I Swear, Italian family, Jealousy, Karaoke, Kidnapping, Kissing, Knifeplay, Las Vegas, Learning to accept the fact that you aren't as straight as your dad wanted you to be, Light Angst, Light Bondage, Long Distance Relationship, Long haired Jaehyo wowie, Lots of Andrew staring at neil and feeling v overwhelmed for various reasons, Love Poems, Makeup Sex, Male-Female Friendship, Master of Death Harry Potter, Masturbation, Meet-Cute, Mental Breakdown, Mentions of drugs, Mentions of the time neil got drugged, Mildly Dubious Consent, Min Yoongi | Suga Is a Good Hyung, Min Yoongi | Suga is Bad at Feelings, Mind Sex, Minor Injuries, Minor Jeon Jungkook/Park Jimin, Misunderstandings, Mollisian, Mood Swings, Motorbike Keith is best Keith, Musician Harry, Mutual Pining, NSFW, Neil josten is a menace, Non-Consensual Drug Use, Non-Famous Liam Payne, Not Really Character Death, One Night Stands, Oral Sex, Originally Posted on Tumblr, POV Andrew Minyard, Partying, Pining, Plot What Plot/Porn Without Plot, Polyamory, Porn With Plot, Possession, Post-Canon, Pre-Relationship, Pre-Series, Pro Hero Bakugou Katsuki, Probably ooc, Rare Pairings, Reader-Insert, Reader-Interactive, Red Romance, Rhink Summer Ficathon 2k16, Rivalry, Romance, Rough Kissing, Rough Sex, San Francisco Lovers (Blaseball Team), Semi-Public Sex, Sex, Sexual Content, Sexual Tension, Shapeshifting, Short One Shot, Slow Burn, Smut, Somewhere in between tbh, Spin the Bottle, Strangers, Supernatural Elements, Swearing, Tequila, TheyÕre not playing Wordle bc itÕs like 2007 but also theyÕre kind of playing wordle, Threesome - F/M/M, Thriller, Too much fluff, Top Min Yoongi | Suga, Torture, Touchy-Feely, Trans Character, Trans Male Character, Trans Takami Keigo | Hawks, Tumblr Prompt, Two Emotionally Troubled Idiots In Love, Unprotected Sex, Unrequited Love, Vaginal Fingering, Vaginal Sex, Vague Mentions of Past Abuse, Vampire Bites, Vampires, Voyeurism, Wanderers, Witches, alcohol mention, alien!John, alien!lock, and the uswnt, angst? I haven't decided yet, cross-over, did I mention that Sherlock and John are aliens?, drunk Neil is a woo girl, hobi is a dancer, human!Lestrade, i don't want to spoil so much, idol fan relationship, internalised issues, mentions of hate speech towards yoongi, no beta we're just gonna die, platonic namkook, platonic taegi, practically love at first sight, prompt: sunrise, remembering, rm and hobi live in the states, selfindulging, sex mention, slow morning, smut is mentioned, soft shit, tae is a painter, taekook, the elephant painting, the rest in seoul, tw car accident, ucla roster as other characters, unflattering German soldiers aka nazis, vmin are best bros, we'll see if I have time, whipped everything, whipped vhope, yoongi and jin live together, yoonmin, ___au"")}]"	ENGLISH	175	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow specific guidelines to ensure accuracy and correctness:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: What series is High Cotton a part of?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT DISTINCT ?series
WHERE { 
?story golem:title ""High Cotton"" .
?story golem:series ?series .
}
    </SPARQL>

    ###
    

    Question: Which series is High Cotton part of?  

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT DISTINCT ?series
WHERE { 
?story golem:title ""High Cotton"" .
?story golem:series ?series .
}
    </SPARQL>

    ###
    

    Question: What series does High Cotton belong to?  

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT DISTINCT ?series
WHERE { 
?story golem:title ""High Cotton"" .
?story golem:series ?series .
}
    </SPARQL>

    ###
    

Question: What are the essential elements of Tequila Sunrise?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT DISTINCT ?essentialElements
WHERE { 
?story golem:title ""Tequila Sunrise"" .
?story golem:characters ?essentialElements .
}
"	"[{'essentialElements': Value(literal:'Howard Stark')}, {'essentialElements': Value(literal:'Original Character')}, {'essentialElements': Value(literal:'Steve Rogers')}, {'essentialElements': Value(literal:'Tony Stark')}, {'essentialElements': Value(literal:'Maria Stark')}, {'essentialElements': Value(literal:'Edwin Jarvis')}, {'essentialElements': Value(literal:'Jeon Jungkook')}, {'essentialElements': Value(literal:'Jung Hoseok | J-Hope')}, {'essentialElements': Value(literal:'Min Yoongi | Suga')}, {'essentialElements': Value(literal:'Park Jimin (BTS)')}, {'essentialElements': Value(literal:'Bakugou Katsuki')}, {'essentialElements': Value(literal:'Kaminari Denki')}, {'essentialElements': Value(literal:'Ashido Mina')}, {'essentialElements': Value(literal:'Bellamy Blake')}, {'essentialElements': Value(literal:'Nathan Miller')}, {'essentialElements': Value(literal:'Clarke Griffin')}, {'essentialElements': Value(literal:'Monty Green')}, {'essentialElements': Value(literal:'Wells Jaha')}, {'essentialElements': Value(literal:'Francisco ""Catfish"" Morales')}, {'essentialElements': Value(literal:'frankie morales - Character')}, {'essentialElements': Value(literal:'Liquid Friend (Blaseball)')}, {'essentialElements': Value(literal:'Mindy Salad (Blaseball)')}, {'essentialElements': Value(literal:'Allura (Voltron)')}, {'essentialElements': Value(literal:'Hunk (Voltron)')}, {'essentialElements': Value(literal:'Keith (Voltron)')}, {'essentialElements': Value(literal:'Lance (Voltron)')}, {'essentialElements': Value(literal:'Pidge | Katie Holt')}, {'essentialElements': Value(literal:'Aurelian Hydrangea')}, {'essentialElements': Value(literal:'Claretlotus Alkalurops')}, {'essentialElements': Value(literal:'Charlene Emmanuel')}, {'essentialElements': Value(literal:'Lexa (The 100)')}, {'essentialElements': Value(literal:'Peter White')}, {'essentialElements': Value(literal:'billy quizboy whalen')}, {'essentialElements': Value(literal:'Ginny Weasley')}, {'essentialElements': Value(literal:'Harry Potter')}, {'essentialElements': Value(literal:'Tom Riddle | Voldemort')}, {'essentialElements': Value(literal:'Diary Tom Riddle')}, {'essentialElements': Value(literal:'Spike')}, {'essentialElements': Value(literal:'Cordelia Chase')}, {'essentialElements': Value(literal:'Lorne (the Host)')}, {'essentialElements': Value(literal:'Woo Jiho | Zico')}, {'essentialElements': Value(literal:'Ahn Jaehyo')}, {'essentialElements': Value(literal:'Kuroba Kaito | Kaitou Kid')}, {'essentialElements': Value(literal:'Koizumi Akako')}, {'essentialElements': Value(literal:'Boyang Jin')}, {'essentialElements': Value(literal:'Yuzuru Hanyu')}, {'essentialElements': Value(literal:'Nathan Chen')}, {'essentialElements': Value(literal:'Vincent Zhou')}, {'essentialElements': Value(literal:'Shoma Uno')}, {'essentialElements': Value(literal:'Greg Lestrade')}, {'essentialElements': Value(literal:'John Watson')}, {'essentialElements': Value(literal:'Mycroft Holmes')}, {'essentialElements': Value(literal:'Sherlock Holmes')}, {'essentialElements': Value(literal:'Usagiyama Rumi | Miruko')}, {'essentialElements': Value(literal:'Takami Keigo | Hawks')}, {'essentialElements': Value(literal:'Dabi | Todoroki Touya')}, {'essentialElements': Value(literal:'Andrew Minyard')}, {'essentialElements': Value(literal:'Neil Josten')}, {'essentialElements': Value(literal:'Renee Walker (All For The Game)')}, {'essentialElements': Value(literal:'Kevin Day')}, {'essentialElements': Value(literal:'Aaron Minyard')}, {'essentialElements': Value(literal:'Allison Reynolds (All For The Game)')}, {'essentialElements': Value(literal:'Danielle ""Dan"" Wilds')}, {'essentialElements': Value(literal:'Matt Boyd')}, {'essentialElements': Value(literal:'Nicky Hemmick')}, {'essentialElements': Value(literal:'Gary ""Eggsy"" Unwin')}, {'essentialElements': Value(literal:'Harry Hart | Galahad')}, {'essentialElements': Value(literal:'Reader')}, {'essentialElements': Value(literal:'Tequila (Kingsman)')}, {'essentialElements': Value(literal:'Ginger Ale (Kingsman)')}, {'essentialElements': Value(literal:'Kim Jinwoo')}, {'essentialElements': Value(literal:'Song Minho - Character')}, {'essentialElements': Value(literal:'Kevin Levin')}, {'essentialElements': Value(literal:'Rex Salazar')}, {'essentialElements': Value(literal:'Santiago')}, {'essentialElements': Value(literal:'Dwight')}, {'essentialElements': Value(literal:'Michael Shaughnessy')}, {'essentialElements': Value(literal:'Mallory Pugh')}, {'essentialElements': Value(literal:'Jessie Fleming')}, {'essentialElements': Value(literal:'Creativity | Roman ""Princey"" Sanders')}, {'essentialElements': Value(literal:'Logic | Logan Sanders')}, {'essentialElements': Value(literal:'Draco Malfoy')}, {'essentialElements': Value(literal:'Hermione Granger')}, {'essentialElements': Value(literal:'Pansy Parkinson')}, {'essentialElements': Value(literal:'Joseph Joestar')}, {'essentialElements': Value(literal:'Jim ""Chief"" Hopper')}, {'essentialElements': Value(literal:'Original Female Character(s)')}, {'essentialElements': Value(literal:'Yuri Plisetsky')}, {'essentialElements': Value(literal:'Jean-Jacques Leroy')}, {'essentialElements': Value(literal:'Ezra Standish')}, {'essentialElements': Value(literal:'Vin Tanner')}, {'essentialElements': Value(literal:'Inez Recillos')}, {'essentialElements': Value(literal:'Kim Namjoon | RM')}, {'essentialElements': Value(literal:'Kim Seokjin | Jin')}, {'essentialElements': Value(literal:'Kim Taehyung | V')}, {'essentialElements': Value(literal:'Lee Taemin')}, {'essentialElements': Value(literal:'Kim Sejin (BTS)')}, {'essentialElements': Value(literal:'Bang Shihyuk')}, {'essentialElements': Value(literal:'Kate ""XO"" McGregor')}, {'essentialElements': Value(literal:'Pete ""Buffer"" Tomaszewski')}, {'essentialElements': Value(literal:'Chuck Taylor')}, {'essentialElements': Value(literal:'Orange Cassidy')}, {'essentialElements': Value(literal:'Jackson Wang')}, {'essentialElements': Value(literal:'Park Chaeyoung | Ros')}, {'essentialElements': Value(literal:'Mark Tuan')}, {'essentialElements': Value(literal:'Kim Namjoon | Rap Monster')}, {'essentialElements': Value(literal:'Beca Mitchell')}, {'essentialElements': Value(literal:'Chloe Beale')}, {'essentialElements': Value(literal:'Aubrey Posen')}, {'essentialElements': Value(literal:'Thea Queen')}, {'essentialElements': Value(literal:'Barbara Havers')}, {'essentialElements': Value(literal:'Peter Lynley')}, {'essentialElements': Value(literal:'Tommy Lynley')}, {'essentialElements': Value(literal:'Winston Nkata')}, {'essentialElements': Value(literal:'Aaron Paul')}, {'essentialElements': Value(literal:'Bryan Cranston')}, {'essentialElements': Value(literal:'Rick Sanchez (Rick and Morty)')}, {'essentialElements': Value(literal:'Sam Carter')}, {'essentialElements': Value(literal:'Cameron Mitchell')}, {'essentialElements': Value(literal:'Klaus Mikaelson')}, {'essentialElements': Value(literal:'Caroline Forbes')}, {'essentialElements': Value(literal:'Kol Mikaelson')}, {'essentialElements': Value(literal:'Bonnie Bennett')}, {'essentialElements': Value(literal:'Castiel')}, {'essentialElements': Value(literal:'Dean Winchester')}, {'essentialElements': Value(literal:'Sam Winchester')}, {'essentialElements': Value(literal:'Eileen Leahy')}, {'essentialElements': Value(literal:'Harry Styles')}, {'essentialElements': Value(literal:'Liam Payne')}, {'essentialElements': Value(literal:'Zayn Malik')}, {'essentialElements': Value(literal:'Louis Tomlinson')}, {'essentialElements': Value(literal:'Jethro Gibbs')}, {'essentialElements': Value(literal:'Jacqueline ""Jack"" Sloane')}, {'essentialElements': Value(literal:'Grace Confalone')}, {'essentialElements': Value(literal:'Jack Harkness')}, {'essentialElements': Value(literal:""Graham O'Brien"")}, {'essentialElements': Value(literal:'Sans (Undertale)')}, {'essentialElements': Value(literal:'Papyrus (Undertale)')}, {'essentialElements': Value(literal:'Link Neal')}, {'essentialElements': Value(literal:'Rhett McLaughlin')}]"	0	1	1	Wrong predicate	Wrong choice	Paraphrasing
3509	es	ÀCmo se calcula el promedio de palabras en un documento?  	"prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT (AVG(?words) as ?avg_words)
WHERE {
?story golem:numberOfWords ?words .
}"	[{'avg_words': Value(typed-literal:'8180.185545444649115')}]	SPANISH	1827	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow specific guidelines to ensure accuracy and correctness:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ÀCuntos comentarios, en promedio, aparecen en las stories de German literature de RPF?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT AVG(?comments) AS ?avg_number_of_comments
WHERE {
?story golem:fandom ""German literature rpf"" .
?story golem:numberOfComments ?comments .
}
    </SPARQL>

    ###
    

    Question: ÀCuntos autores hay representados en los datos?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT (COUNT(DISTINCT ?author) as ?authors)
WHERE {
?story golem:author ?author .
}
    </SPARQL>

    ###
    

    Question: ÀCuntas historias se publican al ao?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT (COUNT(DISTINCT ?story) as ?uploads)
WHERE { 
?story golem:story_id ?id
}
    </SPARQL>

    ###
    

Question: ÀCmo se calcula el promedio de palabras en un documento?  

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT (AVG(?wordCount) as ?avg_words_per_document)
WHERE {
?story golem:numberOfWords ?wordCount .
}
"	[{'avg_words_per_document': Value(typed-literal:'8180.185545444649115')}]	0	1	1	Evaluation method error	Different var name	Query generation
2983	es	ÀCmo est distribuido Getting To Know You?	"prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT DISTINCT ?publisher
WHERE { 
?story golem:title ""Getting To Know You"" .
?story golem:publisher ?publisher .
}"	[{'publisher': Value(literal:'archiveofourown.org')}]	SPANISH	1575	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow specific guidelines to ensure accuracy and correctness:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ÀCuntos Kudos recibi Relationship Manifesto?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT DISTINCT ?kudos
WHERE { 
?story golem:title ""Relationship Manifesto"" .
?story golem:numberOfKudos ?kudos .
}
    </SPARQL>

    ###
    

    Question: ÀDe qu trata Not a blind date? __  

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT DISTINCT ?series ?collection ?content_warning ?romantic_category (GROUP_CONCAT(DISTINCT ?keyword; separator="", "") AS ?keywords) ?summary
WHERE {
?story golem:title ""Not a blind date"" .
?story golem:keyword ?keyword .
?story golem:romanticCategory ?romantic_category .
?story golem:series ?series .
?story golem:collections ?collection .
?story golem:contentWarning ?content_warning .
?story golem:summary ?summary .
}
    </SPARQL>

    ###
    

    Question: ÀDe cuntas Partes es la Gua de Amor y Feo?  

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT DISTINCT ?chapters
WHERE { 
?story golem:title ""Unbreakable Vows"" .
?story golem:numberOfChapters ?chapters .
}
    </SPARQL>

    ###
    

Question: ÀCmo est distribuido Getting To Know You?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT (COUNT(?character) AS ?numberOfCharacters) (COUNT(DISTINCT ?fandom) AS ?numberOfFandoms) (AVG(?rating) AS ?averageRating) 
WHERE { 
?story golem:title ""Getting To Know You"" .
?story golem:characters ?character .
?story golem:fandom ?fandom .
?story golem:rating ?rating .
}
"	[{'numberOfCharacters': Value(typed-literal:'641'), 'numberOfFandoms': Value(typed-literal:'88'), 'averageRating': Value(typed-literal:'0')}]	0	1	1	Misparaphrase		Paraphrasing
2275	es	"ÀQu elementos esenciales hay en ""I'll Be The One Who Saved Her""?  "	"prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT DISTINCT  (GROUP_CONCAT(DISTINCT ?keyword; separator="", "") AS ?keywords )
WHERE { 
?story golem:title ""I'll Be The One Who Saved Her"" .
?story golem:keyword ?keyword .
}"	[{'keywords': Value(literal:'Alternate Universe - obviously, Hermione Belongs In Ravenclaw, Light Angst, Not Bashing The Boys, Wars Leave Their Marks')}]	SPANISH	1262	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow specific guidelines to ensure accuracy and correctness:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ÀLa historia ""I will carry you, always"" est completa?  

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT DISTINCT ?status
WHERE { 
?story golem:title ""I will carry you, always"" .
?story golem:publicationStatus ?status .
}
    </SPARQL>

    ###
    

    Question: ÀEsts terminada la historia ""I will carry you, always""?  

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT DISTINCT ?status
WHERE { 
?story golem:title ""I will carry you, always"" .
?story golem:publicationStatus ?status .
}
    </SPARQL>

    ###
    

    Question: ÀCules son los protagonistas de Bring Me to Life?  

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT ?characters
WHERE { 
?story golem:title ""Bring Me to Life"" .
?story golem:characters ?characters .
}
    </SPARQL>

    ###
    

Question: ÀQu elementos esenciales hay en ""I'll Be The One Who Saved Her""?  

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT ?essentialElements
WHERE { 
?story golem:title ""I'll Be The One Who Saved Her"" .
?story golem:characters ?essentialElements .
}
"	[{'essentialElements': Value(literal:'Cedric Diggory')}, {'essentialElements': Value(literal:'Fleur Delacour')}, {'essentialElements': Value(literal:'Harry Potter')}, {'essentialElements': Value(literal:'Hermione Granger')}]	0	1	1	Wrong predicate	Wrong choice	Paraphrasing
303	en	What are the main concepts related to Doll Parts?  	"prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT DISTINCT  (GROUP_CONCAT(DISTINCT ?keyword; separator="", "") AS ?keywords )
WHERE { 
?story golem:title ""Doll Parts"" .
?story golem:keyword ?keyword .
}"	"[{'keywords': Value(literal:""(I mean.... not really but...), 1x10, AU of an AU of an AU, Alcohol Abuse/Alcoholism, Alpha Jeon Jungkook, Alpha Jung Hoseok, Alpha Kim Namjoon, Alpha Kim Taehyung, Alpha/Omega/Beta Dynamics, Alternate Canon, Alternate Ending, Alternate Universe, Alternate Universe - Fashion & Models, Anal Fingering, Anal Sex, Angst, Angst and Hurt/Comfort, Apocalypse, Blood, Blood and Gore, Bottom Gerard Way, Character Death, Cheating, Choking, Cousin Incest, Creepy, Cross-Posted on Wattpad, Crossover, Cuddling, Curses, Cyberware/plastic surgery addiction, Daddy Kink, Dildos, Dirty Talk, Dolls, Drug Use, Drugs, Dry Sex, Dubious Consent, Enemies to Friends to Lovers, Established Relationship, Everyone Needs A Hug, Explicit Sexual Content, Feminization, First Love, Fluff and Angst, Frerard, Future Fic, GONE GIRL AU, Gay, Heartbreak, Heavy Angst, Horror, Hurt No Comfort, Implied/Referenced Cheating, Implied/Referenced Drug Addiction, Implied/Referenced Underage, Impostor Syndrome, Infidelity, JJ Needs a Hug (Outer Banks), JJ and Izzy are whipped for each other, Jennifer's body au, Judgment Day, Knotting, Lingerie, Loss of Virginity, Male Pregnancy, Manipulative Relationship, Medical Procedures, Mild Gore, Mildly Dubious Consent, Mindfuck, Minor Character Death, Minor charactor deaths, Morally Ambiguous Character, Mpreg, Multifandomish, Murder, Murder Husbands, Omega Kim Seokjin, Omega Min Yoongi, Omega Park Jimin, Omegaverse, On and off pairings, One Shot, PWP, Parallel Universes, Plot Twists, Poly Relationships, Polygamy, Post-Order of the Phoenix, Pre-Canon, Prostitution, Protective JJ (Outer Banks), Psychological Horror, Purgatory, Rough Sex, Sad and Happy, Self Harm, Self Loathing, Sex Doll, Sex Education, Sex Toys, Sexism, Smut, Song: Doll Parts (Hole), Songfic, Spanking, Suicidal Thoughts, Tea, Tony Stark Has Issues, Top Frank Iero, Uncanny Valley, Unconditional Love, Underage Drinking, Unhappy Ending, Unmating, Unreliable Narrator, Unrequited Love, Vague descriptions of violence, Violence, War Child, Written Pre-Half Blood Prince, Young Tom Riddle, break ups, cross dressing, cross-dressing, cute moments, drunk driving (only once), graphic image and words, indirect mentions of suicide, it's obx what else do we expect, kind of, lots and lots of drama, nothing too gory i prommy, on going, shifting, the ending will probably hurt you, the pina colada song but make it demented, they do a lot of stupid shit, what if elizabeth schuyler but make it patrick bateman, when courtney said Someday You Will Ache Like I Ache"")}]"	ENGLISH	164	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow specific guidelines to ensure accuracy and correctness:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: What set or series contains Sparked by Design?  

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT DISTINCT ?series
WHERE { 
?story golem:title ""Sparked by Design"" .
?story golem:series ?series .
}
    </SPARQL>

    ###
    

    Question: What series is Sparked by Design a part of?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT DISTINCT ?series
WHERE { 
?story golem:title ""Sparked by Design"" .
?story golem:series ?series .
}
    </SPARQL>

    ###
    

    Question: What collections is ' THE GIRL WHO LIVED ' part of?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT DISTINCT ?collections
WHERE { 
?story golem:title ""' THE GIRL WHO LIVED '"" .
?story golem:collections ?collections .
}
    </SPARQL>

    ###
    

Question: What are the main concepts related to Doll Parts?  

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT DISTINCT ?concept
WHERE { 
?story golem:title ""Doll Parts"" .
?story gc:characters ?character .
?character gc:mainConcepts ?concept .
}
"	[]	0	0	1	Wrong predicate	Non-GOLEM	Paraphrasing
3403	es	ÀQu escribieron Professor Malfoy and the New Herbology Professor?	"prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT DISTINCT ?author
WHERE { 
?story golem:title ""Professor Malfoy and the New Herbology Professor"" .
?story golem:author ?author .
}"	[{'author': Value(literal:'A000282633')}]	SPANISH	1790	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow specific guidelines to ensure accuracy and correctness:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ÀEn qu lugar se public Harriet Potter y el Filsofo de las Acunadas?  

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT DISTINCT ?publisher
WHERE { 
?story golem:title ""Harriet Potter and the Philosopher's Stone"" .
?story golem:publisher ?publisher .
}
    </SPARQL>

    ###
    

    Question: ÀDonde se public Harriet Potter y el Filsofoo de las Acuas?  

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT DISTINCT ?publisher
WHERE { 
?story golem:title ""Harriet Potter and the Philosopher's Stone"" .
?story golem:publisher ?publisher .
}
    </SPARQL>

    ###
    

    Question: ÀEn qu editorial se public Of Mice and Men?  

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT DISTINCT ?publisher
WHERE { 
?story golem:title ""Of Mice and Men"" .
?story golem:publisher ?publisher .
}
    </SPARQL>

    ###
    

Question: ÀQu escribieron Professor Malfoy and the New Herbology Professor?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT DISTINCT ?author
WHERE { 
?story golem:title ""Professor Malfoy and the New Herbology Professor"" .
?story gc:characters ?author .
}
"	[]	0	0	1	Wrong predicate	Non-GOLEM	Query generation
2800	es	ÀQu pjaros aparecen en If You Could Be Anywhere?  	"prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT ?characters
WHERE { 
?story golem:title ""If You Could Be Anywhere"" .
?story golem:characters ?characters .
}"	[{'characters': Value(literal:'Adrian Pucey')}, {'characters': Value(literal:'Albus Dumbledore')}, {'characters': Value(literal:'Blaise Zabini')}, {'characters': Value(literal:'Cassius Warrington')}, {'characters': Value(literal:'Draco Malfoy')}, {'characters': Value(literal:'Fred Weasley')}, {'characters': Value(literal:'George Weasley')}, {'characters': Value(literal:'Harry Potter')}, {'characters': Value(literal:'Hermione Granger')}, {'characters': Value(literal:'Neville Longbottom')}, {'characters': Value(literal:'Pansy Parkinson')}, {'characters': Value(literal:'Peter Pettigrew')}, {'characters': Value(literal:'Remus Lupin')}, {'characters': Value(literal:'Ron Weasley')}, {'characters': Value(literal:'Severus Snape')}, {'characters': Value(literal:'Sirius Black')}, {'characters': Value(literal:'Theodore Nott')}, {'characters': Value(literal:'Tom Riddle | Voldemort')}, {'characters': Value(literal:'Daphne Greengrass')}, {'characters': Value(literal:'Tracey Davis (Harry Potter)')}, {'characters': Value(literal:'Craig Roberts')}, {'characters': Value(literal:'Magdalene Roberts')}, {'characters': Value(literal:'Poppy Pomfrey')}, {'characters': Value(literal:'Reader')}, {'characters': Value(literal:'Severus Snape')}, {'characters': Value(literal:'Filius Flitwick')}, {'characters': Value(literal:'Pomona Sprout')}]	SPANISH	1486	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow specific guidelines to ensure accuracy and correctness:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ÀCuntas cuentos se han identificado como Chickens?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT COUNT(DISTINCT ?story) as ?stories
WHERE {
?story golem:keyword ""Chickens"" .
}
    </SPARQL>

    ###
    

    Question: ÀCuntas historias estn marcadas como Chickens?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT COUNT(DISTINCT ?story) as ?stories
WHERE {
?story golem:keyword ""Chickens"" .
}
    </SPARQL>

    ###
    

    Question: ÀQu_ones se muestran en A Glimpse of Paradise?  

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT ?characters
WHERE { 
?story golem:title ""A Glimpse of Paradise"" .
?story golem:characters ?characters .
}
    </SPARQL>

    ###
    

Question: ÀQu pjaros aparecen en If You Could Be Anywhere?  

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT ?bird
WHERE { 
?story golem:title ""If You Could Be Anywhere"" .
?story golem:characters ?character .
?character golem:species ?bird .
}
"	[]	0	0	1	Misparaphrase		Paraphrasing
662	en	Are there any content warnings for Gut Feeling?  	"prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT DISTINCT (GROUP_CONCAT(DISTINCT ?warning; separator="", "") AS ?warnings)
WHERE { 
?story golem:title ""Gut feeling"" .
?story golem:contentWarning ?warning .
}"	[{'warnings': Value(literal:'Major Character Death, No Archive Warnings Apply')}]	ENGLISH	380	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow specific guidelines to ensure accuracy and correctness:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: Does anyone know about content warnings in Late Night Cravings?  

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT DISTINCT (GROUP_CONCAT(DISTINCT ?warning; separator="", "") AS ?warnings)
WHERE { 
?story golem:title ""Late Night Cravings"" .
?story golem:contentWarning ?warning .
}
    </SPARQL>

    ###
    

    Question: Is there information on content warnings for Late Night Cravings?  

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT DISTINCT (GROUP_CONCAT(DISTINCT ?warning; separator="", "") AS ?warnings)
WHERE { 
?story golem:title ""Late Night Cravings"" .
?story golem:contentWarning ?warning .
}
    </SPARQL>

    ###
    

    Question: Are there any content warnings on Late Night Cravings?  

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT DISTINCT (GROUP_CONCAT(DISTINCT ?warning; separator="", "") AS ?warnings)
WHERE { 
?story golem:title ""Late Night Cravings"" .
?story golem:contentWarning ?warning .
}
    </SPARQL>

    ###
    

Question: Are there any content warnings for Gut Feeling?  

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT DISTINCT (GROUP_CONCAT(DISTINCT ?warning; separator="", "") AS ?warnings)
WHERE { 
?story golem:title ""Gut Feeling"" .
?story golem:contentWarning ?warning .
}
"	[{'warnings': Value(literal:'Creator Chose Not To Use Archive Warnings, Graphic Depictions Of Violence, Major Character Death, No Archive Warnings Apply, Rape/Non-Con')}]	0	1	1	Failed NER		Paraphrasing
345	en	"What essential terms describe ""This Town Is Only Gonna Get Worse""?"	"prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT DISTINCT  (GROUP_CONCAT(DISTINCT ?keyword; separator="", "") AS ?keywords )
WHERE { 
?story golem:title ""This Town Is Only Gonna Get Worse"" .
?story golem:keyword ?keyword .
}"	[{'keywords': Value(literal:'Depression, Emotional/Psychological Abuse, Implied/Referenced Child Abuse, Lack of Communication')}]	ENGLISH	198	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow specific guidelines to ensure accuracy and correctness:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: Can you summarize ______?  

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT DISTINCT ?summary
WHERE { 
?story golem:fandom ""______"" .
?story golem:summary ?summary .
}
    </SPARQL>

    ###
    

    Question: Summarize ______ for me.

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT DISTINCT ?summary
WHERE { 
?story golem:fandom ""______"" .
?story golem:summary ?summary .
}
    </SPARQL>

    ###
    

    Question: Give me an overview of ______.  

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>

SELECT DISTINCT ?summary
WHERE { 
?story golem:fandom ""______"" .
?story golem:summary ?summary .
}
    </SPARQL>

    ###
    

Question: What essential terms describe ""This Town Is Only Gonna Get Worse""?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 

SELECT DISTINCT ?keyword
WHERE { 
?story golem:fandom ""This Town Is Only Gonna Get Worse"" .
?story golem:keyword ?keyword .
}
"	[]	0	0	1	Wrong predicate	Wrong choice	Paraphrasing