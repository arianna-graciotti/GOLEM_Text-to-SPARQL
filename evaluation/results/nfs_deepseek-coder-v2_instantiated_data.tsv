nanowr	Unnamed: 0	Language	Question	SPARQL	Response	Original_Index	Prompt	Generated_SPARQL	Generated_response	TP	FP	FN
1	1	en	Show me stories from the Fashion Model RPF fandom	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?title WHERE {  ?story golem:fandom ""Fashion Model RPF"" . ?story golem:title ?title . }"	"[{'title': Value(literal:'she burn, she burn, she burn')}, {'title': Value(literal:'Lou Reed had surely met her')}, {'title': Value(literal:'I try to focus on your eyes')}, {'title': Value(literal:'Alright (Still)')}, {'title': Value(literal:'en vogue (smile for the camera, sugar)')}, {'title': Value(literal:'Glamourous')}, {'title': Value(literal:'Fine Time')}, {'title': Value(literal:'Fine Time: Bollywood Redux')}, {'title': Value(literal:'She Wants To Be In The Business')}, {'title': Value(literal:'Fine Time: Hollywood Remix')}, {'title': Value(literal:'glitter in your tears (and salt in mine)')}, {'title': Value(literal:'13 bodies')}, {'title': Value(literal:'Lucky')}, {'title': Value(literal:'Worth The Wait')}, {'title': Value(literal:""Why Neymar's mum dumped her boyfriend"")}, {'title': Value(literal:'that summer feeling')}, {'title': Value(literal:'o how the sun shines down')}, {'title': Value(literal:'Right Through You')}, {'title': Value(literal:'Coachella')}, {'title': Value(literal:'[足球/卡卡bg] 超模与名宿')}, {'title': Value(literal:'Late Night Double Feature')}, {'title': Value(literal:'Eliott / Maxence')}, {'title': Value(literal:""if I could put you in a frame I'd draw you smiling"")}, {'title': Value(literal:""'Cause We Break Down A Little"")}, {'title': Value(literal:""New Year's Day"")}, {'title': Value(literal:'Phoenix [Kaylor]')}, {'title': Value(literal:'The Birthday Post')}, {'title': Value(literal:'Meeting Oracle [Kaylor]')}, {'title': Value(literal:'Blind For Love [Kaylor]')}, {'title': Value(literal:'Guitar Lesson')}, {'title': Value(literal:""The One Where Karlie Licks Taylor's Hand"")}, {'title': Value(literal:'Straight From Paris')}, {'title': Value(literal:'Failure to Communicate')}, {'title': Value(literal:'Birthday Date')}, {'title': Value(literal:'Girlfriend Matierial')}, {'title': Value(literal:'Height Difference')}, {'title': Value(literal:'A Golden Tattoo')}, {'title': Value(literal:'Better Than Any Movie')}, {'title': Value(literal:'The Joys of Side Blogs')}, {'title': Value(literal:'Getting Swept Away')}, {'title': Value(literal:'Six Letter Word [Kaylor]')}, {'title': Value(literal:'carry you')}, {'title': Value(literal:'Easter Getaway')}, {'title': Value(literal:'I want your midnights')}, {'title': Value(literal:'A Life Time Together')}, {'title': Value(literal:'picking up the pieces of the mess we made')}, {'title': Value(literal:'twenty seconds or twenty years')}, {'title': Value(literal:'Been an Awful Good Girl')}, {'title': Value(literal:'A Kiss To Say Hello')}, {'title': Value(literal:'Means of Refuge')}, {'title': Value(literal:'Melt In Your Hand')}, {'title': Value(literal:'Mine, Yours, Ours')}, {'title': Value(literal:'Underneath Your Clothes')}, {'title': Value(literal:'[Podfic] Melt In Your Hand')}, {'title': Value(literal:'[Podfic] best date a girl could ask for')}, {'title': Value(literal:'Mine is a restless heart')}, {'title': Value(literal:""Love's A Game (wanna play?)"")}, {'title': Value(literal:'Little Red Hearts')}, {'title': Value(literal:'Back To December')}, {'title': Value(literal:'this path is reckless (but i like it)')}, {'title': Value(literal:'Home is (wherever you are)')}, {'title': Value(literal:'Spotlight')}, {'title': Value(literal:'In the Wee Hours of the Morning')}, {'title': Value(literal:'Dancing in a Snow Globe (Round and Round)')}, {'title': Value(literal:'now and then')}, {'title': Value(literal:'in cages and boxes')}, {'title': Value(literal:""twisting in the water (you're just like a dream)"")}, {'title': Value(literal:'ring like silver, ring like gold')}, {'title': Value(literal:'Glisten')}, {'title': Value(literal:'trying to put it into words')}, {'title': Value(literal:'Yours for the night.')}, {'title': Value(literal:'Still Falling For You.')}, {'title': Value(literal:'Dress for the Ball')}, {'title': Value(literal:'kismet')}, {'title': Value(literal:'everything comes back to you')}, {'title': Value(literal:'rhabdophobia and wiccaphilia')}, {'title': Value(literal:'electric feel (take me to the place where the white boys dance)')}, {'title': Value(literal:'In Space, No One Can Hear You Scream (or Moan)')}, {'title': Value(literal:'draw a circle')}, {'title': Value(literal:'just ringing in my ears')}, {'title': Value(literal:'Love Education')}, {'title': Value(literal:'Queen Of Roses: Before')}, {'title': Value(literal:'Queen Of Roses: During')}, {'title': Value(literal:""Maybe you'll want to fight"")}, {'title': Value(literal:'Close my eyes and fall into you...')}, {'title': Value(literal:'girl is a god-damn problem')}, {'title': Value(literal:'[Podfic] girl is a god-damn problem')}, {'title': Value(literal:'Where You Are')}, {'title': Value(literal:'sweet and steady hearts')}, {'title': Value(literal:'[Podfic] Where You Are')}, {'title': Value(literal:""could be a nail in my coffin and I don't need another one"")}, {'title': Value(literal:'Bones Become Rainbows')}, {'title': Value(literal:'Golden Rocks to Throw')}, {'title': Value(literal:'Hands in the Sky')}, {'title': Value(literal:'untitled')}, {'title': Value(literal:'the sound of silence')}, {'title': Value(literal:'stumbling through our sad parade')}, {'title': Value(literal:'A Private Moment')}, {'title': Value(literal:'Bird Of Paradise, You’re Why We’ll Do It Again')}, {'title': Value(literal:'et in arcadia ego')}, {'title': Value(literal:'drabble meme')}, {'title': Value(literal:'not falling together')}, {'title': Value(literal:'just grew there wild')}, {'title': Value(literal:""Who Can Give You What You Need? (I'm Trying to Turn You Out and Turn You On)"")}, {'title': Value(literal:'On the Stairs')}, {'title': Value(literal:'Great Romances Of The 21st Century')}, {'title': Value(literal:'tautology: repetition of the same sentence in different words')}, {'title': Value(literal:'if you knew what she was after')}, {'title': Value(literal:'I’m Naked And I’m Far From Home (Save Me)')}, {'title': Value(literal:'Renée, The Red Nosed Reindeer!')}, {'title': Value(literal:'In the Lane, Snow is Glistening')}, {'title': Value(literal:'Christmas Is The Time To Say “I Love You”')}, {'title': Value(literal:'Getting It, On Tour')}, {'title': Value(literal:'the smallest joys')}, {'title': Value(literal:'Greek Connection')}, {'title': Value(literal:'Please Stay (番外1)')}, {'title': Value(literal:'Bonjourno Naples')}, {'title': Value(literal:'Who is Dagsen Love?')}, {'title': Value(literal:'Hoge Hakken')}, {'title': Value(literal:'Only When I Look Into Your Eyes')}, {'title': Value(literal:'Wait and See')}, {'title': Value(literal:'D is for Dangerous')}, {'title': Value(literal:'there is a story about the greek gods')}, {'title': Value(literal:'Take My Hand Through The Flames')}, {'title': Value(literal:'Wall of Arms')}, {'title': Value(literal:'Danse Russe')}, {'title': Value(literal:'season for battle wounds, battle scars')}, {'title': Value(literal:'(fanart) Joseph and Claudia')}, {'title': Value(literal:'La vie en vogue')}, {'title': Value(literal:'from the rooftops')}, {'title': Value(literal:'Hate To Admit It, But')}]"	1	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does What the Future Holds have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""What the Future Holds"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Life problems are best served with a cup of tea completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Life problems are best served with a cup of tea"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: Show me stories from the Fashion Model RPF fandom

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?story WHERE { 
  ?story golem:fandom ""Fashion Model RPF"" . 
}
"	[{'story': Value(uri:'https://golemlab.eu/graph/16789090')}, {'story': Value(uri:'https://golemlab.eu/graph/466867')}, {'story': Value(uri:'https://golemlab.eu/graph/468480')}, {'story': Value(uri:'https://golemlab.eu/graph/473714')}, {'story': Value(uri:'https://golemlab.eu/graph/188244')}, {'story': Value(uri:'https://golemlab.eu/graph/29088024')}, {'story': Value(uri:'https://golemlab.eu/graph/29088678')}, {'story': Value(uri:'https://golemlab.eu/graph/29088804')}, {'story': Value(uri:'https://golemlab.eu/graph/29088984')}, {'story': Value(uri:'https://golemlab.eu/graph/29089242')}, {'story': Value(uri:'https://golemlab.eu/graph/451627')}, {'story': Value(uri:'https://golemlab.eu/graph/540090')}, {'story': Value(uri:'https://golemlab.eu/graph/3743122')}, {'story': Value(uri:'https://golemlab.eu/graph/21584179')}, {'story': Value(uri:'https://golemlab.eu/graph/23892079')}, {'story': Value(uri:'https://golemlab.eu/graph/24507637')}, {'story': Value(uri:'https://golemlab.eu/graph/26744599')}, {'story': Value(uri:'https://golemlab.eu/graph/34649665')}, {'story': Value(uri:'https://golemlab.eu/graph/6365710')}, {'story': Value(uri:'https://golemlab.eu/graph/33042715')}, {'story': Value(uri:'https://golemlab.eu/graph/15220700')}, {'story': Value(uri:'https://golemlab.eu/graph/19449049')}, {'story': Value(uri:'https://golemlab.eu/graph/10962894')}, {'story': Value(uri:'https://golemlab.eu/graph/12916266')}, {'story': Value(uri:'https://golemlab.eu/graph/13647555')}, {'story': Value(uri:'https://golemlab.eu/graph/13647594')}, {'story': Value(uri:'https://golemlab.eu/graph/13647828')}, {'story': Value(uri:'https://golemlab.eu/graph/13647876')}, {'story': Value(uri:'https://golemlab.eu/graph/13647936')}, {'story': Value(uri:'https://golemlab.eu/graph/13648308')}, {'story': Value(uri:'https://golemlab.eu/graph/13648338')}, {'story': Value(uri:'https://golemlab.eu/graph/13648383')}, {'story': Value(uri:'https://golemlab.eu/graph/13648413')}, {'story': Value(uri:'https://golemlab.eu/graph/13648461')}, {'story': Value(uri:'https://golemlab.eu/graph/13648497')}, {'story': Value(uri:'https://golemlab.eu/graph/13648539')}, {'story': Value(uri:'https://golemlab.eu/graph/13648572')}, {'story': Value(uri:'https://golemlab.eu/graph/13648590')}, {'story': Value(uri:'https://golemlab.eu/graph/13648656')}, {'story': Value(uri:'https://golemlab.eu/graph/13648704')}, {'story': Value(uri:'https://golemlab.eu/graph/13648788')}, {'story': Value(uri:'https://golemlab.eu/graph/13754562')}, {'story': Value(uri:'https://golemlab.eu/graph/14171853')}, {'story': Value(uri:'https://golemlab.eu/graph/15005900')}, {'story': Value(uri:'https://golemlab.eu/graph/1998744')}, {'story': Value(uri:'https://golemlab.eu/graph/22040086')}, {'story': Value(uri:'https://golemlab.eu/graph/22872799')}, {'story': Value(uri:'https://golemlab.eu/graph/2734706')}, {'story': Value(uri:'https://golemlab.eu/graph/2772326')}, {'story': Value(uri:'https://golemlab.eu/graph/2791598')}, {'story': Value(uri:'https://golemlab.eu/graph/2803964')}, {'story': Value(uri:'https://golemlab.eu/graph/2836106')}, {'story': Value(uri:'https://golemlab.eu/graph/2841239')}, {'story': Value(uri:'https://golemlab.eu/graph/3610338')}, {'story': Value(uri:'https://golemlab.eu/graph/3610350')}, {'story': Value(uri:'https://golemlab.eu/graph/386055')}, {'story': Value(uri:'https://golemlab.eu/graph/4225200')}, {'story': Value(uri:'https://golemlab.eu/graph/5069671')}, {'story': Value(uri:'https://golemlab.eu/graph/5137085')}, {'story': Value(uri:'https://golemlab.eu/graph/5423549')}, {'story': Value(uri:'https://golemlab.eu/graph/6139472')}, {'story': Value(uri:'https://golemlab.eu/graph/6168115')}, {'story': Value(uri:'https://golemlab.eu/graph/6218215')}, {'story': Value(uri:'https://golemlab.eu/graph/6230149')}, {'story': Value(uri:'https://golemlab.eu/graph/6284005')}, {'story': Value(uri:'https://golemlab.eu/graph/6313153')}, {'story': Value(uri:'https://golemlab.eu/graph/6534103')}, {'story': Value(uri:'https://golemlab.eu/graph/6569800')}, {'story': Value(uri:'https://golemlab.eu/graph/7218643')}, {'story': Value(uri:'https://golemlab.eu/graph/7732846')}, {'story': Value(uri:'https://golemlab.eu/graph/8007559')}, {'story': Value(uri:'https://golemlab.eu/graph/8034076')}, {'story': Value(uri:'https://golemlab.eu/graph/8226478')}, {'story': Value(uri:'https://golemlab.eu/graph/8839945')}, {'story': Value(uri:'https://golemlab.eu/graph/9547625')}, {'story': Value(uri:'https://golemlab.eu/graph/928704')}, {'story': Value(uri:'https://golemlab.eu/graph/977754')}, {'story': Value(uri:'https://golemlab.eu/graph/28964955')}, {'story': Value(uri:'https://golemlab.eu/graph/6539428')}, {'story': Value(uri:'https://golemlab.eu/graph/8261330')}, {'story': Value(uri:'https://golemlab.eu/graph/20469224')}, {'story': Value(uri:'https://golemlab.eu/graph/20626469')}, {'story': Value(uri:'https://golemlab.eu/graph/21432190')}, {'story': Value(uri:'https://golemlab.eu/graph/564217')}, {'story': Value(uri:'https://golemlab.eu/graph/7756879')}, {'story': Value(uri:'https://golemlab.eu/graph/1796383')}, {'story': Value(uri:'https://golemlab.eu/graph/3699335')}, {'story': Value(uri:'https://golemlab.eu/graph/1936479')}, {'story': Value(uri:'https://golemlab.eu/graph/2262735')}, {'story': Value(uri:'https://golemlab.eu/graph/3374270')}, {'story': Value(uri:'https://golemlab.eu/graph/9267479')}, {'story': Value(uri:'https://golemlab.eu/graph/168624')}, {'story': Value(uri:'https://golemlab.eu/graph/170448')}, {'story': Value(uri:'https://golemlab.eu/graph/207919')}, {'story': Value(uri:'https://golemlab.eu/graph/6650797')}, {'story': Value(uri:'https://golemlab.eu/graph/6695731')}, {'story': Value(uri:'https://golemlab.eu/graph/473075')}, {'story': Value(uri:'https://golemlab.eu/graph/457503')}, {'story': Value(uri:'https://golemlab.eu/graph/22786648')}, {'story': Value(uri:'https://golemlab.eu/graph/23276953')}, {'story': Value(uri:'https://golemlab.eu/graph/469609')}, {'story': Value(uri:'https://golemlab.eu/graph/469610')}, {'story': Value(uri:'https://golemlab.eu/graph/469614')}, {'story': Value(uri:'https://golemlab.eu/graph/1307491')}, {'story': Value(uri:'https://golemlab.eu/graph/13703091')}, {'story': Value(uri:'https://golemlab.eu/graph/5588473')}, {'story': Value(uri:'https://golemlab.eu/graph/940036')}, {'story': Value(uri:'https://golemlab.eu/graph/25532239')}, {'story': Value(uri:'https://golemlab.eu/graph/26447425')}, {'story': Value(uri:'https://golemlab.eu/graph/27577609')}, {'story': Value(uri:'https://golemlab.eu/graph/27958124')}, {'story': Value(uri:'https://golemlab.eu/graph/28014996')}, {'story': Value(uri:'https://golemlab.eu/graph/29819574')}, {'story': Value(uri:'https://golemlab.eu/graph/30319785')}, {'story': Value(uri:'https://golemlab.eu/graph/33567913')}, {'story': Value(uri:'https://golemlab.eu/graph/22746637')}, {'story': Value(uri:'https://golemlab.eu/graph/10341261')}, {'story': Value(uri:'https://golemlab.eu/graph/32018719')}, {'story': Value(uri:'https://golemlab.eu/graph/17610356')}, {'story': Value(uri:'https://golemlab.eu/graph/16090145')}, {'story': Value(uri:'https://golemlab.eu/graph/18103160')}, {'story': Value(uri:'https://golemlab.eu/graph/807951')}, {'story': Value(uri:'https://golemlab.eu/graph/972449')}, {'story': Value(uri:'https://golemlab.eu/graph/8535781')}, {'story': Value(uri:'https://golemlab.eu/graph/242612')}, {'story': Value(uri:'https://golemlab.eu/graph/289109')}, {'story': Value(uri:'https://golemlab.eu/graph/4467104')}, {'story': Value(uri:'https://golemlab.eu/graph/562353')}, {'story': Value(uri:'https://golemlab.eu/graph/30089172')}, {'story': Value(uri:'https://golemlab.eu/graph/542065')}, {'story': Value(uri:'https://golemlab.eu/graph/19255363')}]	0	1	1
2	2	en	Show me stories from the 复仇者联盟4：终局之战 fandom	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?title WHERE {  ?story golem:fandom ""复仇者联盟4：终局之战"" . ?story golem:title ?title . }"	[{'title': Value(literal:'【铁盾pwp】坐下去，Steve')}]	2	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does What the Future Holds have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""What the Future Holds"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Life problems are best served with a cup of tea completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Life problems are best served with a cup of tea"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: Show me stories from the 复仇者联盟4：终局之战 fandom

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?story WHERE { 
?story golem:fandom ""复仇者联盟4：终局之战"" . 
}
"	[{'story': Value(uri:'https://golemlab.eu/graph/19473886')}]	0	1	1
3	3	en	Show me stories from the DaiSuga - Fandom fandom	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?title WHERE {  ?story golem:fandom ""DaiSuga - Fandom"" . ?story golem:title ?title . }"	[{'title': Value(literal:'Flipped Coin // Bokuaka AU')}, {'title': Value(literal:'【大菅】自讨苦吃')}]	3	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does What the Future Holds have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""What the Future Holds"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Life problems are best served with a cup of tea completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Life problems are best served with a cup of tea"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: Show me stories from the DaiSuga - Fandom fandom

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?story WHERE { 
?story golem:fandom ""DaiSuga - Fandom"" . 
} 
"	[{'story': Value(uri:'https://golemlab.eu/graph/40491219')}, {'story': Value(uri:'https://golemlab.eu/graph/38722365')}]	0	1	1
4	4	en	Show me stories from the 卓杨 fandom	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?title WHERE {  ?story golem:fandom ""卓杨"" . ?story golem:title ?title . }"	[{'title': Value(literal:'【仝/超/杨/黄】仝杨-失控')}]	4	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does What the Future Holds have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""What the Future Holds"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Life problems are best served with a cup of tea completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Life problems are best served with a cup of tea"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: Show me stories from the 卓杨 fandom

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?story WHERE { 
  ?story golem:fandom ""卓杨"" . 
}
"	[{'story': Value(uri:'https://golemlab.eu/graph/23128129')}]	0	1	1
5	5	en	Show me stories from the sildoctor fandom	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?title WHERE {  ?story golem:fandom ""sildoctor"" . ?story golem:title ?title . }"	[{'title': Value(literal:'千年前来信')}]	5	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does What the Future Holds have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""What the Future Holds"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Life problems are best served with a cup of tea completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Life problems are best served with a cup of tea"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: Show me stories from the sildoctor fandom

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?story WHERE { 
?story golem:fandom ""sildoctor"" . 
}
"	[{'story': Value(uri:'https://golemlab.eu/graph/39002430')}]	0	1	1
6	6	en	Show me stories from the 辽 fandom	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?title WHERE {  ?story golem:fandom ""辽"" . ?story golem:title ?title . }"	[{'title': Value(literal:'梦蝶')}]	6	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does What the Future Holds have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""What the Future Holds"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Life problems are best served with a cup of tea completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Life problems are best served with a cup of tea"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: Show me stories from the 辽 fandom

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?story WHERE { 
?story golem:fandom ""辽"" . 
}
"	[{'story': Value(uri:'https://golemlab.eu/graph/35065861')}]	0	1	1
7	7	en	Show me stories from the Glove Puppetry RPF fandom	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?title WHERE {  ?story golem:fandom ""Glove Puppetry RPF"" . ?story golem:title ?title . }"	[{'title': Value(literal:'淡水有巴黎')}]	7	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does What the Future Holds have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""What the Future Holds"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Life problems are best served with a cup of tea completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Life problems are best served with a cup of tea"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: Show me stories from the Glove Puppetry RPF fandom

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?story WHERE { 
?story golem:fandom ""Glove Puppetry RPF"" . 
}
"	[{'story': Value(uri:'https://golemlab.eu/graph/29914692')}]	0	1	1
8	8	en	Show me stories from the 大宋小吏 — 拉棉花糖的兔子 fandom	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?title WHERE {  ?story golem:fandom ""大宋小吏 — 拉棉花糖的兔子"" . ?story golem:title ?title . }"	[{'title': Value(literal:'严格按照时间表的运动')}]	8	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does What the Future Holds have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""What the Future Holds"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Life problems are best served with a cup of tea completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Life problems are best served with a cup of tea"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: Show me stories from the 大宋小吏 — 拉棉花糖的兔子 fandom

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?story WHERE { 
?story golem:fandom ""大宋小吏 — 拉棉花糖的兔子"" . 
}
"	[{'story': Value(uri:'https://golemlab.eu/graph/26659048')}]	0	1	1
9	9	en	Show me stories from the Kim Namjoon - Fandom fandom	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?title WHERE {  ?story golem:fandom ""Kim Namjoon - Fandom"" . ?story golem:title ?title . }"	"[{'title': Value(literal:'Coming Soon...')}, {'title': Value(literal:'Falling For My Wife  (Kim Namjoon FF)')}, {'title': Value(literal:'Home ll Mafia Brothers ll BTS FF')}, {'title': Value(literal:'Evanescence')}, {'title': Value(literal:'The Dragon Fell in Love with the Tiger')}, {'title': Value(literal:'Nightmares')}, {'title': Value(literal:'I Love You...Namjoon')}, {'title': Value(literal:'So Far Away')}, {'title': Value(literal:'Strawberries And Vodka')}, {'title': Value(literal:'Steps')}, {'title': Value(literal:'Circle of Love (NamjoonxReader)')}, {'title': Value(literal:'""Insanity""')}, {'title': Value(literal:'I Love You More Than My Handsome Face')}, {'title': Value(literal:'""Idol In A Studio""')}, {'title': Value(literal:'Wedding Dates')}, {'title': Value(literal:""The Man He Can't Love"")}, {'title': Value(literal:'Smoke & Mirrors')}, {'title': Value(literal:'Short Stories - BTS Members')}, {'title': Value(literal:'逆光')}, {'title': Value(literal:""I'm With You // Kim Namjoon"")}, {'title': Value(literal:'Just One Moment')}, {'title': Value(literal:'Keep Me Company')}, {'title': Value(literal:'奶味多肉')}, {'title': Value(literal:""A Traitor's Love"")}, {'title': Value(literal:'Talking to My Sunset')}, {'title': Value(literal:'I think about you when I cum.')}, {'title': Value(literal:'Wings of a Butterfly')}, {'title': Value(literal:'ob·ses·sion')}, {'title': Value(literal:'Of Ginger Bread and Christmas Lovesongs')}, {'title': Value(literal:'Respect')}, {'title': Value(literal:'BTS x TS Mixtape')}]"	9	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does What the Future Holds have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""What the Future Holds"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Life problems are best served with a cup of tea completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Life problems are best served with a cup of tea"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: Show me stories from the Kim Namjoon - Fandom fandom

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?story WHERE { 
?story golem:fandom ""Kim Namjoon - Fandom"" . 
}
"	[{'story': Value(uri:'https://golemlab.eu/graph/36357433')}, {'story': Value(uri:'https://golemlab.eu/graph/36424186')}, {'story': Value(uri:'https://golemlab.eu/graph/36566344')}, {'story': Value(uri:'https://golemlab.eu/graph/17381210')}, {'story': Value(uri:'https://golemlab.eu/graph/31038035')}, {'story': Value(uri:'https://golemlab.eu/graph/23869822')}, {'story': Value(uri:'https://golemlab.eu/graph/38061646')}, {'story': Value(uri:'https://golemlab.eu/graph/12921087')}, {'story': Value(uri:'https://golemlab.eu/graph/16853164')}, {'story': Value(uri:'https://golemlab.eu/graph/15804930')}, {'story': Value(uri:'https://golemlab.eu/graph/33186583')}, {'story': Value(uri:'https://golemlab.eu/graph/11892939')}, {'story': Value(uri:'https://golemlab.eu/graph/30572600')}, {'story': Value(uri:'https://golemlab.eu/graph/11954994')}, {'story': Value(uri:'https://golemlab.eu/graph/35113873')}, {'story': Value(uri:'https://golemlab.eu/graph/35142022')}, {'story': Value(uri:'https://golemlab.eu/graph/9547019')}, {'story': Value(uri:'https://golemlab.eu/graph/30874277')}, {'story': Value(uri:'https://golemlab.eu/graph/20741867')}, {'story': Value(uri:'https://golemlab.eu/graph/11651013')}, {'story': Value(uri:'https://golemlab.eu/graph/38476195')}, {'story': Value(uri:'https://golemlab.eu/graph/34966297')}, {'story': Value(uri:'https://golemlab.eu/graph/20065903')}, {'story': Value(uri:'https://golemlab.eu/graph/33027580')}, {'story': Value(uri:'https://golemlab.eu/graph/34693627')}, {'story': Value(uri:'https://golemlab.eu/graph/6767659')}, {'story': Value(uri:'https://golemlab.eu/graph/14059395')}, {'story': Value(uri:'https://golemlab.eu/graph/14667471')}, {'story': Value(uri:'https://golemlab.eu/graph/5648269')}, {'story': Value(uri:'https://golemlab.eu/graph/10551866')}, {'story': Value(uri:'https://golemlab.eu/graph/22861354')}]	0	1	1
10	10	en	Show me stories from the 放逐 fandom	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?title WHERE {  ?story golem:fandom ""放逐"" . ?story golem:title ?title . }"	[{'title': Value(literal:'分割')}, {'title': Value(literal:'灯下')}, {'title': Value(literal:'筹码')}, {'title': Value(literal:'【阿火×叶志帆】搭错车')}, {'title': Value(literal:'【吴黄/火泰】今晚要去观音山')}, {'title': Value(literal:'【放·逐】【吴黄】【顽石】')}, {'title': Value(literal:'【吴黄】【放·逐】【无人之境】')}, {'title': Value(literal:'late-night grooming')}, {'title': Value(literal:'补刀')}]	10	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does What the Future Holds have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""What the Future Holds"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Life problems are best served with a cup of tea completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Life problems are best served with a cup of tea"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: Show me stories from the 放逐 fandom

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?story WHERE { 
?story golem:fandom ""放逐"" . 
}
"	[{'story': Value(uri:'https://golemlab.eu/graph/23134792')}, {'story': Value(uri:'https://golemlab.eu/graph/39659040')}, {'story': Value(uri:'https://golemlab.eu/graph/22882627')}, {'story': Value(uri:'https://golemlab.eu/graph/22149610')}, {'story': Value(uri:'https://golemlab.eu/graph/27486961')}, {'story': Value(uri:'https://golemlab.eu/graph/25947040')}, {'story': Value(uri:'https://golemlab.eu/graph/25947082')}, {'story': Value(uri:'https://golemlab.eu/graph/40392537')}, {'story': Value(uri:'https://golemlab.eu/graph/23597590')}]	0	1	1
12	12	en	Show me all the stories from the CHANHUN 灿勋 universe	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?title  WHERE {  ?story golem:fandom ""CHANHUN 灿勋"" . ?story golem:title ?title . }"	[{'title': Value(literal:'黄昏温柔')}]	12	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does What the Future Holds have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""What the Future Holds"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Life problems are best served with a cup of tea completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Life problems are best served with a cup of tea"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: Show me all the stories from the CHANHUN 灿勋 universe

Query:
"	"
prefix golem: <https://golemlab.eu/graph/>
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>
SELECT DISTINCT ?story WHERE {
  ?story golem:fandom ""CHANHUN 灿勋"" .
}
"	[{'story': Value(uri:'https://golemlab.eu/graph/22651237')}]	0	1	1
13	13	en	Show me all the stories from the All27 - Fandom universe	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?title  WHERE {  ?story golem:fandom ""All27 - Fandom"" . ?story golem:title ?title . }"	[{'title': Value(literal:'还债1.0')}]	13	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does What the Future Holds have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""What the Future Holds"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Life problems are best served with a cup of tea completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Life problems are best served with a cup of tea"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: Show me all the stories from the All27 - Fandom universe

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?story WHERE { 
?story golem:fandom ""All27 - Fandom"" . 
}
"	[{'story': Value(uri:'https://golemlab.eu/graph/18008291')}]	0	1	1
14	14	en	Show me all the stories from the KenshiYonezu - Fandom universe	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?title  WHERE {  ?story golem:fandom ""KenshiYonezu - Fandom"" . ?story golem:title ?title . }"	[{'title': Value(literal:'【代发｜米津玄师水仙】123进入爱里')}]	14	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does What the Future Holds have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""What the Future Holds"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Life problems are best served with a cup of tea completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Life problems are best served with a cup of tea"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: Show me all the stories from the KenshiYonezu - Fandom universe

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?story WHERE { 
?story golem:fandom ""KenshiYonezu - Fandom"" . }
"	[{'story': Value(uri:'https://golemlab.eu/graph/37111738')}]	0	1	1
15	15	en	Show me all the stories from the William tingting universe	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?title  WHERE {  ?story golem:fandom ""William tingting"" . ?story golem:title ?title . }"	[{'title': Value(literal:'酒酿糯米丸 13')}, {'title': Value(literal:'酒酿糯米丸 12')}]	15	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does What the Future Holds have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""What the Future Holds"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Life problems are best served with a cup of tea completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Life problems are best served with a cup of tea"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: Show me all the stories from the William tingting universe

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?story WHERE { 
?story gc:fandom ""William tingting universe"" . }
"	[]	0	0	1
16	16	en	Show me all the stories from the Yuè Cháo (2013) universe	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?title  WHERE {  ?story golem:fandom ""Yuè Cháo (2013)"" . ?story golem:title ?title . }"	[{'title': Value(literal:'无题')}]	16	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does What the Future Holds have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""What the Future Holds"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Life problems are best served with a cup of tea completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Life problems are best served with a cup of tea"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: Show me all the stories from the Yuè Cháo (2013) universe

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?story WHERE { 
?story golem:fandom ""Yuè Cháo (2013)"" . }
"	[{'story': Value(uri:'https://golemlab.eu/graph/17949719')}]	0	1	1
17	17	en	Show me all the stories from the 锦绣缘华丽冒险 universe	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?title  WHERE {  ?story golem:fandom ""锦绣缘华丽冒险"" . ?story golem:title ?title . }"	[{'title': Value(literal:'夺还')}, {'title': Value(literal:'Цзо Чжэнь')}]	17	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does What the Future Holds have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""What the Future Holds"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Life problems are best served with a cup of tea completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Life problems are best served with a cup of tea"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: Show me all the stories from the 锦绣缘华丽冒险 universe

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?story WHERE { 
?story golem:fandom ""锦绣缘华丽冒险"" . 
}
"	[{'story': Value(uri:'https://golemlab.eu/graph/20697890')}, {'story': Value(uri:'https://golemlab.eu/graph/25381573')}]	0	1	1
18	18	en	Show me all the stories from the The Daughter of Time universe	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?title  WHERE {  ?story golem:fandom ""The Daughter of Time"" . ?story golem:title ?title . }"	[{'title': Value(literal:'同人短篇集合')}]	18	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does What the Future Holds have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""What the Future Holds"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Life problems are best served with a cup of tea completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Life problems are best served with a cup of tea"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: Show me all the stories from the The Daughter of Time universe

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?story WHERE { 
?story golem:series ""The Daughter of Time universe"" . 
}
"	[]	0	0	1
19	19	en	Show me all the stories from the 王国 universe	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?title  WHERE {  ?story golem:fandom ""王国"" . ?story golem:title ?title . }"	[{'title': Value(literal:'李朝旧闻钞')}, {'title': Value(literal:'汤药')}]	19	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does What the Future Holds have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""What the Future Holds"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Life problems are best served with a cup of tea completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Life problems are best served with a cup of tea"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: Show me all the stories from the 王国 universe

Query:
"	"
prefix golem: <https://golemlab.eu/graph/>
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>
SELECT DISTINCT ?story WHERE {
  ?story gc:fandom ""王国"" .
}
"	[]	0	0	1
20	20	en	Show me all the stories from the FAINALFANTASYXIV universe	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?title  WHERE {  ?story golem:fandom ""FAINALFANTASYXIV"" . ?story golem:title ?title . }"	[{'title': Value(literal:'藏书票')}]	20	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does What the Future Holds have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""What the Future Holds"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Life problems are best served with a cup of tea completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Life problems are best served with a cup of tea"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: Show me all the stories from the FAINALFANTASYXIV universe

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?story WHERE { 
  ?story golem:fandom ""FAINALFANTASYXIV"" . 
}
"	[{'story': Value(uri:'https://golemlab.eu/graph/31757896')}]	0	1	1
21	21	en	Show me all the stories from the 夜叉 Yaksha universe	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?title  WHERE {  ?story golem:fandom ""夜叉 Yaksha"" . ?story golem:title ?title . }"	[{'title': Value(literal:'Luck')}]	21	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does What the Future Holds have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""What the Future Holds"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Life problems are best served with a cup of tea completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Life problems are best served with a cup of tea"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: Show me all the stories from the 夜叉 Yaksha universe

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?story WHERE { 
?story golem:fandom ""夜叉 Yaksha"" . 
}
"	[{'story': Value(uri:'https://golemlab.eu/graph/37284898')}]	0	1	1
23	23	en	Is the story The night the world collapsed completed?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""The night the world collapsed"" . ?story golem:publicationStatus ?status . }"	[{'status': Value(literal:'Completed')}]	23	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does What the Future Holds have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""What the Future Holds"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Life problems are best served with a cup of tea completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Life problems are best served with a cup of tea"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: Is the story The night the world collapsed completed?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?status WHERE { 
  ?story golem:title ""The night the world collapsed"" . 
  ?story golem:publicationStatus ?status . 
}
"	[{'status': Value(literal:'Completed')}]	1	0	0
24	24	en	Is the story The Raven's Cry completed?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""The Raven's Cry"" . ?story golem:publicationStatus ?status . }"	[{'status': Value(literal:'Completed')}]	24	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does What the Future Holds have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""What the Future Holds"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Life problems are best served with a cup of tea completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Life problems are best served with a cup of tea"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: Is the story The Raven's Cry completed?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?status WHERE { 
?story golem:title ""The Raven's Cry"" . 
?story golem:publicationStatus ?status . 
}
"	[{'status': Value(literal:'Completed')}]	1	0	0
25	25	en	Is the story Luna Lovegood and the Chamber of Innocence completed?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }"	[{'status': Value(literal:'In-Progress')}]	25	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does What the Future Holds have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""What the Future Holds"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Life problems are best served with a cup of tea completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Life problems are best served with a cup of tea"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?status WHERE { 
?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . 
?story golem:publicationStatus ?status . 
}
"	[{'status': Value(literal:'In-Progress')}]	1	0	0
26	26	en	Is the story Life problems are best served with a cup of tea completed?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Life problems are best served with a cup of tea"" . ?story golem:publicationStatus ?status . }"	[{'status': Value(literal:'In-Progress')}]	26	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does What the Future Holds have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""What the Future Holds"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: Is the story Life problems are best served with a cup of tea completed?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?status WHERE { 
?story golem:title ""Life problems are best served with a cup of tea"" . 
?story golem:publicationStatus ?status . 
}
"	[{'status': Value(literal:'In-Progress')}]	1	0	0
27	27	en	Is the story The good, the bad, and the things that should have happened but didn't completed?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""The good, the bad, and the things that should have happened but didn't"" . ?story golem:publicationStatus ?status . }"	[{'status': Value(literal:'Completed')}]	27	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does What the Future Holds have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""What the Future Holds"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: Is the story The good, the bad, and the things that should have happened but didn't completed?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?status WHERE { 
?story golem:title ""The good, the bad, and the things that should have happened but didn't"" . 
?story golem:publicationStatus ?status . 
}
"	[{'status': Value(literal:'Completed')}]	1	0	0
28	28	en	Is the story Turning it Around completed?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Turning it Around"" . ?story golem:publicationStatus ?status . }"	[{'status': Value(literal:'Completed')}]	28	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does What the Future Holds have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""What the Future Holds"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: Is the story Turning it Around completed?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?status WHERE { 
?story golem:title ""Turning it Around"" . 
?story golem:publicationStatus ?status . 
}
"	[{'status': Value(literal:'Completed')}]	1	0	0
29	29	en	Is the story Hermione meets the Burrow completed?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Hermione meets the Burrow"" . ?story golem:publicationStatus ?status . }"	[{'status': Value(literal:'Completed')}]	29	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does What the Future Holds have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""What the Future Holds"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: Is the story Hermione meets the Burrow completed?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?status WHERE { 
?story golem:title ""Hermione meets the Burrow"" . 
?story golem:publicationStatus ?status . 
}
"	[{'status': Value(literal:'Completed')}]	1	0	0
30	30	en	Is the story Cure completed?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Cure"" . ?story golem:publicationStatus ?status . }"	[{'status': Value(literal:'Completed')}, {'status': Value(literal:'In-Progress')}]	30	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does What the Future Holds have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""What the Future Holds"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: Is the story Cure completed?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?status WHERE { 
?story golem:title ""Cure"" . 
?story golem:publicationStatus ?status . 
}
"	[{'status': Value(literal:'Completed')}, {'status': Value(literal:'In-Progress')}]	1	0	0
31	31	en	Is the story The Help completed?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""The Help"" . ?story golem:publicationStatus ?status . }"	[{'status': Value(literal:'Completed')}, {'status': Value(literal:'In-Progress')}]	31	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does What the Future Holds have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""What the Future Holds"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: Is the story The Help completed?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?status WHERE { 
?story golem:title ""The Help"" . 
?story golem:publicationStatus ?status . 
}
"	[{'status': Value(literal:'Completed')}, {'status': Value(literal:'In-Progress')}]	1	0	0
32	32	en	Is the story A heart connection completed?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A heart connection"" . ?story golem:publicationStatus ?status . }"	[{'status': Value(literal:'Completed')}]	32	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does What the Future Holds have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""What the Future Holds"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: Is the story A heart connection completed?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/>  
SELECT DISTINCT ?status WHERE { 
?story golem:title ""A heart connection"" . 
?story golem:publicationStatus ?status . 
}
"	[{'status': Value(literal:'Completed')}]	1	0	0
34	34	en	When was Codeword: Christmas Socks published?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?date WHERE {  ?story golem:title ""Codeword: Christmas Socks"" . ?story golem:datePublished ?date . }"	[{'date': Value(literal:'2021-03-21')}]	34	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does What the Future Holds have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""What the Future Holds"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: When was Codeword: Christmas Socks published?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?date WHERE { 
?story golem:title ""Codeword: Christmas Socks"" . 
?story dc:issued ?date . }
"	[]	0	0	1
35	35	en	When was Rump Roast (by enchanted_jae) published?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?date WHERE {  ?story golem:title ""Rump Roast (by enchanted_jae)"" . ?story golem:datePublished ?date . }"	[{'date': Value(literal:'2018-09-11')}]	35	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does What the Future Holds have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""What the Future Holds"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: When was Rump Roast (by enchanted_jae) published?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?date WHERE { 
?story golem:publisher ""enchanted_jae"" . 
?story golem:datePublished ?date . }
"	[]	0	0	1
36	36	en	When was crave published?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?date WHERE {  ?story golem:title ""crave"" . ?story golem:datePublished ?date . }"	[{'date': Value(literal:'2021-02-13')}, {'date': Value(literal:'2022-07-21')}, {'date': Value(literal:'2021-05-02')}, {'date': Value(literal:'2018-12-17')}, {'date': Value(literal:'2015-05-14')}, {'date': Value(literal:'2019-07-28')}, {'date': Value(literal:'2020-07-23')}, {'date': Value(literal:'2021-12-05')}, {'date': Value(literal:'2017-05-08')}, {'date': Value(literal:'2021-01-03')}, {'date': Value(literal:'2020-07-06')}, {'date': Value(literal:'2021-04-04')}, {'date': Value(literal:'2020-06-01')}, {'date': Value(literal:'2017-08-27')}, {'date': Value(literal:'2022-06-13')}, {'date': Value(literal:'2018-02-15')}, {'date': Value(literal:'2020-12-29')}, {'date': Value(literal:'2022-01-19')}, {'date': Value(literal:'2021-12-11')}, {'date': Value(literal:'2020-10-22')}, {'date': Value(literal:'2021-10-14')}, {'date': Value(literal:'2020-06-26')}, {'date': Value(literal:'2022-05-30')}]	36	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does What the Future Holds have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""What the Future Holds"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: When was crave published?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?date WHERE { 
?story golem:title ""crave"" . 
?story golem:datePublished ?date . }
"	[{'date': Value(literal:'2021-02-13')}, {'date': Value(literal:'2022-07-21')}, {'date': Value(literal:'2021-05-02')}, {'date': Value(literal:'2018-12-17')}, {'date': Value(literal:'2015-05-14')}, {'date': Value(literal:'2019-07-28')}, {'date': Value(literal:'2020-07-23')}, {'date': Value(literal:'2021-12-05')}, {'date': Value(literal:'2017-05-08')}, {'date': Value(literal:'2021-01-03')}, {'date': Value(literal:'2020-07-06')}, {'date': Value(literal:'2021-04-04')}, {'date': Value(literal:'2020-06-01')}, {'date': Value(literal:'2017-08-27')}, {'date': Value(literal:'2022-06-13')}, {'date': Value(literal:'2018-02-15')}, {'date': Value(literal:'2020-12-29')}, {'date': Value(literal:'2022-01-19')}, {'date': Value(literal:'2021-12-11')}, {'date': Value(literal:'2020-10-22')}, {'date': Value(literal:'2021-10-14')}, {'date': Value(literal:'2020-06-26')}, {'date': Value(literal:'2022-05-30')}]	1	0	0
37	37	en	When was You Caused Me Pain (So I Did The Same) published?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?date WHERE {  ?story golem:title ""You Caused Me Pain (So I Did The Same)"" . ?story golem:datePublished ?date . }"	[{'date': Value(literal:'2021-01-09')}]	37	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does What the Future Holds have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""What the Future Holds"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: When was You Caused Me Pain (So I Did The Same) published?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?datePublished WHERE { 
?story golem:title ""You Caused Me Pain (So I Did The Same)"" . 
?story dc:date ?datePublished . 
}
"	[]	0	0	1
38	38	en	When was Oh To Be Lonely at Christmas published?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?date WHERE {  ?story golem:title ""Oh To Be Lonely at Christmas"" . ?story golem:datePublished ?date . }"	[{'date': Value(literal:'2020-12-23')}]	38	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does What the Future Holds have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""What the Future Holds"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: When was Oh To Be Lonely at Christmas published?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?datePublished WHERE { 
?story golem:title ""Oh To Be Lonely at Christmas"" . 
?story dc:datePublished ?datePublished . }
"	[]	0	0	1
39	39	en	When was Those Dead Eyes (Harry Potter) published?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?date WHERE {  ?story golem:title ""Those Dead Eyes (Harry Potter)"" . ?story golem:datePublished ?date . }"	[{'date': Value(literal:'2021-08-05')}]	39	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does What the Future Holds have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""What the Future Holds"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: When was Those Dead Eyes (Harry Potter) published?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?date WHERE { 
?story golem:title ""Those Dead Eyes (Harry Potter)"" . 
?story dc:datePublished ?date . 
}
"	[]	0	0	1
40	40	en	When was I Just Want... published?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?date WHERE {  ?story golem:title ""I Just Want..."" . ?story golem:datePublished ?date . }"	[{'date': Value(literal:'2020-05-15')}]	40	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does What the Future Holds have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""What the Future Holds"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: When was I Just Want... published?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>  
prefix gc: <https://ontology.golemlab.eu/>  
SELECT DISTINCT ?datePublished WHERE { 
?story golem:title ""I Just Want..."" . 
?story golem:datePublished ?datePublished . 
}
"	[{'datePublished': Value(literal:'2020-05-15')}]	0	1	1
41	41	en	When was Tea and a Biscuit published?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?date WHERE {  ?story golem:title ""Tea and a Biscuit"" . ?story golem:datePublished ?date . }"	[{'date': Value(literal:'2021-02-09')}, {'date': Value(literal:'2012-02-05')}]	41	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does What the Future Holds have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""What the Future Holds"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: When was Tea and a Biscuit published?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?datePublished WHERE { 
?story golem:title ""Tea and a Biscuit"" . 
?story dc:datePublished ?datePublished . 
}
"	[]	0	0	1
42	42	en	When was grab the kitchen scissors published?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?date WHERE {  ?story golem:title ""grab the kitchen scissors"" . ?story golem:datePublished ?date . }"	[{'date': Value(literal:'2022-02-05')}]	42	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does What the Future Holds have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""What the Future Holds"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: When was grab the kitchen scissors published?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?date WHERE { 
?story golem:title ""grab the kitchen scissors"" . 
?story dc:datePublished ?date . }
"	[]	0	0	1
43	43	en	When was It Takes A Little Mistletoe published?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?date WHERE {  ?story golem:title ""It Takes A Little Mistletoe"" . ?story golem:datePublished ?date . }"	[{'date': Value(literal:'2017-12-02')}]	43	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does What the Future Holds have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""What the Future Holds"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: When was It Takes A Little Mistletoe published?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?date WHERE { 
?story golem:title ""It Takes A Little Mistletoe"" . 
?story golem:datePublished ?date . 
}
"	[{'date': Value(literal:'2017-12-02')}]	1	0	0
44	44	en	What is the most recently uploaded story?	prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?title WHERE {  ?story golem:datePublished ?date . ?story golem:title ?title . } ORDER BY DESC(?date) LIMIT 1	[{'title': Value(literal:'𝓑𝓾𝓽𝓽𝓮𝓻𝓯𝓵𝓲𝓮𝓼 𝓘𝓷 𝓗𝓮𝓻 𝓢𝓽𝓸𝓶𝓪𝓬𝓱 🦋')}]	44	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does What the Future Holds have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""What the Future Holds"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: What is the most recently uploaded story?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?story ?dateModified WHERE { 
  ?story a golem:Story .
  ?story golem:dateModified ?dateModified .
  ORDER BY DESC(?dateModified)
  LIMIT 1
}
"	"QueryBadFormed: A bad request has been sent to the endpoint: probably the SPARQL query is badly formed. 

Response:
b""Virtuoso 37000 Error SP030: SPARQL compiler, line 10: syntax error at 'ORDER'\n\nSPARQL query:\ndefine sql:big-data-const 0\n#output-format:application/sparql-results+json\n\nprefix golem: <https://golemlab.eu/graph/> \nprefix dc: <http://purl.org/dc/terms/> \nprefix gc: <https://ontology.golemlab.eu/> \nSELECT DISTINCT ?story ?dateModified WHERE { \n  ?story a golem:Story .\n  ?story golem:dateModified ?dateModified .\n  ORDER BY DESC(?dateModified)\n  LIMIT 1\n}\n"""	0	1	1
47	47	en	What are the keywords of That Secret We Never Knew?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT  (GROUP_CONCAT(DISTINCT ?keyword; separator="", "") AS ?keywords ) WHERE {  ?story golem:title ""That Secret We Never Knew"" . ?story golem:keyword ?keyword . }"	"[{'keywords': Value(literal:""'Alter Ego', Alternate Universe - Non-Magical, BAMF!Draco, BAMF!Hermione, Defeater, Draco has issues from his past, Draco has tattoos, Draco is in a band, Hardcore!Draco, Harry's waaay too curious, Hermione knows, Knuckle Puck, Like La Dispute, Punk!Draco, References to numerous bands, She always did, Social Constructs are Similar to Canon, and piercings"")}]"	47	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does What the Future Holds have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""What the Future Holds"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: What are the keywords of That Secret We Never Knew?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?keyword WHERE { 
?story golem:title ""That Secret We Never Knew"" . 
?story golem:keyword ?keyword . 
}
"	"[{'keyword': Value(literal:'Alternate Universe - Non-Magical')}, {'keyword': Value(literal:'BAMF!Draco')}, {'keyword': Value(literal:'and piercings')}, {'keyword': Value(literal:'Hermione knows')}, {'keyword': Value(literal:'BAMF!Hermione')}, {'keyword': Value(literal:'Draco is in a band')}, {'keyword': Value(literal:""'Alter Ego'"")}, {'keyword': Value(literal:'Defeater')}, {'keyword': Value(literal:'Draco has issues from his past')}, {'keyword': Value(literal:'Draco has tattoos')}, {'keyword': Value(literal:'Hardcore!Draco')}, {'keyword': Value(literal:""Harry's waaay too curious"")}, {'keyword': Value(literal:'Knuckle Puck')}, {'keyword': Value(literal:'Like La Dispute')}, {'keyword': Value(literal:'Punk!Draco')}, {'keyword': Value(literal:'References to numerous bands')}, {'keyword': Value(literal:'She always did')}, {'keyword': Value(literal:'Social Constructs are Similar to Canon')}]"	0	1	1
48	48	en	What are the keywords of Davina Claire and the Mikaelson wizard?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT  (GROUP_CONCAT(DISTINCT ?keyword; separator="", "") AS ?keywords ) WHERE {  ?story golem:title ""Davina Claire and the Mikaelson wizard"" . ?story golem:keyword ?keyword . }"	[{'keywords': Value(literal:'Alternate Universe - Hogwarts')}]	48	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does What the Future Holds have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""What the Future Holds"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: What are the keywords of Davina Claire and the Mikaelson wizard?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?keyword WHERE { 
?story golem:title ""Davina Claire and the Mikaelson wizard"" . 
?story golem:keyword ?keyword . 
}
"	[{'keyword': Value(literal:'Alternate Universe - Hogwarts')}]	0	1	1
49	49	en	What are the keywords of Surviving Together?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT  (GROUP_CONCAT(DISTINCT ?keyword; separator="", "") AS ?keywords ) WHERE {  ?story golem:title ""Surviving Together"" . ?story golem:keyword ?keyword . }"	"[{'keywords': Value(literal:""Angst, Drabble, Femslash, Fix-It, Fluff and Smut, How Do I Tag, Hurt/Comfort, Lots of firsts here, MORE than originally intended, Marlene McKinnon Lives, More Fluff Than Originally Intended, My First AO3 Post, My first Multi-chapter fic, Nightmares, No Beta We Die Like Alderman, Not Beta Read, Post-First War with Voldemort, Post-Traumatic Stress Disorder - PTSD, Rare Pairings, Shameless Smut, Tags May Change, hearth's a BAMF, i wanted these boys to hug a lot so i wrote it, just some soft boys in the Arena, lots of hand holding and much confusion, occasional Fluff but come on it's the Games, several OCs - Freeform, stick around for the ride"")}]"	49	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does What the Future Holds have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""What the Future Holds"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: What are the keywords of Surviving Together?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?keyword WHERE { 
?story golem:title ""Surviving Together"" . 
?story golem:keyword ?keyword . 
}
"	"[{'keyword': Value(literal:'Angst')}, {'keyword': Value(literal:'Drabble')}, {'keyword': Value(literal:'Nightmares')}, {'keyword': Value(literal:'Post-Traumatic Stress Disorder - PTSD')}, {'keyword': Value(literal:'Rare Pairings')}, {'keyword': Value(literal:'Femslash')}, {'keyword': Value(literal:'Post-First War with Voldemort')}, {'keyword': Value(literal:'Marlene McKinnon Lives')}, {'keyword': Value(literal:'How Do I Tag')}, {'keyword': Value(literal:'Hurt/Comfort')}, {'keyword': Value(literal:'Tags May Change')}, {'keyword': Value(literal:'Not Beta Read')}, {'keyword': Value(literal:'My First AO3 Post')}, {'keyword': Value(literal:'several OCs - Freeform')}, {'keyword': Value(literal:'More Fluff Than Originally Intended')}, {'keyword': Value(literal:'My first Multi-chapter fic')}, {'keyword': Value(literal:'Lots of firsts here')}, {'keyword': Value(literal:'MORE than originally intended')}, {'keyword': Value(literal:'No Beta We Die Like Alderman')}, {'keyword': Value(literal:""hearth's a BAMF"")}, {'keyword': Value(literal:'i wanted these boys to hug a lot so i wrote it')}, {'keyword': Value(literal:'just some soft boys in the Arena')}, {'keyword': Value(literal:'lots of hand holding and much confusion')}, {'keyword': Value(literal:""occasional Fluff but come on it's the Games"")}, {'keyword': Value(literal:'stick around for the ride')}, {'keyword': Value(literal:'Fix-It')}, {'keyword': Value(literal:'Fluff and Smut')}, {'keyword': Value(literal:'Shameless Smut')}]"	0	1	1
50	50	en	What are the keywords of Doll Parts?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT  (GROUP_CONCAT(DISTINCT ?keyword; separator="", "") AS ?keywords ) WHERE {  ?story golem:title ""Doll Parts"" . ?story golem:keyword ?keyword . }"	"[{'keywords': Value(literal:""(I mean.... not really but...), 1x10, AU of an AU of an AU, Alcohol Abuse/Alcoholism, Alpha Jeon Jungkook, Alpha Jung Hoseok, Alpha Kim Namjoon, Alpha Kim Taehyung, Alpha/Omega/Beta Dynamics, Alternate Canon, Alternate Ending, Alternate Universe, Alternate Universe - Fashion & Models, Anal Fingering, Anal Sex, Angst, Angst and Hurt/Comfort, Apocalypse, Blood, Blood and Gore, Bottom Gerard Way, Character Death, Cheating, Choking, Cousin Incest, Creepy, Cross-Posted on Wattpad, Crossover, Cuddling, Curses, Cyberware/plastic surgery addiction, Daddy Kink, Dildos, Dirty Talk, Dolls, Drug Use, Drugs, Dry Sex, Dubious Consent, Enemies to Friends to Lovers, Established Relationship, Everyone Needs A Hug, Explicit Sexual Content, Feminization, First Love, Fluff and Angst, Frerard, Future Fic, GONE GIRL AU, Gay, Heartbreak, Heavy Angst, Horror, Hurt No Comfort, Implied/Referenced Cheating, Implied/Referenced Drug Addiction, Implied/Referenced Underage, Impostor Syndrome, Infidelity, JJ Needs a Hug (Outer Banks), JJ and Izzy are whipped for each other, Jennifer's body au, Judgment Day, Knotting, Lingerie, Loss of Virginity, Male Pregnancy, Manipulative Relationship, Medical Procedures, Mild Gore, Mildly Dubious Consent, Mindfuck, Minor Character Death, Minor charactor deaths, Morally Ambiguous Character, Mpreg, Multifandomish, Murder, Murder Husbands, Omega Kim Seokjin, Omega Min Yoongi, Omega Park Jimin, Omegaverse, On and off pairings, One Shot, PWP, Parallel Universes, Plot Twists, Poly Relationships, Polygamy, Post-Order of the Phoenix, Pre-Canon, Prostitution, Protective JJ (Outer Banks), Psychological Horror, Purgatory, Rough Sex, Sad and Happy, Self Harm, Self Loathing, Sex Doll, Sex Education, Sex Toys, Sexism, Smut, Song: Doll Parts (Hole), Songfic, Spanking, Suicidal Thoughts, Tea, Tony Stark Has Issues, Top Frank Iero, Uncanny Valley, Unconditional Love, Underage Drinking, Unhappy Ending, Unmating, Unreliable Narrator, Unrequited Love, Vague descriptions of violence, Violence, War Child, Written Pre-Half Blood Prince, Young Tom Riddle, break ups, cross dressing, cross-dressing, cute moments, drunk driving (only once), graphic image and words, indirect mentions of suicide, it's obx what else do we expect, kind of, lots and lots of drama, nothing too gory i prommy, on going, shifting, the ending will probably hurt you, the pina colada song but make it demented, they do a lot of stupid shit, what if elizabeth schuyler but make it patrick bateman, when courtney said Someday You Will Ache Like I Ache"")}]"	50	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does What the Future Holds have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""What the Future Holds"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: What are the keywords of Doll Parts?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?keyword WHERE { 
?story golem:title ""Doll Parts"" . 
?story golem:keyword ?keyword . 
}
"	"[{'keyword': Value(literal:'Written Pre-Half Blood Prince')}, {'keyword': Value(literal:'Post-Order of the Phoenix')}, {'keyword': Value(literal:'Blood')}, {'keyword': Value(literal:'Cheating')}, {'keyword': Value(literal:'Cuddling')}, {'keyword': Value(literal:'Murder')}, {'keyword': Value(literal:'Sex Doll')}, {'keyword': Value(literal:'Medical Procedures')}, {'keyword': Value(literal:'Tea')}, {'keyword': Value(literal:'Creepy')}, {'keyword': Value(literal:'Dolls')}, {'keyword': Value(literal:'Unconditional Love')}, {'keyword': Value(literal:'Alpha Jeon Jungkook')}, {'keyword': Value(literal:'Infidelity')}, {'keyword': Value(literal:'Knotting')}, {'keyword': Value(literal:'Mpreg')}, {'keyword': Value(literal:'Sexism')}, {'keyword': Value(literal:'Smut')}, {'keyword': Value(literal:'Violence')}, {'keyword': Value(literal:'Omegaverse')}, {'keyword': Value(literal:'Plot Twists')}, {'keyword': Value(literal:'Male Pregnancy')}, {'keyword': Value(literal:'Polygamy')}, {'keyword': Value(literal:'Self Harm')}, {'keyword': Value(literal:'Omega Kim Seokjin')}, {'keyword': Value(literal:'Omega Park Jimin')}, {'keyword': Value(literal:'Self Loathing')}, {'keyword': Value(literal:'Alpha/Omega/Beta Dynamics')}, {'keyword': Value(literal:'break ups')}, {'keyword': Value(literal:'shifting')}, {'keyword': Value(literal:'Poly Relationships')}, {'keyword': Value(literal:'on going')}, {'keyword': Value(literal:'lots and lots of drama')}, {'keyword': Value(literal:'Alpha Jung Hoseok')}, {'keyword': Value(literal:'Alpha Kim Namjoon')}, {'keyword': Value(literal:'Alpha Kim Taehyung')}, {'keyword': Value(literal:'Omega Min Yoongi')}, {'keyword': Value(literal:'Minor charactor deaths')}, {'keyword': Value(literal:'Multifandomish')}, {'keyword': Value(literal:'On and off pairings')}, {'keyword': Value(literal:'Unmating')}, {'keyword': Value(literal:'graphic image and words')}, {'keyword': Value(literal:'Crossover')}, {'keyword': Value(literal:'Future Fic')}, {'keyword': Value(literal:'Mindfuck')}, {'keyword': Value(literal:'Parallel Universes')}, {'keyword': Value(literal:'Apocalypse')}, {'keyword': Value(literal:'Purgatory')}, {'keyword': Value(literal:'Judgment Day')}, {'keyword': Value(literal:'War Child')}, {'keyword': Value(literal:'Angst')}, {'keyword': Value(literal:'Angst and Hurt/Comfort')}, {'keyword': Value(literal:'Fluff and Angst')}, {'keyword': Value(literal:'Heartbreak')}, {'keyword': Value(literal:'Heavy Angst')}, {'keyword': Value(literal:'Implied/Referenced Cheating')}, {'keyword': Value(literal:'Morally Ambiguous Character')}, {'keyword': Value(literal:'Minor Character Death')}, {'keyword': Value(literal:'Mild Gore')}, {'keyword': Value(literal:'Alternate Ending')}, {'keyword': Value(literal:""Jennifer's body au"")}, {'keyword': Value(literal:'Dildos')}, {'keyword': Value(literal:'Sex Toys')}, {'keyword': Value(literal:'Sex Education')}, {'keyword': Value(literal:'(I mean.... not really but...)')}, {'keyword': Value(literal:'Dubious Consent')}, {'keyword': Value(literal:'Cousin Incest')}, {'keyword': Value(literal:'cross-dressing')}, {'keyword': Value(literal:'Hurt No Comfort')}, {'keyword': Value(literal:'Songfic')}, {'keyword': Value(literal:'kind of')}, {'keyword': Value(literal:'Implied/Referenced Drug Addiction')}, {'keyword': Value(literal:'Unhappy Ending')}, {'keyword': Value(literal:'Everyone Needs A Hug')}, {'keyword': Value(literal:'Tony Stark Has Issues')}, {'keyword': Value(literal:'Rough Sex')}, {'keyword': Value(literal:'Suicidal Thoughts')}, {'keyword': Value(literal:'Dry Sex')}, {'keyword': Value(literal:'Drugs')}, {'keyword': Value(literal:'Unreliable Narrator')}, {'keyword': Value(literal:'Vague descriptions of violence')}, {'keyword': Value(literal:'GONE GIRL AU')}, {'keyword': Value(literal:'when courtney said Someday You Will Ache Like I Ache')}, {'keyword': Value(literal:'what if elizabeth schuyler but make it patrick bateman')}, {'keyword': Value(literal:'nothing too gory i prommy')}, {'keyword': Value(literal:'the pina colada song but make it demented')}, {'keyword': Value(literal:'Alcohol Abuse/Alcoholism')}, {'keyword': Value(literal:'Alternate Universe - Fashion & Models')}, {'keyword': Value(literal:'Anal Fingering')}, {'keyword': Value(literal:'Anal Sex')}, {'keyword': Value(literal:'Drug Use')}, {'keyword': Value(literal:'First Love')}, {'keyword': Value(literal:'Gay')}, {'keyword': Value(literal:'Bottom Gerard Way')}, {'keyword': Value(literal:'Sad and Happy')}, {'keyword': Value(literal:'Top Frank Iero')}, {'keyword': Value(literal:'cute moments')}, {'keyword': Value(literal:'Frerard')}, {'keyword': Value(literal:'the ending will probably hurt you')}, {'keyword': Value(literal:'Curses')}, {'keyword': Value(literal:'Horror')}, {'keyword': Value(literal:'Psychological Horror')}, {'keyword': Value(literal:'Uncanny Valley')}, {'keyword': Value(literal:'Choking')}, {'keyword': Value(literal:'Manipulative Relationship')}, {'keyword': Value(literal:'Mildly Dubious Consent')}, {'keyword': Value(literal:'Spanking')}, {'keyword': Value(literal:'Young Tom Riddle')}, {'keyword': Value(literal:'AU of an AU of an AU')}, {'keyword': Value(literal:'One Shot')}, {'keyword': Value(literal:'Unrequited Love')}, {'keyword': Value(literal:'Impostor Syndrome')}, {'keyword': Value(literal:'indirect mentions of suicide')}, {'keyword': Value(literal:'Cyberware/plastic surgery addiction')}, {'keyword': Value(literal:'Song: Doll Parts (Hole)')}, {'keyword': Value(literal:'Implied/Referenced Underage')}, {'keyword': Value(literal:'PWP')}, {'keyword': Value(literal:'Pre-Canon')}, {'keyword': Value(literal:'Alternate Universe')}, {'keyword': Value(literal:'Blood and Gore')}, {'keyword': Value(literal:'Daddy Kink')}, {'keyword': Value(literal:'Dirty Talk')}, {'keyword': Value(literal:'Established Relationship')}, {'keyword': Value(literal:'Explicit Sexual Content')}, {'keyword': Value(literal:'Feminization')}, {'keyword': Value(literal:'Lingerie')}, {'keyword': Value(literal:'Murder Husbands')}, {'keyword': Value(literal:'cross dressing')}, {'keyword': Value(literal:'Alternate Canon')}, {'keyword': Value(literal:'Loss of Virginity')}, {'keyword': Value(literal:'Prostitution')}, {'keyword': Value(literal:'1x10')}, {'keyword': Value(literal:'Character Death')}, {'keyword': Value(literal:'Enemies to Friends to Lovers')}, {'keyword': Value(literal:'Underage Drinking')}, {'keyword': Value(literal:'Cross-Posted on Wattpad')}, {'keyword': Value(literal:'JJ Needs a Hug (Outer Banks)')}, {'keyword': Value(literal:'JJ and Izzy are whipped for each other')}, {'keyword': Value(literal:'Protective JJ (Outer Banks)')}, {'keyword': Value(literal:'drunk driving (only once)')}, {'keyword': Value(literal:""it's obx what else do we expect"")}, {'keyword': Value(literal:'they do a lot of stupid shit')}]"	0	1	1
51	51	en	What are the keywords of Late Bloomer?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT  (GROUP_CONCAT(DISTINCT ?keyword; separator="", "") AS ?keywords ) WHERE {  ?story golem:title ""Late Bloomer"" . ?story golem:keyword ?keyword . }"	"[{'keywords': Value(literal:'(16-year-olds having sex), 1x04, 80s setting, A Twist Of Fate, A look into the past, A/B/O, ABO, ABO dynamics, About 15, Abusive Parents, Adult Ciel Phantomhive, Age of Consent, Aged-Up Character(s), Aged-Up Otabek Altin, Aged-Up Yuri Plisetsky, Alcohol Abuse/Alcoholism, Alien Biology, Alpha Arthit, Alpha Bakugou Katsuki, Alpha Bang Chan, Alpha Castiel, Alpha Chittaphon Leechaiyapornkul | Ten, Alpha Craig Tucker, Alpha Grace, Alpha Harry, Alpha Hatake Kakashi, Alpha Hwang Hyunjin, Alpha Jason, Alpha Jeon Jungkook, Alpha John, Alpha Kakyoin, Alpha Kambe Daisuke, Alpha Kara Danvers, Alpha Katsuki Yuuri, Alpha Kim Taehyung | V, Alpha Raiden Ei, Alpha Sam, Alpha Seo Changbin, Alpha Sephiroth (Compilation of FFVII), Alpha Stan Marsh, Alpha Tony Stark, Alpha Victor Nikiforov, Alpha Wade, Alpha!Ichimatsu, Alpha/Beta, Alpha/Beta/Omega Dynamics, Alpha/Omega, Alternate Universe, Alternate Universe - Canon, Alternate Universe - Canon Divergence, Alternate Universe - Celebrity, Alternate Universe - Coffee Shops & Cafés, Alternate Universe - College/University, Alternate Universe - Creatures & Monsters, Alternate Universe - Happy, Alternate Universe - High School, Alternate Universe - Human, Alternate Universe - Modern Setting, Alternate Universe - No Quirks (My Hero Academia), Alternate Universe - Soulmates, Alternate Universe - Teenagers, Alternate Universe - Werewolf, Ambiguous/Open Ending, Amity Park - Freeform, Anal Fingering, Anal Sex, Angst, Angst and Feels, Angst and Porn, Angst with a Happy Ending, Anxiety, Armpit Kink, Asexual Character, Asexuality, Attempt at Humor, Attempted Rape/Non-Con, Autistic Hatsume Mei, Awkward Romance, Awkward Sex Talk, Awkward Tension, Baby Bruce is my weakness, Baby Gay Patrick Brewer, Background Jonathan Byers, Background Steve Harrington, Backstory, Bad Boys, BakuDeku Week 2018, Bakugou Katsuki Swears A Lot, Bakugou Katsuki is a Good Cook, Bang Chan is So Done (Stray Kids), Because they\'re assholes, Begging, Best Friends, Beta Kim Seungmin, Beta Kunikida Doppo, Beta Lee Felix (Stray Kids), Beta Lee Minho | Lee Know, Beta Yang Jeongin | I.N, Beta/Beta, Beta/Omega, Biology, Bisexual Male Character, Bisexual Nancy Wheeler, Bisexual TommyInnit (Video Blogging RPF), Biting, Blood, Blow Jobs, Body Horror, Body Worship, Bonding, Bottom Dean, Bottom Jung Hoseok | J-Hope, Bottom Midoriya Izuku, Bottom Son Goku (Dragon Ball), Boys In Love, Boys Kissing, Breathplay, Breeding Kink, Brief MPreg, Brotherly Love, Brothers, Bullied Midoriya Izuku, Bullies, Bullying, But on the other hand his parents are awesome and not dead, By an Extra, Canon Compliant, Canon Lesbian Character, Canon Queer Character of Color, Canon-Typical Violence, Caught, Character\'s Name Spelled as Viktor, Child Neglect, Childhood, Childhood Memories, Claiming Bites, Closeted Character, Clothed Sex, College Student Castiel, College Student Sam, Come Eating, Comfort, Coming Out, Coming of Age, Community: daily_deviant, Community: glee_kink_meme, Complicated Relationships, Consent, Cooking, Corporal Punishment, Couch Sex, Crack, Crossdressing, Crushes, Cuddling & Snuggling, Cussing, Cute, Cute Midoriya Izuku, DannyMay 2020 (Danny Phantom), David Rose Loves Patrick Brewer, David Rose is a Good Person, David Rose is a troll, Declarations Of Love, Demisexual Bakugou Katsuki, Demisexual Character, Demisexual Fred Weasley, Demisexuality, Desi Character, Dildos, Dirty Talk, Dom/sub, Domestic, Domestic Fluff, Dominance, Drabble, Drabble Collection, Drabble Sequence, Drama, Dry Humping, Dubious Consent, Dynamic confusion, Dysfunctional Family, Dysfunctional Relationships, Earthbending & Earthbenders, Eimiko - Freeform, Emotional Baggage, Emotional Hurt/Comfort, Enemies to Lovers, Enthusiastic Consent, Epilogue added, Episode continuation, Erik\'s life sucks a lot, Established Relationship, Eventual Fluff, Eventual Romance, Eventual Sex, Eventual Smut, Excessive Wetness, Explicit Consent, Explicit Sexual Content, Extremely Dubious Consent, FWP, Fainting, Falling In Love, Family Drama, Family Fluff, Family Secrets, Father-Son Relationship, Female My Unit | Byleth, Feminization, Feral Behavior, Finger Sucking, First Dates, First Kiss, First Love, First Meetings, First Rut, First Time, First Time Blow Jobs, Fledglings, Flower Symbolism, Flowers, Fluff, Fluff and Angst, Fluff and Crack, Fluff and Humor, Fluff and Hurt/Comfort, Fluff and Smut, Fluffy Ending, Food, Forced Bonding, Fred Weasley Lives, Fred and George have ADHD, Friends to Lovers, Frottage, Fuck Or Die, Galaxy Garrison, Gay Awakening, Gay Fred Weasley, Gay Panic, Gay Sex, Genius Midoriya Izuku, Gentle Sex, Getting Together, Goes from 0 to 100 real quick, Going to Hell, Gore, Gratuitous Smut, Growing Up, Growth, Growth Spirt, Gym Sex, HIV/AIDS Crisis, Halloween, Halloween Costumes, Hanahaki Disease, Hand Job, Hand Jobs, Happy Ending, Hatsume Mei Has ADHD, Heavy Petting, High School, High School Student Dean, Holding Hands, Horny Teenagers, Hot Springs & Onsen, Hugs, Humilation, Humor, Hurt, Hurt No Comfort, Hurt/Comfort, Hurts So Good, I Wrote This Instead of Sleeping, I think that\'s all the warnings?, Idiots in Love, Iida Tensei is the Best Brother, Iida Tensei went to UA with Aizawa and Mic, Implied Mpreg, Implied Sexual Content, Implied/Referenced Child Abuse, Implied/Referenced Self-Harm, Impregnation, Impregnation Kink, Indian Character, Insecurity, Inspired by Stranger Things (TV 2016), Intercrural Sex, Internal Conflict, Internalized Homophobia, It all got serious by accident, Izuku is a late bloomer, Jagoras, Japanese Culture, Jealously, Jealousy, Just gals being pals, Kaer Morhen, Kerberos Mission, Kissing, Knotting, Knotting Dildos, KongArt Week 2021 (SOTUS), Kotatsu, Krypton, Kryptonian Biology, Kryptonian Culture & Customs, LGBTQ Themes, Lactation Kink, Lambert likes warmth, Larry Stylinson Is Real, Late Bloomer, Late Bloomer Byleth, Lesbian Character, Lesbian Disaster Robin Buckley, Levi with Piercings & Glasses, Light Angst, Light Bondage, Light Dom/sub, Loss of Virginity, Love Confessions, Making Out, Male Periods, Marking, Married Couple, Masturbation, Masturbation in Shower, Mates, Mating Bites, Mating Cycles/In Heat, Menstruation, Mental Health Issues, Mentions of past abusive relationships, Mentor Nedzu (My Hero Academia), Merry Month of Masturbation Challenge, Middle School, Midoriya Izuku Does Not Go to U.A. High School, Midoriya Izuku Does Not Have One for All Quirk, Midoriya Izuku is a Dork, Midoriya Izuku is a Nerd, Midoriya Izuku is a Ray of Sunshine, Might be OOC, Mild Hurt/Comfort, Mild Smut, Minor Alcohol/Drug Reference, Minor Angeal Hewley/Genesis Rhapsodos, Minor Rufus Shinra/Tseng, Minor Zack Fair/Aerith Gainsborough, Minor mentions of Leslie Kyle and Don Corneo, Missing Scene, Mostly Fluff, Mpreg, Multiple Pairings, Mutant Registration, Mutant Rights, Mutual Masturbation, Mutual Pining, NOT OMEGAVERSE, Nakamaship, Nervous Midoriya Izuku, Nesting, No bottom surgery trans male, No mpreg, No penetration, Non-Consensual Voyeurism, Non-Graphic Smut, Non-Linear Narrative, Non-Penetrative Sex, Non-Sexual Submission, Non-Traditional Alpha/Beta/Omega Dynamics, Not Actually Unrequited Love, Not Beta Read, OHFAT, OT7, Obsession, Oh they are both 18, Old Friends, Old Midoriya, Olicity Hiatus Fic-A-Thon, Omega Cloud Strife, Omega Dani, Omega Dazai Osamu (Bungou Stray Dogs), Omega Dean, Omega Han Jisung | Han, Omega Jeon Jungkook, Omega Jotaro, Omega Jung Hoseok | J-Hope, Omega Katou Haru, Omega Kongpob, Omega Kyle Broflovski, Omega Lena Luthor, Omega Louis, Omega Midoriya Izuku, Omega Might Guy, Omega Min Yoongi | Suga, Omega Peter Parker, Omega Sherlock, Omega Stan Marsh, Omega Verse, Omega Yuri Plisetsky, Omega!Genos, Omegaverse, One Shot, One-Sided Attraction, Oral Sex, Originally Posted Elsewhere, Other Additional Tags to Be Added, POV Castiel, POV First Person, POV Kirishima Eijirou, POV Saeki Sayaka, POV Second Person, POV Third Person Limited, POV flips between Saitama and Genos, PWP, Pack Bonding, Pack Dynamics, Parental Aizawa Shouta | Eraserhead, Parental Yagi Toshinori | All Might, Past Tense, Patrick Brewer is Gay, Patrick Brewer loves David Rose, Period-Typical Homophobia, Pet Play, Pining, Play Fighting, Plot What Plot/Porn Without Plot, Polyamorous Pack, Polyamory, Polyamory - F/F/F, Polyamory Negotiations, Porn, Porn With Plot, Porn With Very Little Plot, Porn with Feelings, Possessive Behavior, Possessive Kim Taehyung | V, Post top surgery trans male, Post-Canon, Post-Episode: s05e05 Housewarming, Post-Kerberos Mission, Power Play, Praise Kink, Pre-Canon, Pre-Kerberos Mission, Pre-Relationship, Pregnancy Kink, Proms and other high-school cliches, Prostate Massage, Protective Bakugou Katsuki, Protective Class 1-A (My Hero Academia), Protective Dick Grayson, Protective Hyungs, Protective Jason, Protective Siblings, Protective Wilbur Soot, Protectiveness, Psychological Trauma, Puberty, Public Blow Jobs, Punishment, Python - Freeform, Queer Friendly, Queer Themes, Quirk Discrimination (My Hero Academia), Quirkless Reader (My Hero Academia), Reader Has a Quirk (My Hero Academia), Reader is AFAB - Freeform, Reader is an Omega but they think theyre a Beta, Reader-Insert, Real Life, Recreational Drug Use, References to Knotting, Reunions, Rimming, Romance, Rough Sex, Rutting, SPOILERS BEECH GET OUTTA HERE IF U DONT WANT THIS, Scent Kink, Scent Marking, Scenting, Scents & Smells, Science Fiction, Season/Series 07, Sebatian POV, Secretly a Virgin, Secrets, Self-Esteem Issues, Self-Lubrication, Self-cest, Semi-Public Sex, Sex, Sex Toys, Sexting, Sexual Content, Sexual Experimentation, Sexual Fantasy, Sexual Frustration, Sexual Roleplay, Sexual Tension, Shady government agencies and other comic cliches, Shameless Smut, Sharing a Bed, Shinsou Hitoshi is in Class 1-A, Sibling Incest, Sibling Rivalry, Sickfic, Sisterly bonding, Size Kink, Slash, Slice of Life, Slow Burn, Small Towns, Smut, Sneaking Out, Soft Bakugou Katsuki, Soft Eskel (The Witcher), Soul Bond, Soulmarks, Spanking, Spoilers, Spooning, Squirting, Stargazing, Sticky Sex, Strangers to Lovers, Strap-Ons, Students, Subdrop, Submission, Submissive Midoriya Izuku, Subspace, Suicide, TPE, Tags May Change, Tails, Teacher-Student Relationship, Teasing, Teen Angst, Teen Romance, This can be read as, This was stupid self indulgent, Timeskips, Todoroki (My Hero Academia) Family Drama, Todoroki Enji | Endeavor\'s Bad Parenting, Todoroki Shouto is Bad at Feelings, Todoroki Shouto is a Dork, Todoroki but he never really worked through his daddy issues, TommyInnit Needs a Hug (Video Blogging RPF), TommyInnit-centric (Video Blogging RPF), Top Bakugou Katsuki, Top Castiel, Top Eskel (The Witcher), Top Kim Taehyung | V, Top Sam, Top Vegeta (Dragon Ball), Topanga\'s, Touch-Starved Bakugou Katsuki, Train Sex, Trans Male Character, Trans Patrick Brewer, True Love, True Mates, Twincest, Underage Drinking, Underage Kissing, Underage Masturbation, Underage Smoking, Unrequited Crush, Unrequited Love, VAMPIRESSS, Vaginal Sex, Vegeta is Bad at Feelings (Dragon Ball), Verbal Abuse, Virginity, Vomiting, Voyeurism, Webcam/Video Chat Sex, Werewolves, Wingfic, Wings, With A Twist, Younger Dean, Younger Midoriya Izuku, aboverse, aged-up ciel, alpha udyr, also some angst, antics, at the end, au eighties, bad language, because I wanted a fluffy ending, beta!Saitama, bite me, blmatsu, bottom lee sin, brief mention of bad dragon in chapter one, brief mentions of drugs and drug-related death, brief mentions of past abuse/child abuse, bts love their maknae, bullshit cyborg biology/anatomy, but it exists in universe, but like not ABO heat, butt sex as a plot device, complicated feelings, daddy udyr, danny gets fangs lol, danny panics, danny phantom - Freeform, demisexual byleth, emphasis on the science, excessive cum, fangs, first heat, gender neutral reader, ghost puberty??, he\'s still a ghost tho, hormones going crazy, i love adam bye, ichikara, idk i just like the concept, insecure Genos, ish, just ""being very horny"" heat, just this once, lee sin didn\'t think he was an omega, lee sin self conscious that hes omega, lmao the girls in his school start thinking he\'s a vampire, lots and lots of touching, lots of fun as you can imagine, mentions of past underage, nerds, no beta we die like cliffjumper, not a lot of plot i am so sorry, not even really, omega lee sin, omega!Karamatsu, one year younger, partially follows the canon, people change, platonic but not really, poor Lumine caught in between, power bottom miko, presenting, presenting is kinda like a sudden second puberty, prompt, return to earth, see individual chapter tags!, seriously this is so dumb, service top ei, shance, shiro is gay its canon bye, slightly out of character i guess, so many blow jobs, sorta. def a hopeful ending, sterile omega, surprise! heat, sweats intensely, taking some liberties with the hanahaki trope, the gay shit - Freeform, then back to 0, they are so in love it hurts, things are messy, this couple is so underrated, this is based of a meme, this will be silly and fun, those last two tags are not related, to be precise, top udyr, twist ending, u think the whole school would learn by now that he\'s diff, udyr reassures him, vampire au i think, veron temple, well ok with a little bit of plot, you know whats up, youll probably figure out the au pretty fast')}]"	51	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does What the Future Holds have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""What the Future Holds"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: What are the keywords of Late Bloomer?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?keyword WHERE { 
?story golem:title ""Late Bloomer"" . 
?story golem:keyword ?keyword . 
}
"	"[{'keyword': Value(literal:'Anal Sex')}, {'keyword': Value(literal:'Dirty Talk')}, {'keyword': Value(literal:'Slash')}, {'keyword': Value(literal:'Community: daily_deviant')}, {'keyword': Value(literal:'Crossdressing')}, {'keyword': Value(literal:'First Time')}, {'keyword': Value(literal:'Light Bondage')}, {'keyword': Value(literal:'Light Dom/sub')}, {'keyword': Value(literal:'Plot What Plot/Porn Without Plot')}, {'keyword': Value(literal:'Sexual Experimentation')}, {'keyword': Value(literal:'Multiple Pairings')}, {'keyword': Value(literal:'Drabble Sequence')}, {'keyword': Value(literal:'Alpha/Beta/Omega Dynamics')}, {'keyword': Value(literal:'Alpha John')}, {'keyword': Value(literal:'Omega Sherlock')}, {'keyword': Value(literal:'Alpha Jeon Jungkook')}, {'keyword': Value(literal:'Dubious Consent')}, {'keyword': Value(literal:'Enemies to Lovers')}, {'keyword': Value(literal:'Falling In Love')}, {'keyword': Value(literal:'Getting Together')}, {'keyword': Value(literal:'Mating Cycles/In Heat')}, {'keyword': Value(literal:'Gym Sex')}, {'keyword': Value(literal:'Omega Min Yoongi | Suga')}, {'keyword': Value(literal:'Aged-Up Character(s)')}, {'keyword': Value(literal:'Alternate Universe - No Quirks (My Hero Academia)')}, {'keyword': Value(literal:'Anxiety')}, {'keyword': Value(literal:'Blow Jobs')}, {'keyword': Value(literal:'Bottom Midoriya Izuku')}, {'keyword': Value(literal:'Comfort')}, {'keyword': Value(literal:'Cooking')}, {'keyword': Value(literal:'Declarations Of Love')}, {'keyword': Value(literal:'Domestic Fluff')}, {'keyword': Value(literal:'Enthusiastic Consent')}, {'keyword': Value(literal:'Fainting')}, {'keyword': Value(literal:'First Kiss')}, {'keyword': Value(literal:'First Time Blow Jobs')}, {'keyword': Value(literal:'Fluff')}, {'keyword': Value(literal:'Fluff and Smut')}, {'keyword': Value(literal:'Frottage')}, {'keyword': Value(literal:'Halloween')}, {'keyword': Value(literal:'Hand Jobs')}, {'keyword': Value(literal:'Happy Ending')}, {'keyword': Value(literal:'Idiots in Love')}, {'keyword': Value(literal:'Light Angst')}, {'keyword': Value(literal:'Loss of Virginity')}, {'keyword': Value(literal:'Masturbation')}, {'keyword': Value(literal:'Mutual Masturbation')}, {'keyword': Value(literal:'Oral Sex')}, {'keyword': Value(literal:'Porn With Plot')}, {'keyword': Value(literal:'Porn with Feelings')}, {'keyword': Value(literal:'Rimming')}, {'keyword': Value(literal:'Semi-Public Sex')}, {'keyword': Value(literal:'Sexting')}, {'keyword': Value(literal:'Sexual Tension')}, {'keyword': Value(literal:'Sharing a Bed')}, {'keyword': Value(literal:'Slice of Life')}, {'keyword': Value(literal:'Smut')}, {'keyword': Value(literal:'Strangers to Lovers')}, {'keyword': Value(literal:'Top Bakugou Katsuki')}, {'keyword': Value(literal:'Webcam/Video Chat Sex')}, {'keyword': Value(literal:'Dry Humping')}, {'keyword': Value(literal:'First Meetings')}, {'keyword': Value(literal:'Food')}, {'keyword': Value(literal:'Public Blow Jobs')}, {'keyword': Value(literal:'Horny Teenagers')}, {'keyword': Value(literal:'Spooning')}, {'keyword': Value(literal:'Non-Penetrative Sex')}, {'keyword': Value(literal:'Train Sex')}, {'keyword': Value(literal:'Halloween Costumes')}, {'keyword': Value(literal:'Hot Springs & Onsen')}, {'keyword': Value(literal:'Protective Bakugou Katsuki')}, {'keyword': Value(literal:'Japanese Culture')}, {'keyword': Value(literal:'Bakugou Katsuki Swears A Lot')}, {'keyword': Value(literal:'Soft Bakugou Katsuki')}, {'keyword': Value(literal:'Small Towns')}, {'keyword': Value(literal:'Gay Panic')}, {'keyword': Value(literal:'Cute Midoriya Izuku')}, {'keyword': Value(literal:'Midoriya Izuku is a Dork')}, {'keyword': Value(literal:'Bakugou Katsuki is a Good Cook')}, {'keyword': Value(literal:'Demisexual Bakugou Katsuki')}, {'keyword': Value(literal:'Sneaking Out')}, {'keyword': Value(literal:'Touch-Starved Bakugou Katsuki')}, {'keyword': Value(literal:'Secretly a Virgin')}, {'keyword': Value(literal:'Kotatsu')}, {'keyword': Value(literal:'so many blow jobs')}, {'keyword': Value(literal:'Alternate Universe - Coffee Shops & Cafés')}, {'keyword': Value(literal:'Ambiguous/Open Ending')}, {'keyword': Value(literal:'Crushes')}, {'keyword': Value(literal:'Romance')}, {'keyword': Value(literal:'POV Kirishima Eijirou')}, {'keyword': Value(literal:'Fluff and Crack')}, {'keyword': Value(literal:'Shinsou Hitoshi is in Class 1-A')}, {'keyword': Value(literal:'Midoriya Izuku is a Ray of Sunshine')}, {'keyword': Value(literal:'Protective Class 1-A (My Hero Academia)')}, {'keyword': Value(literal:'Midoriya Izuku is a Nerd')}, {'keyword': Value(literal:'Genius Midoriya Izuku')}, {'keyword': Value(literal:'Mentor Nedzu (My Hero Academia)')}, {'keyword': Value(literal:'Autistic Hatsume Mei')}, {'keyword': Value(literal:'to be precise')}, {'keyword': Value(literal:'Hatsume Mei Has ADHD')}, {'keyword': Value(literal:'Younger Midoriya Izuku')}, {'keyword': Value(literal:'one year younger')}, {'keyword': Value(literal:'Alternate Universe - High School')}, {'keyword': Value(literal:'Canon-Typical Violence')}, {'keyword': Value(literal:'Teen Angst')}, {'keyword': Value(literal:'Teen Romance')}, {'keyword': Value(literal:'Underage Drinking')}, {'keyword': Value(literal:'Mutant Rights')}, {'keyword': Value(literal:'Mutant Registration')}, {'keyword': Value(literal:'mentions of past underage')}, {'keyword': Value(literal:'Mentions of past abusive relationships')}, {'keyword': Value(literal:'(16-year-olds having sex)')}, {'keyword': Value(literal:""Erik's life sucks a lot"")}, {'keyword': Value(literal:""I think that's all the warnings?"")}, {'keyword': Value(literal:'It all got serious by accident')}, {'keyword': Value(literal:'Proms and other high-school cliches')}, {'keyword': Value(literal:'Shady government agencies and other comic cliches')}, {'keyword': Value(literal:'But on the other hand his parents are awesome and not dead')}, {'keyword': Value(literal:'Alternate Universe - Teenagers')}, {'keyword': Value(literal:'Alpha/Omega')}, {'keyword': Value(literal:'High School')}, {'keyword': Value(literal:'Implied/Referenced Child Abuse')}, {'keyword': Value(literal:'Knotting')}, {'keyword': Value(literal:'Crack')}, {'keyword': Value(literal:'Porn')}, {'keyword': Value(literal:'Tails')}, {'keyword': Value(literal:'Going to Hell')}, {'keyword': Value(literal:'Established Relationship')}, {'keyword': Value(literal:'Sibling Incest')}, {'keyword': Value(literal:'Couch Sex')}, {'keyword': Value(literal:'ichikara')}, {'keyword': Value(literal:'Late Bloomer')}, {'keyword': Value(literal:'blmatsu')}, {'keyword': Value(literal:'Alpha!Ichimatsu')}, {'keyword': Value(literal:'omega!Karamatsu')}, {'keyword': Value(literal:'Anal Fingering')}, {'keyword': Value(literal:'Gratuitous Smut')}, {'keyword': Value(literal:'Alternate Universe - Celebrity')}, {'keyword': Value(literal:'shance')}, {'keyword': Value(literal:'Mating Bites')}, {'keyword': Value(literal:'Alpha Chittaphon Leechaiyapornkul | Ten')}, {'keyword': Value(literal:'Making Out')}, {'keyword': Value(literal:'Pining')}, {'keyword': Value(literal:'Lesbian Character')}, {'keyword': Value(literal:'Canon Lesbian Character')}, {'keyword': Value(literal:'Bisexual Nancy Wheeler')}, {'keyword': Value(literal:'Lesbian Disaster Robin Buckley')}, {'keyword': Value(literal:'Background Steve Harrington')}, {'keyword': Value(literal:'Just gals being pals')}, {'keyword': Value(literal:'Background Jonathan Byers')}, {'keyword': Value(literal:'this is based of a meme')}, {'keyword': Value(literal:'Armpit Kink')}, {'keyword': Value(literal:'Omega Verse')}, {'keyword': Value(literal:'PWP')}, {'keyword': Value(literal:'Impregnation')}, {'keyword': Value(literal:'Alpha Kakyoin')}, {'keyword': Value(literal:'Omega Jotaro')}, {'keyword': Value(literal:'Gay Sex')}, {'keyword': Value(literal:'POV First Person')}, {'keyword': Value(literal:'Sex')}, {'keyword': Value(literal:'Self-Lubrication')}, {'keyword': Value(literal:'Omega Peter Parker')}, {'keyword': Value(literal:'Alpha Wade')}, {'keyword': Value(literal:'slightly out of character i guess')}, {'keyword': Value(literal:'Alternate Universe - Werewolf')}, {'keyword': Value(literal:'Coming of Age')}, {'keyword': Value(literal:'Family Fluff')}, {'keyword': Value(literal:'Fluff and Angst')}, {'keyword': Value(literal:'Non-Traditional Alpha/Beta/Omega Dynamics')}, {'keyword': Value(literal:'Other Additional Tags to Be Added')}, {'keyword': Value(literal:'Subdrop')}, {'keyword': Value(literal:'Tags May Change')}, {'keyword': Value(literal:'Alpha Seo Changbin')}, {'keyword': Value(literal:'Mild Smut')}, {'keyword': Value(literal:'Subspace')}, {'keyword': Value(literal:'Mostly Fluff')}, {'keyword': Value(literal:'Omega Han Jisung | Han')}, {'keyword': Value(literal:'With A Twist')}, {'keyword': Value(literal:'Polyamorous Pack')}, {'keyword': Value(literal:'Alpha Bang Chan')}, {'keyword': Value(literal:'Alpha Hwang Hyunjin')}, {'keyword': Value(literal:'Beta Yang Jeongin | I.N')}, {'keyword': Value(literal:'twist ending')}, {'keyword': Value(literal:'Male Periods')}, {'keyword': Value(literal:'Beta Kim Seungmin')}, {'keyword': Value(literal:'Beta Lee Minho | Lee Know')}, {'keyword': Value(literal:'Beta Lee Felix (Stray Kids)')}, {'keyword': Value(literal:'Bang Chan is So Done (Stray Kids)')}, {'keyword': Value(literal:'Dynamic confusion')}, {'keyword': Value(literal:'Angst')}, {'keyword': Value(literal:'Bisexual Male Character')}, {'keyword': Value(literal:'Brotherly Love')}, {'keyword': Value(literal:'Implied/Referenced Self-Harm')}, {'keyword': Value(literal:'Mental Health Issues')}, {'keyword': Value(literal:'Self-Esteem Issues')}, {'keyword': Value(literal:'Underage Smoking')}, {'keyword': Value(literal:'Unrequited Love')}, {'keyword': Value(literal:'Real Life')}, {'keyword': Value(literal:'Protective Wilbur Soot')}, {'keyword': Value(literal:'TommyInnit Needs a Hug (Video Blogging RPF)')}, {'keyword': Value(literal:'TommyInnit-centric (Video Blogging RPF)')}, {'keyword': Value(literal:'Bisexual TommyInnit (Video Blogging RPF)')}, {'keyword': Value(literal:'Explicit Sexual Content')}, {'keyword': Value(literal:'Slow Burn')}, {'keyword': Value(literal:'Hurts So Good')}, {'keyword': Value(literal:'ish')}, {'keyword': Value(literal:'not even really')}, {'keyword': Value(literal:'this couple is so underrated')}, {'keyword': Value(literal:'Implied Mpreg')}, {'keyword': Value(literal:'Implied Sexual Content')}, {'keyword': Value(literal:'Married Couple')}, {'keyword': Value(literal:'Mpreg')}, {'keyword': Value(literal:'Sexual Roleplay')}, {'keyword': Value(literal:'Beta/Omega')}, {'keyword': Value(literal:'first heat')}, {'keyword': Value(literal:'Omega Dazai Osamu (Bungou Stray Dogs)')}, {'keyword': Value(literal:'Beta Kunikida Doppo')}, {'keyword': Value(literal:'Alternate Universe - Creatures & Monsters')}, {'keyword': Value(literal:'Forced Bonding')}, {'keyword': Value(literal:'Teacher-Student Relationship')}, {'keyword': Value(literal:'Fluff and Humor')}, {'keyword': Value(literal:'Rough Sex')}, {'keyword': Value(literal:'Pet Play')}, {'keyword': Value(literal:'Alternate Universe - College/University')}, {'keyword': Value(literal:'Angst and Porn')}, {'keyword': Value(literal:'Jealousy')}, {'keyword': Value(literal:'Mild Hurt/Comfort')}, {'keyword': Value(literal:'Obsession')}, {'keyword': Value(literal:'Possessive Behavior')}, {'keyword': Value(literal:'Rutting')}, {'keyword': Value(literal:'Shameless Smut')}, {'keyword': Value(literal:'Alpha Raiden Ei')}, {'keyword': Value(literal:'Eimiko - Freeform')}, {'keyword': Value(literal:'power bottom miko')}, {'keyword': Value(literal:'service top ei')}, {'keyword': Value(literal:'Mutual Pining')}, {'keyword': Value(literal:'platonic but not really')}, {'keyword': Value(literal:'poor Lumine caught in between')}, {'keyword': Value(literal:'Domestic')}, {'keyword': Value(literal:'Holding Hands')}, {'keyword': Value(literal:'Hugs')}, {'keyword': Value(literal:'Reunions')}, {'keyword': Value(literal:'Season/Series 07')}, {'keyword': Value(literal:'Spoilers')}, {'keyword': Value(literal:'Students')}, {'keyword': Value(literal:'Stargazing')}, {'keyword': Value(literal:'Pre-Kerberos Mission')}, {'keyword': Value(literal:'Galaxy Garrison')}, {'keyword': Value(literal:'Kerberos Mission')}, {'keyword': Value(literal:'Post-Kerberos Mission')}, {'keyword': Value(literal:'Earthbending & Earthbenders')}, {'keyword': Value(literal:'antics')}, {'keyword': Value(literal:'the gay shit - Freeform')}, {'keyword': Value(literal:'return to earth')}, {'keyword': Value(literal:'SPOILERS BEECH GET OUTTA HERE IF U DONT WANT THIS')}, {'keyword': Value(literal:'i love adam bye')}, {'keyword': Value(literal:'shiro is gay its canon bye')}, {'keyword': Value(literal:'you know whats up')}, {'keyword': Value(literal:'Drabble')}, {'keyword': Value(literal:'Childhood')}, {'keyword': Value(literal:'Insecurity')}, {'keyword': Value(literal:'Play Fighting')}, {'keyword': Value(literal:'Sibling Rivalry')}, {'keyword': Value(literal:'Might be OOC')}, {'keyword': Value(literal:'KongArt Week 2021 (SOTUS)')}, {'keyword': Value(literal:'Alpha Arthit')}, {'keyword': Value(literal:'Omega Kongpob')}, {'keyword': Value(literal:'Omega Kyle Broflovski')}, {'keyword': Value(literal:'they are so in love it hurts')}, {'keyword': Value(literal:'Alpha Stan Marsh')}, {'keyword': Value(literal:'Oh they are both 18')}, {'keyword': Value(literal:'Fluffy Ending')}, {'keyword': Value(literal:'Bottom Son Goku (Dragon Ball)')}, {'keyword': Value(literal:'Top Vegeta (Dragon Ball)')}, {'keyword': Value(literal:'Vegeta is Bad at Feelings (Dragon Ball)')}, {'keyword': Value(literal:'Hurt/Comfort')}, {'keyword': Value(literal:'Love Confessions')}, {'keyword': Value(literal:'Not Actually Unrequited Love')}, {'keyword': Value(literal:'Polyamory')}, {'keyword': Value(literal:'Polyamory Negotiations')}, {'keyword': Value(literal:'POV Saeki Sayaka')}, {'keyword': Value(literal:'Polyamory - F/F/F')}, {'keyword': Value(literal:'Cuddling & Snuggling')}, {'keyword': Value(literal:'Dom/sub')}, {'keyword': Value(literal:'Eventual Smut')}, {'keyword': Value(literal:'Protectiveness')}, {'keyword': Value(literal:'Sickfic')}, {'keyword': Value(literal:'Spanking')}, {'keyword': Value(literal:'OT7')}, {'keyword': Value(literal:'Omega Jeon Jungkook')}, {'keyword': Value(literal:'Pack Dynamics')}, {'keyword': Value(literal:'Protective Hyungs')}, {'keyword': Value(literal:'bts love their maknae')}, {'keyword': Value(literal:'Attempted Rape/Non-Con')}, {'keyword': Value(literal:'I Wrote This Instead of Sleeping')}, {'keyword': Value(literal:'Marking')}, {'keyword': Value(literal:'Scent Marking')}, {'keyword': Value(literal:'Scenting')}, {'keyword': Value(literal:'True Mates')}, {'keyword': Value(literal:'bite me')}, {'keyword': Value(literal:'Mates')}, {'keyword': Value(literal:'Middle School')}, {'keyword': Value(literal:'Alpha Bakugou Katsuki')}, {'keyword': Value(literal:'Omega Midoriya Izuku')}, {'keyword': Value(literal:'Bullied Midoriya Izuku')}, {'keyword': Value(literal:'at the end')}, {'keyword': Value(literal:'BakuDeku Week 2018')}, {'keyword': Value(literal:'Submissive Midoriya Izuku')}, {'keyword': Value(literal:'About 15')}, {'keyword': Value(literal:'Izuku is a late bloomer')}, {'keyword': Value(literal:""Because they're assholes"")}, {'keyword': Value(literal:'By an Extra')}, {'keyword': Value(literal:'Goes from 0 to 100 real quick')}, {'keyword': Value(literal:'because I wanted a fluffy ending')}, {'keyword': Value(literal:'then back to 0')}, {'keyword': Value(literal:'Attempt at Humor')}, {'keyword': Value(literal:'Humor')}, {'keyword': Value(literal:'Growth')}, {'keyword': Value(literal:'no beta we die like cliffjumper')}, {'keyword': Value(literal:'seriously this is so dumb')}, {'keyword': Value(literal:'Growth Spirt')}, {'keyword': Value(literal:'Coming Out')}, {'keyword': Value(literal:'Internalized Homophobia')}, {'keyword': Value(literal:'LGBTQ Themes')}, {'keyword': Value(literal:'One Shot')}, {'keyword': Value(literal:'Period-Typical Homophobia')}, {'keyword': Value(literal:'Psychological Trauma')}, {'keyword': Value(literal:'Non-Linear Narrative')}, {'keyword': Value(literal:'Closeted Character')}, {'keyword': Value(literal:'HIV/AIDS Crisis')}, {'keyword': Value(literal:'Merry Month of Masturbation Challenge')}, {'keyword': Value(literal:'Twincest')}, {'keyword': Value(literal:'Caught')}, {'keyword': Value(literal:'Eventual Romance')}, {'keyword': Value(literal:'Not Beta Read')}, {'keyword': Value(literal:'Eventual Sex')}, {'keyword': Value(literal:'Underage Kissing')}, {'keyword': Value(literal:'Female My Unit | Byleth')}, {'keyword': Value(literal:'Underage Masturbation')}, {'keyword': Value(literal:'Awkward Romance')}, {'keyword': Value(literal:'Demisexuality')}, {'keyword': Value(literal:'Heavy Petting')}, {'keyword': Value(literal:'Awkward Tension')}, {'keyword': Value(literal:'Late Bloomer Byleth')}, {'keyword': Value(literal:'demisexual byleth')}, {'keyword': Value(literal:'Alpha Kim Taehyung | V')}, {'keyword': Value(literal:'Clothed Sex')}, {'keyword': Value(literal:'Nesting')}, {'keyword': Value(literal:'Top Kim Taehyung | V')}, {'keyword': Value(literal:'Bottom Jung Hoseok | J-Hope')}, {'keyword': Value(literal:'Feral Behavior')}, {'keyword': Value(literal:'Fuck Or Die')}, {'keyword': Value(literal:'Omega Jung Hoseok | J-Hope')}, {'keyword': Value(literal:'Possessive Kim Taehyung | V')}, {'keyword': Value(literal:'Sex Toys')}, {'keyword': Value(literal:'Alpha Hatake Kakashi')}, {'keyword': Value(literal:'Omega Might Guy')}, {'keyword': Value(literal:'Drabble Collection')}, {'keyword': Value(literal:'Father-Son Relationship')}, {'keyword': Value(literal:'Menstruation')}, {'keyword': Value(literal:'Pack Bonding')}, {'keyword': Value(literal:'Protective Siblings')}, {'keyword': Value(literal:'Protective Dick Grayson')}, {'keyword': Value(literal:'Protective Jason')}, {'keyword': Value(literal:'Alternate Universe - Canon Divergence')}, {'keyword': Value(literal:'Angst with a Happy Ending')}, {'keyword': Value(literal:'Nakamaship')}, {'keyword': Value(literal:'sorta. def a hopeful ending')}, {'keyword': Value(literal:'youll probably figure out the au pretty fast')}, {'keyword': Value(literal:'Sticky Sex')}, {'keyword': Value(literal:'Size Kink')}, {'keyword': Value(literal:'Kaer Morhen')}, {'keyword': Value(literal:'NOT OMEGAVERSE')}, {'keyword': Value(literal:'Soft Eskel (The Witcher)')}, {'keyword': Value(literal:'Top Eskel (The Witcher)')}, {'keyword': Value(literal:'Lambert likes warmth')}, {'keyword': Value(literal:'but like not ABO heat')}, {'keyword': Value(literal:'just ""being very horny"" heat')}, {'keyword': Value(literal:'well ok with a little bit of plot')}, {'keyword': Value(literal:'Secrets')}, {'keyword': Value(literal:'Family Secrets')}, {'keyword': Value(literal:'Alcohol Abuse/Alcoholism')}, {'keyword': Value(literal:'Best Friends')}, {'keyword': Value(literal:'Feminization')}, {'keyword': Value(literal:'Recreational Drug Use')}, {'keyword': Value(literal:'True Love')}, {'keyword': Value(literal:'Puberty')}, {'keyword': Value(literal:'Inspired by Stranger Things (TV 2016)')}, {'keyword': Value(literal:'people change')}, {'keyword': Value(literal:'Bad Boys')}, {'keyword': Value(literal:'Bullies')}, {'keyword': Value(literal:'nerds')}, {'keyword': Value(literal:'Alpha Craig Tucker')}, {'keyword': Value(literal:'80s setting')}, {'keyword': Value(literal:'Omega Stan Marsh')}, {'keyword': Value(literal:'au eighties')}, {'keyword': Value(literal:'hormones going crazy')}, {'keyword': Value(literal:'Alternate Universe')}, {'keyword': Value(literal:'Growing Up')}, {'keyword': Value(literal:'Wings')}, {'keyword': Value(literal:'Wingfic')}, {'keyword': Value(literal:'POV Castiel')}, {'keyword': Value(literal:'Fledglings')}, {'keyword': Value(literal:'bad language')}, {'keyword': Value(literal:'FWP')}, {'keyword': Value(literal:'Porn With Very Little Plot')}, {'keyword': Value(literal:'not a lot of plot i am so sorry')}, {'keyword': Value(literal:'sweats intensely')}, {'keyword': Value(literal:'Adult Ciel Phantomhive')}, {'keyword': Value(literal:'aged-up ciel')}, {'keyword': Value(literal:'Sebatian POV')}, {'keyword': Value(literal:'butt sex as a plot device')}, {'keyword': Value(literal:""Topanga's"")}, {'keyword': Value(literal:'Omega Cloud Strife')}, {'keyword': Value(literal:'Alpha Sephiroth (Compilation of FFVII)')}, {'keyword': Value(literal:'Minor Zack Fair/Aerith Gainsborough')}, {'keyword': Value(literal:'Alternate Universe - Happy')}, {'keyword': Value(literal:'Minor Angeal Hewley/Genesis Rhapsodos')}, {'keyword': Value(literal:'Minor Rufus Shinra/Tseng')}, {'keyword': Value(literal:'Minor mentions of Leslie Kyle and Don Corneo')}, {'keyword': Value(literal:'Alternate Universe - Human')}, {'keyword': Value(literal:'Alternate Universe - Canon')}, {'keyword': Value(literal:'Cute')}, {'keyword': Value(literal:'Alpha Tony Stark')}, {'keyword': Value(literal:'Begging')}, {'keyword': Value(literal:'References to Knotting')}, {'keyword': Value(literal:'presenting')}, {'keyword': Value(literal:'Larry Stylinson Is Real')}, {'keyword': Value(literal:'Alternate Universe - Soulmates')}, {'keyword': Value(literal:'Bullying')}, {'keyword': Value(literal:'Canon Compliant')}, {'keyword': Value(literal:'Soulmarks')}, {'keyword': Value(literal:'Parental Yagi Toshinori | All Might')}, {'keyword': Value(literal:'Parental Aizawa Shouta | Eraserhead')}, {'keyword': Value(literal:'Quirk Discrimination (My Hero Academia)')}, {'keyword': Value(literal:'Nervous Midoriya Izuku')}, {'keyword': Value(literal:'Iida Tensei is the Best Brother')}, {'keyword': Value(literal:'Iida Tensei went to UA with Aizawa and Mic')}, {'keyword': Value(literal:'Backstory')}, {'keyword': Value(literal:'Sisterly bonding')}, {'keyword': Value(literal:'A look into the past')}, {'keyword': Value(literal:'veron temple')}, {'keyword': Value(literal:'Body Worship')}, {'keyword': Value(literal:'Lactation Kink')}, {'keyword': Value(literal:'Praise Kink')}, {'keyword': Value(literal:'Pregnancy Kink')}, {'keyword': Value(literal:'Squirting')}, {'keyword': Value(literal:'A/B/O')}, {'keyword': Value(literal:'Omegaverse')}, {'keyword': Value(literal:'Scent Kink')}, {'keyword': Value(literal:'Breeding Kink')}, {'keyword': Value(literal:'Impregnation Kink')}, {'keyword': Value(literal:'Alpha Sam')}, {'keyword': Value(literal:'Bottom Dean')}, {'keyword': Value(literal:'Top Castiel')}, {'keyword': Value(literal:'Top Sam')}, {'keyword': Value(literal:'Voyeurism')}, {'keyword': Value(literal:'Alpha Castiel')}, {'keyword': Value(literal:'Omega Dean')}, {'keyword': Value(literal:'Younger Dean')}, {'keyword': Value(literal:'College Student Sam')}, {'keyword': Value(literal:'College Student Castiel')}, {'keyword': Value(literal:'High School Student Dean')}, {'keyword': Value(literal:'Angst and Feels')}, {'keyword': Value(literal:'First Love')}, {'keyword': Value(literal:'Fred Weasley Lives')}, {'keyword': Value(literal:'Old Friends')}, {'keyword': Value(literal:'Vaginal Sex')}, {'keyword': Value(literal:'Explicit Consent')}, {'keyword': Value(literal:'Strap-Ons')}, {'keyword': Value(literal:'Trans Male Character')}, {'keyword': Value(literal:'Consent')}, {'keyword': Value(literal:'Queer Themes')}, {'keyword': Value(literal:'Age of Consent')}, {'keyword': Value(literal:'Originally Posted Elsewhere')}, {'keyword': Value(literal:'Queer Friendly')}, {'keyword': Value(literal:'Indian Character')}, {'keyword': Value(literal:'Canon Queer Character of Color')}, {'keyword': Value(literal:'Desi Character')}, {'keyword': Value(literal:'Demisexual Fred Weasley')}, {'keyword': Value(literal:'Fred and George have ADHD')}, {'keyword': Value(literal:'Gay Fred Weasley')}, {'keyword': Value(literal:'No bottom surgery trans male')}, {'keyword': Value(literal:'Post top surgery trans male')}, {'keyword': Value(literal:'Suicide')}, {'keyword': Value(literal:'Midoriya Izuku Does Not Have One for All Quirk')}, {'keyword': Value(literal:'Midoriya Izuku Does Not Go to U.A. High School')}, {'keyword': Value(literal:'Old Midoriya')}, {'keyword': Value(literal:'Todoroki but he never really worked through his daddy issues')}, {'keyword': Value(literal:'Bonding')}, {'keyword': Value(literal:'Alpha Victor Nikiforov')}, {'keyword': Value(literal:'Alpha Katsuki Yuuri')}, {'keyword': Value(literal:'No mpreg')}, {'keyword': Value(literal:""Character's Name Spelled as Viktor"")}, {'keyword': Value(literal:'Aged-Up Otabek Altin')}, {'keyword': Value(literal:'Aged-Up Yuri Plisetsky')}, {'keyword': Value(literal:'Omega Yuri Plisetsky')}, {'keyword': Value(literal:'also some angst')}, {'keyword': Value(literal:'brief mention of bad dragon in chapter one')}, {'keyword': Value(literal:'brief mentions of drugs and drug-related death')}, {'keyword': Value(literal:'brief mentions of past abuse/child abuse')}, {'keyword': Value(literal:'but it exists in universe')}, {'keyword': Value(literal:'lots of fun as you can imagine')}, {'keyword': Value(literal:'presenting is kinda like a sudden second puberty')}, {'keyword': Value(literal:'see individual chapter tags!')}, {'keyword': Value(literal:'this will be silly and fun')}, {'keyword': Value(literal:'Alternate Universe - Modern Setting')}, {'keyword': Value(literal:'Asexual Character')}, {'keyword': Value(literal:'Asexuality')}, {'keyword': Value(literal:'Dominance')}, {'keyword': Value(literal:'Power Play')}, {'keyword': Value(literal:'Punishment')}, {'keyword': Value(literal:'Submission')}, {'keyword': Value(literal:'Corporal Punishment')}, {'keyword': Value(literal:'Non-Sexual Submission')}, {'keyword': Value(literal:'TPE')}, {'keyword': Value(literal:'Community: glee_kink_meme')}, {'keyword': Value(literal:'Virginity')}, {'keyword': Value(literal:'Friends to Lovers')}, {'keyword': Value(literal:'Gentle Sex')}, {'keyword': Value(literal:'alpha udyr')}, {'keyword': Value(literal:'bottom lee sin')}, {'keyword': Value(literal:'daddy udyr')}, {'keyword': Value(literal:""lee sin didn't think he was an omega"")}, {'keyword': Value(literal:'lee sin self conscious that hes omega')}, {'keyword': Value(literal:'omega lee sin')}, {'keyword': Value(literal:'surprise! heat')}, {'keyword': Value(literal:'top udyr')}, {'keyword': Value(literal:'udyr reassures him')}, {'keyword': Value(literal:'First Dates')}, {'keyword': Value(literal:'Pre-Relationship')}, {'keyword': Value(literal:'Gay Awakening')}, {'keyword': Value(literal:'Olicity Hiatus Fic-A-Thon')}, {'keyword': Value(literal:'OHFAT')}, {'keyword': Value(literal:'Hand Job')}, {'keyword': Value(literal:'First Rut')}, {'keyword': Value(literal:'Alpha Grace')}, {'keyword': Value(literal:'Omega Dani')}, {'keyword': Value(literal:'ABO')}, {'keyword': Value(literal:'POV Second Person')}, {'keyword': Value(literal:'ABO dynamics')}, {'keyword': Value(literal:'Biting')}, {'keyword': Value(literal:'gender neutral reader')}, {'keyword': Value(literal:'aboverse')}, {'keyword': Value(literal:'excessive cum')}, {'keyword': Value(literal:'Reader is AFAB - Freeform')}, {'keyword': Value(literal:'Excessive Wetness')}, {'keyword': Value(literal:'Reader is an Omega but they think theyre a Beta')}, {'keyword': Value(literal:'This was stupid self indulgent')}, {'keyword': Value(literal:'prompt')}, {'keyword': Value(literal:'Alpha Harry')}, {'keyword': Value(literal:'Omega Louis')}, {'keyword': Value(literal:'Reader-Insert')}, {'keyword': Value(literal:'Childhood Memories')}, {'keyword': Value(literal:'Child Neglect')}, {'keyword': Value(literal:'Todoroki Shouto is a Dork')}, {'keyword': Value(literal:""Todoroki Enji | Endeavor's Bad Parenting"")}, {'keyword': Value(literal:'Todoroki Shouto is Bad at Feelings')}, {'keyword': Value(literal:'Reader Has a Quirk (My Hero Academia)')}, {'keyword': Value(literal:'Todoroki (My Hero Academia) Family Drama')}, {'keyword': Value(literal:'Quirkless Reader (My Hero Academia)')}, {'keyword': Value(literal:'No penetration')}, {'keyword': Value(literal:'Non-Graphic Smut')}, {'keyword': Value(literal:'POV Third Person Limited')}, {'keyword': Value(literal:'Past Tense')}, {'keyword': Value(literal:'Cussing')}, {'keyword': Value(literal:'Demisexual Character')}, {'keyword': Value(literal:'Awkward Sex Talk')}, {'keyword': Value(literal:'lots and lots of touching')}, {'keyword': Value(literal:'those last two tags are not related')}, {'keyword': Value(literal:'insecure Genos')}, {'keyword': Value(literal:'Omega!Genos')}, {'keyword': Value(literal:'POV flips between Saitama and Genos')}, {'keyword': Value(literal:'beta!Saitama')}, {'keyword': Value(literal:'bullshit cyborg biology/anatomy')}, {'keyword': Value(literal:'fangs')}, {'keyword': Value(literal:'danny phantom - Freeform')}, {'keyword': Value(literal:'DannyMay 2020 (Danny Phantom)')}, {'keyword': Value(literal:'Amity Park - Freeform')}, {'keyword': Value(literal:""u think the whole school would learn by now that he's diff"")}, {'keyword': Value(literal:'VAMPIRESSS')}, {'keyword': Value(literal:'danny gets fangs lol')}, {'keyword': Value(literal:'danny panics')}, {'keyword': Value(literal:'ghost puberty??')}, {'keyword': Value(literal:""he's still a ghost tho"")}, {'keyword': Value(literal:'idk i just like the concept')}, {'keyword': Value(literal:'vampire au i think')}, {'keyword': Value(literal:""lmao the girls in his school start thinking he's a vampire"")}, {'keyword': Value(literal:'Intercrural Sex')}, {'keyword': Value(literal:'Humilation')}, {'keyword': Value(literal:'Unrequited Crush')}, {'keyword': Value(literal:'Jealously')}, {'keyword': Value(literal:'Krypton')}, {'keyword': Value(literal:'Science Fiction')}, {'keyword': Value(literal:'Alien Biology')}, {'keyword': Value(literal:'Alpha Kara Danvers')}, {'keyword': Value(literal:'Omega Lena Luthor')}, {'keyword': Value(literal:'Kryptonian Biology')}, {'keyword': Value(literal:'Kryptonian Culture & Customs')}, {'keyword': Value(literal:'Epilogue added')}, {'keyword': Value(literal:'emphasis on the science')}, {'keyword': Value(literal:'Alpha Jason')}, {'keyword': Value(literal:'Beta/Beta')}, {'keyword': Value(literal:'Biology')}, {'keyword': Value(literal:'1x04')}, {'keyword': Value(literal:'A Twist Of Fate')}, {'keyword': Value(literal:'Python - Freeform')}, {'keyword': Value(literal:'Jagoras')}, {'keyword': Value(literal:'Boys In Love')}, {'keyword': Value(literal:'Boys Kissing')}, {'keyword': Value(literal:'Fluff and Hurt/Comfort')}, {'keyword': Value(literal:'Missing Scene')}, {'keyword': Value(literal:'just this once')}, {'keyword': Value(literal:'David Rose is a Good Person')}, {'keyword': Value(literal:'Patrick Brewer loves David Rose')}, {'keyword': Value(literal:'Episode continuation')}, {'keyword': Value(literal:'David Rose Loves Patrick Brewer')}, {'keyword': Value(literal:'Baby Gay Patrick Brewer')}, {'keyword': Value(literal:'David Rose is a troll')}, {'keyword': Value(literal:'Patrick Brewer is Gay')}, {'keyword': Value(literal:'Post-Episode: s05e05 Housewarming')}, {'keyword': Value(literal:'This can be read as')}, {'keyword': Value(literal:'Trans Patrick Brewer')}, {'keyword': Value(literal:'Extremely Dubious Consent')}, {'keyword': Value(literal:'Emotional Hurt/Comfort')}, {'keyword': Value(literal:'Post-Canon')}, {'keyword': Value(literal:'Pre-Canon')}, {'keyword': Value(literal:'Sexual Content')}, {'keyword': Value(literal:'Eventual Fluff')}, {'keyword': Value(literal:'Alpha Kambe Daisuke')}, {'keyword': Value(literal:'Omega Katou Haru')}, {'keyword': Value(literal:'Brief MPreg')}, {'keyword': Value(literal:'sterile omega')}, {'keyword': Value(literal:'Dildos')}, {'keyword': Value(literal:'Prostate Massage')}, {'keyword': Value(literal:'Sexual Fantasy')}, {'keyword': Value(literal:'Masturbation in Shower')}, {'keyword': Value(literal:'Scents & Smells')}, {'keyword': Value(literal:'Claiming Bites')}, {'keyword': Value(literal:'Knotting Dildos')}, {'keyword': Value(literal:'Alpha/Beta')}, {'keyword': Value(literal:'Breathplay')}, {'keyword': Value(literal:'Come Eating')}, {'keyword': Value(literal:'Finger Sucking')}, {'keyword': Value(literal:'Kissing')}, {'keyword': Value(literal:'Soul Bond')}, {'keyword': Value(literal:'Teasing')}, {'keyword': Value(literal:'Levi with Piercings & Glasses')}, {'keyword': Value(literal:'Minor Alcohol/Drug Reference')}, {'keyword': Value(literal:'Non-Consensual Voyeurism')}, {'keyword': Value(literal:'Self-cest')}, {'keyword': Value(literal:'Sexual Frustration')}, {'keyword': Value(literal:'Baby Bruce is my weakness')}, {'keyword': Value(literal:'Blood')}, {'keyword': Value(literal:'Body Horror')}, {'keyword': Value(literal:'Complicated Relationships')}, {'keyword': Value(literal:'Drama')}, {'keyword': Value(literal:'Emotional Baggage')}, {'keyword': Value(literal:'Family Drama')}, {'keyword': Value(literal:'Hurt No Comfort')}, {'keyword': Value(literal:'One-Sided Attraction')}, {'keyword': Value(literal:'Werewolves')}, {'keyword': Value(literal:'Brothers')}, {'keyword': Value(literal:'Dysfunctional Family')}, {'keyword': Value(literal:'Dysfunctional Relationships')}, {'keyword': Value(literal:'Gore')}, {'keyword': Value(literal:'Hanahaki Disease')}, {'keyword': Value(literal:'Hurt')}, {'keyword': Value(literal:'Vomiting')}, {'keyword': Value(literal:'Internal Conflict')}, {'keyword': Value(literal:'Flowers')}, {'keyword': Value(literal:'Verbal Abuse')}, {'keyword': Value(literal:'Abusive Parents')}, {'keyword': Value(literal:'complicated feelings')}, {'keyword': Value(literal:'Timeskips')}, {'keyword': Value(literal:'Flower Symbolism')}, {'keyword': Value(literal:'things are messy')}, {'keyword': Value(literal:'partially follows the canon')}, {'keyword': Value(literal:'taking some liberties with the hanahaki trope')}]"	0	1	1
52	52	en	What are the keywords of Tequila Sunrise?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT  (GROUP_CONCAT(DISTINCT ?keyword; separator="", "") AS ?keywords ) WHERE {  ?story golem:title ""Tequila Sunrise"" . ?story golem:keyword ?keyword . }"	"[{'keywords': Value(literal:""(Possible) Infidelity, 13 Days of Clexa, 31 Days of Fanfiction Challenge, A teeny tiny fic to release me from my slumber, AU, Additional Warnings In Author's Note, Aftercare, Age Difference, Aged-Up Character(s), Album: Fine Line (Harry Styles), Alcohol, Alcohol Abuse/Alcoholism, Alien Biology, Alien Sex, Aliens, Alternate Canon, Alternate Reality, Alternate Universe, Alternate Universe - Aliens, Alternate Universe - Bar/Pub, Alternate Universe - College/University, Alternate Universe - Everyone Lives/Nobody Dies, Alternate Universe - Human, Alternate Universe - Idols, Alternate Universe - Modern Setting, Alternate Universe - No Quirks (My Hero Academia), Alternate Universe - Pro Heroes (My Hero Academia), Alternate Universe - Supernatural Elements, Alternate Universe - Vampire, Ambiguous Relationships, Anal Sex, Angst, Angst with a Happy Ending, Antifans, Attempted Murder, BTS is 6, Bartender AU, Betrayal, Biting, Blood, Blood Drinking, Blood and Injury, Blow Jobs, Bottom Park Jimin (BTS), Busan buddies, Canon Compliant, Character Study, Choking, Clextober, Clextober 2019, Clubbing, Coming Out, Community: Iyhedonism, Condoms, Consensual Somnophilia, Crack, Creampie, Crossdressing, Cuddling & Snuggling, Daddy Kink, Dancer Park Jimin (BTS), Day 8: Vampires/Werewolves, Diners, Drama, Drink, Drinking, Drunk Sex, Drunken Flirting, Drunken Shenanigans, Drunkenness, Dry Humping, Dubious Morality, Eden's Twilight, Emotional Hurt/Comfort, Emotions, Enemies to Friends to Lovers, Established Relationship, Explicit Language, Explicit Sexual Content, Fake Marriage, Fake/Pretend Relationship, Fame, Famous BTS, Fanboy Jimin, Female Harry Potter, First Meetings, Flirting, Fluff, Fluff and Angst, Fluff and Humor, Fluff and Smut, Fluffy Ending, Forgiveness, French Kissing, Friendship/Love, Frottage, Future Angst, Future Fic, Gay, Getting Together, Girls' Night Out, Gore, Graham's dad was a horrible person, Group chat, Hangover, Happy Ending, Hiding, Horror, Human Sides (Sanders Sides), Human/Vampire Relationship, Hurt/Comfort, Idol Jeon Jungkook, Idol Jung Hoseok | J-Hope, Idol Kim Namjoon | RM, Idol Kim Seokjin | Jin, Idol Kim Taehyung | V, Idol Min Yoongi | Suga, Immortality, Implied Sexual Content, Implied/Referenced Dubious Consent, It's Not Crack I Swear, Italian family, Jealousy, Karaoke, Kidnapping, Kissing, Knifeplay, Las Vegas, Learning to accept the fact that you aren't as straight as your dad wanted you to be, Light Angst, Light Bondage, Long Distance Relationship, Long haired Jaehyo wowie, Lots of Andrew staring at neil and feeling v overwhelmed for various reasons, Love Poems, Makeup Sex, Male-Female Friendship, Master of Death Harry Potter, Masturbation, Meet-Cute, Mental Breakdown, Mentions of drugs, Mentions of the time neil got drugged, Mildly Dubious Consent, Min Yoongi | Suga Is a Good Hyung, Min Yoongi | Suga is Bad at Feelings, Mind Sex, Minor Injuries, Minor Jeon Jungkook/Park Jimin, Misunderstandings, Mollisian, Mood Swings, Motorbike Keith is best Keith, Musician Harry, Mutual Pining, NSFW, Neil josten is a menace, Non-Consensual Drug Use, Non-Famous Liam Payne, Not Really Character Death, One Night Stands, Oral Sex, Originally Posted on Tumblr, POV Andrew Minyard, Partying, Pining, Plot What Plot/Porn Without Plot, Polyamory, Porn With Plot, Possession, Post-Canon, Pre-Relationship, Pre-Series, Pro Hero Bakugou Katsuki, Probably ooc, Rare Pairings, Reader-Insert, Reader-Interactive, Red Romance, Rhink Summer Ficathon 2k16, Rivalry, Romance, Rough Kissing, Rough Sex, San Francisco Lovers (Blaseball Team), Semi-Public Sex, Sex, Sexual Content, Sexual Tension, Shapeshifting, Short One Shot, Slow Burn, Smut, Somewhere in between tbh, Spin the Bottle, Strangers, Supernatural Elements, Swearing, Tequila, They’re not playing Wordle bc it’s like 2007 but also they’re kind of playing wordle, Threesome - F/M/M, Thriller, Too much fluff, Top Min Yoongi | Suga, Torture, Touchy-Feely, Trans Character, Trans Male Character, Trans Takami Keigo | Hawks, Tumblr Prompt, Two Emotionally Troubled Idiots In Love, Unprotected Sex, Unrequited Love, Vaginal Fingering, Vaginal Sex, Vague Mentions of Past Abuse, Vampire Bites, Vampires, Voyeurism, Wanderers, Witches, alcohol mention, alien!John, alien!lock, and the uswnt, angst? I haven't decided yet, cross-over, did I mention that Sherlock and John are aliens?, drunk Neil is a woo girl, hobi is a dancer, human!Lestrade, i don't want to spoil so much, idol fan relationship, internalised issues, mentions of hate speech towards yoongi, no beta we're just gonna die, platonic namkook, platonic taegi, practically love at first sight, prompt: sunrise, remembering, rm and hobi live in the states, selfindulging, sex mention, slow morning, smut is mentioned, soft shit, tae is a painter, taekook, the elephant painting, the rest in seoul, tw car accident, ucla roster as other characters, unflattering German soldiers aka nazis, vmin are best bros, we'll see if I have time, whipped everything, whipped vhope, yoongi and jin live together, yoonmin, 吸血鬼au"")}]"	52	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does What the Future Holds have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""What the Future Holds"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: What are the keywords of Tequila Sunrise?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?keyword WHERE { 
?story golem:title ""Tequila Sunrise"" . 
?story golem:keyword ?keyword . 
}
"	"[{'keyword': Value(literal:'Age Difference')}, {'keyword': Value(literal:'Character Study')}, {'keyword': Value(literal:'Romance')}, {'keyword': Value(literal:'Non-Consensual Drug Use')}, {'keyword': Value(literal:'Angst')}, {'keyword': Value(literal:'Canon Compliant')}, {'keyword': Value(literal:'Fluff')}, {'keyword': Value(literal:'Fluff and Angst')}, {'keyword': Value(literal:'Alcohol')}, {'keyword': Value(literal:'Minor Jeon Jungkook/Park Jimin')}, {'keyword': Value(literal:'Aged-Up Character(s)')}, {'keyword': Value(literal:'Drinking')}, {'keyword': Value(literal:'Explicit Language')}, {'keyword': Value(literal:'Fluff and Smut')}, {'keyword': Value(literal:'Oral Sex')}, {'keyword': Value(literal:'Condoms')}, {'keyword': Value(literal:'Pro Hero Bakugou Katsuki')}, {'keyword': Value(literal:'Alternate Universe - Pro Heroes (My Hero Academia)')}, {'keyword': Value(literal:'Probably ooc')}, {'keyword': Value(literal:""no beta we're just gonna die"")}, {'keyword': Value(literal:'Alternate Universe - Modern Setting')}, {'keyword': Value(literal:'Tumblr Prompt')}, {'keyword': Value(literal:'Dry Humping')}, {'keyword': Value(literal:'Unprotected Sex')}, {'keyword': Value(literal:'Drink')}, {'keyword': Value(literal:'NSFW')}, {'keyword': Value(literal:'San Francisco Lovers (Blaseball Team)')}, {'keyword': Value(literal:'Alternate Universe - Human')}, {'keyword': Value(literal:'Diners')}, {'keyword': Value(literal:'Future Angst')}, {'keyword': Value(literal:'Motorbike Keith is best Keith')}, {'keyword': Value(literal:'Vampires')}, {'keyword': Value(literal:'Clextober')}, {'keyword': Value(literal:'Clextober 2019')}, {'keyword': Value(literal:'13 Days of Clexa')}, {'keyword': Value(literal:'Day 8: Vampires/Werewolves')}, {'keyword': Value(literal:'Betrayal')}, {'keyword': Value(literal:'Female Harry Potter')}, {'keyword': Value(literal:'Friendship/Love')}, {'keyword': Value(literal:'Horror')}, {'keyword': Value(literal:'Master of Death Harry Potter')}, {'keyword': Value(literal:'Unrequited Love')}, {'keyword': Value(literal:'Attempted Murder')}, {'keyword': Value(literal:'Male-Female Friendship')}, {'keyword': Value(literal:'Possession')}, {'keyword': Value(literal:'Thriller')}, {'keyword': Value(literal:'cross-over')}, {'keyword': Value(literal:'Bartender AU')}, {'keyword': Value(literal:'Mentions of drugs')}, {'keyword': Value(literal:'Long haired Jaehyo wowie')}, {'keyword': Value(literal:'吸血鬼au')}, {'keyword': Value(literal:'Alien Sex')}, {'keyword': Value(literal:'Alternate Universe')}, {'keyword': Value(literal:'Cuddling & Snuggling')}, {'keyword': Value(literal:'Emotional Hurt/Comfort')}, {'keyword': Value(literal:'Hurt/Comfort')}, {'keyword': Value(literal:'Kidnapping')}, {'keyword': Value(literal:'Light Angst')}, {'keyword': Value(literal:'Mind Sex')}, {'keyword': Value(literal:'Shapeshifting')}, {'keyword': Value(literal:'Torture')}, {'keyword': Value(literal:'Alien Biology')}, {'keyword': Value(literal:'Fluffy Ending')}, {'keyword': Value(literal:'Makeup Sex')}, {'keyword': Value(literal:'Aliens')}, {'keyword': Value(literal:'Emotions')}, {'keyword': Value(literal:'Touchy-Feely')}, {'keyword': Value(literal:'Alternate Universe - Aliens')}, {'keyword': Value(literal:""It's Not Crack I Swear"")}, {'keyword': Value(literal:'alien!lock')}, {'keyword': Value(literal:'Mollisian')}, {'keyword': Value(literal:'alien!John')}, {'keyword': Value(literal:'did I mention that Sherlock and John are aliens?')}, {'keyword': Value(literal:'human!Lestrade')}, {'keyword': Value(literal:""Additional Warnings In Author's Note"")}, {'keyword': Value(literal:'Alternate Universe - College/University')}, {'keyword': Value(literal:'Alternate Universe - No Quirks (My Hero Academia)')}, {'keyword': Value(literal:'Alternate Universe - Vampire')}, {'keyword': Value(literal:'Ambiguous Relationships')}, {'keyword': Value(literal:'Blood')}, {'keyword': Value(literal:'Blood Drinking')}, {'keyword': Value(literal:'Blood and Injury')}, {'keyword': Value(literal:'Drunken Flirting')}, {'keyword': Value(literal:'Drunkenness')}, {'keyword': Value(literal:'Masturbation')}, {'keyword': Value(literal:'Minor Injuries')}, {'keyword': Value(literal:'Mutual Pining')}, {'keyword': Value(literal:'Pre-Relationship')}, {'keyword': Value(literal:'Smut')}, {'keyword': Value(literal:'Trans Character')}, {'keyword': Value(literal:'Vampire Bites')}, {'keyword': Value(literal:'Voyeurism')}, {'keyword': Value(literal:'Biting')}, {'keyword': Value(literal:'Immortality')}, {'keyword': Value(literal:'Human/Vampire Relationship')}, {'keyword': Value(literal:'Trans Male Character')}, {'keyword': Value(literal:'Consensual Somnophilia')}, {'keyword': Value(literal:'Hangover')}, {'keyword': Value(literal:'Trans Takami Keigo | Hawks')}, {'keyword': Value(literal:'Kissing')}, {'keyword': Value(literal:'Post-Canon')}, {'keyword': Value(literal:'Partying')}, {'keyword': Value(literal:'POV Andrew Minyard')}, {'keyword': Value(literal:'soft shit')}, {'keyword': Value(literal:'Vague Mentions of Past Abuse')}, {'keyword': Value(literal:'Lots of Andrew staring at neil and feeling v overwhelmed for various reasons')}, {'keyword': Value(literal:""Eden's Twilight"")}, {'keyword': Value(literal:'They’re not playing Wordle bc it’s like 2007 but also they’re kind of playing wordle')}, {'keyword': Value(literal:'Mentions of the time neil got drugged')}, {'keyword': Value(literal:'Neil josten is a menace')}, {'keyword': Value(literal:'drunk Neil is a woo girl')}, {'keyword': Value(literal:'Angst with a Happy Ending')}, {'keyword': Value(literal:'Not Really Character Death')}, {'keyword': Value(literal:'Karaoke')}, {'keyword': Value(literal:'slow morning')}, {'keyword': Value(literal:'selfindulging')}, {'keyword': Value(literal:'Alternate Canon')}, {'keyword': Value(literal:'Anal Sex')}, {'keyword': Value(literal:'Creampie')}, {'keyword': Value(literal:'Drunk Sex')}, {'keyword': Value(literal:'Frottage')}, {'keyword': Value(literal:'Swearing')}, {'keyword': Value(literal:'Alternate Universe - Everyone Lives/Nobody Dies')}, {'keyword': Value(literal:'Established Relationship')}, {'keyword': Value(literal:'Polyamory')}, {'keyword': Value(literal:'Rare Pairings')}, {'keyword': Value(literal:'Alternate Reality')}, {'keyword': Value(literal:'Enemies to Friends to Lovers')}, {'keyword': Value(literal:'Rivalry')}, {'keyword': Value(literal:'and the uswnt')}, {'keyword': Value(literal:""angst? I haven't decided yet"")}, {'keyword': Value(literal:'ucla roster as other characters')}, {'keyword': Value(literal:""we'll see if I have time"")}, {'keyword': Value(literal:'One Night Stands')}, {'keyword': Value(literal:'Drunken Shenanigans')}, {'keyword': Value(literal:'sex mention')}, {'keyword': Value(literal:'Originally Posted on Tumblr')}, {'keyword': Value(literal:'alcohol mention')}, {'keyword': Value(literal:'Human Sides (Sanders Sides)')}, {'keyword': Value(literal:'Short One Shot')}, {'keyword': Value(literal:'Tequila')}, {'keyword': Value(literal:""Girls' Night Out"")}, {'keyword': Value(literal:'31 Days of Fanfiction Challenge')}, {'keyword': Value(literal:'Future Fic')}, {'keyword': Value(literal:'Happy Ending')}, {'keyword': Value(literal:'Forgiveness')}, {'keyword': Value(literal:'(Possible) Infidelity')}, {'keyword': Value(literal:'Crossdressing')}, {'keyword': Value(literal:'Gore')}, {'keyword': Value(literal:'Dubious Morality')}, {'keyword': Value(literal:'unflattering German soldiers aka nazis')}, {'keyword': Value(literal:'Implied Sexual Content')}, {'keyword': Value(literal:'Implied/Referenced Dubious Consent')}, {'keyword': Value(literal:'Jealousy')}, {'keyword': Value(literal:'Mildly Dubious Consent')}, {'keyword': Value(literal:'Reader-Insert')}, {'keyword': Value(literal:'Sexual Content')}, {'keyword': Value(literal:'Reader-Interactive')}, {'keyword': Value(literal:'Las Vegas')}, {'keyword': Value(literal:'remembering')}, {'keyword': Value(literal:'Threesome - F/M/M')}, {'keyword': Value(literal:'Bottom Park Jimin (BTS)')}, {'keyword': Value(literal:'Mental Breakdown')}, {'keyword': Value(literal:'Slow Burn')}, {'keyword': Value(literal:'Top Min Yoongi | Suga')}, {'keyword': Value(literal:'Alternate Universe - Idols')}, {'keyword': Value(literal:'Clubbing')}, {'keyword': Value(literal:'taekook')}, {'keyword': Value(literal:'Mood Swings')}, {'keyword': Value(literal:'yoonmin')}, {'keyword': Value(literal:'Idol Kim Taehyung | V')}, {'keyword': Value(literal:'Idol Jeon Jungkook')}, {'keyword': Value(literal:'Min Yoongi | Suga is Bad at Feelings')}, {'keyword': Value(literal:'Fame')}, {'keyword': Value(literal:'Dancer Park Jimin (BTS)')}, {'keyword': Value(literal:'Min Yoongi | Suga Is a Good Hyung')}, {'keyword': Value(literal:'Idol Min Yoongi | Suga')}, {'keyword': Value(literal:'Idol Jung Hoseok | J-Hope')}, {'keyword': Value(literal:'Idol Kim Namjoon | RM')}, {'keyword': Value(literal:'Idol Kim Seokjin | Jin')}, {'keyword': Value(literal:'platonic namkook')}, {'keyword': Value(literal:'platonic taegi')}, {'keyword': Value(literal:""i don't want to spoil so much"")}, {'keyword': Value(literal:'Fanboy Jimin')}, {'keyword': Value(literal:'Famous BTS')}, {'keyword': Value(literal:'Antifans')}, {'keyword': Value(literal:'BTS is 6')}, {'keyword': Value(literal:'Busan buddies')}, {'keyword': Value(literal:'idol fan relationship')}, {'keyword': Value(literal:'mentions of hate speech towards yoongi')}, {'keyword': Value(literal:'Aftercare')}, {'keyword': Value(literal:'Group chat')}, {'keyword': Value(literal:'Spin the Bottle')}, {'keyword': Value(literal:'Long Distance Relationship')}, {'keyword': Value(literal:'Too much fluff')}, {'keyword': Value(literal:'smut is mentioned')}, {'keyword': Value(literal:'vmin are best bros')}, {'keyword': Value(literal:'hobi is a dancer')}, {'keyword': Value(literal:'practically love at first sight')}, {'keyword': Value(literal:'rm and hobi live in the states')}, {'keyword': Value(literal:'tae is a painter')}, {'keyword': Value(literal:'the rest in seoul')}, {'keyword': Value(literal:'whipped everything')}, {'keyword': Value(literal:'whipped vhope')}, {'keyword': Value(literal:'yoongi and jin live together')}, {'keyword': Value(literal:'A teeny tiny fic to release me from my slumber')}, {'keyword': Value(literal:'Choking')}, {'keyword': Value(literal:'Daddy Kink')}, {'keyword': Value(literal:'Explicit Sexual Content')}, {'keyword': Value(literal:'Knifeplay')}, {'keyword': Value(literal:'Light Bondage')}, {'keyword': Value(literal:'Plot What Plot/Porn Without Plot')}, {'keyword': Value(literal:'Porn With Plot')}, {'keyword': Value(literal:'Rough Sex')}, {'keyword': Value(literal:'Sex')}, {'keyword': Value(literal:'Vaginal Fingering')}, {'keyword': Value(literal:'Vaginal Sex')}, {'keyword': Value(literal:'Somewhere in between tbh')}, {'keyword': Value(literal:'Pre-Series')}, {'keyword': Value(literal:'Alternate Universe - Supernatural Elements')}, {'keyword': Value(literal:'French Kissing')}, {'keyword': Value(literal:'Rough Kissing')}, {'keyword': Value(literal:'Sexual Tension')}, {'keyword': Value(literal:'Supernatural Elements')}, {'keyword': Value(literal:'Witches')}, {'keyword': Value(literal:'Red Romance')}, {'keyword': Value(literal:'Wanderers')}, {'keyword': Value(literal:'Italian family')}, {'keyword': Value(literal:'Blow Jobs')}, {'keyword': Value(literal:'Fluff and Humor')}, {'keyword': Value(literal:'Semi-Public Sex')}, {'keyword': Value(literal:'Meet-Cute')}, {'keyword': Value(literal:'First Meetings')}, {'keyword': Value(literal:'Alternate Universe - Bar/Pub')}, {'keyword': Value(literal:'Musician Harry')}, {'keyword': Value(literal:'Album: Fine Line (Harry Styles)')}, {'keyword': Value(literal:'Non-Famous Liam Payne')}, {'keyword': Value(literal:'Coming Out')}, {'keyword': Value(literal:'Gay')}, {'keyword': Value(literal:'Love Poems')}, {'keyword': Value(literal:'Pining')}, {'keyword': Value(literal:'Hiding')}, {'keyword': Value(literal:'Drama')}, {'keyword': Value(literal:'Getting Together')}, {'keyword': Value(literal:'Two Emotionally Troubled Idiots In Love')}, {'keyword': Value(literal:'the elephant painting')}, {'keyword': Value(literal:'tw car accident')}, {'keyword': Value(literal:'AU')}, {'keyword': Value(literal:'Crack')}, {'keyword': Value(literal:'Community: Iyhedonism')}, {'keyword': Value(literal:'Fake Marriage')}, {'keyword': Value(literal:'Fake/Pretend Relationship')}, {'keyword': Value(literal:'internalised issues')}, {'keyword': Value(literal:""Learning to accept the fact that you aren't as straight as your dad wanted you to be"")}, {'keyword': Value(literal:""Graham's dad was a horrible person"")}, {'keyword': Value(literal:'Alcohol Abuse/Alcoholism')}, {'keyword': Value(literal:'Misunderstandings')}, {'keyword': Value(literal:'Flirting')}, {'keyword': Value(literal:'Strangers')}, {'keyword': Value(literal:'prompt: sunrise')}, {'keyword': Value(literal:'Rhink Summer Ficathon 2k16')}]"	0	1	1
53	53	en	What are the keywords of It never entered my mind?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT  (GROUP_CONCAT(DISTINCT ?keyword; separator="", "") AS ?keywords ) WHERE {  ?story golem:title ""It never entered my mind"" . ?story golem:keyword ?keyword . }"	[{'keywords': Value(literal:'Alternate Universe - Ilvermorny, Developing Relationship, Enemies to Friends to Lovers, Ilvermorny, Post-Battle of Hogwarts, Post-War, Professors')}]	53	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does What the Future Holds have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""What the Future Holds"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: What are the keywords of It never entered my mind?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?keyword WHERE { 
?story golem:title ""It never entered my mind"" . 
?story golem:keyword ?keyword . 
}
"	[{'keyword': Value(literal:'Developing Relationship')}, {'keyword': Value(literal:'Enemies to Friends to Lovers')}, {'keyword': Value(literal:'Post-Battle of Hogwarts')}, {'keyword': Value(literal:'Post-War')}, {'keyword': Value(literal:'Professors')}, {'keyword': Value(literal:'Ilvermorny')}, {'keyword': Value(literal:'Alternate Universe - Ilvermorny')}]	0	1	1
54	54	en	What are the keywords of All was right?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT  (GROUP_CONCAT(DISTINCT ?keyword; separator="", "") AS ?keywords ) WHERE {  ?story golem:title ""All was right"" . ?story golem:keyword ?keyword . }"	[{'keywords': Value(literal:'Cuddling & Snuggling, Emotional Hurt/Comfort, First Kiss, Hogwarts, Hurt/Comfort, Idiots in Love, Love Confessions, Marauders Era (Harry Potter), Sharing a Bed, remus is overly emotional, sirius is oblivious, wolfstar')}]	54	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does What the Future Holds have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""What the Future Holds"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: What are the keywords of All was right?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?keyword WHERE { 
  ?story golem:title ""All was right"" . 
  ?story golem:keyword ?keyword . 
}
"	[{'keyword': Value(literal:'Cuddling & Snuggling')}, {'keyword': Value(literal:'Emotional Hurt/Comfort')}, {'keyword': Value(literal:'First Kiss')}, {'keyword': Value(literal:'Hurt/Comfort')}, {'keyword': Value(literal:'Idiots in Love')}, {'keyword': Value(literal:'Love Confessions')}, {'keyword': Value(literal:'Marauders Era (Harry Potter)')}, {'keyword': Value(literal:'Sharing a Bed')}, {'keyword': Value(literal:'wolfstar')}, {'keyword': Value(literal:'Hogwarts')}, {'keyword': Value(literal:'sirius is oblivious')}, {'keyword': Value(literal:'remus is overly emotional')}]	0	1	1
55	55	en	What are the keywords of Not your greatest virtue?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT  (GROUP_CONCAT(DISTINCT ?keyword; separator="", "") AS ?keywords ) WHERE {  ?story golem:title ""Not your greatest virtue"" . ?story golem:keyword ?keyword . }"	[{'keywords': Value(literal:'Alternate Universe - Voldemort Wins, Confessions, Dark, Evil Wins, Family Dinners, Father-Daughter Relationship, Fluff, Flufftober, Mother-Daughter Relationship, Plans For The Future, Secret Crush, Sequel, Vampire Barty Crouch Junior')}]	55	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does What the Future Holds have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""What the Future Holds"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: What are the keywords of Not your greatest virtue?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?keyword WHERE { 
?story golem:title ""Not your greatest virtue"" . 
?story golem:keyword ?keyword . 
}
"	[{'keyword': Value(literal:'Alternate Universe - Voldemort Wins')}, {'keyword': Value(literal:'Confessions')}, {'keyword': Value(literal:'Dark')}, {'keyword': Value(literal:'Family Dinners')}, {'keyword': Value(literal:'Fluff')}, {'keyword': Value(literal:'Secret Crush')}, {'keyword': Value(literal:'Father-Daughter Relationship')}, {'keyword': Value(literal:'Sequel')}, {'keyword': Value(literal:'Plans For The Future')}, {'keyword': Value(literal:'Mother-Daughter Relationship')}, {'keyword': Value(literal:'Flufftober')}, {'keyword': Value(literal:'Evil Wins')}, {'keyword': Value(literal:'Vampire Barty Crouch Junior')}]	0	1	1
56	56	en	What are the keywords of This Town Is Only Gonna Get Worse?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT  (GROUP_CONCAT(DISTINCT ?keyword; separator="", "") AS ?keywords ) WHERE {  ?story golem:title ""This Town Is Only Gonna Get Worse"" . ?story golem:keyword ?keyword . }"	[{'keywords': Value(literal:'Depression, Emotional/Psychological Abuse, Implied/Referenced Child Abuse, Lack of Communication')}]	56	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does What the Future Holds have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""What the Future Holds"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: What are the keywords of This Town Is Only Gonna Get Worse?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/>  
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?keyword WHERE { 
?story golem:title ""This Town Is Only Gonna Get Worse"" . 
?story golem:keyword ?keyword . 
}
"	[{'keyword': Value(literal:'Depression')}, {'keyword': Value(literal:'Emotional/Psychological Abuse')}, {'keyword': Value(literal:'Implied/Referenced Child Abuse')}, {'keyword': Value(literal:'Lack of Communication')}]	0	1	1
69	69	en	How many chapters does Prologue have?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Prologue"" . ?story golem:numberOfChapters ?chapters . }"	[{'chapters': Value(typed-literal:'1')}, {'chapters': Value(typed-literal:'2')}, {'chapters': Value(typed-literal:'12')}, {'chapters': Value(typed-literal:'3')}, {'chapters': Value(typed-literal:'7')}, {'chapters': Value(typed-literal:'8')}, {'chapters': Value(typed-literal:'11')}, {'chapters': Value(typed-literal:'4')}, {'chapters': Value(typed-literal:'5')}, {'chapters': Value(typed-literal:'22')}, {'chapters': Value(typed-literal:'39')}, {'chapters': Value(typed-literal:'51')}, {'chapters': Value(typed-literal:'52')}, {'chapters': Value(typed-literal:'6')}, {'chapters': Value(typed-literal:'10')}, {'chapters': Value(typed-literal:'29')}]	69	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does What the Future Holds have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""What the Future Holds"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: How many chapters does Prologue have?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?chapters WHERE { 
?story golem:title ""Prologue"" . 
?story golem:numberOfChapters ?chapters . 
}
"	[{'chapters': Value(typed-literal:'1')}, {'chapters': Value(typed-literal:'2')}, {'chapters': Value(typed-literal:'12')}, {'chapters': Value(typed-literal:'3')}, {'chapters': Value(typed-literal:'7')}, {'chapters': Value(typed-literal:'8')}, {'chapters': Value(typed-literal:'11')}, {'chapters': Value(typed-literal:'4')}, {'chapters': Value(typed-literal:'5')}, {'chapters': Value(typed-literal:'22')}, {'chapters': Value(typed-literal:'39')}, {'chapters': Value(typed-literal:'51')}, {'chapters': Value(typed-literal:'52')}, {'chapters': Value(typed-literal:'6')}, {'chapters': Value(typed-literal:'10')}, {'chapters': Value(typed-literal:'29')}]	1	0	0
70	70	en	How many chapters does The Dark Phoenix Spies have?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""The Dark Phoenix Spies"" . ?story golem:numberOfChapters ?chapters . }"	[{'chapters': Value(typed-literal:'2')}]	70	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does What the Future Holds have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""What the Future Holds"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: How many chapters does The Dark Phoenix Spies have?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?chapters WHERE { 
?story golem:title ""The Dark Phoenix Spies"" . 
?story golem:numberOfChapters ?chapters . 
}
"	[{'chapters': Value(typed-literal:'2')}]	1	0	0
71	71	en	How many chapters does Interlude: Nothing But Memory have?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Interlude: Nothing But Memory"" . ?story golem:numberOfChapters ?chapters . }"	[{'chapters': Value(typed-literal:'1')}]	71	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does What the Future Holds have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""What the Future Holds"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: How many chapters does Interlude: Nothing But Memory have?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?chapters WHERE { 
?story golem:title ""Interlude: Nothing But Memory"" . 
?story golem:numberOfChapters ?chapters . 
}
"	[{'chapters': Value(typed-literal:'1')}]	1	0	0
72	72	en	How many chapters does Resolutions Worth Keeping have?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Resolutions Worth Keeping"" . ?story golem:numberOfChapters ?chapters . }"	[{'chapters': Value(typed-literal:'1')}]	72	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does What the Future Holds have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""What the Future Holds"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: How many chapters does Resolutions Worth Keeping have?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?chapters WHERE { 
?story golem:title ""Resolutions Worth Keeping"" . 
?story golem:numberOfChapters ?chapters . 
}
"	[{'chapters': Value(typed-literal:'1')}]	1	0	0
73	73	en	How many chapters does Guardian of Hogwarts have?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }"	[{'chapters': Value(typed-literal:'1')}, {'chapters': Value(typed-literal:'17')}]	73	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does What the Future Holds have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""What the Future Holds"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: How many chapters does Guardian of Hogwarts have?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?chapters WHERE { 
?story golem:title ""Guardian of Hogwarts"" . 
?story golem:numberOfChapters ?chapters . 
}
"	[{'chapters': Value(typed-literal:'1')}, {'chapters': Value(typed-literal:'17')}]	1	0	0
74	74	en	How many chapters does What the Future Holds have?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""What the Future Holds"" . ?story golem:numberOfChapters ?chapters . }"	[{'chapters': Value(typed-literal:'1')}, {'chapters': Value(typed-literal:'9')}, {'chapters': Value(typed-literal:'2')}, {'chapters': Value(typed-literal:'6')}, {'chapters': Value(typed-literal:'4')}, {'chapters': Value(typed-literal:'8')}, {'chapters': Value(typed-literal:'5')}, {'chapters': Value(typed-literal:'17')}, {'chapters': Value(typed-literal:'3')}, {'chapters': Value(typed-literal:'25')}]	74	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: How many chapters does What the Future Holds have?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?chapters WHERE { 
?story golem:title ""What the Future Holds"" . 
?story golem:numberOfChapters ?chapters . 
}
"	[{'chapters': Value(typed-literal:'1')}, {'chapters': Value(typed-literal:'9')}, {'chapters': Value(typed-literal:'2')}, {'chapters': Value(typed-literal:'6')}, {'chapters': Value(typed-literal:'4')}, {'chapters': Value(typed-literal:'8')}, {'chapters': Value(typed-literal:'5')}, {'chapters': Value(typed-literal:'17')}, {'chapters': Value(typed-literal:'3')}, {'chapters': Value(typed-literal:'25')}]	1	0	0
75	75	en	How many chapters does Molten Silver have?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Molten Silver"" . ?story golem:numberOfChapters ?chapters . }"	[{'chapters': Value(typed-literal:'1')}]	75	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: How many chapters does Molten Silver have?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?chapters WHERE { 
?story golem:title ""Molten Silver"" . 
?story golem:numberOfChapters ?chapters . 
}
"	[{'chapters': Value(typed-literal:'1')}]	1	0	0
76	76	en	How many chapters does A Series of Events, both Fortunate and Unfortunate have?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""A Series of Events, both Fortunate and Unfortunate"" . ?story golem:numberOfChapters ?chapters . }"	[{'chapters': Value(typed-literal:'4')}]	76	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: How many chapters does A Series of Events, both Fortunate and Unfortunate have?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?chapters WHERE { 
?story golem:title ""A Series of Events, both Fortunate and Unfortunate"" . 
?story golem:numberOfChapters ?chapters . 
}
"	[{'chapters': Value(typed-literal:'4')}]	1	0	0
77	77	en	How many chapters does Twilight Magic/Black Family have?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Twilight Magic/Black Family"" . ?story golem:numberOfChapters ?chapters . }"	[{'chapters': Value(typed-literal:'1')}]	77	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: How many chapters does Twilight Magic/Black Family have?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?chapters WHERE { 
?story golem:title ""Twilight Magic/Black Family"" . 
?story golem:numberOfChapters ?chapters . 
}
"	[{'chapters': Value(typed-literal:'1')}]	1	0	0
78	78	en	How many chapters does The Death of Me have?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""The Death of Me"" . ?story golem:numberOfChapters ?chapters . }"	[{'chapters': Value(typed-literal:'11')}, {'chapters': Value(typed-literal:'3')}, {'chapters': Value(typed-literal:'4')}, {'chapters': Value(typed-literal:'6')}, {'chapters': Value(typed-literal:'1')}, {'chapters': Value(typed-literal:'19')}, {'chapters': Value(typed-literal:'23')}, {'chapters': Value(typed-literal:'5')}, {'chapters': Value(typed-literal:'2')}, {'chapters': Value(typed-literal:'9')}]	78	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: How many chapters does The Death of Me have?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?chapters WHERE { 
?story golem:title ""The Death of Me"" . 
?story golem:numberOfChapters ?chapters . 
}
"	[{'chapters': Value(typed-literal:'11')}, {'chapters': Value(typed-literal:'3')}, {'chapters': Value(typed-literal:'4')}, {'chapters': Value(typed-literal:'6')}, {'chapters': Value(typed-literal:'1')}, {'chapters': Value(typed-literal:'19')}, {'chapters': Value(typed-literal:'23')}, {'chapters': Value(typed-literal:'5')}, {'chapters': Value(typed-literal:'2')}, {'chapters': Value(typed-literal:'9')}]	1	0	0
80	80	en	What is the content rating for the story [ART] Alleviate?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?rating WHERE {  ?story golem:title ""[ART] Alleviate"" . ?story golem:rating ?rating . }"	[{'rating': Value(literal:'General Audiences')}]	80	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: What is the content rating for the story [ART] Alleviate?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?rating WHERE { 
?story golem:title ""[ART] Alleviate"" . 
?story golem:rating ?rating . 
}
"	[{'rating': Value(literal:'General Audiences')}]	1	0	0
81	81	en	What is the content rating for the story Slightly to the Left?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?rating WHERE {  ?story golem:title ""Slightly to the Left"" . ?story golem:rating ?rating . }"	[{'rating': Value(literal:'Teen And Up Audiences')}, {'rating': Value(literal:'Explicit')}]	81	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: What is the content rating for the story Slightly to the Left?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?rating WHERE { 
?story golem:title ""Slightly to the Left"" . 
?story golem:rating ?rating . 
}
"	[{'rating': Value(literal:'Teen And Up Audiences')}, {'rating': Value(literal:'Explicit')}]	1	0	0
82	82	en	What is the content rating for the story A Nice Girl?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?rating WHERE {  ?story golem:title ""A Nice Girl"" . ?story golem:rating ?rating . }"	[{'rating': Value(literal:'Mature')}, {'rating': Value(literal:'Explicit')}]	82	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: What is the content rating for the story A Nice Girl?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?rating WHERE { 
?story golem:title ""A Nice Girl"" . 
?story golem:rating ?rating . 
}
"	[{'rating': Value(literal:'Mature')}, {'rating': Value(literal:'Explicit')}]	1	0	0
83	83	en	What is the content rating for the story Knight of Wands?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?rating WHERE {  ?story golem:title ""Knight of Wands"" . ?story golem:rating ?rating . }"	[{'rating': Value(literal:'Teen And Up Audiences')}, {'rating': Value(literal:'General Audiences')}, {'rating': Value(literal:'Mature')}]	83	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: What is the content rating for the story Knight of Wands?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?rating WHERE { 
?story golem:title ""Knight of Wands"" . 
?story golem:rating ?rating . 
}
"	[{'rating': Value(literal:'Teen And Up Audiences')}, {'rating': Value(literal:'General Audiences')}, {'rating': Value(literal:'Mature')}]	1	0	0
84	84	en	What is the content rating for the story Children Will Listen?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?rating WHERE {  ?story golem:title ""Children Will Listen"" . ?story golem:rating ?rating . }"	[{'rating': Value(literal:'General Audiences')}, {'rating': Value(literal:'Teen And Up Audiences')}]	84	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: What is the content rating for the story Children Will Listen?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
SELECT DISTINCT ?rating WHERE { 
  ?story golem:title ""Children Will Listen"" . 
  ?story golem:rating ?rating . 
}
"	[{'rating': Value(literal:'General Audiences')}, {'rating': Value(literal:'Teen And Up Audiences')}]	1	0	0
85	85	en	What is the content rating for the story There are no Children in the Wars of Our Fathers.?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?rating WHERE {  ?story golem:title ""There are no Children in the Wars of Our Fathers."" . ?story golem:rating ?rating . }"	[{'rating': Value(literal:'Mature')}]	85	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: What is the content rating for the story There are no Children in the Wars of Our Fathers.?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?rating WHERE { 
?story golem:title ""There are no Children in the Wars of Our Fathers."" . 
?story golem:rating ?rating . 
}
"	[{'rating': Value(literal:'Mature')}]	1	0	0
86	86	en	What is the content rating for the story Cowardly Cornelius?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?rating WHERE {  ?story golem:title ""Cowardly Cornelius"" . ?story golem:rating ?rating . }"	[{'rating': Value(literal:'Teen And Up Audiences')}]	86	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: What is the content rating for the story Cowardly Cornelius?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?rating WHERE { 
?story golem:title ""Cowardly Cornelius"" . 
?story golem:rating ?rating . 
}
"	[{'rating': Value(literal:'Teen And Up Audiences')}]	1	0	0
87	87	en	What is the content rating for the story Bad Impressions?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?rating WHERE {  ?story golem:title ""Bad Impressions"" . ?story golem:rating ?rating . }"	[{'rating': Value(literal:'Teen And Up Audiences')}]	87	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: What is the content rating for the story Bad Impressions?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/>  
SELECT DISTINCT ?rating WHERE { 
?story golem:title ""Bad Impressions"" . 
?story golem:rating ?rating . 
}
"	[{'rating': Value(literal:'Teen And Up Audiences')}]	1	0	0
88	88	en	What is the content rating for the story Green & Gold?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?rating WHERE {  ?story golem:title ""Green & Gold"" . ?story golem:rating ?rating . }"	[{'rating': Value(literal:'Not Rated')}, {'rating': Value(literal:'Mature')}, {'rating': Value(literal:'Teen And Up Audiences')}]	88	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: What is the content rating for the story Green & Gold?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?rating WHERE { 
?story golem:title ""Green & Gold"" . 
?story golem:rating ?rating . 
}
"	[{'rating': Value(literal:'Not Rated')}, {'rating': Value(literal:'Mature')}, {'rating': Value(literal:'Teen And Up Audiences')}]	1	0	0
89	89	en	What is the content rating for the story The Twins go to Hogwarts?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?rating WHERE {  ?story golem:title ""The Twins go to Hogwarts"" . ?story golem:rating ?rating . }"	[{'rating': Value(literal:'Teen And Up Audiences')}]	89	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: What is the content rating for the story The Twins go to Hogwarts?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?rating WHERE { 
?story golem:title ""The Twins go to Hogwarts"" . 
?story golem:rating ?rating . 
}
"	[{'rating': Value(literal:'Teen And Up Audiences')}]	1	0	0
91	91	en	How long is Pick Your Poison - Book One?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters ?words WHERE {  ?story golem:title ""Pick Your Poison - Book One"" . ?story golem:numberOfChapters ?chapters . ?story golem:numberOfWords ?words . }"	[{'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'5810')}]	91	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: How long is Pick Your Poison - Book One?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?wordCount WHERE { 
    ?story golem:title ""Pick Your Poison - Book One"" . 
    ?story golem:numberOfWords ?wordCount . 
}
"	[{'wordCount': Value(typed-literal:'5810')}]	0	1	1
92	92	en	How long is Death Lover?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters ?words WHERE {  ?story golem:title ""Death Lover"" . ?story golem:numberOfChapters ?chapters . ?story golem:numberOfWords ?words . }"	[{'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'566')}]	92	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: How long is Death Lover?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?wordCount WHERE { 
?story golem:title ""Death Lover"" . 
?story golem:numberOfWords ?wordCount . }
"	[{'wordCount': Value(typed-literal:'566')}]	0	1	1
93	93	en	How long is The Universe Has Different Plans?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters ?words WHERE {  ?story golem:title ""The Universe Has Different Plans"" . ?story golem:numberOfChapters ?chapters . ?story golem:numberOfWords ?words . }"	[{'chapters': Value(typed-literal:'5'), 'words': Value(typed-literal:'10748')}]	93	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: How long is The Universe Has Different Plans?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT (SUM(?words) AS ?total_words) WHERE { 
?story golem:title ""The Universe Has Different Plans"" . 
?story golem:numberOfWords ?words . 
}
"	[{'total_words': Value(typed-literal:'10748')}]	0	1	1
94	94	en	How long is Will You Stay with Me??	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters ?words WHERE {  ?story golem:title ""Will You Stay with Me?"" . ?story golem:numberOfChapters ?chapters . ?story golem:numberOfWords ?words . }"	[{'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'10288')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'827')}]	94	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: How long is Will You Stay with Me??

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT (SUM(?words) AS ?total_word_count) WHERE { 
?story golem:title ""Will You Stay with Me?"" . 
?story golem:numberOfWords ?words . 
}
"	[{'total_word_count': Value(typed-literal:'11115')}]	0	1	1
95	95	en	How long is Leather Jackets and Rainbows?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters ?words WHERE {  ?story golem:title ""Leather Jackets and Rainbows"" . ?story golem:numberOfChapters ?chapters . ?story golem:numberOfWords ?words . }"	[{'chapters': Value(typed-literal:'3'), 'words': Value(typed-literal:'17703')}]	95	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: How long is Leather Jackets and Rainbows?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?length WHERE { 
?story golem:title ""Leather Jackets and Rainbows"" . 
?story golem:numberOfWords ?length . 
}
"	[{'length': Value(typed-literal:'17703')}]	0	1	1
96	96	en	How long is Wonder and Fright and Nothing that Nice?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters ?words WHERE {  ?story golem:title ""Wonder and Fright and Nothing that Nice"" . ?story golem:numberOfChapters ?chapters . ?story golem:numberOfWords ?words . }"	[{'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'1072')}]	96	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: How long is Wonder and Fright and Nothing that Nice?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
SELECT (SUM(?words) AS ?total_words) WHERE { 
    ?story golem:title ""Wonder and Fright and Nothing that Nice"" . 
    ?story golem:numberOfWords ?words . 
}
"	[{'total_words': Value(typed-literal:'1072')}]	0	1	1
97	97	en	How long is We're What?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters ?words WHERE {  ?story golem:title ""We're What"" . ?story golem:numberOfChapters ?chapters . ?story golem:numberOfWords ?words . }"	[{'chapters': Value(typed-literal:'26'), 'words': Value(typed-literal:'44250')}]	97	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: How long is We're What?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT (SUM(?words) AS ?total_word_count) WHERE { 
?story golem:title ""We're What"" . 
?story golem:numberOfWords ?words . 
}
"	[{'total_word_count': Value(typed-literal:'44250')}]	0	1	1
98	98	en	How long is A smile is worth everything?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters ?words WHERE {  ?story golem:title ""A smile is worth everything"" . ?story golem:numberOfChapters ?chapters . ?story golem:numberOfWords ?words . }"	[{'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'486')}]	98	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: How long is A smile is worth everything?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT (SUM(?words) AS ?total_word_count) WHERE { 
?story golem:title ""A smile is worth everything"" . 
?story golem:numberOfWords ?words . 
}
"	[{'total_word_count': Value(typed-literal:'486')}]	0	1	1
99	99	en	How long is Observing Happiness?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters ?words WHERE {  ?story golem:title ""Observing Happiness"" . ?story golem:numberOfChapters ?chapters . ?story golem:numberOfWords ?words . }"	[{'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'497')}]	99	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: How long is Observing Happiness?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/>  
SELECT (SUM(?words) AS ?total_word_count) WHERE { 
  ?story golem:title ""Observing Happiness"" . 
  ?story golem:numberOfWords ?words . 
}
"	[{'total_word_count': Value(typed-literal:'497')}]	0	1	1
100	100	en	How long is Welcome to the Family?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters ?words WHERE {  ?story golem:title ""Welcome to the Family"" . ?story golem:numberOfChapters ?chapters . ?story golem:numberOfWords ?words . }"	[{'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'2168')}, {'chapters': Value(typed-literal:'8'), 'words': Value(typed-literal:'15709')}, {'chapters': Value(typed-literal:'20'), 'words': Value(typed-literal:'26551')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'883')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'1214')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'1265')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'1244')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'1515')}, {'chapters': Value(typed-literal:'10'), 'words': Value(typed-literal:'1694')}, {'chapters': Value(typed-literal:'2'), 'words': Value(typed-literal:'1312')}, {'chapters': Value(typed-literal:'3'), 'words': Value(typed-literal:'7792')}, {'chapters': Value(typed-literal:'4'), 'words': Value(typed-literal:'4813')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'3706')}, {'chapters': Value(typed-literal:'5'), 'words': Value(typed-literal:'6422')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'9278')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'3625')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'2399')}, {'chapters': Value(typed-literal:'7'), 'words': Value(typed-literal:'32287')}, {'chapters': Value(typed-literal:'2'), 'words': Value(typed-literal:'6144')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'3335')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'1755')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'3660')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'747')}, {'chapters': Value(typed-literal:'88'), 'words': Value(typed-literal:'161526')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'2229')}, {'chapters': Value(typed-literal:'2'), 'words': Value(typed-literal:'1733')}, {'chapters': Value(typed-literal:'3'), 'words': Value(typed-literal:'11388')}, {'chapters': Value(typed-literal:'2'), 'words': Value(typed-literal:'2580')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'1038')}, {'chapters': Value(typed-literal:'3'), 'words': Value(typed-literal:'5529')}, {'chapters': Value(typed-literal:'5'), 'words': Value(typed-literal:'7253')}, {'chapters': Value(typed-literal:'2'), 'words': Value(typed-literal:'4572')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'486')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'3389')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'3688')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'3018')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'4673')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'532')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'2092')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'4075')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'6306')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'2698')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'768')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'2000')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'337')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'1003')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'2438')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'1163')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'568')}, {'chapters': Value(typed-literal:'33'), 'words': Value(typed-literal:'39712')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'928')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'2854')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'667')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'920')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'993')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'757')}, {'chapters': Value(typed-literal:'88'), 'words': Value(typed-literal:'480755')}, {'chapters': Value(typed-literal:'8'), 'words': Value(typed-literal:'20526')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'1220')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'2050')}, {'chapters': Value(typed-literal:'8'), 'words': Value(typed-literal:'22947')}, {'chapters': Value(typed-literal:'4'), 'words': Value(typed-literal:'1972')}, {'chapters': Value(typed-literal:'15'), 'words': Value(typed-literal:'39877')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'1931')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'3836')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'584')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'1524')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'820')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'2182')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'2846')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'649')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'2403')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'3468')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'200')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'599')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'1019')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'1124')}, {'chapters': Value(typed-literal:'29'), 'words': Value(typed-literal:'20663')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'728')}, {'chapters': Value(typed-literal:'2'), 'words': Value(typed-literal:'1587')}, {'chapters': Value(typed-literal:'3'), 'words': Value(typed-literal:'5579')}, {'chapters': Value(typed-literal:'3'), 'words': Value(typed-literal:'15038')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'748')}, {'chapters': Value(typed-literal:'11'), 'words': Value(typed-literal:'14944')}, {'chapters': Value(typed-literal:'11'), 'words': Value(typed-literal:'18631')}, {'chapters': Value(typed-literal:'15'), 'words': Value(typed-literal:'14944')}, {'chapters': Value(typed-literal:'15'), 'words': Value(typed-literal:'18631')}, {'chapters': Value(typed-literal:'4'), 'words': Value(typed-literal:'6845')}, {'chapters': Value(typed-literal:'7'), 'words': Value(typed-literal:'1508')}, {'chapters': Value(typed-literal:'45'), 'words': Value(typed-literal:'141976')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'3516')}, {'chapters': Value(typed-literal:'24'), 'words': Value(typed-literal:'53669')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'1225')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'4346')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'1929')}, {'chapters': Value(typed-literal:'8'), 'words': Value(typed-literal:'10546')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'6009')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'1848')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'2364')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'3857')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'2430')}, {'chapters': Value(typed-literal:'4'), 'words': Value(typed-literal:'9697')}, {'chapters': Value(typed-literal:'40'), 'words': Value(typed-literal:'105704')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'2394')}, {'chapters': Value(typed-literal:'4'), 'words': Value(typed-literal:'4303')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'1183')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'1293')}, {'chapters': Value(typed-literal:'2'), 'words': Value(typed-literal:'3524')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'1963')}, {'chapters': Value(typed-literal:'3'), 'words': Value(typed-literal:'26549')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'5902')}, {'chapters': Value(typed-literal:'7'), 'words': Value(typed-literal:'10505')}, {'chapters': Value(typed-literal:'6'), 'words': Value(typed-literal:'21269')}, {'chapters': Value(typed-literal:'2'), 'words': Value(typed-literal:'3232')}, {'chapters': Value(typed-literal:'4'), 'words': Value(typed-literal:'1645')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'1881')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'2102')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'603')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'1472')}, {'chapters': Value(typed-literal:'2'), 'words': Value(typed-literal:'1851')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'1434')}, {'chapters': Value(typed-literal:'3'), 'words': Value(typed-literal:'6200')}, {'chapters': Value(typed-literal:'14'), 'words': Value(typed-literal:'10068')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'3156')}, {'chapters': Value(typed-literal:'2'), 'words': Value(typed-literal:'8369')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'2090')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'1401')}, {'chapters': Value(typed-literal:'4'), 'words': Value(typed-literal:'6140')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'3434')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'588')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'1177')}, {'chapters': Value(typed-literal:'2'), 'words': Value(typed-literal:'5187')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'259')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'5882')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'102')}, {'chapters': Value(typed-literal:'3'), 'words': Value(typed-literal:'4195')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'328')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'3446')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'914')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'633')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'1206')}, {'chapters': Value(typed-literal:'5'), 'words': Value(typed-literal:'13465')}, {'chapters': Value(typed-literal:'5'), 'words': Value(typed-literal:'12313')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'1924')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'6109')}, {'chapters': Value(typed-literal:'43'), 'words': Value(typed-literal:'109966')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'1032')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'1631')}, {'chapters': Value(typed-literal:'2'), 'words': Value(typed-literal:'7406')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'1098')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'344')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'10543')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'3021')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'726')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'3488')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'2075')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'8742')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'709')}, {'chapters': Value(typed-literal:'8'), 'words': Value(typed-literal:'4481')}, {'chapters': Value(typed-literal:'4'), 'words': Value(typed-literal:'8646')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'927')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'515')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'611')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'549')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'1812')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'606')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'1607')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'10644')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'1034')}, {'chapters': Value(typed-literal:'2'), 'words': Value(typed-literal:'10531')}, {'chapters': Value(typed-literal:'2'), 'words': Value(typed-literal:'15643')}, {'chapters': Value(typed-literal:'3'), 'words': Value(typed-literal:'10531')}, {'chapters': Value(typed-literal:'3'), 'words': Value(typed-literal:'15643')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'910')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'1612')}, {'chapters': Value(typed-literal:'12'), 'words': Value(typed-literal:'67655')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'767')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'1494')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'391')}]	100	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: How long is Welcome to the Family?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?wordCount WHERE { 
?story golem:title ""Welcome to the Family"" . 
?story golem:numberOfWords ?wordCount . 
}
"	[{'wordCount': Value(typed-literal:'2168')}, {'wordCount': Value(typed-literal:'15709')}, {'wordCount': Value(typed-literal:'26551')}, {'wordCount': Value(typed-literal:'883')}, {'wordCount': Value(typed-literal:'1214')}, {'wordCount': Value(typed-literal:'1265')}, {'wordCount': Value(typed-literal:'1244')}, {'wordCount': Value(typed-literal:'1515')}, {'wordCount': Value(typed-literal:'1694')}, {'wordCount': Value(typed-literal:'1312')}, {'wordCount': Value(typed-literal:'7792')}, {'wordCount': Value(typed-literal:'4813')}, {'wordCount': Value(typed-literal:'3706')}, {'wordCount': Value(typed-literal:'6422')}, {'wordCount': Value(typed-literal:'9278')}, {'wordCount': Value(typed-literal:'3625')}, {'wordCount': Value(typed-literal:'2399')}, {'wordCount': Value(typed-literal:'32287')}, {'wordCount': Value(typed-literal:'6144')}, {'wordCount': Value(typed-literal:'3335')}, {'wordCount': Value(typed-literal:'1755')}, {'wordCount': Value(typed-literal:'3660')}, {'wordCount': Value(typed-literal:'747')}, {'wordCount': Value(typed-literal:'161526')}, {'wordCount': Value(typed-literal:'2229')}, {'wordCount': Value(typed-literal:'1733')}, {'wordCount': Value(typed-literal:'11388')}, {'wordCount': Value(typed-literal:'2580')}, {'wordCount': Value(typed-literal:'1038')}, {'wordCount': Value(typed-literal:'5529')}, {'wordCount': Value(typed-literal:'7253')}, {'wordCount': Value(typed-literal:'4572')}, {'wordCount': Value(typed-literal:'486')}, {'wordCount': Value(typed-literal:'3389')}, {'wordCount': Value(typed-literal:'3688')}, {'wordCount': Value(typed-literal:'3018')}, {'wordCount': Value(typed-literal:'4673')}, {'wordCount': Value(typed-literal:'532')}, {'wordCount': Value(typed-literal:'2092')}, {'wordCount': Value(typed-literal:'4075')}, {'wordCount': Value(typed-literal:'6306')}, {'wordCount': Value(typed-literal:'2698')}, {'wordCount': Value(typed-literal:'768')}, {'wordCount': Value(typed-literal:'2000')}, {'wordCount': Value(typed-literal:'337')}, {'wordCount': Value(typed-literal:'1003')}, {'wordCount': Value(typed-literal:'2438')}, {'wordCount': Value(typed-literal:'1163')}, {'wordCount': Value(typed-literal:'568')}, {'wordCount': Value(typed-literal:'39712')}, {'wordCount': Value(typed-literal:'928')}, {'wordCount': Value(typed-literal:'2854')}, {'wordCount': Value(typed-literal:'667')}, {'wordCount': Value(typed-literal:'920')}, {'wordCount': Value(typed-literal:'993')}, {'wordCount': Value(typed-literal:'757')}, {'wordCount': Value(typed-literal:'480755')}, {'wordCount': Value(typed-literal:'20526')}, {'wordCount': Value(typed-literal:'1220')}, {'wordCount': Value(typed-literal:'2050')}, {'wordCount': Value(typed-literal:'22947')}, {'wordCount': Value(typed-literal:'1972')}, {'wordCount': Value(typed-literal:'39877')}, {'wordCount': Value(typed-literal:'1931')}, {'wordCount': Value(typed-literal:'3836')}, {'wordCount': Value(typed-literal:'584')}, {'wordCount': Value(typed-literal:'1524')}, {'wordCount': Value(typed-literal:'820')}, {'wordCount': Value(typed-literal:'2182')}, {'wordCount': Value(typed-literal:'2846')}, {'wordCount': Value(typed-literal:'649')}, {'wordCount': Value(typed-literal:'2403')}, {'wordCount': Value(typed-literal:'3468')}, {'wordCount': Value(typed-literal:'200')}, {'wordCount': Value(typed-literal:'599')}, {'wordCount': Value(typed-literal:'1019')}, {'wordCount': Value(typed-literal:'1124')}, {'wordCount': Value(typed-literal:'20663')}, {'wordCount': Value(typed-literal:'728')}, {'wordCount': Value(typed-literal:'1587')}, {'wordCount': Value(typed-literal:'5579')}, {'wordCount': Value(typed-literal:'15038')}, {'wordCount': Value(typed-literal:'748')}, {'wordCount': Value(typed-literal:'14944')}, {'wordCount': Value(typed-literal:'18631')}, {'wordCount': Value(typed-literal:'6845')}, {'wordCount': Value(typed-literal:'1508')}, {'wordCount': Value(typed-literal:'141976')}, {'wordCount': Value(typed-literal:'3516')}, {'wordCount': Value(typed-literal:'53669')}, {'wordCount': Value(typed-literal:'1225')}, {'wordCount': Value(typed-literal:'4346')}, {'wordCount': Value(typed-literal:'1929')}, {'wordCount': Value(typed-literal:'10546')}, {'wordCount': Value(typed-literal:'6009')}, {'wordCount': Value(typed-literal:'1848')}, {'wordCount': Value(typed-literal:'2364')}, {'wordCount': Value(typed-literal:'3857')}, {'wordCount': Value(typed-literal:'2430')}, {'wordCount': Value(typed-literal:'9697')}, {'wordCount': Value(typed-literal:'105704')}, {'wordCount': Value(typed-literal:'2394')}, {'wordCount': Value(typed-literal:'4303')}, {'wordCount': Value(typed-literal:'1183')}, {'wordCount': Value(typed-literal:'1293')}, {'wordCount': Value(typed-literal:'3524')}, {'wordCount': Value(typed-literal:'1963')}, {'wordCount': Value(typed-literal:'26549')}, {'wordCount': Value(typed-literal:'5902')}, {'wordCount': Value(typed-literal:'10505')}, {'wordCount': Value(typed-literal:'21269')}, {'wordCount': Value(typed-literal:'3232')}, {'wordCount': Value(typed-literal:'1645')}, {'wordCount': Value(typed-literal:'1881')}, {'wordCount': Value(typed-literal:'2102')}, {'wordCount': Value(typed-literal:'603')}, {'wordCount': Value(typed-literal:'1472')}, {'wordCount': Value(typed-literal:'1851')}, {'wordCount': Value(typed-literal:'1434')}, {'wordCount': Value(typed-literal:'6200')}, {'wordCount': Value(typed-literal:'10068')}, {'wordCount': Value(typed-literal:'3156')}, {'wordCount': Value(typed-literal:'8369')}, {'wordCount': Value(typed-literal:'2090')}, {'wordCount': Value(typed-literal:'1401')}, {'wordCount': Value(typed-literal:'6140')}, {'wordCount': Value(typed-literal:'3434')}, {'wordCount': Value(typed-literal:'588')}, {'wordCount': Value(typed-literal:'1177')}, {'wordCount': Value(typed-literal:'5187')}, {'wordCount': Value(typed-literal:'259')}, {'wordCount': Value(typed-literal:'5882')}, {'wordCount': Value(typed-literal:'102')}, {'wordCount': Value(typed-literal:'4195')}, {'wordCount': Value(typed-literal:'328')}, {'wordCount': Value(typed-literal:'3446')}, {'wordCount': Value(typed-literal:'914')}, {'wordCount': Value(typed-literal:'633')}, {'wordCount': Value(typed-literal:'1206')}, {'wordCount': Value(typed-literal:'13465')}, {'wordCount': Value(typed-literal:'12313')}, {'wordCount': Value(typed-literal:'1924')}, {'wordCount': Value(typed-literal:'6109')}, {'wordCount': Value(typed-literal:'109966')}, {'wordCount': Value(typed-literal:'1032')}, {'wordCount': Value(typed-literal:'1631')}, {'wordCount': Value(typed-literal:'7406')}, {'wordCount': Value(typed-literal:'1098')}, {'wordCount': Value(typed-literal:'344')}, {'wordCount': Value(typed-literal:'10543')}, {'wordCount': Value(typed-literal:'3021')}, {'wordCount': Value(typed-literal:'726')}, {'wordCount': Value(typed-literal:'3488')}, {'wordCount': Value(typed-literal:'2075')}, {'wordCount': Value(typed-literal:'8742')}, {'wordCount': Value(typed-literal:'709')}, {'wordCount': Value(typed-literal:'4481')}, {'wordCount': Value(typed-literal:'8646')}, {'wordCount': Value(typed-literal:'927')}, {'wordCount': Value(typed-literal:'515')}, {'wordCount': Value(typed-literal:'611')}, {'wordCount': Value(typed-literal:'549')}, {'wordCount': Value(typed-literal:'1812')}, {'wordCount': Value(typed-literal:'606')}, {'wordCount': Value(typed-literal:'1607')}, {'wordCount': Value(typed-literal:'10644')}, {'wordCount': Value(typed-literal:'1034')}, {'wordCount': Value(typed-literal:'10531')}, {'wordCount': Value(typed-literal:'15643')}, {'wordCount': Value(typed-literal:'910')}, {'wordCount': Value(typed-literal:'1612')}, {'wordCount': Value(typed-literal:'67655')}, {'wordCount': Value(typed-literal:'767')}, {'wordCount': Value(typed-literal:'1494')}, {'wordCount': Value(typed-literal:'391')}]	0	1	1
102	102	en	Does A Whore in the Bedroom have any content warnings?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT (GROUP_CONCAT(DISTINCT ?warning; separator="", "") AS ?warnings) WHERE {  ?story golem:title ""A Whore in the Bedroom"" . ?story golem:contentWarning ?warning . }"	[{'warnings': Value(literal:'No Archive Warnings Apply')}]	102	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: Does A Whore in the Bedroom have any content warnings?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/>  
SELECT DISTINCT ?contentWarning WHERE { 
?story golem:title ""A Whore in the Bedroom"" . 
?story golem:contentWarning ?contentWarning . 
}
"	[{'contentWarning': Value(literal:'No Archive Warnings Apply')}]	0	1	1
103	103	en	Does Laughing at Death have any content warnings?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT (GROUP_CONCAT(DISTINCT ?warning; separator="", "") AS ?warnings) WHERE {  ?story golem:title ""Laughing at Death"" . ?story golem:contentWarning ?warning . }"	[{'warnings': Value(literal:'No Archive Warnings Apply')}]	103	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: Does Laughing at Death have any content warnings?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?contentWarning WHERE { 
?story golem:title ""Laughing at Death"" . 
?story golem:contentWarning ?contentWarning . 
}
"	[{'contentWarning': Value(literal:'No Archive Warnings Apply')}]	0	1	1
104	104	en	"Does "" I HATE YOU OLIVER WOOD! "" have any content warnings?"	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT (GROUP_CONCAT(DISTINCT ?warning; separator="", "") AS ?warnings) WHERE {  ?story golem:title "" I HATE YOU OLIVER WOOD! "" . ?story golem:contentWarning ?warning . }"	[{'warnings': Value(literal:'')}]	104	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: Does "" I HATE YOU OLIVER WOOD! "" have any content warnings?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?contentWarning WHERE { 
?story golem:title ""I HATE YOU OLIVER WOOD!"" . 
?story golem:contentWarning ?contentWarning . 
}
"	[]	0	0	1
105	105	en	Does How Can I Live Without You? have any content warnings?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT (GROUP_CONCAT(DISTINCT ?warning; separator="", "") AS ?warnings) WHERE {  ?story golem:title ""How Can I Live Without You?"" . ?story golem:contentWarning ?warning . }"	[{'warnings': Value(literal:'Major Character Death')}]	105	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: Does How Can I Live Without You? have any content warnings?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?contentWarning WHERE { 
?story golem:title ""How Can I Live Without You?"" . 
?story golem:contentWarning ?contentWarning . 
}
"	[{'contentWarning': Value(literal:'Major Character Death')}]	0	1	1
106	106	en	Does Interrupted Sleep have any content warnings?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT (GROUP_CONCAT(DISTINCT ?warning; separator="", "") AS ?warnings) WHERE {  ?story golem:title ""Interrupted Sleep"" . ?story golem:contentWarning ?warning . }"	[{'warnings': Value(literal:'No Archive Warnings Apply')}]	106	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: Does Interrupted Sleep have any content warnings?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?contentWarning WHERE { 
?story golem:title ""Interrupted Sleep"" . 
?story golem:contentWarning ?contentWarning . 
}
"	[{'contentWarning': Value(literal:'No Archive Warnings Apply')}]	0	1	1
107	107	en	Does I Was a Teenage Were-Goat have any content warnings?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT (GROUP_CONCAT(DISTINCT ?warning; separator="", "") AS ?warnings) WHERE {  ?story golem:title ""I Was a Teenage Were-Goat"" . ?story golem:contentWarning ?warning . }"	[{'warnings': Value(literal:'No Archive Warnings Apply')}]	107	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: Does I Was a Teenage Were-Goat have any content warnings?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?contentWarning WHERE { 
?story golem:title ""I Was a Teenage Were-Goat"" . 
?story golem:contentWarning ?contentWarning . 
}
"	[{'contentWarning': Value(literal:'No Archive Warnings Apply')}]	0	1	1
108	108	en	Does Late Night Cravings have any content warnings?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT (GROUP_CONCAT(DISTINCT ?warning; separator="", "") AS ?warnings) WHERE {  ?story golem:title ""Late Night Cravings"" . ?story golem:contentWarning ?warning . }"	[{'warnings': Value(literal:'Creator Chose Not To Use Archive Warnings, No Archive Warnings Apply')}]	108	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: Does Late Night Cravings have any content warnings?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?content_warning WHERE { 
?story golem:title ""Late Night Cravings"" . 
?story golem:contentWarning ?content_warning . 
}
"	[{'content_warning': Value(literal:'Creator Chose Not To Use Archive Warnings')}, {'content_warning': Value(literal:'No Archive Warnings Apply')}]	0	1	1
109	109	en	Does Gut feeling have any content warnings?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT (GROUP_CONCAT(DISTINCT ?warning; separator="", "") AS ?warnings) WHERE {  ?story golem:title ""Gut feeling"" . ?story golem:contentWarning ?warning . }"	[{'warnings': Value(literal:'Major Character Death, No Archive Warnings Apply')}]	109	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: Does Gut feeling have any content warnings?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?contentWarning WHERE { 
?story golem:title ""Gut feeling"" . 
?story golem:contentWarning ?contentWarning . 
}
"	[{'contentWarning': Value(literal:'Major Character Death')}, {'contentWarning': Value(literal:'No Archive Warnings Apply')}]	0	1	1
110	110	en	Does The Royal Family have any content warnings?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT (GROUP_CONCAT(DISTINCT ?warning; separator="", "") AS ?warnings) WHERE {  ?story golem:title ""The Royal Family"" . ?story golem:contentWarning ?warning . }"	[{'warnings': Value(literal:'Creator Chose Not To Use Archive Warnings, Graphic Depictions Of Violence, No Archive Warnings Apply')}]	110	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: Does The Royal Family have any content warnings?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?contentWarning WHERE { 
?story golem:title ""The Royal Family"" . 
?story golem:contentWarning ?contentWarning . 
}
"	[{'contentWarning': Value(literal:'Creator Chose Not To Use Archive Warnings')}, {'contentWarning': Value(literal:'No Archive Warnings Apply')}, {'contentWarning': Value(literal:'Graphic Depictions Of Violence')}]	0	1	1
111	111	en	Does You're a NEET, Osomatsu have any content warnings?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT (GROUP_CONCAT(DISTINCT ?warning; separator="", "") AS ?warnings) WHERE {  ?story golem:title ""You're a NEET, Osomatsu"" . ?story golem:contentWarning ?warning . }"	[{'warnings': Value(literal:'No Archive Warnings Apply')}]	111	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: Does You're a NEET, Osomatsu have any content warnings?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/>  
SELECT DISTINCT ?contentWarning WHERE { 
?story golem:title ""You're a NEET, Osomatsu"" . 
?story golem:contentWarning ?contentWarning . 
}
"	[{'contentWarning': Value(literal:'No Archive Warnings Apply')}]	0	1	1
113	113	en	Who is the author of The First Moon?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?author WHERE {  ?story golem:title ""The First Moon"" . ?story golem:author ?author . }"	[{'author': Value(literal:'A000183884')}]	113	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: Who is the author of The First Moon?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?author WHERE { 
?story golem:title ""The First Moon"" . 
?story dc:creator ?author . 
}
"	[]	0	0	1
114	114	en	Who is the author of Lily's Masquerade?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?author WHERE {  ?story golem:title ""Lily's Masquerade"" . ?story golem:author ?author . }"	[{'author': Value(literal:'A000000759')}]	114	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: Who is the author of Lily's Masquerade?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/>  
SELECT DISTINCT ?author WHERE { 
?story golem:title ""Lily's Masquerade"" . 
?story dc:creator ?author . 
}
"	[]	0	0	1
115	115	en	Who is the author of Watching Over You?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?author WHERE {  ?story golem:title ""Watching Over You"" . ?story golem:author ?author . }"	[{'author': Value(literal:'A000000657')}, {'author': Value(literal:'A000267157')}, {'author': Value(literal:'A000000773')}, {'author': Value(literal:'A000195646')}, {'author': Value(literal:'A000007423')}, {'author': Value(literal:'A000013158')}, {'author': Value(literal:'A000003172')}, {'author': Value(literal:'A000004000')}, {'author': Value(literal:'A000073615')}, {'author': Value(literal:'A000001463')}, {'author': Value(literal:'A000000000')}, {'author': Value(literal:'A000058268')}, {'author': Value(literal:'A000000647')}, {'author': Value(literal:'A000063624')}, {'author': Value(literal:'A000311666')}, {'author': Value(literal:'A000002395')}, {'author': Value(literal:'A000208491')}, {'author': Value(literal:'A000007185')}, {'author': Value(literal:'A000688402')}, {'author': Value(literal:'A000240151')}, {'author': Value(literal:'A000011210')}, {'author': Value(literal:'A000008667')}, {'author': Value(literal:'A000001979')}, {'author': Value(literal:'A000708983')}, {'author': Value(literal:'A000793297')}, {'author': Value(literal:'A000010290')}, {'author': Value(literal:'A001180525')}, {'author': Value(literal:'A000275640')}, {'author': Value(literal:'A000007305')}, {'author': Value(literal:'A000991735')}, {'author': Value(literal:'A000174984')}, {'author': Value(literal:'A000016122')}, {'author': Value(literal:'A000522771')}, {'author': Value(literal:'A000027017')}, {'author': Value(literal:'A001154041')}, {'author': Value(literal:'A000868200')}, {'author': Value(literal:'A000083570')}, {'author': Value(literal:'A000801551')}, {'author': Value(literal:'A000005105')}, {'author': Value(literal:'A000611206')}, {'author': Value(literal:'A000000880')}, {'author': Value(literal:'A000799602')}, {'author': Value(literal:'A000006894')}, {'author': Value(literal:'A000008282')}, {'author': Value(literal:'A000010630')}, {'author': Value(literal:'A000046704')}, {'author': Value(literal:'A000607867')}, {'author': Value(literal:'A000872186')}, {'author': Value(literal:'A000100656')}, {'author': Value(literal:'A000073382')}, {'author': Value(literal:'A000001202')}, {'author': Value(literal:'A000455978')}, {'author': Value(literal:'A000004437')}, {'author': Value(literal:'A001005179')}, {'author': Value(literal:'A000016097')}, {'author': Value(literal:'A000028223')}, {'author': Value(literal:'A000023557')}, {'author': Value(literal:'A000012002')}, {'author': Value(literal:'A000023020')}, {'author': Value(literal:'A000070951')}, {'author': Value(literal:'A001131608')}, {'author': Value(literal:'A001174286')}, {'author': Value(literal:'A001096525')}, {'author': Value(literal:'A000836507')}, {'author': Value(literal:'A000047856')}, {'author': Value(literal:'A000092214')}, {'author': Value(literal:'A000852853')}, {'author': Value(literal:'A000049040')}, {'author': Value(literal:'A000196653')}]	115	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: Who is the author of Watching Over You?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/>  
SELECT DISTINCT ?author WHERE { 
?story golem:title ""Watching Over You"" . 
?story dc:creator ?author . 
}
"	[]	0	0	1
116	116	en	Who is the author of and yours is in red underlined?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?author WHERE {  ?story golem:title ""and yours is in red underlined"" . ?story golem:author ?author . }"	[{'author': Value(literal:'A000025922')}]	116	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: Who is the author of and yours is in red underlined?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/>  
SELECT DISTINCT ?author WHERE { 
?story golem:title ""and yours is in red underlined"" . 
?story dc:creator ?author . 
}
"	[]	0	0	1
117	117	en	Who is the author of Poker Night with Mob!Draco?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?author WHERE {  ?story golem:title ""Poker Night with Mob!Draco"" . ?story golem:author ?author . }"	[{'author': Value(literal:'A000080390')}]	117	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: Who is the author of Poker Night with Mob!Draco?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?author WHERE { 
?story golem:title ""Poker Night with Mob!Draco"" . 
?story dc:creator ?author . 
}
"	[]	0	0	1
118	118	en	Who is the author of At Grimmauld Place?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?author WHERE {  ?story golem:title ""At Grimmauld Place"" . ?story golem:author ?author . }"	[{'author': Value(literal:'A000271310')}]	118	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: Who is the author of At Grimmauld Place?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/>  
SELECT DISTINCT ?author WHERE { 
?story golem:title ""At Grimmauld Place"" . 
?story dc:creator ?author . 
}
"	[]	0	0	1
119	119	en	Who is the author of Double 0?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?author WHERE {  ?story golem:title ""Double 0"" . ?story golem:author ?author . }"	[{'author': Value(literal:'A000003815')}]	119	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: Who is the author of Double 0?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?author WHERE { 
?story golem:title ""Double 0"" . 
?story dc:creator ?author . 
}
"	[]	0	0	1
120	120	en	Who is the author of A Sign from Beyond The Grave?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?author WHERE {  ?story golem:title ""A Sign from Beyond The Grave"" . ?story golem:author ?author . }"	[{'author': Value(literal:'A000028653')}]	120	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: Who is the author of A Sign from Beyond The Grave?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
SELECT DISTINCT ?author WHERE { 
  ?story golem:title ""A Sign from Beyond The Grave"" . 
  ?story golem:publisher ?author . 
}
"	[{'author': Value(literal:'archiveofourown.org')}]	0	1	1
121	121	en	Who is the author of 10 Things Draco Hates About Harry Potter?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?author WHERE {  ?story golem:title ""10 Things Draco Hates About Harry Potter"" . ?story golem:author ?author . }"	[{'author': Value(literal:'A000264308')}]	121	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: Who is the author of 10 Things Draco Hates About Harry Potter?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/>  
SELECT DISTINCT ?author WHERE { 
?story golem:title ""10 Things Draco Hates About Harry Potter"" . 
?story dc:creator ?author . }
"	[]	0	0	1
122	122	en	Who is the author of Wait a minute, are you jealous??	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?author WHERE {  ?story golem:title ""Wait a minute, are you jealous?"" . ?story golem:author ?author . }"	[{'author': Value(literal:'A000046126')}, {'author': Value(literal:'A000039335')}]	122	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: Who is the author of Wait a minute, are you jealous??

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?author WHERE { 
  ?story golem:title ""Wait a minute, are you jealous?"" . 
  ?story dc:creator ?author . 
}
"	[]	0	0	1
124	124	en	What collections is Harry Potter and the year fate stepped in part of?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?collections WHERE {  ?story golem:title ""Harry Potter and the year fate stepped in"" . ?story golem:collections ?collections . }"	[{'collections': Value(literal:'None')}]	124	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: What collections is Harry Potter and the year fate stepped in part of?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?collection WHERE { 
?story golem:title ""Harry Potter and the year fate stepped in"" . 
?story golem:collections ?collection . 
}
"	[{'collection': Value(literal:'None')}]	0	1	1
125	125	en	What collections is Disaster and Chaos : Snippets part of?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?collections WHERE {  ?story golem:title ""Disaster and Chaos : Snippets"" . ?story golem:collections ?collections . }"	[{'collections': Value(literal:'None')}]	125	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: What collections is Disaster and Chaos : Snippets part of?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?collection WHERE { 
?story golem:title ""Disaster and Chaos : Snippets"" . 
?story golem:collections ?collection . 
}
"	[{'collection': Value(literal:'None')}]	0	1	1
126	126	en	What collections is Obliviate part of?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?collections WHERE {  ?story golem:title ""Obliviate"" . ?story golem:collections ?collections . }"	"[{'collections': Value(literal:'None')}, {'collections': Value(literal:'Dramione WIPS')}, {'collections': Value(literal:'Chocolate Box - Round 7')}, {'collections': Value(literal:""Books I would lose sleep over, Fics to Find the Time For, Imma read it again, Mirage664's Read and Loved, Well-Written HP Fanfiction Collection, great harry fics"")}, {'collections': Value(literal:'2015 Sherlolly Big Bang Challenge')}, {'collections': Value(literal:'BBC Merlin Rare Fair')}, {'collections': Value(literal:'Marvelously Magical Bingo 2020')}, {'collections': Value(literal:'KakuHida Week')}]"	126	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: What collections is Obliviate part of?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?collections WHERE { 
?story golem:title ""Obliviate"" . 
?story golem:collections ?collections . 
}
"	"[{'collections': Value(literal:'None')}, {'collections': Value(literal:'Dramione WIPS')}, {'collections': Value(literal:'Chocolate Box - Round 7')}, {'collections': Value(literal:""Books I would lose sleep over, Fics to Find the Time For, Imma read it again, Mirage664's Read and Loved, Well-Written HP Fanfiction Collection, great harry fics"")}, {'collections': Value(literal:'2015 Sherlolly Big Bang Challenge')}, {'collections': Value(literal:'BBC Merlin Rare Fair')}, {'collections': Value(literal:'Marvelously Magical Bingo 2020')}, {'collections': Value(literal:'KakuHida Week')}]"	1	0	0
127	127	en	What collections is The Letters From No One part of?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?collections WHERE {  ?story golem:title ""The Letters From No One"" . ?story golem:collections ?collections . }"	[{'collections': Value(literal:'None')}]	127	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: What collections is The Letters From No One part of?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/>  
SELECT DISTINCT ?collection WHERE { 
?story golem:title ""The Letters From No One"" . 
?story golem:collections ?collection . }
"	[{'collection': Value(literal:'None')}]	0	1	1
128	128	en	What collections is Justice and Learning part of?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?collections WHERE {  ?story golem:title ""Justice and Learning"" . ?story golem:collections ?collections . }"	[{'collections': Value(literal:'Femslash Exchange 2014')}]	128	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: What collections is Justice and Learning part of?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?collection WHERE { 
?story golem:title ""Justice and Learning"" . 
?story golem:collections ?collection . }
"	[{'collection': Value(literal:'Femslash Exchange 2014')}]	0	1	1
129	129	en	What collections is The Tides of Power part of?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?collections WHERE {  ?story golem:title ""The Tides of Power"" . ?story golem:collections ?collections . }"	[{'collections': Value(literal:'None')}]	129	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: What collections is The Tides of Power part of?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?collection WHERE { 
  ?story golem:title ""The Tides of Power"" . 
  ?story golem:collections ?collection . 
}
"	[{'collection': Value(literal:'None')}]	0	1	1
130	130	en	What collections is Prophecies and Fairytales part of?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?collections WHERE {  ?story golem:title ""Prophecies and Fairytales"" . ?story golem:collections ?collections . }"	[{'collections': Value(literal:'The Quidditch Pitch')}]	130	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: What collections is Prophecies and Fairytales part of?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/>  
SELECT DISTINCT ?collection WHERE { 
  ?story golem:title ""Prophecies and Fairytales"" . 
  ?story golem:collections ?collection . 
}
"	[{'collection': Value(literal:'The Quidditch Pitch')}]	0	1	1
131	131	en	What collections is ' THE GIRL WHO LIVED ' part of?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?collections WHERE {  ?story golem:title ""' THE GIRL WHO LIVED '"" . ?story golem:collections ?collections . }"	[{'collections': Value(literal:'None')}]	131	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: What collections is ' THE GIRL WHO LIVED ' part of?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?collection WHERE { 
?story golem:title ""THE GIRL WHO LIVED"" . 
?story golem:collections ?collection . }
"	[]	0	0	1
132	132	en	What collections is so I kind of love you part of?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?collections WHERE {  ?story golem:title ""so I kind of love you"" . ?story golem:collections ?collections . }"	[{'collections': Value(literal:'None')}]	132	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: What collections is so I kind of love you part of?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?collection WHERE { 
?story golem:title ""so I kind of love you"" . 
?story golem:collections ?collection . 
}
"	[{'collection': Value(literal:'None')}]	0	1	1
133	133	en	What collections is A Weasley Wedding part of?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?collections WHERE {  ?story golem:title ""A Weasley Wedding"" . ?story golem:collections ?collections . }"	[{'collections': Value(literal:'None')}, {'collections': Value(literal:'A Wedding Oneshot Contest 2021')}]	133	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: What collections is A Weasley Wedding part of?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?collection WHERE { 
?story golem:title ""A Weasley Wedding"" . 
?story golem:collections ?collection . 
}
"	[{'collection': Value(literal:'None')}, {'collection': Value(literal:'A Wedding Oneshot Contest 2021')}]	0	1	1
135	135	en	What characters appear in Tick Tock Moon?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT ?characters WHERE {  ?story golem:title ""Tick Tock Moon"" . ?story golem:characters ?characters . }"	[{'characters': Value(literal:'James Potter')}, {'characters': Value(literal:'Remus Lupin')}, {'characters': Value(literal:'Sirius Black')}]	135	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: What characters appear in Tick Tock Moon?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?character WHERE { 
?story golem:title ""Tick Tock Moon"" . 
?story golem:characters ?character . 
}
"	[{'character': Value(literal:'James Potter')}, {'character': Value(literal:'Remus Lupin')}, {'character': Value(literal:'Sirius Black')}]	0	1	1
136	136	en	What characters appear in No-One But You (Only The Good Die Young)?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT ?characters WHERE {  ?story golem:title ""No-One But You (Only The Good Die Young)"" . ?story golem:characters ?characters . }"	[{'characters': Value(literal:'Harry Potter')}, {'characters': Value(literal:'Lily Evans Potter')}, {'characters': Value(literal:'Severus Snape')}, {'characters': Value(literal:'Clint Barton')}, {'characters': Value(literal:'Howard Stark')}, {'characters': Value(literal:'Phil Coulson')}, {'characters': Value(literal:'Steve Rogers')}, {'characters': Value(literal:'Tony Stark')}, {'characters': Value(literal:'Madame Masque')}, {'characters': Value(literal:'Giuletta Nefaria')}]	136	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: What characters appear in No-One But You (Only The Good Die Young)?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?character WHERE { 
?story golem:title ""No-One But You (Only The Good Die Young)"" . 
?story golem:characters ?character . 
}
"	[{'character': Value(literal:'Harry Potter')}, {'character': Value(literal:'Lily Evans Potter')}, {'character': Value(literal:'Severus Snape')}, {'character': Value(literal:'Clint Barton')}, {'character': Value(literal:'Howard Stark')}, {'character': Value(literal:'Phil Coulson')}, {'character': Value(literal:'Steve Rogers')}, {'character': Value(literal:'Tony Stark')}, {'character': Value(literal:'Madame Masque')}, {'character': Value(literal:'Giuletta Nefaria')}]	0	1	1
137	137	en	What characters appear in Last Holiday?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT ?characters WHERE {  ?story golem:title ""Last Holiday"" . ?story golem:characters ?characters . }"	"[{'characters': Value(literal:'Adrian Pucey')}, {'characters': Value(literal:'Astoria Greengrass')}, {'characters': Value(literal:'Blaise Zabini')}, {'characters': Value(literal:'Hermione Granger')}, {'characters': Value(literal:'Theodore Nott')}, {'characters': Value(literal:'Daphne Greengrass')}, {'characters': Value(literal:'Emma Swan')}, {'characters': Value(literal:'Captain Hook | Killian Jones')}, {'characters': Value(literal:'Belle (Once Upon a Time)')}, {'characters': Value(literal:'Rumplestiltskin | Mr. Gold')}, {'characters': Value(literal:'Snow White | Mary Margaret Blanchard')}, {'characters': Value(literal:'Red Riding Hood | Ruby')}, {'characters': Value(literal:'Baelfire | Neal Cassidy')}, {'characters': Value(literal:'Prince ""Charming"" James | David Nolan')}, {'characters': Value(literal:'Milah (Once Upon a Time)')}, {'characters': Value(literal:'Widow Lucas | Granny')}, {'characters': Value(literal:'Gus | Billy')}, {'characters': Value(literal:'Oliver Queen')}, {'characters': Value(literal:'Roy Harper')}, {'characters': Value(literal:'Nyssa al Ghul')}, {'characters': Value(literal:'Sara Lance')}, {'characters': Value(literal:'Thea Queen')}, {'characters': Value(literal:'Laurel Lance')}, {'characters': Value(literal:'Moira Queen')}, {'characters': Value(literal:'Robert Queen')}, {'characters': Value(literal:'Isabel Rochev')}, {'characters': Value(literal:'Walter Steele')}, {'characters': Value(literal:'Bobby Singer')}, {'characters': Value(literal:'Castiel (Supernatural)')}, {'characters': Value(literal:'Dean Winchester')}, {'characters': Value(literal:'Jack Kline')}, {'characters': Value(literal:'Sam Winchester')}, {'characters': Value(literal:'Crowley (Supernatural)')}, {'characters': Value(literal:'Eileen Leahy')}, {'characters': Value(literal:'The Shadow | The Cosmic Entity (Supernatural)')}, {'characters': Value(literal:'Mrs. Butters (Supernatural)')}]"	137	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: What characters appear in Last Holiday?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?character WHERE { 
    ?story golem:title ""Last Holiday"" . 
    ?story golem:characters ?character . 
}
"	"[{'character': Value(literal:'Adrian Pucey')}, {'character': Value(literal:'Astoria Greengrass')}, {'character': Value(literal:'Blaise Zabini')}, {'character': Value(literal:'Hermione Granger')}, {'character': Value(literal:'Theodore Nott')}, {'character': Value(literal:'Daphne Greengrass')}, {'character': Value(literal:'Emma Swan')}, {'character': Value(literal:'Captain Hook | Killian Jones')}, {'character': Value(literal:'Belle (Once Upon a Time)')}, {'character': Value(literal:'Rumplestiltskin | Mr. Gold')}, {'character': Value(literal:'Snow White | Mary Margaret Blanchard')}, {'character': Value(literal:'Red Riding Hood | Ruby')}, {'character': Value(literal:'Baelfire | Neal Cassidy')}, {'character': Value(literal:'Prince ""Charming"" James | David Nolan')}, {'character': Value(literal:'Milah (Once Upon a Time)')}, {'character': Value(literal:'Widow Lucas | Granny')}, {'character': Value(literal:'Gus | Billy')}, {'character': Value(literal:'Oliver Queen')}, {'character': Value(literal:'Roy Harper')}, {'character': Value(literal:'Nyssa al Ghul')}, {'character': Value(literal:'Sara Lance')}, {'character': Value(literal:'Thea Queen')}, {'character': Value(literal:'Laurel Lance')}, {'character': Value(literal:'Moira Queen')}, {'character': Value(literal:'Robert Queen')}, {'character': Value(literal:'Isabel Rochev')}, {'character': Value(literal:'Walter Steele')}, {'character': Value(literal:'Bobby Singer')}, {'character': Value(literal:'Castiel (Supernatural)')}, {'character': Value(literal:'Dean Winchester')}, {'character': Value(literal:'Jack Kline')}, {'character': Value(literal:'Sam Winchester')}, {'character': Value(literal:'Crowley (Supernatural)')}, {'character': Value(literal:'Eileen Leahy')}, {'character': Value(literal:'The Shadow | The Cosmic Entity (Supernatural)')}, {'character': Value(literal:'Mrs. Butters (Supernatural)')}]"	0	1	1
138	138	en	What characters appear in While We Were Constellations?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT ?characters WHERE {  ?story golem:title ""While We Were Constellations"" . ?story golem:characters ?characters . }"	[{'characters': Value(literal:'Remus Lupin')}, {'characters': Value(literal:'Sirius Black')}]	138	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: What characters appear in While We Were Constellations?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/>  
SELECT DISTINCT ?character WHERE { 
    ?story golem:title ""While We Were Constellations"" . 
    ?story golem:characters ?character . 
}
"	[{'character': Value(literal:'Remus Lupin')}, {'character': Value(literal:'Sirius Black')}]	0	1	1
139	139	en	What characters appear in December Delights?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT ?characters WHERE {  ?story golem:title ""December Delights"" . ?story golem:characters ?characters . }"	[{'characters': Value(literal:'Draco Malfoy')}, {'characters': Value(literal:'Harry Potter')}]	139	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: What characters appear in December Delights?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?character WHERE { 
?story golem:title ""December Delights"" . 
?story golem:characters ?character . 
}
"	[{'character': Value(literal:'Draco Malfoy')}, {'character': Value(literal:'Harry Potter')}]	0	1	1
140	140	en	What characters appear in The Two Names of Xiomara Rolanda Hooch?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT ?characters WHERE {  ?story golem:title ""The Two Names of Xiomara Rolanda Hooch"" . ?story golem:characters ?characters . }"	[{'characters': Value(literal:'Albus Dumbledore')}, {'characters': Value(literal:'Minerva McGonagall')}, {'characters': Value(literal:'Madam Hooch')}]	140	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: What characters appear in The Two Names of Xiomara Rolanda Hooch?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?character WHERE { 
?story golem:title ""The Two Names of Xiomara Rolanda Hooch"" . 
?story golem:characters ?character . 
}
"	[{'character': Value(literal:'Albus Dumbledore')}, {'character': Value(literal:'Minerva McGonagall')}, {'character': Value(literal:'Madam Hooch')}]	0	1	1
142	142	en	What characters appear in Time line?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT ?characters WHERE {  ?story golem:title ""Time line"" . ?story golem:characters ?characters . }"	[{'characters': Value(literal:'Albus Dumbledore')}, {'characters': Value(literal:'Draco Malfoy')}, {'characters': Value(literal:'Harry Potter')}, {'characters': Value(literal:'Hermione Granger')}, {'characters': Value(literal:'Lucius Malfoy')}, {'characters': Value(literal:'Neville Longbottom')}, {'characters': Value(literal:'Ron Weasley')}, {'characters': Value(literal:'Lord Voldemort')}, {'characters': Value(literal:'Narcissa Malfoy')}, {'characters': Value(literal:'Bellatrix Lestrange')}, {'characters': Value(literal:'Alice Marvolo Riddle')}]	142	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: What characters appear in Time line?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?character WHERE { 
?story golem:title ""Time line"" . 
?story golem:characters ?character . 
}
"	[{'character': Value(literal:'Albus Dumbledore')}, {'character': Value(literal:'Draco Malfoy')}, {'character': Value(literal:'Harry Potter')}, {'character': Value(literal:'Hermione Granger')}, {'character': Value(literal:'Lucius Malfoy')}, {'character': Value(literal:'Neville Longbottom')}, {'character': Value(literal:'Ron Weasley')}, {'character': Value(literal:'Lord Voldemort')}, {'character': Value(literal:'Narcissa Malfoy')}, {'character': Value(literal:'Bellatrix Lestrange')}, {'character': Value(literal:'Alice Marvolo Riddle')}]	0	1	1
143	143	en	What characters appear in hopeless (but you give me hope)?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT ?characters WHERE {  ?story golem:title ""hopeless (but you give me hope)"" . ?story golem:characters ?characters . }"	[{'characters': Value(literal:'James Potter')}, {'characters': Value(literal:'Regulus Black')}, {'characters': Value(literal:'Remus Lupin')}, {'characters': Value(literal:'Sirius Black')}]	143	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: What characters appear in hopeless (but you give me hope)?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?character WHERE { 
?story golem:title ""hopeless (but you give me hope)"" . 
?story golem:characters ?character . 
}
"	[{'character': Value(literal:'James Potter')}, {'character': Value(literal:'Regulus Black')}, {'character': Value(literal:'Remus Lupin')}, {'character': Value(literal:'Sirius Black')}]	0	1	1
144	144	en	What characters appear in February 15?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT ?characters WHERE {  ?story golem:title ""February 15"" . ?story golem:characters ?characters . }"	[{'characters': Value(literal:'Draco Malfoy')}, {'characters': Value(literal:'Ginny Weasley')}, {'characters': Value(literal:'Harry Potter')}, {'characters': Value(literal:'Lucius Malfoy')}, {'characters': Value(literal:'Narcissa Black Malfoy')}, {'characters': Value(literal:'Pansy Parkinson')}, {'characters': Value(literal:'Albus Severus Potter')}, {'characters': Value(literal:'John Lennon')}, {'characters': Value(literal:'Paul McCartney')}, {'characters': Value(literal:'Ringo Starr')}, {'characters': Value(literal:'George Harrison')}, {'characters': Value(literal:'Greg Lestrade')}, {'characters': Value(literal:'Sherlock Holmes')}, {'characters': Value(literal:'Becky Lynch | Rebecca Knox')}, {'characters': Value(literal:'Rhea Ripley')}]	144	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: What characters appear in February 15?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?character WHERE { 
?story golem:datePublished ""February 15"" . 
?story golem:characters ?character . 
}
"	[]	0	0	1
146	146	en	What series is (fanart) Wolfstar prompts a part of?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?series WHERE {  ?story golem:title ""(fanart) Wolfstar prompts"" . ?story golem:series ?series . }"	[{'series': Value(literal:'None')}]	146	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: What series is (fanart) Wolfstar prompts a part of?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?series WHERE { 
?story golem:title ""fanart"" . 
?story golem:fandom ""Wolfstar prompts"" . 
?story golem:series ?series . 
}
"	[]	0	0	1
147	147	en	What series is Two Lions and a Badger a part of?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?series WHERE {  ?story golem:title ""Two Lions and a Badger"" . ?story golem:series ?series . }"	[{'series': Value(literal:'None')}]	147	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: What series is Two Lions and a Badger a part of?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?series WHERE { 
?story golem:title ""Two Lions and a Badger"" . 
?story golem:series ?series . 
}
"	[{'series': Value(literal:'None')}]	1	0	0
148	148	en	What series is July 28th Hunger Games a part of?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?series WHERE {  ?story golem:title ""July 28th Hunger Games"" . ?story golem:series ?series . }"	[{'series': Value(literal:'My Hunger Games Simulations [3]')}]	148	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: What series is July 28th Hunger Games a part of?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?series WHERE { 
?story golem:title ""July 28th Hunger Games"" . 
?story golem:series ?series . 
}
"	[{'series': Value(literal:'My Hunger Games Simulations [3]')}]	1	0	0
149	149	en	What series is When the Masons came to dinner a part of?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?series WHERE {  ?story golem:title ""When the Masons came to dinner"" . ?story golem:series ?series . }"	[{'series': Value(literal:'None')}]	149	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: What series is When the Masons came to dinner a part of?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?series WHERE { 
?story golem:title ""When the Masons came to dinner"" . 
?story golem:series ?series . 
}
"	[{'series': Value(literal:'None')}]	1	0	0
150	150	en	What series is The Forest Again a part of?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?series WHERE {  ?story golem:title ""The Forest Again"" . ?story golem:series ?series . }"	[{'series': Value(literal:'None')}]	150	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: What series is The Forest Again a part of?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?series WHERE { 
?story golem:title ""The Forest Again"" . 
?story golem:series ?series . 
}
"	[{'series': Value(literal:'None')}]	1	0	0
151	151	en	What series is Recompense and Redress a part of?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?series WHERE {  ?story golem:title ""Recompense and Redress"" . ?story golem:series ?series . }"	[{'series': Value(literal:'None')}]	151	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: What series is Recompense and Redress a part of?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/>  
SELECT DISTINCT ?series WHERE { 
?story golem:title ""Recompense and Redress"" . 
?story golem:series ?series . 
}
"	[{'series': Value(literal:'None')}]	1	0	0
152	152	en	What series is Good morning, Harry a part of?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?series WHERE {  ?story golem:title ""Good morning, Harry"" . ?story golem:series ?series . }"	[{'series': Value(literal:'None')}]	152	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: What series is Good morning, Harry a part of?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?series WHERE { 
?story golem:title ""Good morning, Harry"" . 
?story golem:series ?series . 
}
"	[{'series': Value(literal:'None')}]	1	0	0
153	153	en	What series is A Place a part of?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?series WHERE {  ?story golem:title ""A Place"" . ?story golem:series ?series . }"	"[{'series': Value(literal:""Spinner's End [2]"")}, {'series': Value(literal:'None')}, {'series': Value(literal:'Guild Wars 2 Stories [6]')}]"	153	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: What series is A Place a part of?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?series WHERE { 
?story golem:title ""A Place"" . 
?story golem:series ?series . 
}
"	"[{'series': Value(literal:""Spinner's End [2]"")}, {'series': Value(literal:'None')}, {'series': Value(literal:'Guild Wars 2 Stories [6]')}]"	1	0	0
154	154	en	What series is High Cotton a part of?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?series WHERE {  ?story golem:title ""High Cotton"" . ?story golem:series ?series . }"	[{'series': Value(literal:'None')}]	154	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: What series is High Cotton a part of?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?series WHERE { 
?story golem:title ""High Cotton"" . 
?story golem:series ?series . 
}
"	[{'series': Value(literal:'None')}]	1	0	0
155	155	en	What series is Sparked by Design a part of?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?series WHERE {  ?story golem:title ""Sparked by Design"" . ?story golem:series ?series . }"	[{'series': Value(literal:'None')}]	155	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: What series is Sparked by Design a part of?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?series WHERE { 
?story golem:title ""Sparked by Design"" . 
?story golem:series ?series . 
}
"	[{'series': Value(literal:'None')}]	1	0	0
158	158	en	How many Kudos did Leaving it like this receive?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?kudos WHERE {  ?story golem:title ""Leaving it like this"" . ?story golem:numberOfKudos ?kudos . }"	[{'kudos': Value(typed-literal:'76')}]	158	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: How many Kudos did Leaving it like this receive?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?kudos WHERE { 
  ?story golem:title ""Leaving it like this"" . 
  ?story golem:numberOfKudos ?kudos . 
}
"	[{'kudos': Value(typed-literal:'76')}]	1	0	0
159	159	en	How many Kudos did If receive?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?kudos WHERE {  ?story golem:title ""If"" . ?story golem:numberOfKudos ?kudos . }"	[{'kudos': Value(literal:'None')}, {'kudos': Value(typed-literal:'3')}, {'kudos': Value(typed-literal:'2')}, {'kudos': Value(typed-literal:'14')}, {'kudos': Value(typed-literal:'24')}, {'kudos': Value(typed-literal:'38')}, {'kudos': Value(typed-literal:'102')}, {'kudos': Value(typed-literal:'26')}, {'kudos': Value(typed-literal:'9')}, {'kudos': Value(typed-literal:'52')}, {'kudos': Value(typed-literal:'46')}, {'kudos': Value(typed-literal:'18')}, {'kudos': Value(typed-literal:'59')}, {'kudos': Value(typed-literal:'33')}, {'kudos': Value(typed-literal:'42')}, {'kudos': Value(typed-literal:'68')}, {'kudos': Value(typed-literal:'49')}, {'kudos': Value(typed-literal:'58')}, {'kudos': Value(typed-literal:'10')}, {'kudos': Value(typed-literal:'143')}, {'kudos': Value(typed-literal:'25')}, {'kudos': Value(typed-literal:'139')}, {'kudos': Value(typed-literal:'47')}, {'kudos': Value(typed-literal:'27')}, {'kudos': Value(typed-literal:'13')}, {'kudos': Value(typed-literal:'28')}, {'kudos': Value(typed-literal:'87')}, {'kudos': Value(typed-literal:'31')}, {'kudos': Value(typed-literal:'55')}, {'kudos': Value(typed-literal:'4')}, {'kudos': Value(typed-literal:'1')}, {'kudos': Value(typed-literal:'50')}, {'kudos': Value(typed-literal:'12')}, {'kudos': Value(typed-literal:'128')}, {'kudos': Value(typed-literal:'5')}, {'kudos': Value(typed-literal:'54')}, {'kudos': Value(typed-literal:'350')}, {'kudos': Value(typed-literal:'120')}, {'kudos': Value(typed-literal:'45')}, {'kudos': Value(typed-literal:'130')}, {'kudos': Value(typed-literal:'226')}, {'kudos': Value(typed-literal:'7')}, {'kudos': Value(typed-literal:'17')}, {'kudos': Value(typed-literal:'16')}, {'kudos': Value(typed-literal:'230')}, {'kudos': Value(typed-literal:'35')}, {'kudos': Value(typed-literal:'82')}, {'kudos': Value(typed-literal:'180')}, {'kudos': Value(typed-literal:'92')}, {'kudos': Value(typed-literal:'122')}, {'kudos': Value(typed-literal:'119')}, {'kudos': Value(typed-literal:'69')}, {'kudos': Value(typed-literal:'15')}, {'kudos': Value(typed-literal:'309')}, {'kudos': Value(typed-literal:'56')}, {'kudos': Value(typed-literal:'37')}, {'kudos': Value(typed-literal:'2260')}, {'kudos': Value(typed-literal:'11')}, {'kudos': Value(typed-literal:'217')}, {'kudos': Value(typed-literal:'319')}, {'kudos': Value(typed-literal:'57')}, {'kudos': Value(typed-literal:'48')}, {'kudos': Value(typed-literal:'121')}, {'kudos': Value(typed-literal:'142')}, {'kudos': Value(typed-literal:'61')}, {'kudos': Value(typed-literal:'70')}, {'kudos': Value(typed-literal:'1121')}, {'kudos': Value(typed-literal:'148')}, {'kudos': Value(typed-literal:'379')}, {'kudos': Value(typed-literal:'101')}, {'kudos': Value(typed-literal:'86')}, {'kudos': Value(typed-literal:'133')}, {'kudos': Value(typed-literal:'66')}, {'kudos': Value(typed-literal:'74')}, {'kudos': Value(typed-literal:'160')}, {'kudos': Value(typed-literal:'67')}, {'kudos': Value(typed-literal:'158')}]	159	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: How many Kudos did If receive?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT ?kudos WHERE {
  ?story golem:title ""If"" .
  ?story golem:numberOfKudos ?kudos .
}
"	[{'kudos': Value(literal:'None')}, {'kudos': Value(typed-literal:'3')}, {'kudos': Value(typed-literal:'2')}, {'kudos': Value(typed-literal:'14')}, {'kudos': Value(typed-literal:'24')}, {'kudos': Value(typed-literal:'38')}, {'kudos': Value(typed-literal:'102')}, {'kudos': Value(typed-literal:'26')}, {'kudos': Value(typed-literal:'9')}, {'kudos': Value(typed-literal:'52')}, {'kudos': Value(typed-literal:'46')}, {'kudos': Value(typed-literal:'18')}, {'kudos': Value(typed-literal:'59')}, {'kudos': Value(typed-literal:'3')}, {'kudos': Value(typed-literal:'24')}, {'kudos': Value(typed-literal:'33')}, {'kudos': Value(typed-literal:'42')}, {'kudos': Value(typed-literal:'68')}, {'kudos': Value(typed-literal:'49')}, {'kudos': Value(typed-literal:'2')}, {'kudos': Value(typed-literal:'58')}, {'kudos': Value(typed-literal:'10')}, {'kudos': Value(typed-literal:'143')}, {'kudos': Value(typed-literal:'25')}, {'kudos': Value(typed-literal:'139')}, {'kudos': Value(literal:'None')}, {'kudos': Value(typed-literal:'47')}, {'kudos': Value(typed-literal:'68')}, {'kudos': Value(typed-literal:'27')}, {'kudos': Value(typed-literal:'3')}, {'kudos': Value(typed-literal:'13')}, {'kudos': Value(typed-literal:'26')}, {'kudos': Value(typed-literal:'24')}, {'kudos': Value(typed-literal:'26')}, {'kudos': Value(typed-literal:'28')}, {'kudos': Value(typed-literal:'87')}, {'kudos': Value(typed-literal:'31')}, {'kudos': Value(typed-literal:'55')}, {'kudos': Value(typed-literal:'4')}, {'kudos': Value(typed-literal:'1')}, {'kudos': Value(typed-literal:'50')}, {'kudos': Value(typed-literal:'12')}, {'kudos': Value(typed-literal:'128')}, {'kudos': Value(typed-literal:'5')}, {'kudos': Value(typed-literal:'54')}, {'kudos': Value(typed-literal:'350')}, {'kudos': Value(typed-literal:'120')}, {'kudos': Value(typed-literal:'45')}, {'kudos': Value(typed-literal:'26')}, {'kudos': Value(typed-literal:'130')}, {'kudos': Value(typed-literal:'226')}, {'kudos': Value(typed-literal:'5')}, {'kudos': Value(typed-literal:'7')}, {'kudos': Value(typed-literal:'17')}, {'kudos': Value(typed-literal:'16')}, {'kudos': Value(typed-literal:'230')}, {'kudos': Value(typed-literal:'35')}, {'kudos': Value(typed-literal:'42')}, {'kudos': Value(typed-literal:'16')}, {'kudos': Value(typed-literal:'52')}, {'kudos': Value(typed-literal:'1')}, {'kudos': Value(typed-literal:'13')}, {'kudos': Value(typed-literal:'82')}, {'kudos': Value(typed-literal:'17')}, {'kudos': Value(typed-literal:'9')}, {'kudos': Value(typed-literal:'180')}, {'kudos': Value(typed-literal:'33')}, {'kudos': Value(typed-literal:'92')}, {'kudos': Value(typed-literal:'122')}, {'kudos': Value(typed-literal:'12')}, {'kudos': Value(typed-literal:'17')}, {'kudos': Value(typed-literal:'119')}, {'kudos': Value(typed-literal:'69')}, {'kudos': Value(typed-literal:'26')}, {'kudos': Value(typed-literal:'4')}, {'kudos': Value(typed-literal:'5')}, {'kudos': Value(typed-literal:'15')}, {'kudos': Value(typed-literal:'13')}, {'kudos': Value(typed-literal:'309')}, {'kudos': Value(typed-literal:'31')}, {'kudos': Value(typed-literal:'56')}, {'kudos': Value(typed-literal:'26')}, {'kudos': Value(typed-literal:'37')}, {'kudos': Value(typed-literal:'2260')}, {'kudos': Value(typed-literal:'50')}, {'kudos': Value(typed-literal:'11')}, {'kudos': Value(typed-literal:'217')}, {'kudos': Value(typed-literal:'18')}, {'kudos': Value(typed-literal:'319')}, {'kudos': Value(typed-literal:'57')}, {'kudos': Value(typed-literal:'48')}, {'kudos': Value(typed-literal:'3')}, {'kudos': Value(typed-literal:'11')}, {'kudos': Value(typed-literal:'121')}, {'kudos': Value(typed-literal:'142')}, {'kudos': Value(typed-literal:'61')}, {'kudos': Value(typed-literal:'12')}, {'kudos': Value(typed-literal:'3')}, {'kudos': Value(typed-literal:'1')}, {'kudos': Value(typed-literal:'70')}, {'kudos': Value(typed-literal:'54')}, {'kudos': Value(typed-literal:'9')}, {'kudos': Value(typed-literal:'3')}, {'kudos': Value(typed-literal:'1121')}, {'kudos': Value(typed-literal:'48')}, {'kudos': Value(typed-literal:'148')}, {'kudos': Value(typed-literal:'379')}, {'kudos': Value(typed-literal:'5')}, {'kudos': Value(typed-literal:'3')}, {'kudos': Value(literal:'None')}, {'kudos': Value(typed-literal:'101')}, {'kudos': Value(typed-literal:'86')}, {'kudos': Value(typed-literal:'133')}, {'kudos': Value(typed-literal:'61')}, {'kudos': Value(typed-literal:'2')}, {'kudos': Value(typed-literal:'66')}, {'kudos': Value(typed-literal:'74')}, {'kudos': Value(typed-literal:'160')}, {'kudos': Value(typed-literal:'7')}, {'kudos': Value(typed-literal:'7')}, {'kudos': Value(typed-literal:'67')}, {'kudos': Value(typed-literal:'158')}]	0	1	1
160	160	en	How many Kudos did The Wayward Wand receive?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?kudos WHERE {  ?story golem:title ""The Wayward Wand"" . ?story golem:numberOfKudos ?kudos . }"	[{'kudos': Value(typed-literal:'13')}, {'kudos': Value(typed-literal:'350')}, {'kudos': Value(typed-literal:'366')}]	160	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: How many Kudos did The Wayward Wand receive?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?kudos WHERE { 
?story golem:title ""The Wayward Wand"" . 
?story golem:numberOfKudos ?kudos . }
"	[{'kudos': Value(typed-literal:'13')}, {'kudos': Value(typed-literal:'350')}, {'kudos': Value(typed-literal:'366')}]	1	0	0
161	161	en	How many Kudos did The Bonds That Bind Us receive?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?kudos WHERE {  ?story golem:title ""The Bonds That Bind Us"" . ?story golem:numberOfKudos ?kudos . }"	[{'kudos': Value(typed-literal:'845')}, {'kudos': Value(typed-literal:'73')}, {'kudos': Value(typed-literal:'75')}, {'kudos': Value(typed-literal:'82')}, {'kudos': Value(typed-literal:'54')}, {'kudos': Value(typed-literal:'6')}]	161	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: How many Kudos did The Bonds That Bind Us receive?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?kudos WHERE { 
?story golem:title ""The Bonds That Bind Us"" . 
?story golem:numberOfKudos ?kudos . 
}
"	[{'kudos': Value(typed-literal:'845')}, {'kudos': Value(typed-literal:'73')}, {'kudos': Value(typed-literal:'75')}, {'kudos': Value(typed-literal:'82')}, {'kudos': Value(typed-literal:'54')}, {'kudos': Value(typed-literal:'6')}]	1	0	0
162	162	en	How many Kudos did Its Her Secret receive?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?kudos WHERE {  ?story golem:title ""Its Her Secret"" . ?story golem:numberOfKudos ?kudos . }"	[{'kudos': Value(typed-literal:'36')}, {'kudos': Value(typed-literal:'37')}]	162	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: How many Kudos did Its Her Secret receive?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?kudos WHERE { 
?story golem:title ""Its Her Secret"" . 
?story golem:numberOfKudos ?kudos . }
"	[{'kudos': Value(typed-literal:'36')}, {'kudos': Value(typed-literal:'37')}]	1	0	0
163	163	en	How many Kudos did Three Wizards and a Little Lady receive?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?kudos WHERE {  ?story golem:title ""Three Wizards and a Little Lady"" . ?story golem:numberOfKudos ?kudos . }"	[{'kudos': Value(typed-literal:'535')}, {'kudos': Value(typed-literal:'1274')}, {'kudos': Value(typed-literal:'1446')}]	163	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: How many Kudos did Three Wizards and a Little Lady receive?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?kudos WHERE { 
?story golem:title ""Three Wizards and a Little Lady"" . 
?story golem:numberOfKudos ?kudos . 
}
"	[{'kudos': Value(typed-literal:'535')}, {'kudos': Value(typed-literal:'1274')}, {'kudos': Value(typed-literal:'1446')}]	1	0	0
164	164	en	How many Kudos did This Is Not A Story - Harry Goes To Music School receive?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?kudos WHERE {  ?story golem:title ""This Is Not A Story - Harry Goes To Music School"" . ?story golem:numberOfKudos ?kudos . }"	[{'kudos': Value(typed-literal:'6')}]	164	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: How many Kudos did This Is Not A Story - Harry Goes To Music School receive?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?kudos WHERE { 
?story golem:title ""This Is Not A Story - Harry Goes To Music School"" . 
?story golem:numberOfKudos ?kudos . 
}
"	[{'kudos': Value(typed-literal:'6')}]	1	0	0
165	165	en	How many Kudos did Unruly Hearts receive?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?kudos WHERE {  ?story golem:title ""Unruly Hearts"" . ?story golem:numberOfKudos ?kudos . }"	[{'kudos': Value(typed-literal:'21')}, {'kudos': Value(typed-literal:'11')}, {'kudos': Value(typed-literal:'56')}]	165	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: How many Kudos did Unruly Hearts receive?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT ?kudos WHERE { 
?story golem:title ""Unruly Hearts"" . 
?story golem:numberOfKudos ?kudos . }
"	[{'kudos': Value(typed-literal:'21')}, {'kudos': Value(typed-literal:'11')}, {'kudos': Value(typed-literal:'56')}]	1	0	0
166	166	en	How many Kudos did Winter kisses receive?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?kudos WHERE {  ?story golem:title ""Winter kisses"" . ?story golem:numberOfKudos ?kudos . }"	[{'kudos': Value(typed-literal:'20')}, {'kudos': Value(typed-literal:'19')}]	166	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: How many Kudos did Winter kisses receive?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/>  
SELECT DISTINCT ?kudos WHERE { 
?story golem:title ""Winter kisses"" . 
?story golem:numberOfKudos ?kudos . 
}
"	[{'kudos': Value(typed-literal:'20')}, {'kudos': Value(typed-literal:'19')}]	1	0	0
167	167	en	How many Kudos did A Marauder's Life receive?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?kudos WHERE {  ?story golem:title ""A Marauder's Life"" . ?story golem:numberOfKudos ?kudos . }"	[{'kudos': Value(typed-literal:'9')}, {'kudos': Value(typed-literal:'190')}]	167	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: How many Kudos did A Marauder's Life receive?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?kudos WHERE { 
?story golem:title ""A Marauder's Life"" . 
?story golem:numberOfKudos ?kudos . }
"	[{'kudos': Value(typed-literal:'9')}, {'kudos': Value(typed-literal:'190')}]	1	0	0
169	169	en	Where is A Family Christmas published?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?publisher WHERE {  ?story golem:title ""A Family Christmas"" . ?story golem:publisher ?publisher . }"	[{'publisher': Value(literal:'archiveofourown.org')}]	169	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: Where is A Family Christmas published?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?publisher WHERE { 
?story golem:title ""A Family Christmas"" . 
?story golem:publisher ?publisher . 
}
"	[{'publisher': Value(literal:'archiveofourown.org')}]	1	0	0
170	170	en	Where is Resistance of the Mind published?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?publisher WHERE {  ?story golem:title ""Resistance of the Mind"" . ?story golem:publisher ?publisher . }"	[{'publisher': Value(literal:'archiveofourown.org')}]	170	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: Where is Resistance of the Mind published?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?publisher WHERE { 
  ?story golem:title ""Resistance of the Mind"" . 
  ?story golem:publisher ?publisher . 
}
"	[{'publisher': Value(literal:'archiveofourown.org')}]	1	0	0
171	171	en	Where is you're my flesh and blood, whether you like it or not published?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?publisher WHERE {  ?story golem:title ""you're my flesh and blood, whether you like it or not"" . ?story golem:publisher ?publisher . }"	[{'publisher': Value(literal:'archiveofourown.org')}]	171	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: Where is you're my flesh and blood, whether you like it or not published?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?publisher WHERE { 
?story golem:title ""you're my flesh and blood, whether you like it or not"" . 
?story golem:publisher ?publisher . 
}
"	[{'publisher': Value(literal:'archiveofourown.org')}]	1	0	0
172	172	en	Where is Pansy's Inheritance published?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?publisher WHERE {  ?story golem:title ""Pansy's Inheritance"" . ?story golem:publisher ?publisher . }"	[{'publisher': Value(literal:'archiveofourown.org')}]	172	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: Where is Pansy's Inheritance published?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/>  
SELECT DISTINCT ?publisher WHERE { 
?story golem:title ""Pansy's Inheritance"" . 
?story golem:publisher ?publisher . 
}
"	[{'publisher': Value(literal:'archiveofourown.org')}]	1	0	0
173	173	en	Where is Death's Chokehold published?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?publisher WHERE {  ?story golem:title ""Death's Chokehold"" . ?story golem:publisher ?publisher . }"	[{'publisher': Value(literal:'archiveofourown.org')}]	173	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: Where is Death's Chokehold published?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?publisher WHERE { 
?story golem:title ""Death's Chokehold"" . 
?story golem:publisher ?publisher . }
"	[{'publisher': Value(literal:'archiveofourown.org')}]	1	0	0
174	174	en	Where is Out of Harm's Way - A Frank & Alice Longbottom Short Story published?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?publisher WHERE {  ?story golem:title ""Out of Harm's Way - A Frank & Alice Longbottom Short Story"" . ?story golem:publisher ?publisher . }"	[{'publisher': Value(literal:'archiveofourown.org')}]	174	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: Where is Out of Harm's Way - A Frank & Alice Longbottom Short Story published?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?publisher WHERE { 
?story golem:title ""Out of Harm's Way - A Frank & Alice Longbottom Short Story"" . 
?story golem:publisher ?publisher . }
"	[{'publisher': Value(literal:'archiveofourown.org')}]	1	0	0
175	175	en	Where is I Don't Get Paid Enough For This published?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?publisher WHERE {  ?story golem:title ""I Don't Get Paid Enough For This"" . ?story golem:publisher ?publisher . }"	[{'publisher': Value(literal:'archiveofourown.org')}]	175	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: Where is I Don't Get Paid Enough For This published?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?publisher ?place WHERE { 
?story golem:title ""I Don't Get Paid Enough For This"" . 
?story dc:publisher ?publisher . 
FILTER (regex(str(?publisher), ""published""))
BIND(strafter(str(?publisher), ""https://golemlab.eu/graph/"") AS ?place)
}
"	[]	0	0	1
176	176	en	Where is Horizon published?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?publisher WHERE {  ?story golem:title ""Horizon"" . ?story golem:publisher ?publisher . }"	[{'publisher': Value(literal:'archiveofourown.org')}]	176	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: Where is Horizon published?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?publisher WHERE { 
?story golem:title ""Horizon"" . 
?story golem:publisher ?publisher . }
"	[{'publisher': Value(literal:'archiveofourown.org')}]	1	0	0
177	177	en	Where is What A Ghostly Scene published?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?publisher WHERE {  ?story golem:title ""What A Ghostly Scene"" . ?story golem:publisher ?publisher . }"	[{'publisher': Value(literal:'archiveofourown.org')}]	177	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: Where is What A Ghostly Scene published?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
SELECT DISTINCT ?publisher WHERE { 
?story golem:title ""What A Ghostly Scene"" . 
?story golem:publisher ?publisher . 
}
"	[{'publisher': Value(literal:'archiveofourown.org')}]	1	0	0
178	178	en	Where is Future Shocks published?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?publisher WHERE {  ?story golem:title ""Future Shocks"" . ?story golem:publisher ?publisher . }"	[{'publisher': Value(literal:'archiveofourown.org')}]	178	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: Where is Future Shocks published?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?publisher WHERE { 
?story golem:title ""Future Shocks"" . 
?story golem:publisher ?publisher . 
}
"	[{'publisher': Value(literal:'archiveofourown.org')}]	1	0	0
182	182	en	What is Theodore Not Sends little girl Luna a Sext about?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?series ?collection ?content_warning ?romantic_category (GROUP_CONCAT(DISTINCT ?keyword; separator="", "") AS ?keywords) ?summary WHERE { ?story golem:title ""Theodore Not Sends little girl Luna a Sext"" . ?story golem:keyword ?keyword . ?story golem:romanticCategory ?romantic_category . ?story golem:series ?series . ?story golem:collections ?collection . ?story golem:contentWarning ?content_warning . ?story golem:summary ?summary . }"	"[{'series': Value(literal:'Suddenly Sexting [4]'), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'Creator Chose Not To Use Archive Warnings'), 'romantic_category': Value(literal:'F/M'), 'keywords': Value(literal:'AMAZING ARTIST MOODBOARD COLLAB, Age Play, BDSM, BDT, Big Dick Theo, Brat!Luna, CLICK THE LINK FOR THAT ALONE!, Can stand alone but is best read in the series, Consent is Sexy, Daddy Kink, Dirty Jokes, Dirty Talk, Explicit Language, Explicit Sexual Content, I AM SO LUCKY, In-Jokes, Lols, Luna wants to Play, NSFW, Praise Kink, Real Freaky Naughty, Sexting, Shameless Smut, She likes it rough, Size Kink, Theo is HERE FOR IT!, role play, strawberries and cream'), 'summary': Value(literal:'*******Part 4 in the Suddenly Sexting Series!!!!******* ""What are you doing now that you’re home?"" ""I’m replying to you.  I would also like to make a snack."" ""Luna...You do realise you don’t have to ask for permission?"" ""Wanna play?"" *** Luna Lovegood is is a sweet sub little girl to her Daddy Nott.  She\'s just got home safe and sends a text to let him know. Are you curious yet? ;) Click the link to find out what happens next! Sometimes the best conversations are the ones that aren’t said out loud ;)')}]"	182	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: What is Theodore Not Sends little girl Luna a Sext about?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/>  
SELECT DISTINCT ?summary WHERE { 
?story golem:title ""Theodore Not Sends"" . 
?story golem:characters ""little girl Luna"" . 
?story golem:summary ?summary . 
}
"	[]	0	0	1
183	183	en	What is A Golden Snitch about?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?series ?collection ?content_warning ?romantic_category (GROUP_CONCAT(DISTINCT ?keyword; separator="", "") AS ?keywords) ?summary WHERE { ?story golem:title ""A Golden Snitch"" . ?story golem:keyword ?keyword . ?story golem:romanticCategory ?romantic_category . ?story golem:series ?series . ?story golem:collections ?collection . ?story golem:contentWarning ?content_warning . ?story golem:summary ?summary . }"	"[{'series': Value(literal:'Severitus drabbles [1]'), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'No Archive Warnings Apply'), 'romantic_category': Value(literal:'Gen'), 'keywords': Value(literal:""Just a drabble, Severitus | Severus Snape is Harry Potter's Parent, follows the usual severitus guidelines, harry and sev go on an adventure to diagon alley, just get it in drabble form, not really up to writing the whole fic rn but i had a plot bunny so""), 'summary': Value(literal:'Harry and Sev go on an adventure to Diagon Alley. Drabble for a severitus challenge. Series: Severitus drabbles [1]')}]"	183	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: What is A Golden Snitch about?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?summary WHERE { 
?story golem:title ""A Golden Snitch"" . 
?story golem:summary ?summary . 
}
"	[{'summary': Value(literal:'Harry and Sev go on an adventure to Diagon Alley. Drabble for a severitus challenge. Series: Severitus drabbles [1]')}]	0	1	1
184	184	en	What is Forbidden Like The Forest about?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?series ?collection ?content_warning ?romantic_category (GROUP_CONCAT(DISTINCT ?keyword; separator="", "") AS ?keywords) ?summary WHERE { ?story golem:title ""Forbidden Like The Forest"" . ?story golem:keyword ?keyword . ?story golem:romanticCategory ?romantic_category . ?story golem:series ?series . ?story golem:collections ?collection . ?story golem:contentWarning ?content_warning . ?story golem:summary ?summary . }"	[{'series': Value(literal:'None'), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'No Archive Warnings Apply'), 'romantic_category': Value(literal:'F/M'), 'keywords': Value(literal:'Banter, Cowgirl Position, Cunnilingus, Explicit Sexual Content, I Was Drunk When I Wrote This, Missionary Position, Plot What Plot/Porn Without Plot, Rough Sex, mention of grandmothers'), 'summary': Value(literal:'Scorpius shouldn’t be doing this and yet he is.')}]	184	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: What is Forbidden Like The Forest about?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?summary WHERE { 
?story golem:title ""Forbidden Like The Forest"" . 
?story golem:summary ?summary . 
}
"	[{'summary': Value(literal:'Scorpius shouldn’t be doing this and yet he is.')}]	0	1	1
185	185	en	What is His First Choice about?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?series ?collection ?content_warning ?romantic_category (GROUP_CONCAT(DISTINCT ?keyword; separator="", "") AS ?keywords) ?summary WHERE { ?story golem:title ""His First Choice"" . ?story golem:keyword ?keyword . ?story golem:romanticCategory ?romantic_category . ?story golem:series ?series . ?story golem:collections ?collection . ?story golem:contentWarning ?content_warning . ?story golem:summary ?summary . }"	"[{'series': Value(literal:'None'), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'Creator Chose Not To Use Archive Warnings'), 'romantic_category': Value(literal:'F/M'), 'keywords': Value(literal:""Angst, Love, Romance, Valentine's Day, being picked first, no to settling""), 'summary': Value(literal:'Molly is tired of being unloved and passed over. She wants a special someone but she wants to be his first choice, not the good-enough girl to pass the time with until someone of value is finally free to pursue. But when she literally runs into her partner from Care of Magical Creatures class on her way back from Hogsmeade, will she finally find exactly what she is looking for?')}, {'series': Value(literal:'911 Weeks [4]'), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'No Archive Warnings Apply'), 'romantic_category': Value(literal:'M/M'), 'keywords': Value(literal:'911week2020, Bad Things Happen Bingo, Family, Fluff, Loneliness, Love Confessions'), 'summary': Value(literal:""Buck feels lonely, like everyone around him has a family, someone who cares about them more than anything, but he doesn't. Turns out he is wrong."")}, {'series': Value(literal:""Mrs Bennet's Daughters Universe [2]""), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'Major Character Death'), 'romantic_category': Value(literal:'Gen'), 'keywords': Value(literal:""But is forced to develop grudging respect., Humour, Judgey-Judginess, Lizzy was named after her, Looking Down From On High, Mrs Bennet's Perspective, She does NOT like Charlotte Lucas, They're not dissimilar, We meet Mrs Bennet's mother""), 'summary': Value(literal:'In the Mrs Bennet\'s Daughters universe, the first Mrs Bennet is dead, and the second (Charlotte Lucas) is tasked with bringing up her daughters. What does Mrs Bennet think of the arrangement? And all the goings on at Longbourn, in her absence? Now we can find out... “He is marrying Charlotte LUCAS!” Mrs Bennet wailed. “CHARLOTTE LUCAS. The little tramp!” *** ""Charlotte Lucas has just told Lady Lucas that Jane shall have two thousand pounds on her come out, and so will each girl when their time comes.” Mrs Bennet flapped her hands excitedly. ""I suppose I shall have to like her now."" ""She has taken very good care of your girls in your stead, and there are many who would not have been so generous.” “Very well.... But, I will not really like her until I see how well she does for them in marriage. THAT is the material concern.” *You probably don\'t need to read MBD first, this is pretty easy to follow by itself.*')}, {'series': Value(literal:""Mrs Bennet's Daughters Universe [2]""), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'Major Character Death'), 'romantic_category': Value(literal:'F/M'), 'keywords': Value(literal:""But is forced to develop grudging respect., Humour, Judgey-Judginess, Lizzy was named after her, Looking Down From On High, Mrs Bennet's Perspective, She does NOT like Charlotte Lucas, They're not dissimilar, We meet Mrs Bennet's mother""), 'summary': Value(literal:'In the Mrs Bennet\'s Daughters universe, the first Mrs Bennet is dead, and the second (Charlotte Lucas) is tasked with bringing up her daughters. What does Mrs Bennet think of the arrangement? And all the goings on at Longbourn, in her absence? Now we can find out... “He is marrying Charlotte LUCAS!” Mrs Bennet wailed. “CHARLOTTE LUCAS. The little tramp!” *** ""Charlotte Lucas has just told Lady Lucas that Jane shall have two thousand pounds on her come out, and so will each girl when their time comes.” Mrs Bennet flapped her hands excitedly. ""I suppose I shall have to like her now."" ""She has taken very good care of your girls in your stead, and there are many who would not have been so generous.” “Very well.... But, I will not really like her until I see how well she does for them in marriage. THAT is the material concern.” *You probably don\'t need to read MBD first, this is pretty easy to follow by itself.*')}]"	185	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: What is His First Choice about?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?about WHERE { 
?story golem:title ""His First Choice"" . 
?story golem:summary ?about . 
}
"	"[{'about': Value(literal:'Molly is tired of being unloved and passed over. She wants a special someone but she wants to be his first choice, not the good-enough girl to pass the time with until someone of value is finally free to pursue. But when she literally runs into her partner from Care of Magical Creatures class on her way back from Hogsmeade, will she finally find exactly what she is looking for?')}, {'about': Value(literal:'In the Mrs Bennet\'s Daughters universe, the first Mrs Bennet is dead, and the second (Charlotte Lucas) is tasked with bringing up her daughters. What does Mrs Bennet think of the arrangement? And all the goings on at Longbourn, in her absence? Now we can find out... “He is marrying Charlotte LUCAS!” Mrs Bennet wailed. “CHARLOTTE LUCAS. The little tramp!” *** ""Charlotte Lucas has just told Lady Lucas that Jane shall have two thousand pounds on her come out, and so will each girl when their time comes.” Mrs Bennet flapped her hands excitedly. ""I suppose I shall have to like her now."" ""She has taken very good care of your girls in your stead, and there are many who would not have been so generous.” “Very well.... But, I will not really like her until I see how well she does for them in marriage. THAT is the material concern.” *You probably don\'t need to read MBD first, this is pretty easy to follow by itself.*')}, {'about': Value(literal:""Buck feels lonely, like everyone around him has a family, someone who cares about them more than anything, but he doesn't. Turns out he is wrong."")}]"	0	1	1
186	186	en	What is Mad Tea Party about?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?series ?collection ?content_warning ?romantic_category (GROUP_CONCAT(DISTINCT ?keyword; separator="", "") AS ?keywords) ?summary WHERE { ?story golem:title ""Mad Tea Party"" . ?story golem:keyword ?keyword . ?story golem:romanticCategory ?romantic_category . ?story golem:series ?series . ?story golem:collections ?collection . ?story golem:contentWarning ?content_warning . ?story golem:summary ?summary . }"	"[{'series': Value(literal:'None'), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'No Archive Warnings Apply'), 'romantic_category': Value(literal:'Gen'), 'keywords': Value(literal:'Drug Use, Non-Consensual Drug Use, back on my shit again, welcome back to me'), 'summary': Value(literal:""Mad Hatter wants to have a tea party, but his guests aren't too keen on being there themselves."")}, {'series': Value(literal:'None'), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'No Archive Warnings Apply'), 'romantic_category': Value(literal:'Gen'), 'keywords': Value(literal:""Disney World, Fluff, Hotel, Mad Tea Party, One Shot, Peter Pan's Flight, Plane, Pre-Pandemic, boy band, dizzy - Freeform""), 'summary': Value(literal:'Pure fluff. Juan and Luke have a challenge on who can spin the tea cups at Disney World faster.')}, {'series': Value(literal:'None'), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'No Archive Warnings Apply'), 'romantic_category': Value(literal:'Gen'), 'keywords': Value(literal:'Crossover, Humor, One Shot, WhoVengerLock'), 'summary': Value(literal:'Even evil masterminds enjoy tea.')}, {'series': Value(literal:'None'), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'Graphic Depictions Of Violence'), 'romantic_category': Value(literal:'Multi'), 'keywords': Value(literal:'Alice in Wonderland References, Alternate Canon, Alternate Character Interpretation, Alternate Universe - Once Upon a Time Fusion, Awkward Conversations, Backstory, Breaking the Fourth Wall, Cannibalism, Crazy Mad Hatter | Jefferson, Crossovers & Fandom Fusions, Dark Comedy, Dark Fantasy, Food, Madness, Mythology References, Mytology, Nonsense, Prequel, References to Canon, Sweeney Todd References, Tea Parties'), 'summary': Value(literal:'A certain Demon Barber wakes up in Wonderland and finds himself among the mad crowd at the wildest tea party in fabled history.')}]"	186	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: What is Mad Tea Party about?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?summary WHERE { 
?story golem:title ""Mad Tea Party"" . 
?story golem:summary ?summary . 
}
"	"[{'summary': Value(literal:'Outtakes and omakes from the Mad Hatter universe.')}, {'summary': Value(literal:'A certain Demon Barber wakes up in Wonderland and finds himself among the mad crowd at the wildest tea party in fabled history.')}, {'summary': Value(literal:'Even evil masterminds enjoy tea.')}, {'summary': Value(literal:'Pure fluff. Juan and Luke have a challenge on who can spin the tea cups at Disney World faster.')}, {'summary': Value(literal:""Mad Hatter wants to have a tea party, but his guests aren't too keen on being there themselves."")}]"	0	1	1
193	193	en	Does a major character die in Ghost's Rebellion?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?warning WHERE {  ?story golem:title ""Ghost's Rebellion"" . ?story golem:contentWarning ?warning . FILTER(?warning = ""Major Character Death"") }"	[{'warning': Value(literal:'Major Character Death')}]	193	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: Does a major character die in Ghost's Rebellion?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?death WHERE { 
?story golem:title ""Ghost's Rebellion"" . 
?character golem:characters ?story . 
?character golem:name ?charName . 
FILTER(regex(?charName, ""major"")) 
OPTIONAL{?character golem:died ?death} 
}
"	[]	0	0	1
199	199	en	Does a major character die in bad habit?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?warning WHERE {  ?story golem:title ""bad habit"" . ?story golem:contentWarning ?warning . FILTER(?warning = ""Major Character Death"") }"	[{'warning': Value(literal:'Major Character Death')}]	199	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: Does a major character die in bad habit?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?character WHERE { 
?story golem:title ""bad habit"" .
?story golem:characters ?character .
FILTER (CONTAINS(?character, ""major""))
}
"	[]	0	0	1
200	200	en	Does a major character die in Quartet?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?warning WHERE {  ?story golem:title ""Quartet"" . ?story golem:contentWarning ?warning . FILTER(?warning = ""Major Character Death"") }"	[{'warning': Value(literal:'Major Character Death')}]	200	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: Does a major character die in Quartet?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?character WHERE { 
?story golem:title ""Quartet"" . 
?story golem:characters ?character . 
FILTER(CONTAINS(?character, ""major"")) 
}
"	[]	0	0	1
202	202	en	What stories is Mutual Pining - Character featured in?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT ?title WHERE {  ?story golem:title ?title . ?story golem:characters ""Mutual Pining - Character"" . }"	"[{'title': Value(literal:'Complicated')}, {'title': Value(literal:'would you like to share a dance?')}, {'title': Value(literal:'the summer I listened')}, {'title': Value(literal:'Evan ""Buck"" Buckley begins')}, {'title': Value(literal:'could we be more than friends? or am i being too optimistic?')}, {'title': Value(literal:'Fading Memories of The Down pour')}, {'title': Value(literal:'""Open your eyes, silly.""')}]"	202	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: What stories is Mutual Pining - Character featured in?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?storyTitle WHERE { 
?character golem:characters ""Mutual Pining - Character"" . 
?story golem:characters ?character . 
?story dc:title ?storyTitle . }
"	[]	0	0	1
203	203	en	What stories is 白川 featured in?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT ?title WHERE {  ?story golem:title ?title . ?story golem:characters ""白川"" . }"	[{'title': Value(literal:'【方绪白川】你好么？旧情人。')}, {'title': Value(literal:'浪子的浪是流浪的浪')}, {'title': Value(literal:'【方绪白川】我爱你')}, {'title': Value(literal:'【方绪白川】狗血汇总只有我最狗')}, {'title': Value(literal:'归处')}, {'title': Value(literal:'【绪川】会冷')}, {'title': Value(literal:'【方绪白川】台球桌')}, {'title': Value(literal:'【方绪白川】喝奶么')}, {'title': Value(literal:'【方绪白川】小心台阶03')}, {'title': Value(literal:'【方绪白川】姐夫')}, {'title': Value(literal:'【嬴绪嬴】网络棋王')}, {'title': Value(literal:'【方绪白川】有漏')}, {'title': Value(literal:'【方绪白川】双星')}, {'title': Value(literal:'【方绪白川】雾重了就像在下雨')}, {'title': Value(literal:'【方绪白川】错误关系')}, {'title': Value(literal:'【方绪白川】宿醉后的心理活动')}, {'title': Value(literal:'【方绪白川】离婚进行时')}, {'title': Value(literal:'【川绪】师兄……')}, {'title': Value(literal:'【俞门全员】晚春')}, {'title': Value(literal:'【绪川】温柔事故')}, {'title': Value(literal:'【方绪白川/民国AU/ABO】守节（补档部分）by 三禾君')}, {'title': Value(literal:'【方绪白川】生死劫')}, {'title': Value(literal:'【方绪白川】庆生')}, {'title': Value(literal:'【方绪白川】绪绪和川')}, {'title': Value(literal:'【方绪白川】踏雪泥')}, {'title': Value(literal:'【方绪白川】年少')}, {'title': Value(literal:'网剧棋魂续-北斗杯篇')}, {'title': Value(literal:'【方绪白川】《约束至醒》')}, {'title': Value(literal:'【方绪白川】小心台阶01-02')}, {'title': Value(literal:'【方绪白川】小的都是冤家')}, {'title': Value(literal:'其心昭昭')}, {'title': Value(literal:'【方绪白川】别离')}, {'title': Value(literal:'【方绪白川】渴望')}, {'title': Value(literal:'【方绪白川】清明梦（守节之演员paro/ABO）')}, {'title': Value(literal:'【方绪白川】戒烟')}, {'title': Value(literal:'【方绪白川】初夏')}, {'title': Value(literal:'归巢 Homing')}, {'title': Value(literal:'【方绪白川】我居然搞了我的新同事')}, {'title': Value(literal:'【方绪白川】当你误以为你的心上人要结婚')}, {'title': Value(literal:'【方绪白川】馋')}, {'title': Value(literal:'【方绪x白川】虎口')}, {'title': Value(literal:'【方绪白川】相思断')}, {'title': Value(literal:'晴空万里')}, {'title': Value(literal:'「方绪白川」肌肤之亲')}, {'title': Value(literal:'【方绪白川】勃一勃，师兄变老婆（全）')}, {'title': Value(literal:'【方绪白川】岛国情景')}, {'title': Value(literal:'【剧版棋魂/方白】第一次/第三次  by 三禾君')}, {'title': Value(literal:'未命名')}, {'title': Value(literal:'【方绪白川】《引爆》')}, {'title': Value(literal:'【方绪白川】勃一勃，师兄变老婆（番外）')}]	203	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: What stories is 白川 featured in?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/>  
prefix dc: <http://purl.org/dc/terms/>  
prefix gc: <https://ontology.golemlab.eu/>  
SELECT DISTINCT ?storyTitle WHERE { 
?character golem:name ""白川"" .
?story golem:characters ?character .
?story golem:title ?storyTitle .
}
"	[]	0	0	1
204	204	en	What stories is Ubuyashiki Kuina featured in?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT ?title WHERE {  ?story golem:title ?title . ?story golem:characters ""Ubuyashiki Kuina"" . }"	"[{'title': Value(literal:'往事温柔/Tender Is the Memory')}, {'title': Value(literal:""I don't love her"")}, {'title': Value(literal:'Boars and Shiny Acorns')}, {'title': Value(literal:'Young love, so special')}, {'title': Value(literal:'Fists of Calamity')}, {'title': Value(literal:'Marked: Breath of Water')}, {'title': Value(literal:'Up the wisteria tree')}, {'title': Value(literal:'KNY Phobiatober 2021')}, {'title': Value(literal:'Something Like Heart')}, {'title': Value(literal:'Wistful')}, {'title': Value(literal:'What if...Shinobu Kochō lived?')}, {'title': Value(literal:'This is 204.5 canon and you cannot change my mind')}, {'title': Value(literal:'kintsugi')}, {'title': Value(literal:'Butterfly Kiss')}, {'title': Value(literal:'Your tear precious to me')}, {'title': Value(literal:'when we faced off together against death')}, {'title': Value(literal:'Duty to Our Deathbed')}, {'title': Value(literal:'The Pillar Training Oath')}, {'title': Value(literal:""Kiriya's cats"")}, {'title': Value(literal:'Miracle')}, {'title': Value(literal:'Miracle (Short hiatus)')}, {'title': Value(literal:'Destinos Cambiados')}, {'title': Value(literal:'The Pig, The Mask, and The Slayers')}, {'title': Value(literal:'The Pig, The Mask, and The Slayers [Prolonged Hiatus due to Technoblades unfortunate passing]')}, {'title': Value(literal:'The bloody end of it all')}, {'title': Value(literal:'successors and cogs at work,')}, {'title': Value(literal:""Ubuyashiki's Protector"")}, {'title': Value(literal:'Construyendo Nuestros Pilares')}, {'title': Value(literal:'Breath of the Void')}, {'title': Value(literal:'Unravel')}, {'title': Value(literal:'Divine Unknown')}, {'title': Value(literal:""Zenitsu Isn't Just a Boy's Name"")}, {'title': Value(literal:'Tender Is the Memory')}, {'title': Value(literal:'Breath of the Wisteria')}, {'title': Value(literal:'Life Changes')}, {'title': Value(literal:'Affinity')}]"	204	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: What stories is Ubuyashiki Kuina featured in?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?story WHERE { 
?character golem:name ""Ubuyashiki Kuina"" . 
?story golem:characters ?character . 
}
"	[]	0	0	1
205	205	en	What stories is Massimo Torricelli featured in?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT ?title WHERE {  ?story golem:title ?title . ?story golem:characters ""Massimo Torricelli"" . }"	"[{'title': Value(literal:'Next stop: Sicily')}, {'title': Value(literal:'Nothing in Life is Easy')}, {'title': Value(literal:'Never Escape')}, {'title': Value(literal:'Daughter of the Don')}, {'title': Value(literal:'365 Songs')}, {'title': Value(literal:'Melted Chocolate')}, {'title': Value(literal:'Waterful')}, {'title': Value(literal:'Fuck the Rules')}, {'title': Value(literal:'Can’t seem to make you mine')}, {'title': Value(literal:""I'm not your property"")}, {'title': Value(literal:'Maid for Massimo')}, {'title': Value(literal:""Me And My Husband (We're sticking together)"")}, {'title': Value(literal:'The Lion and the Phoenix')}]"	205	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: What stories is Massimo Torricelli featured in?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?storyTitle WHERE { 
?character golem:name ""Massimo Torricelli"" . 
?storyCharacter gc:characters ?character . 
?storyCharacter dc:title ?storyTitle . }
"	[]	0	0	1
206	206	en	What stories is minor oc’s irrelevant to the storyline featured in?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT ?title WHERE {  ?story golem:title ?title . ?story golem:characters ""minor oc’s irrelevant to the storyline"" . }"	[{'title': Value(literal:'I’m howling at the moon (and sleeping in the middle of a summer afternoon)')}, {'title': Value(literal:'Werewolf (name suggestions are welcome)')}, {'title': Value(literal:'Howling at the moon (and sleeping in the middle of a summer afternoon)')}]	206	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: What stories is minor oc’s irrelevant to the storyline featured in?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?story WHERE { 
?minor_oc golem:characters ""irrelevant"" . 
?story gc:contentWarning ""minor oc's"" . 
}
"	[]	0	0	1
207	207	en	What stories is Tracey Stewart featured in?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT ?title WHERE {  ?story golem:title ?title . ?story golem:characters ""Tracey Stewart"" . }"	"[{'title': Value(literal:'【翻译】Books and Their Covers')}, {'title': Value(literal:'We Who Wait')}, {'title': Value(literal:'angel in the night')}, {'title': Value(literal:'Resurrection')}, {'title': Value(literal:'Prayer for Help')}, {'title': Value(literal:'An Empty Garden')}, {'title': Value(literal:'High (Blood) Pressure')}, {'title': Value(literal:'This Is A Fact.')}, {'title': Value(literal:'Night Terrors')}, {'title': Value(literal:'When I Go Backwards')}, {'title': Value(literal:'Regression to the Mean')}, {'title': Value(literal:'Scandal')}, {'title': Value(literal:""I didn't just kiss her"")}, {'title': Value(literal:'The one with relationship advice')}, {'title': Value(literal:'Shadows Of The Night')}, {'title': Value(literal:'Shadows Of The Night')}, {'title': Value(literal:""I've been calling you for days"")}, {'title': Value(literal:'The perfect pack')}, {'title': Value(literal:'The one with the tent')}, {'title': Value(literal:'The one with the traffic jam')}, {'title': Value(literal:'Wires')}, {'title': Value(literal:'Strange Love')}, {'title': Value(literal:'Trapped')}, {'title': Value(literal:'This is my town- Book 1')}, {'title': Value(literal:'Shooting Stars')}, {'title': Value(literal:'The Way You Make Me Feel')}, {'title': Value(literal:'Safe')}, {'title': Value(literal:'Love Me True')}, {'title': Value(literal:'Enter the Mage')}, {'title': Value(literal:'Both the Absurd and the Unexpected')}, {'title': Value(literal:'My Name is Mieczyslaw Zor El')}, {'title': Value(literal:'Putting on a Show')}, {'title': Value(literal:'Dancing in the Dark')}, {'title': Value(literal:'Seven Minutes In Heaven')}, {'title': Value(literal:'gymnastic rings')}, {'title': Value(literal:'Smile, And Maybe Tomorrow')}, {'title': Value(literal:'Chasing Cars')}, {'title': Value(literal:""baby, my soul is yours (please say you'll have me)"")}, {'title': Value(literal:'Jon/""Stephen"" Drabbles & Ficlets (II)')}, {'title': Value(literal:'From Eternity, Stephen Colbert.')}, {'title': Value(literal:'You are my Sunshine')}, {'title': Value(literal:'In Chaos There Is Silence (And In Silence There Is Chaos)')}, {'title': Value(literal:'Night over America')}, {'title': Value(literal:'He Wonders When He Forgot How to Laugh')}, {'title': Value(literal:'Catfished')}, {'title': Value(literal:'And The Songbirds Are Singing (Like They Know The Score)')}, {'title': Value(literal:'Hit Me with Your Best Shot')}, {'title': Value(literal:'Thunder And Lightening, Very Very Frightening')}, {'title': Value(literal:'Making The Pieces Fit')}, {'title': Value(literal:'Prenuptial Agreements')}, {'title': Value(literal:'At The End Of All Things')}, {'title': Value(literal:'You only get one')}, {'title': Value(literal:'The Time of The Pill')}]"	207	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: What stories is Tracey Stewart featured in?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?story WHERE { 
?character golem:name ""Tracey Stewart"" . 
?story golem:characters ?character . 
}
"	[]	0	0	1
208	208	en	What stories is Marco Diaz (Star vs. The Forces of Evil) featured in?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT ?title WHERE {  ?story golem:title ?title . ?story golem:characters ""Marco Diaz (Star vs. The Forces of Evil)"" . }"	"[{'title': Value(literal:'Forgive but never forget')}, {'title': Value(literal:'【tomstar】小情人')}, {'title': Value(literal:'Taquinerie Nocturne')}, {'title': Value(literal:'La misteriosa marca')}, {'title': Value(literal:'LOVE')}, {'title': Value(literal:'Orgia en las islas Hirvientes.')}, {'title': Value(literal:'Freeze your brain')}, {'title': Value(literal:'Шестнадцать')}, {'title': Value(literal:'Jukebox Musical')}, {'title': Value(literal:'The karaoke Realm')}, {'title': Value(literal:'If I Killed Someone For You')}, {'title': Value(literal:'Monkey and Butterfly')}, {'title': Value(literal:'crossover nexus 2: reloaded')}, {'title': Value(literal:'Strange Ninjas in a Strange Land')}, {'title': Value(literal:'The Queen of Borrowed Powers')}, {'title': Value(literal:'A Rainha dos Monstros')}, {'title': Value(literal:'Unidos por la luna roja')}, {'title': Value(literal:'Mi salvador, Marco Díaz')}, {'title': Value(literal:'Tomados de las Manos')}, {'title': Value(literal:'Caricias')}, {'title': Value(literal:'Disfraz')}, {'title': Value(literal:'Tanabata.')}, {'title': Value(literal:'Amigos de la infancia')}, {'title': Value(literal:'uau')}, {'title': Value(literal:'And they said Infinity War was the most ambitious crossover')}, {'title': Value(literal:'Babes, Bullets and a whole lot of Adam')}, {'title': Value(literal:'Yandere Oneshots (mostly Genshin)')}, {'title': Value(literal:'Dreams Come True')}, {'title': Value(literal:'A Dip Into Another World')}, {'title': Value(literal:""Nautiscarader's Smutember 2020"")}, {'title': Value(literal:'Marvelous Zombies.')}, {'title': Value(literal:'Multiverse Wars Reactions!')}, {'title': Value(literal:'Falling For Yanderes')}, {'title': Value(literal:'Five Sparks of Life: The Blossoming Beginning')}, {'title': Value(literal:'The Loud House: Doujinshi!')}, {'title': Value(literal:'Rick vs. the Multiverse')}, {'title': Value(literal:'El valor de un alma')}, {'title': Value(literal:'Dulce canela.')}, {'title': Value(literal:'Omovember 2021')}, {'title': Value(literal:'Infinity Train: Kingdom Come')}, {'title': Value(literal:'It Sucks to be a Prince')}, {'title': Value(literal:'A Beginning with an Unexpected Ending')}, {'title': Value(literal:'Unrequited Love Support Group')}, {'title': Value(literal:'Marcnificent Weirdness')}, {'title': Value(literal:'Summer Love')}, {'title': Value(literal:'The Gods')}, {'title': Value(literal:'Fantasizing about tomorrow')}, {'title': Value(literal:'12 Days of Mariposamas')}, {'title': Value(literal:'The collision of worlds')}, {'title': Value(literal:'Light as a Star')}, {'title': Value(literal:'The Beautiful Princess')}, {'title': Value(literal:'A Whole New World, A Star vs the Forces of Evil Lemon Story')}, {'title': Value(literal:'A Cold Night.')}, {'title': Value(literal:""Demons Don't Like Sprinkles"")}, {'title': Value(literal:'One Last Drink')}, {'title': Value(literal:'Kings of Old')}, {'title': Value(literal:'Star vs the Forces of Evil Presents: Lizards and Dragons One Shots')}, {'title': Value(literal:'Get Together')}, {'title': Value(literal:'Janna vs the forces the Earth-ni')}, {'title': Value(literal:'The King is Dead, Long Live the King')}, {'title': Value(literal:'Painted Lies & Demon Eyes')}, {'title': Value(literal:'Fond Remembrances')}, {'title': Value(literal:'Yammy')}, {'title': Value(literal:'Beach Date')}, {'title': Value(literal:""Surviving St. Olga's"")}, {'title': Value(literal:'Forsake')}, {'title': Value(literal:'Bones')}, {'title': Value(literal:'Even After it All.')}, {'title': Value(literal:'A Real Lady Never Kisses and Tell')}, {'title': Value(literal:'Alchmey, Impetus, and Volatile Catalysts')}, {'title': Value(literal:'Emma')}, {'title': Value(literal:'Big Mistakes and Cornshakes')}, {'title': Value(literal:'Tell the Truth')}, {'title': Value(literal:'Strangled')}, {'title': Value(literal:'Milfology-Star/Moon')}, {'title': Value(literal:'Milfology-Marco/Angie')}, {'title': Value(literal:'Asking for a Favor')}, {'title': Value(literal:'A Butterfly Effect')}, {'title': Value(literal:'Janna Does Illegal Shit')}, {'title': Value(literal:'Quit being overworked')}, {'title': Value(literal:'My Knight')}, {'title': Value(literal:'To Tell the Truth')}, {'title': Value(literal:'Linked')}, {'title': Value(literal:'Blood Moon Mania')}, {'title': Value(literal:'Star in a Jar')}, {'title': Value(literal:'The Butterfly Who Lost Her Wings')}, {'title': Value(literal:'Marco and Tom make out on the sidewalk.')}, {'title': Value(literal:'The Haunted Mansion')}, {'title': Value(literal:'The Mysterious Maroon')}, {'title': Value(literal:'Princess Star')}, {'title': Value(literal:'Star and Marcie and the Forces of Evil Part One: Star Comes to Earth')}, {'title': Value(literal:""Dragon's Revenge, A Star vs the Forces of Evil Lemon Story"")}, {'title': Value(literal:'A Greedy Heart')}, {'title': Value(literal:'Corn & Circuses')}, {'title': Value(literal:'A Toast')}, {'title': Value(literal:'The Other Way')}, {'title': Value(literal:'Dilfology-Marco/Rafael')}, {'title': Value(literal:'Flaming Rose')}, {'title': Value(literal:'Magic and Madness')}, {'title': Value(literal:'The Most Important Things You Might Lose')}, {'title': Value(literal:'Tales From Mew-Earth')}, {'title': Value(literal:'Never too Late?')}, {'title': Value(literal:'Escape From Fanfic Island (SVTFOE)')}, {'title': Value(literal:'Star vs. The Forces of Evil: The Bloomen Legacy')}, {'title': Value(literal:'The Demon and Her Knight')}, {'title': Value(literal:""His Majesty's Dark Queen"")}, {'title': Value(literal:'The Contract')}, {'title': Value(literal:'In The End')}, {'title': Value(literal:'The Mewnight Society')}, {'title': Value(literal:'Who Needs Star When You Have Each Other?')}, {'title': Value(literal:'Anchors and Lighthouses')}, {'title': Value(literal:'Patches')}, {'title': Value(literal:'If You Love Me, Please Say It')}, {'title': Value(literal:'Time-Out of Time Vacation')}, {'title': Value(literal:""How can I move on (when I'm still in love with you.)"")}, {'title': Value(literal:'Reduce To Tears')}, {'title': Value(literal:'Pushing Up Daises')}, {'title': Value(literal:'Smutember 2020 Foreplay')}, {'title': Value(literal:'Marcowpoo')}, {'title': Value(literal:'We Belong Together')}, {'title': Value(literal:'Worth It')}, {'title': Value(literal:'Butterfly Hunt')}, {'title': Value(literal:'Breakup Buddies')}, {'title': Value(literal:'Smutember 2020 Naked Photo Shoot')}, {'title': Value(literal:'Marcuck')}, {'title': Value(literal:'Star Vs The Forces of Evil')}, {'title': Value(literal:'The Ritual')}, {'title': Value(literal:'Untouched Truths')}, {'title': Value(literal:'The Dance of the Stars')}, {'title': Value(literal:'The Story of Vegetarianism!')}, {'title': Value(literal:'The MonSTAR Princess')}, {'title': Value(literal:'Streetlight People')}, {'title': Value(literal:'5. Vivisection')}, {'title': Value(literal:'Prince of Mewni')}, {'title': Value(literal:'SVTFOE: The Thief')}, {'title': Value(literal:'What We Found and Forgot')}, {'title': Value(literal:'Smutember 2020 Ecstasy')}, {'title': Value(literal:'What the Heart Wants.')}, {'title': Value(literal:'Claiming the Queen')}, {'title': Value(literal:'The Light in Your Eyes')}, {'title': Value(literal:'New Bloom')}, {'title': Value(literal:'Once Upon A Genderbend: Marcia Diaz & the Seven Monsters')}, {'title': Value(literal:'The Demon Within')}, {'title': Value(literal:'Lasting Mark')}, {'title': Value(literal:'Misadventurous Mabi')}, {'title': Value(literal:'A Bit of Help Here?')}, {'title': Value(literal:'Nothing')}, {'title': Value(literal:'Broken Hearts And Bloody Bodies')}, {'title': Value(literal:'The lost princess')}, {'title': Value(literal:'Shenanigans: Caught')}, {'title': Value(literal:'Relapse')}, {'title': Value(literal:'Finally Mine')}, {'title': Value(literal:'Star and Marcie and the Forces of Evil Part Two: Inevitable Rise, Inevitable Fall')}, {'title': Value(literal:'catcing some zs')}, {'title': Value(literal:'Like An Echo In The Forest')}, {'title': Value(literal:'Will of the Septarian')}, {'title': Value(literal:'it’s alright (no it’s not)')}, {'title': Value(literal:'Magic of Mistletoe')}, {'title': Value(literal:'I’m a pond and you’re an ocean')}, {'title': Value(literal:'one, two princes kneel before you')}, {'title': Value(literal:'A Gingerbread House')}, {'title': Value(literal:'the ways that you say my name have me running on and on')}, {'title': Value(literal:'Asteris of Septarsis')}, {'title': Value(literal:'Suspicious Dessert')}, {'title': Value(literal:'Butterfly blossoms')}, {'title': Value(literal:'Marco Vs The Forces of Evil')}, {'title': Value(literal:'The Sugar Cookie Man')}, {'title': Value(literal:'Kinkmas Unwrapping Presents')}, {'title': Value(literal:""Star and Marco's Virtual Adventure"")}, {'title': Value(literal:'Bottom of the Pyramid')}, {'title': Value(literal:'Follow Me')}, {'title': Value(literal:'Echo Geeks')}, {'title': Value(literal:'The Once and Future Queen')}, {'title': Value(literal:'Flipped Star')}, {'title': Value(literal:'A Broken Crown.')}, {'title': Value(literal:'The Working Girls of Echo Creek')}, {'title': Value(literal:'Marco and his Demon Boyfriend')}, {'title': Value(literal:'The Perfect Remedy For Angry Demons')}, {'title': Value(literal:'Memorytale')}, {'title': Value(literal:'A New Frontier Redux')}, {'title': Value(literal:""Cleaved, but it's the opposite"")}, {'title': Value(literal:'The bitter truth of the world')}, {'title': Value(literal:'For everyone else right?')}, {'title': Value(literal:'Before We Say Goodnight')}, {'title': Value(literal:'Just Think About It')}, {'title': Value(literal:'Recruits, Part 1')}, {'title': Value(literal:'Attack of the 700 Metre Lizard!!!')}, {'title': Value(literal:'Star vs the Forces of the Negative Multiverse')}, {'title': Value(literal:'When Two Worlds Collide')}, {'title': Value(literal:'Polyamory')}, {'title': Value(literal:'The pros, cons, and quirks of having friends')}, {'title': Value(literal:'Please Don’t Stare at Me')}, {'title': Value(literal:'Puppeteer')}, {'title': Value(literal:'A Brief Foray Into Filipino Cuisine')}, {'title': Value(literal:'Relapse: The Full Story')}, {'title': Value(literal:'hobbies')}, {'title': Value(literal:'Why Bother?')}, {'title': Value(literal:'Everyone Feels Pain Even Demons')}, {'title': Value(literal:'Older Janna')}, {'title': Value(literal:'The Mewni Knights: Katie Comes to Town')}, {'title': Value(literal:'in the night i know you burn (with feelings i cannot return, my dear)')}, {'title': Value(literal:'Star in the Pub')}, {'title': Value(literal:'Spin the Bottle')}, {'title': Value(literal:'Wayward Princesses')}, {'title': Value(literal:""Ready As I'll Ever Be"")}, {'title': Value(literal:'Tomco Story')}, {'title': Value(literal:'The Working Girls of the Multiverse')}, {'title': Value(literal:'The Princess of the Backalley')}, {'title': Value(literal:'Spill')}, {'title': Value(literal:'Recruits, Part 2')}, {'title': Value(literal:'Overnight Failure')}, {'title': Value(literal:'Personal Heaters!')}, {'title': Value(literal:""You'll Do"")}, {'title': Value(literal:'Necromaster')}, {'title': Value(literal:'Tomco Hand Job')}, {'title': Value(literal:""bury me when i'm dead"")}, {'title': Value(literal:'Starco Experimentation')}, {'title': Value(literal:'A bets a bet. And a princess makes good on her word')}, {'title': Value(literal:'Tomco Blow Job')}, {'title': Value(literal:""The Butterfly's Marital Woes"")}, {'title': Value(literal:'Nachos And The Breakfast')}, {'title': Value(literal:'Remember Paris?')}, {'title': Value(literal:'The Intruderess')}, {'title': Value(literal:'Name Or Title?')}, {'title': Value(literal:'Marco Loving')}, {'title': Value(literal:'Soul Bound')}, {'title': Value(literal:""That's All"")}, {'title': Value(literal:'Marco Diaz vs The world (Scott Pilgrim AU)')}, {'title': Value(literal:'Parental Affairs')}, {'title': Value(literal:'Time Is A Fragile Thing')}, {'title': Value(literal:'Seth')}, {'title': Value(literal:'The Warnicorn Stampede – Unleashed')}, {'title': Value(literal:'Playing with Fire')}, {'title': Value(literal:'Monster Crush')}, {'title': Value(literal:'Marco the Squire')}, {'title': Value(literal:'Scattered Stars AU')}, {'title': Value(literal:""Marco's Harem"")}, {'title': Value(literal:'Unknowing')}, {'title': Value(literal:'screw your wishes, it’s your life i’m saving')}, {'title': Value(literal:'Misconceptions and Misunderstandings')}, {'title': Value(literal:'The Chronicles of Selesdria Butterfly')}, {'title': Value(literal:'Marco’s Temptation')}, {'title': Value(literal:'Unchanging wish')}, {'title': Value(literal:'Our Mothers Suck')}, {'title': Value(literal:'The Magic Of Love')}, {'title': Value(literal:'Star and Marco vs Evil Book 2')}, {'title': Value(literal:""Nautiscarader's Smutember Day 3: Whatcha starin' at? Starco (SVTFOE)"")}, {'title': Value(literal:'Slow Burn')}, {'title': Value(literal:'Slow Burn: Chapter 1.')}, {'title': Value(literal:'Warm Hot Coco')}, {'title': Value(literal:'Star vs the forces of evil AU fic Season 2')}, {'title': Value(literal:'u/BadBoyNachos')}, {'title': Value(literal:'starco fic')}, {'title': Value(literal:'Smutember 2021 In a Vehicle')}, {'title': Value(literal:'Smutember 2021 Nature Date')}, {'title': Value(literal:'Smutember 2021 Yes!')}, {'title': Value(literal:'IVTPOC season 1')}, {'title': Value(literal:'Smutember 2021 Celebration Night')}, {'title': Value(literal:'Smutember 2021 Dirty Talk')}, {'title': Value(literal:'The Birth of Mariposa Diaz')}, {'title': Value(literal:'Queen’s Wrath')}, {'title': Value(literal:'Star vs. The Forces of Evil: A Shining Star')}, {'title': Value(literal:'Cleaver of Worlds')}, {'title': Value(literal:""Marco's New Outfit"")}, {'title': Value(literal:'Starlight Justiciar - Book 2')}, {'title': Value(literal:'Solace the Hidden')}, {'title': Value(literal:'Pimping my sister')}, {'title': Value(literal:'Started Under the Moonlight Ball/ Tomco')}, {'title': Value(literal:'Star and Marcie and the Forces of Evil Part Three: Spirits, Sidesteps, and Strange Writings')}, {'title': Value(literal:'The Arrangement')}, {'title': Value(literal:'Shenanigans: Doubt')}, {'title': Value(literal:'Shenanigans: Education')}, {'title': Value(literal:'Star VS the Forces of Evil request section')}, {'title': Value(literal:'The Blood Moon Ball')}, {'title': Value(literal:""I'll Hate You Properly"")}, {'title': Value(literal:'Haremco vs The 12 Days of Christmas REWRITE')}, {'title': Value(literal:'To Fall in love')}, {'title': Value(literal:'Cleaved Together (Or Cleaved Apart)')}, {'title': Value(literal:'Family Gathering')}, {'title': Value(literal:'Marco’s Crisis')}, {'title': Value(literal:'A VERY Merry Christmas')}, {'title': Value(literal:'A Star and Marco vs Evil Story')}, {'title': Value(literal:'The Finest Warrior Of Mewni')}, {'title': Value(literal:'Star Vs The Story')}, {'title': Value(literal:'How to Switch a Star')}, {'title': Value(literal:'Feelings For A Demon  ( A TOMCO Fanfic )[OLD]')}, {'title': Value(literal:'Set my heart on fire (and burn with me)')}, {'title': Value(literal:'The Plain Jane and the Magical Princess')}, {'title': Value(literal:'Star’s Secret')}, {'title': Value(literal:'From the dark, Into the little star')}, {'title': Value(literal:'Alien Romance')}, {'title': Value(literal:'The Measure of a Man')}, {'title': Value(literal:""Why can't i hate you?"")}, {'title': Value(literal:'Smooshed (Or, The Nine Wives of Marco Diaz)')}, {'title': Value(literal:'Spoiler Alert!')}, {'title': Value(literal:'A Brush To The Heart')}, {'title': Value(literal:'Sleeping with the princess')}, {'title': Value(literal:'The secret that is us')}, {'title': Value(literal:'Starcorned Lovers')}, {'title': Value(literal:'The Secret Butterfly')}, {'title': Value(literal:'The Four of Them')}, {'title': Value(literal:'A bets a bet. And a princess makes good on her word')}, {'title': Value(literal:'Ludo and the Lost Laser Puppy (Short Story)')}, {'title': Value(literal:'A Contemplation of Who the boy in the Mirror is')}, {'title': Value(literal:'Remnants of the Past')}, {'title': Value(literal:""Let Be What Isn't"")}, {'title': Value(literal:'A Wonderful Relationship')}, {'title': Value(literal:'Commission: A Wonderful Relationship')}, {'title': Value(literal:""It's It's a ballroom blitz!"")}, {'title': Value(literal:'A Few Sizes Bigger')}, {'title': Value(literal:'SVTFOE Continuation')}, {'title': Value(literal:'Let Me Help You - Tomco')}, {'title': Value(literal:'Bucket for a Crown')}, {'title': Value(literal:'Cleaning House')}, {'title': Value(literal:""A hero's reward"")}, {'title': Value(literal:""A hero's reward- chopped up version"")}, {'title': Value(literal:'Training Session')}, {'title': Value(literal:'Star and Marco vs Evil Book 3')}, {'title': Value(literal:'Butterfly Interludes')}, {'title': Value(literal:'Explicit Content Warning')}, {'title': Value(literal:""We're a Miracle"")}, {'title': Value(literal:'Unintended Repercussions')}, {'title': Value(literal:'Unbroken Bonds')}, {'title': Value(literal:'Blood Moon Knight')}, {'title': Value(literal:'LHi5W: Star Cucked')}, {'title': Value(literal:'LHi5W: Eclipsa Cuddles')}, {'title': Value(literal:'LHi5W: Anal Star')}, {'title': Value(literal:'LHi5W: Butterfly Sisters')}, {'title': Value(literal:'Wacky Wednesday (Short Story)')}, {'title': Value(literal:""Couple's Thursday"")}, {'title': Value(literal:'another starred sky (star versus the forces of evil rewrite)')}, {'title': Value(literal:'another stared sky (star versus the forces of evil rewrite)')}, {'title': Value(literal:'Vigorously Flies the Star')}, {'title': Value(literal:'Señora Diaz')}, {'title': Value(literal:'Home Intrusion')}, {'title': Value(literal:'Back to school.. Well not for Tom  by ')}, {'title': Value(literal:'It was never the Blood Moon')}, {'title': Value(literal:'Butterfly Ballad')}, {'title': Value(literal:'To Be A Boy or A Princess For The Day?')}, {'title': Value(literal:'Unconnected Tomco Stories')}, {'title': Value(literal:'Confession and a Choice')}, {'title': Value(literal:'go, fight, win!')}, {'title': Value(literal:'Star vs. the forces of evil ONESHOTS')}, {'title': Value(literal:'Tomco scenarios')}, {'title': Value(literal:'Commission: A Good Day')}, {'title': Value(literal:'Commission: The Many Faces of Hekapoo')}, {'title': Value(literal:'LUMINARY')}, {'title': Value(literal:'Full Flame')}, {'title': Value(literal:'Dress Torn and Battle Worn')}, {'title': Value(literal:'Unbroken Bonds')}, {'title': Value(literal:'Luminaries')}, {'title': Value(literal:""Daddy's Little Monster"")}, {'title': Value(literal:'Star!!')}, {'title': Value(literal:'No, Just No')}, {'title': Value(literal:'Butterfly')}, {'title': Value(literal:'Lifelong Post')}, {'title': Value(literal:'some justice at last will be served')}, {'title': Value(literal:'All the Difference')}, {'title': Value(literal:'Tomco Fanfic Thing')}, {'title': Value(literal:'Cuddles and Confessions')}, {'title': Value(literal:'How to win a prince')}, {'title': Value(literal:""Vacay Through the 'Verse"")}, {'title': Value(literal:""An Earthling's Saga"")}, {'title': Value(literal:'Tales of Celestia')}, {'title': Value(literal:'An Offer')}, {'title': Value(literal:""i knew you'd linger like a tattoo kiss"")}, {'title': Value(literal:'When Two Moons Eclipse')}, {'title': Value(literal:""Smutember 2022 Don't Get Caught"")}, {'title': Value(literal:'Smutember 2022 Be Quiet!')}, {'title': Value(literal:'If Turdina went to the blood moon ball')}, {'title': Value(literal:'Switched  (a star vs. forces of evil fanfiction) - Chapter One ""Oh No""')}, {'title': Value(literal:'Eleven')}, {'title': Value(literal:'Enamorada de mi maestro')}, {'title': Value(literal:'Quirky Humans')}, {'title': Value(literal:'Frostbite')}, {'title': Value(literal:'Song Fic’s')}, {'title': Value(literal:'Remember Me')}, {'title': Value(literal:'Moonlight Serenading')}, {'title': Value(literal:""You're From A Whole Other World"")}, {'title': Value(literal:'A Different Dimension')}, {'title': Value(literal:'Techs Vs The Forces of Glitches')}, {'title': Value(literal:'◆You Fall In Love◆')}, {'title': Value(literal:'Dinastia Butterfly Vs Las Fuerzas de la Maldad')}, {'title': Value(literal:'A Snapshot From Another Place')}, {'title': Value(literal:'Avaricia y Orgullo.')}, {'title': Value(literal:'Counting Stars')}, {'title': Value(literal:'Kinktober 2021')}, {'title': Value(literal:'The Miraculous Story of Jackie Lynn Thomas')}, {'title': Value(literal:'Kinktober 2021 Oneshots Part 2!')}, {'title': Value(literal:""Group Therapy: When's the last time that's been normal?"")}, {'title': Value(literal:'The Butterfly Gambit')}, {'title': Value(literal:'The Hell Raisers - Star Vs the Forces of Evil X Helluva Boss AU')}, {'title': Value(literal:'JOYEUX ANNIVERSAIREEEEEEEEEE')}, {'title': Value(literal:'The opening (CollegeAu!)')}, {'title': Value(literal:'I Wanna be the Troll')}, {'title': Value(literal:'Hurricane Star Overdrive - The Neo Earth Saga')}, {'title': Value(literal:'United')}, {'title': Value(literal:'To Light The Spark')}, {'title': Value(literal:'𝔈𝔩 𝔭𝔯𝔦́𝔫𝔠𝔦𝔭𝔢 𝔣𝔞𝔩𝔰𝔬')}, {'title': Value(literal:'...и один раз, когда Марко попросил сам')}, {'title': Value(literal:""Toffee's precious gem"")}, {'title': Value(literal:'Sailor Star')}, {'title': Value(literal:'Distorted Dimensions: The Power Princesses')}, {'title': Value(literal:'Apenas talvez...')}, {'title': Value(literal:'Jemioła 「starkie oneshot」')}, {'title': Value(literal:'Monstruoso amor.')}, {'title': Value(literal:'Diferencias y Parecidos')}, {'title': Value(literal:'I Promise-Lance Mcclain X Reader')}, {'title': Value(literal:'battle for an amazing wish')}, {'title': Value(literal:'Infinity Train Book 0: Infinite Beyond')}, {'title': Value(literal:'Ao seu lado')}, {'title': Value(literal:'Surfing Lessons')}, {'title': Value(literal:'My Trauma is Abnormal (the server)')}, {'title': Value(literal:'Dangers to the Universe')}, {'title': Value(literal:'Disney Channel: Junior Heroes Academy')}, {'title': Value(literal:""Demons Don't Love"")}, {'title': Value(literal:'Star Trek: The Bold Voyage')}, {'title': Value(literal:'Into The Multiverse')}, {'title': Value(literal:'Cheer Each Other Up')}, {'title': Value(literal:'After The ""Incident""')}, {'title': Value(literal:""i'll be with you"")}, {'title': Value(literal:'The Big Crossover- War of Z')}, {'title': Value(literal:'Code Spells')}, {'title': Value(literal:'Map of My Fanfic Multiverse')}, {'title': Value(literal:'Tied Fates X Star vs crossover special')}, {'title': Value(literal:'Merged Worlds')}, {'title': Value(literal:'Worlds Collide')}, {'title': Value(literal:""Gay Ol' Time"")}, {'title': Value(literal:'The Echo Falls Groupchat')}, {'title': Value(literal:'When Worlds Collide')}, {'title': Value(literal:'Five Sparks of Life (Quinque Scintillae Vitae) Side Stories + One Shots')}, {'title': Value(literal:'Mewni’s Medical Facility for Maturing Mewmans')}, {'title': Value(literal:'Misc Cartoon Imagines')}, {'title': Value(literal:'Muppet Wash!')}, {'title': Value(literal:'A Shopping Spree To Calm The Nerves')}, {'title': Value(literal:'Stars In The Universe')}, {'title': Value(literal:'The Owl House: Owl Sees All')}, {'title': Value(literal:'To Love Again: Epilogue')}, {'title': Value(literal:'The Protectors: Clash of Gems')}, {'title': Value(literal:'Lunar AUs One Shots (Mostly Crack!)')}]"	208	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: What stories is Marco Diaz (Star vs. The Forces of Evil) featured in?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?story WHERE { 
?character golem:name ""Marco Diaz"" .
?character golem:characters ?story .
}
"	[]	0	0	1
209	209	en	What stories is All the Gingers featured in?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT ?title WHERE {  ?story golem:title ?title . ?story golem:characters ""All the Gingers"" . }"	[{'title': Value(literal:'Hold On, I Still Want You')}]	209	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: What stories is All the Gingers featured in?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?story WHERE { 
?story golem:characters ""All the Gingers"" . 
}
"	[{'story': Value(uri:'https://golemlab.eu/graph/24747100')}]	0	1	1
210	210	en	What stories is 火雷霆 featured in?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT ?title WHERE {  ?story golem:title ?title . ?story golem:characters ""火雷霆"" . }"	[{'title': Value(literal:'◆The Echoing Hearts◆ 互相回响之心')}, {'title': Value(literal:'【破火/R】休眠中')}, {'title': Value(literal:'【武战道/破火】永昼')}, {'title': Value(literal:'101110111000')}, {'title': Value(literal:'◆Bone Moon◆\u3000髑髅月')}, {'title': Value(literal:'【武战道/破火】破障')}, {'title': Value(literal:'【破火/R】互溶')}]	210	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: What stories is 火雷霆 featured in?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?story WHERE { 
?character golem:name ""火雷霆"" .
?story golem:characters ?character .
}
"	[]	0	0	1
211	211	en	What stories is Tomáš Rosický featured in?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT ?title WHERE {  ?story golem:title ?title . ?story golem:characters ""Tomáš Rosický"" . }"	"[{'title': Value(literal:'谈恋爱不如跳舞')}, {'title': Value(literal:'每天都要有百合花')}, {'title': Value(literal:'人间报告')}, {'title': Value(literal:'Unimportant Life in Ost-Berlin')}, {'title': Value(literal:'One For All, All For One')}, {'title': Value(literal:'Of Arsenal and Sour Candy')}, {'title': Value(literal:'The Mercy Part')}, {'title': Value(literal:'The Worst of Starts')}, {'title': Value(literal:'Kissed by the Devil & Saved by an Angel')}, {'title': Value(literal:'Banter and (B)romance // DISCONTINUED')}, {'title': Value(literal:'On Returning')}, {'title': Value(literal:""It's Going Down"")}, {'title': Value(literal:'Not Misdirected')}, {'title': Value(literal:'Return us our futures')}, {'title': Value(literal:'The Best Of Starts')}, {'title': Value(literal:'The Phone')}, {'title': Value(literal:'The Faithful And The Low')}, {'title': Value(literal:'The Broken Heart')}]"	211	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: What stories is Tomáš Rosický featured in?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?story WHERE { 
?character golem:name ""Tomáš Rosický"" . 
?character golem:characters ?story . 
}
"	[]	0	0	1
212	212	en	How many stories are uploaded per year?	prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT (COUNT(DISTINCT ?story) as ?uploads) WHERE {  ?story golem:story_id ?id }	[{'uploads': Value(typed-literal:'8546450')}]	212	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: How many stories are uploaded per year?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
SELECT (COUNT(?story) AS ?number_of_stories) WHERE { 
?story a golem:Story . 
?story dc:datePublished ?year . 
} GROUP BY ?year
"	[]	0	0	1
214	214	en	How many 1984 - George Orwell stories are there?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT (COUNT(DISTINCT ?story) as ?uploads) WHERE { ?story golem:fandom ""1984 - George Orwell"" . }"	[{'uploads': Value(typed-literal:'141')}]	214	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: How many 1984 - George Orwell stories are there?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
SELECT COUNT(?story) AS ?number_of_stories WHERE { 
?story a gc:Story . 
?story dc:title ""1984 - George Orwell"" . 
}
"	"QueryBadFormed: A bad request has been sent to the endpoint: probably the SPARQL query is badly formed. 

Response:
b'Virtuoso 37000 Error SP030: SPARQL compiler, line 7: Undefined namespace prefix at \'gc\' before \'.\'\n\nSPARQL query:\ndefine sql:big-data-const 0\n#output-format:application/sparql-results+json\n\nprefix golem: <https://golemlab.eu/graph/> \nprefix dc: <http://purl.org/dc/terms/> \nSELECT COUNT(?story) AS ?number_of_stories WHERE { \n?story a gc:Story . \n?story dc:title ""1984 - George Orwell"" . \n}\n'"	0	1	1
215	215	en	How many 钟鹏/阿塔潘 stories are there?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT (COUNT(DISTINCT ?story) as ?uploads) WHERE { ?story golem:fandom ""钟鹏/阿塔潘"" . }"	[{'uploads': Value(typed-literal:'1')}]	215	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: How many 钟鹏/阿塔潘 stories are there?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT COUNT(?story) AS ?number_of_stories WHERE { 
?story golem:characters ""钟鹏/阿塔潘"" . 
}
"	[{'number_of_stories': Value(typed-literal:'0')}]	0	1	1
216	216	en	How many chuangzaoying2021 stories are there?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT (COUNT(DISTINCT ?story) as ?uploads) WHERE { ?story golem:fandom ""chuangzaoying2021"" . }"	[{'uploads': Value(typed-literal:'2')}]	216	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: How many chuangzaoying2021 stories are there?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT COUNT(?story) AS ?number_of_stories WHERE { 
?story a golem:Story . 
}
"	[{'number_of_stories': Value(typed-literal:'0')}]	0	1	1
217	217	en	How many 【莲理枝】《橘香》 stories are there?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT (COUNT(DISTINCT ?story) as ?uploads) WHERE { ?story golem:fandom ""【莲理枝】《橘香》"" . }"	[{'uploads': Value(typed-literal:'1')}]	217	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: How many 【莲理枝】《橘香》 stories are there?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT COUNT(?story) AS ?number_of_stories WHERE { 
?story golem:title ""橘香"" . 
FILTER (CONTAINS(str(?story), ""莲理枝""))
}
"	[{'number_of_stories': Value(typed-literal:'0')}]	0	1	1
218	218	en	How many Humour - Fandom stories are there?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT (COUNT(DISTINCT ?story) as ?uploads) WHERE { ?story golem:fandom ""Humour - Fandom"" . }"	[{'uploads': Value(typed-literal:'6')}]	218	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: How many Humour - Fandom stories are there?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT COUNT(?story) AS ?number_of_stories WHERE { 
?story a golem:Story .
?story golem:fandom ""Humour"" .
}
"	[{'number_of_stories': Value(typed-literal:'0')}]	0	1	1
219	219	en	How many 开嘎 stories are there?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT (COUNT(DISTINCT ?story) as ?uploads) WHERE { ?story golem:fandom ""开嘎"" . }"	[{'uploads': Value(typed-literal:'10')}]	219	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: How many 开嘎 stories are there?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT COUNT(?story) AS ?number_of_stories WHERE { 
  ?story golem:series ""开嘎"" . 
}
"	[{'number_of_stories': Value(typed-literal:'0')}]	0	1	1
220	220	en	How many GetBackers stories are there?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT (COUNT(DISTINCT ?story) as ?uploads) WHERE { ?story golem:fandom ""GetBackers"" . }"	[{'uploads': Value(typed-literal:'376')}]	220	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: How many GetBackers stories are there?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT COUNT(?story) AS ?number_of_stories WHERE { 
?story a golem:Story .
}
"	[{'number_of_stories': Value(typed-literal:'0')}]	0	1	1
221	221	en	How many 蛇鹰 stories are there?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT (COUNT(DISTINCT ?story) as ?uploads) WHERE { ?story golem:fandom ""蛇鹰"" . }"	[{'uploads': Value(typed-literal:'6')}]	221	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: How many 蛇鹰 stories are there?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT COUNT(?story) AS ?number_of_stories WHERE { 
?story golem:series ""蛇鹰"" . 
}
"	[{'number_of_stories': Value(typed-literal:'0')}]	0	1	1
222	222	en	How many Wuhu Couple stories are there?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT (COUNT(DISTINCT ?story) as ?uploads) WHERE { ?story golem:fandom ""Wuhu Couple"" . }"	[{'uploads': Value(typed-literal:'3')}]	222	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: How many Wuhu Couple stories are there?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT COUNT(?story) AS ?total_wuhu_couple_stories WHERE { 
  ?story golem:fandom ""Wuhu Couple"" . 
}
"	[{'total_wuhu_couple_stories': Value(typed-literal:'3')}]	0	1	1
223	223	en	How many Tartaglia - Fandom stories are there?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT (COUNT(DISTINCT ?story) as ?uploads) WHERE { ?story golem:fandom ""Tartaglia - Fandom"" . }"	[{'uploads': Value(typed-literal:'2')}]	223	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: How many Tartaglia - Fandom stories are there?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT COUNT(?story) AS ?count WHERE { 
?story golem:fandom ""Tartaglia"" . 
}
"	[{'count': Value(typed-literal:'0')}]	0	1	1
225	225	en	How many Kudos do 不灭钻石 stories get on average?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?kudos) AS ?average_number_of_kudos WHERE { ?story golem:fandom ""不灭钻石"" . ?story golem:numberOfKudos ?kudos . }"	[{'average_number_of_kudos': Value(typed-literal:'174')}]	225	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: How many Kudos do 不灭钻石 stories get on average?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT AVG(?kudos) AS ?avg_number_of_kudos WHERE { 
?story golem:publisher ""不灭钻石"" . 
?story golem:numberOfKudos ?kudos . 
}
"	[{}]	0	1	1
226	226	en	How many Kudos do 坤林 - Fandom stories get on average?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?kudos) AS ?average_number_of_kudos WHERE { ?story golem:fandom ""坤林 - Fandom"" . ?story golem:numberOfKudos ?kudos . }"	[{'average_number_of_kudos': Value(typed-literal:'16')}]	226	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: How many Kudos do 坤林 - Fandom stories get on average?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT AVG(?kudos) AS ?avg_number_of_kudos WHERE { 
?story golem:publisher ""坤林 - Fandom"" . 
?story golem:numberOfKudos ?kudos . 
}
"	[{}]	0	1	1
227	227	en	How many Kudos do 封神演义 - 许仲琳 & 陸西星 stories get on average?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?kudos) AS ?average_number_of_kudos WHERE { ?story golem:fandom ""封神演义 - 许仲琳 & 陸西星"" . ?story golem:numberOfKudos ?kudos . }"	[{'average_number_of_kudos': Value(typed-literal:'42.285714285714286')}]	227	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: How many Kudos do 封神演义 - 许仲琳 & 陸西星 stories get on average?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/>  
SELECT AVG(?kudos) AS ?avg_number_of_kudos WHERE { 
?story golem:publisher ""封神演义 - 许仲琳 & 陸西星"" . 
?story golem:numberOfKudos ?kudos . 
}
"	[{}]	0	1	1
228	228	en	How many Kudos do 拆彈專家 stories get on average?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?kudos) AS ?average_number_of_kudos WHERE { ?story golem:fandom ""拆彈專家"" . ?story golem:numberOfKudos ?kudos . }"	[{'average_number_of_kudos': Value(typed-literal:'8.2')}]	228	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: How many Kudos do 拆彈專家 stories get on average?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT AVG(?kudos) AS ?avg_number_of_kudos WHERE { 
?story golem:publisher ""拆彈専家"" .
?story golem:numberOfKudos ?kudos . 
}
"	[{}]	0	1	1
229	229	en	How many Kudos do Right Or Wrong - Fandom stories get on average?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?kudos) AS ?average_number_of_kudos WHERE { ?story golem:fandom ""Right Or Wrong - Fandom"" . ?story golem:numberOfKudos ?kudos . }"	[{'average_number_of_kudos': Value(typed-literal:'39')}]	229	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: How many Kudos do Right Or Wrong - Fandom stories get on average?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT AVG(?kudos) AS ?avg_number_of_kudos WHERE { 
?story golem:fandom ""Right Or Wrong - Fandom"" . 
?story golem:numberOfKudos ?kudos . 
}
"	[{'avg_number_of_kudos': Value(typed-literal:'39')}]	0	1	1
230	230	en	How many Kudos do Digimon Adventure Zero Two stories get on average?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?kudos) AS ?average_number_of_kudos WHERE { ?story golem:fandom ""Digimon Adventure Zero Two"" . ?story golem:numberOfKudos ?kudos . }"	[{'average_number_of_kudos': Value(typed-literal:'32.536974789915966')}]	230	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: How many Kudos do Digimon Adventure Zero Two stories get on average?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT AVG(?kudos) AS ?avg_number_of_kudos WHERE { 
?story golem:title ""Digimon Adventure Zero Two"" . 
?story golem:numberOfKudos ?kudos . 
}
"	[{}]	0	1	1
231	231	en	How many Kudos do Mr.Vampire (1985) stories get on average?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?kudos) AS ?average_number_of_kudos WHERE { ?story golem:fandom ""Mr.Vampire (1985)"" . ?story golem:numberOfKudos ?kudos . }"	[{'average_number_of_kudos': Value(typed-literal:'5')}]	231	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: How many Kudos do Mr.Vampire (1985) stories get on average?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/>  
SELECT AVG(?kudos) AS ?avg_number_of_kudos WHERE { 
    ?story golem:title ""Mr.Vampire (1985)"" . 
    ?story golem:numberOfKudos ?kudos . 
}
"	[{}]	0	1	1
232	232	en	How many Kudos do ジョジョの奇妙な冒険/JoJo no kimyou na bouken/JOJO's Bizarre Adventure stories get on average?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?kudos) AS ?average_number_of_kudos WHERE { ?story golem:fandom ""ジョジョの奇妙な冒険/JoJo no kimyou na bouken/JOJO's Bizarre Adventure"" . ?story golem:numberOfKudos ?kudos . }"	[{'average_number_of_kudos': Value(typed-literal:'57')}]	232	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: How many Kudos do ジョジョの奇妙な冒険/JoJo no kimyou na bouken/JOJO's Bizarre Adventure stories get on average?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT AVG(?kudos) AS ?avg_number_of_kudos WHERE { 
?story golem:title ""ジョジョの奇妙な冒険/Jojo no kimyou na bouken/JOJO's Bizarre Adventure"" . 
?story golem:numberOfKudos ?kudos . 
}
"	[{}]	0	1	1
233	233	en	How many Kudos do Virgin Territory (2007) stories get on average?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?kudos) AS ?average_number_of_kudos WHERE { ?story golem:fandom ""Virgin Territory (2007)"" . ?story golem:numberOfKudos ?kudos . }"	[{'average_number_of_kudos': Value(typed-literal:'27')}]	233	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: How many Kudos do Virgin Territory (2007) stories get on average?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT AVG(?kudos) AS ?avg_number_of_kudos WHERE { 
?story golem:title ""Virgin Territory (2007)"" . 
?story golem:numberOfKudos ?kudos . 
}
"	[{}]	0	1	1
234	234	en	How many Kudos do Evak - Fandom stories get on average?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?kudos) AS ?average_number_of_kudos WHERE { ?story golem:fandom ""Evak - Fandom"" . ?story golem:numberOfKudos ?kudos . }"	[{'average_number_of_kudos': Value(typed-literal:'79.333333333333333')}]	234	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: How many Kudos do Evak - Fandom stories get on average?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT AVG(?kudos) AS ?avg_number_of_kudos WHERE { 
?story golem:fandom ""Evak - Fandom"" . 
?story golem:numberOfKudos ?kudos . 
}
"	[{'avg_number_of_kudos': Value(typed-literal:'79.333333333333333')}]	0	1	1
235	235	en	How many authors have uploaded a story?	prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT (COUNT(DISTINCT ?author) as ?uploads) WHERE { ?story golem:author ?author . }	[{'uploads': Value(typed-literal:'1234209')}]	235	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: How many authors have uploaded a story?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT COUNT(DISTINCT ?author) AS ?number_of_authors WHERE { 
?story a gc:Story .
?story gc:creator ?author . 
}
"	[{'number_of_authors': Value(typed-literal:'0')}]	0	1	1
236	236	en	How many stories have received no feedback?	prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT COUNT(?story) as ?no_feedback_stories WHERE { ?story golem:numberOfComments ?comments . ?story golem:numberOfKudos ?kudos . FILTER(?comments=0 && ?kudos=0) }	[{'no_feedback_stories': Value(typed-literal:'401')}]	236	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: How many stories have received no feedback?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT COUNT(?story) AS ?number_of_stories_no_feedback WHERE { 
  ?story golem:numberOfComments ?comments . 
  FILTER(!BOUND(?comments)) 
}
"	[{'number_of_stories_no_feedback': Value(typed-literal:'0')}]	0	1	1
238	238	en	Who wrote Fancy Meeting You Here?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?author WHERE {  ?story golem:title ""Fancy Meeting You Here"" . ?story golem:author ?author . }"	[{'author': Value(literal:'A000252993')}, {'author': Value(literal:'A000028635')}, {'author': Value(literal:'A000437185')}, {'author': Value(literal:'A000082825')}, {'author': Value(literal:'A000231996')}, {'author': Value(literal:'A000037742')}, {'author': Value(literal:'A000004581')}, {'author': Value(literal:'A000064918')}, {'author': Value(literal:'A000538970')}, {'author': Value(literal:'A000027995')}, {'author': Value(literal:'A000215322')}, {'author': Value(literal:'A000062982')}, {'author': Value(literal:'A000572310')}, {'author': Value(literal:'A000034643')}, {'author': Value(literal:'A000608920')}, {'author': Value(literal:'A000078918')}, {'author': Value(literal:'A000032450')}, {'author': Value(literal:'A000211313')}, {'author': Value(literal:'A000013779')}, {'author': Value(literal:'A000029513')}, {'author': Value(literal:'A000080024')}, {'author': Value(literal:'A000022591')}, {'author': Value(literal:'A000001488')}, {'author': Value(literal:'A000448253')}, {'author': Value(literal:'A000015283')}, {'author': Value(literal:'A000000253')}, {'author': Value(literal:'A000794791')}, {'author': Value(literal:'A001174435')}, {'author': Value(literal:'A000288444')}, {'author': Value(literal:'A000083737')}, {'author': Value(literal:'A000739840')}, {'author': Value(literal:'A000944447')}, {'author': Value(literal:'A000000028')}, {'author': Value(literal:'A000000718')}, {'author': Value(literal:'A000005170')}, {'author': Value(literal:'A000053713')}, {'author': Value(literal:'A000697408')}, {'author': Value(literal:'A000001270')}, {'author': Value(literal:'A000957929')}, {'author': Value(literal:'A000006876')}, {'author': Value(literal:'A000000623')}, {'author': Value(literal:'A000005429')}, {'author': Value(literal:'A000994801')}, {'author': Value(literal:'A001096980')}, {'author': Value(literal:'A000029549')}, {'author': Value(literal:'A000051202')}, {'author': Value(literal:'A000041448')}, {'author': Value(literal:'A000036794')}, {'author': Value(literal:'A000034855')}, {'author': Value(literal:'A000215860')}, {'author': Value(literal:'A000014409')}, {'author': Value(literal:'A001045027')}]	238	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: Who wrote Fancy Meeting You Here?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
SELECT DISTINCT ?author WHERE { 
  ?story golem:title ""Fancy Meeting You Here"" . 
  ?story dc:creator ?author . 
}
"	[]	0	0	1
239	239	en	Who wrote Luna and the Milkshakes?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?author WHERE {  ?story golem:title ""Luna and the Milkshakes"" . ?story golem:author ?author . }"	[{'author': Value(literal:'A000032985')}]	239	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: Who wrote Luna and the Milkshakes?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?author WHERE { 
?story golem:title ""Luna and the Milkshakes"" . 
?story dc:creator ?author . 
}
"	[]	0	0	1
240	240	en	Who wrote The Misadventures of a Muggleborn Maid?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?author WHERE {  ?story golem:title ""The Misadventures of a Muggleborn Maid"" . ?story golem:author ?author . }"	[{'author': Value(literal:'A000051273')}]	240	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: Who wrote The Misadventures of a Muggleborn Maid?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/>  
SELECT DISTINCT ?author WHERE { 
?story golem:title ""The Misadventures of a Muggleborn Maid"" . 
?story dc:creator ?author . 
}
"	[]	0	0	1
241	241	en	Who wrote Big Time Wizards?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?author WHERE {  ?story golem:title ""Big Time Wizards"" . ?story golem:author ?author . }"	[{'author': Value(literal:'A000039345')}]	241	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: Who wrote Big Time Wizards?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?author WHERE { 
?story golem:title ""Big Time Wizards"" . 
?story dc:creator ?author . 
}
"	[]	0	0	1
242	242	en	Who wrote Harry Potter and the Rose's Thorns?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?author WHERE {  ?story golem:title ""Harry Potter and the Rose's Thorns"" . ?story golem:author ?author . }"	[{'author': Value(literal:'A000294700')}]	242	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: Who wrote Harry Potter and the Rose's Thorns?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/>  
SELECT DISTINCT ?author WHERE { 
?story golem:title ""Harry Potter and the Rose's Thorns"" . 
?story dc:creator ?author . }
"	[]	0	0	1
243	243	en	Who wrote Hold My Hand?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?author WHERE {  ?story golem:title ""Hold My Hand"" . ?story golem:author ?author . }"	[{'author': Value(literal:'A000000893')}, {'author': Value(literal:'A000049895')}, {'author': Value(literal:'A000000105')}, {'author': Value(literal:'A000036758')}, {'author': Value(literal:'A000349105')}, {'author': Value(literal:'A000266390')}, {'author': Value(literal:'A000435580')}, {'author': Value(literal:'A000301731')}, {'author': Value(literal:'A000273610')}, {'author': Value(literal:'A000218338')}, {'author': Value(literal:'A000068126')}, {'author': Value(literal:'A000026864')}, {'author': Value(literal:'A000091551')}, {'author': Value(literal:'A000191802')}, {'author': Value(literal:'A000002059')}, {'author': Value(literal:'A000041267')}, {'author': Value(literal:'A000269089')}, {'author': Value(literal:'A000000198')}, {'author': Value(literal:'A000217420')}, {'author': Value(literal:'A000022423')}, {'author': Value(literal:'A000331922')}, {'author': Value(literal:'A000099432')}, {'author': Value(literal:'A000008060')}, {'author': Value(literal:'A000107056')}, {'author': Value(literal:'A000479700')}, {'author': Value(literal:'A001124715')}, {'author': Value(literal:'A000205041')}, {'author': Value(literal:'A000603220')}, {'author': Value(literal:'A000208139')}, {'author': Value(literal:'A000390293')}, {'author': Value(literal:'A001116279')}, {'author': Value(literal:'A001182422')}, {'author': Value(literal:'A000000991')}, {'author': Value(literal:'A000064152')}, {'author': Value(literal:'A000006186')}, {'author': Value(literal:'A000229523')}, {'author': Value(literal:'A000016302')}, {'author': Value(literal:'A000547422')}, {'author': Value(literal:'A000000352')}, {'author': Value(literal:'A000260924')}, {'author': Value(literal:'A000003358')}, {'author': Value(literal:'A000015047')}, {'author': Value(literal:'A000002041')}, {'author': Value(literal:'A000646879')}, {'author': Value(literal:'A000497160')}, {'author': Value(literal:'A000492176')}, {'author': Value(literal:'A000448343')}, {'author': Value(literal:'A000024615')}, {'author': Value(literal:'A001175422')}, {'author': Value(literal:'A001106749')}, {'author': Value(literal:'A001175885')}, {'author': Value(literal:'A000010021')}, {'author': Value(literal:'A000038387')}, {'author': Value(literal:'A000218985')}, {'author': Value(literal:'A000492900')}, {'author': Value(literal:'A000441363')}, {'author': Value(literal:'A000623133')}, {'author': Value(literal:'A000001360')}, {'author': Value(literal:'A000084865')}, {'author': Value(literal:'A000001464')}, {'author': Value(literal:'A000004498')}, {'author': Value(literal:'A000179438')}, {'author': Value(literal:'A000008393')}, {'author': Value(literal:'A000080066')}, {'author': Value(literal:'A000010232')}, {'author': Value(literal:'A000108483')}, {'author': Value(literal:'A000000952')}, {'author': Value(literal:'A000009779')}, {'author': Value(literal:'A000003746')}, {'author': Value(literal:'A001190316')}, {'author': Value(literal:'A001137150')}, {'author': Value(literal:'A001176013')}, {'author': Value(literal:'A001195099')}, {'author': Value(literal:'A001106471')}, {'author': Value(literal:'A001177854')}, {'author': Value(literal:'A000076615')}, {'author': Value(literal:'A000110836')}, {'author': Value(literal:'A000102291')}, {'author': Value(literal:'A000699208')}, {'author': Value(literal:'A000183792')}, {'author': Value(literal:'A000086967')}, {'author': Value(literal:'A000039853')}, {'author': Value(literal:'A000005275')}, {'author': Value(literal:'A000019667')}, {'author': Value(literal:'A000685039')}, {'author': Value(literal:'A000008567')}, {'author': Value(literal:'A000390146')}, {'author': Value(literal:'A000138797')}, {'author': Value(literal:'A000003787')}, {'author': Value(literal:'A000001289')}, {'author': Value(literal:'A000093328')}, {'author': Value(literal:'A000241335')}, {'author': Value(literal:'A000244140')}, {'author': Value(literal:'A000087293')}, {'author': Value(literal:'A000000000')}, {'author': Value(literal:'A000405552')}, {'author': Value(literal:'A000681617')}, {'author': Value(literal:'A000013583')}, {'author': Value(literal:'A000778453')}, {'author': Value(literal:'A000663550')}, {'author': Value(literal:'A000003023')}, {'author': Value(literal:'A000089365')}, {'author': Value(literal:'A000010576')}, {'author': Value(literal:'A000082611')}, {'author': Value(literal:'A000013011')}, {'author': Value(literal:'A000002125')}, {'author': Value(literal:'A000724347')}, {'author': Value(literal:'A000375656')}, {'author': Value(literal:'A000870268')}, {'author': Value(literal:'A000087039')}, {'author': Value(literal:'A000000547')}, {'author': Value(literal:'A000008076')}, {'author': Value(literal:'A000006200')}, {'author': Value(literal:'A000668666')}, {'author': Value(literal:'A000008228')}, {'author': Value(literal:'A000122324')}, {'author': Value(literal:'A000035603')}, {'author': Value(literal:'A000006677')}, {'author': Value(literal:'A000050702')}, {'author': Value(literal:'A000107779')}, {'author': Value(literal:'A000002667')}, {'author': Value(literal:'A000088072')}, {'author': Value(literal:'A001025816')}, {'author': Value(literal:'A000784388')}, {'author': Value(literal:'A000000268')}, {'author': Value(literal:'A000018518')}, {'author': Value(literal:'A000046262')}, {'author': Value(literal:'A000170063')}, {'author': Value(literal:'A001010594')}, {'author': Value(literal:'A000948017')}, {'author': Value(literal:'A000005962')}, {'author': Value(literal:'A001114641')}, {'author': Value(literal:'A000000827')}, {'author': Value(literal:'A000282810')}, {'author': Value(literal:'A000001168')}, {'author': Value(literal:'A000750118')}, {'author': Value(literal:'A000001570')}, {'author': Value(literal:'A000075575')}, {'author': Value(literal:'A000103048')}, {'author': Value(literal:'A000000970')}, {'author': Value(literal:'A000633027')}, {'author': Value(literal:'A000099587')}, {'author': Value(literal:'A000008582')}, {'author': Value(literal:'A000575872')}, {'author': Value(literal:'A000001085')}, {'author': Value(literal:'A000543824')}, {'author': Value(literal:'A000080527')}, {'author': Value(literal:'A000013016')}, {'author': Value(literal:'A000000521')}, {'author': Value(literal:'A001088251')}, {'author': Value(literal:'A001188758')}, {'author': Value(literal:'A000049869')}, {'author': Value(literal:'A000019831')}, {'author': Value(literal:'A000259458')}, {'author': Value(literal:'A000302192')}, {'author': Value(literal:'A000916250')}, {'author': Value(literal:'A000924101')}, {'author': Value(literal:'A000023188')}, {'author': Value(literal:'A000094649')}, {'author': Value(literal:'A000348566')}, {'author': Value(literal:'A000086540')}, {'author': Value(literal:'A000616408')}, {'author': Value(literal:'A000828442')}, {'author': Value(literal:'A000005081')}, {'author': Value(literal:'A000829991')}, {'author': Value(literal:'A000926654')}, {'author': Value(literal:'A000801247')}, {'author': Value(literal:'A000040528')}, {'author': Value(literal:'A001121937')}, {'author': Value(literal:'A001114728')}, {'author': Value(literal:'A001161286')}, {'author': Value(literal:'A000067558')}, {'author': Value(literal:'A000022714')}, {'author': Value(literal:'A000103070')}, {'author': Value(literal:'A000947520')}, {'author': Value(literal:'A000262926')}, {'author': Value(literal:'A000003993')}, {'author': Value(literal:'A000002860')}, {'author': Value(literal:'A000966525')}, {'author': Value(literal:'A000006790')}, {'author': Value(literal:'A000002488')}, {'author': Value(literal:'A000904028')}, {'author': Value(literal:'A000098840')}, {'author': Value(literal:'A000000704')}, {'author': Value(literal:'A000018489')}, {'author': Value(literal:'A000422517')}, {'author': Value(literal:'A000105108')}, {'author': Value(literal:'A000484511')}, {'author': Value(literal:'A000616958')}, {'author': Value(literal:'A000169587')}, {'author': Value(literal:'A000103051')}, {'author': Value(literal:'A000077929')}, {'author': Value(literal:'A000000377')}, {'author': Value(literal:'A000123146')}, {'author': Value(literal:'A001028162')}, {'author': Value(literal:'A000120462')}, {'author': Value(literal:'A000034988')}, {'author': Value(literal:'A000002942')}, {'author': Value(literal:'A000009089')}, {'author': Value(literal:'A000895897')}, {'author': Value(literal:'A000068138')}, {'author': Value(literal:'A000045989')}, {'author': Value(literal:'A000659007')}, {'author': Value(literal:'A001218268')}, {'author': Value(literal:'A000001219')}, {'author': Value(literal:'A000893584')}, {'author': Value(literal:'A001043712')}, {'author': Value(literal:'A000040333')}, {'author': Value(literal:'A000163557')}, {'author': Value(literal:'A000297359')}, {'author': Value(literal:'A000024380')}, {'author': Value(literal:'A000164349')}, {'author': Value(literal:'A000028015')}, {'author': Value(literal:'A000631967')}, {'author': Value(literal:'A000028617')}, {'author': Value(literal:'A000660065')}, {'author': Value(literal:'A001175965')}, {'author': Value(literal:'A000016545')}, {'author': Value(literal:'A000060934')}, {'author': Value(literal:'A000051051')}, {'author': Value(literal:'A000238491')}, {'author': Value(literal:'A000064381')}, {'author': Value(literal:'A000012881')}, {'author': Value(literal:'A000045462')}]	243	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: Who wrote Hold My Hand?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?author WHERE { 
  ?story golem:title ""Hold My Hand"" . 
  ?story dc:creator ?author . 
}
"	[]	0	0	1
244	244	en	Who wrote The Sultan's Slave?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?author WHERE {  ?story golem:title ""The Sultan's Slave"" . ?story golem:author ?author . }"	[{'author': Value(literal:'A000000638')}]	244	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: Who wrote The Sultan's Slave?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?author WHERE { 
  ?story golem:title ""The Sultan's Slave"" . 
  ?story dc:creator ?author . 
}
"	[]	0	0	1
245	245	en	Who wrote A Simple Twist?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?author WHERE {  ?story golem:title ""A Simple Twist"" . ?story golem:author ?author . }"	[{'author': Value(literal:'A000002759')}, {'author': Value(literal:'A000123726')}]	245	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: Who wrote A Simple Twist?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?author WHERE { 
?story golem:title ""A Simple Twist"" . 
?story dc:creator ?author . 
}
"	[]	0	0	1
246	246	en	Who wrote The Wheezes of Christmas Present?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?author WHERE {  ?story golem:title ""The Wheezes of Christmas Present"" . ?story golem:author ?author . }"	[{'author': Value(literal:'A000071148')}]	246	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: Who wrote The Wheezes of Christmas Present?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/>  
SELECT DISTINCT ?author WHERE { 
?story golem:title ""The Wheezes of Christmas Present"" . 
?story dc:creator ?author . }
"	[]	0	0	1
247	247	en	Who wrote Anatomy of The Haunted?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?author WHERE {  ?story golem:title ""Anatomy of The Haunted"" . ?story golem:author ?author . }"	[{'author': Value(literal:'A000213485')}]	247	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: Who wrote Anatomy of The Haunted?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?author WHERE { 
?story golem:title ""Anatomy of The Haunted"" . 
?story dc:creator ?author . 
}
"	[]	0	0	1
249	249	en	Show me summaries of Mr. Nobody (TV) stories	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?summary WHERE {  ?story golem:fandom ""Mr. Nobody (TV)"" . ?story golem:summary ?summary . }"	"[{'summary': Value(literal:'“爱一样东西本身就是他的弱点。”（注意看tag避雷）')}, {'summary': Value(literal:'住在隔壁的姐姐要搬走了。（注意看tag和警告避雷）')}, {'summary': Value(literal:'“那时我才发现，这么多年我俩从未真正交谈过。”（注意看tag和警告避雷）')}, {'summary': Value(literal:""Our stories will keep us alive. It's just a matter of time. （注意看tag避雷）"")}, {'summary': Value(literal:'一些女同性恨文学。')}, {'summary': Value(literal:'八点档家庭伦理剧都不拍这种古早梗了。（注意看tag避雷）')}, {'summary': Value(literal:'猫哥发现小宝有个离婚多年的前妻，而这位前妻无处不在。（注意看tag避雷）')}, {'summary': Value(literal:'和邵庄结婚八年的小宝有一个十一岁的女儿。（注意看tag避雷）')}]"	249	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: Show me summaries of Mr. Nobody (TV) stories

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?summary WHERE { 
?story golem:fandom ""Mr. Nobody (TV)"" . 
?story golem:summary ?summary . 
}
"	"[{'summary': Value(literal:'“爱一样东西本身就是他的弱点。”（注意看tag避雷）')}, {'summary': Value(literal:'住在隔壁的姐姐要搬走了。（注意看tag和警告避雷）')}, {'summary': Value(literal:'“那时我才发现，这么多年我俩从未真正交谈过。”（注意看tag和警告避雷）')}, {'summary': Value(literal:""Our stories will keep us alive. It's just a matter of time. （注意看tag避雷）"")}, {'summary': Value(literal:'一些女同性恨文学。')}, {'summary': Value(literal:'八点档家庭伦理剧都不拍这种古早梗了。（注意看tag避雷）')}, {'summary': Value(literal:'猫哥发现小宝有个离婚多年的前妻，而这位前妻无处不在。（注意看tag避雷）')}, {'summary': Value(literal:'和邵庄结婚八年的小宝有一个十一岁的女儿。（注意看tag避雷）')}]"	1	0	0
250	250	en	Show me summaries of Pupa stories	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?summary WHERE {  ?story golem:fandom ""Pupa"" . ?story golem:summary ?summary . }"	[{'summary': Value(literal:'Sometimes, they say that learning the truth is painful. Ishida Naoki learnt this the hard way. But when curiosity strikes, he cannot help but to take notice of the flow of events unfolding in front of his eyes. However, maybe he has bitten off more than he can chew...? Originally posted on FFn on 27th July 2015')}]	250	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: Show me summaries of Pupa stories

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?summary WHERE { 
?story golem:title ""Pupa"" . 
?story golem:summary ?summary . 
}
"	"[{'summary': Value(literal:'Miętus był zajęty swoim parobkiem. W bezczelniejszy jeszcze sposób, niż Zosia ignorowała moje zaloty. Dotykał krzątającego się koło stołu Walka, który czerwienił się cały w ten chłopięcy, niedoświadczony sposób. Zerkałem na domowników w obawie. Nikt chyba nie zauważył bezczelnego bratania się.')}, {'summary': Value(literal:'When the caterpillar thinks the world is over Will it become a butterfly?')}, {'summary': Value(literal:'Один взгляд. Это все, что ему нужно.')}, {'summary': Value(literal:""Rose Thorburn has some loose ends to tie up, following everything that happened. One of them is in Brockton Bay, and it's proving to be somewhat more of an issue."")}, {'summary': Value(literal:'When a mysterious girl falls from the sky, 16-year-old Elias must do everything he can to get her back home.')}, {'summary': Value(literal:'Nothing makes Ghiaccio feel more alive than having several, smaller lives festering inside his body. There is no possible way this could go wrong.')}]"	0	1	1
251	251	en	Show me summaries of 报告老板！ stories	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?summary WHERE {  ?story golem:fandom ""报告老板！"" . ?story golem:summary ?summary . }"	[{'summary': Value(literal:'爱总演的何以琛x郑飞。这对就是，蛇精病x真神经病。')}, {'summary': Value(literal:'刘浩和罗宏明十六年共处中的一点吉光片羽。')}, {'summary': Value(literal:'太喜欢《报告老板-情比金坚》里的古惑仔故事了，所以写了个小短篇。其实不太能算是rps吧，只是因为那段mv里几个角色都没有具体名字，所以化用了真人的名字 刘爱-小爱演的黑帮 子墨-刘循子墨演的黑帮 罗明-白客演的警察')}, {'summary': Value(literal:'万圣节主题的水仙梗（初写于16年万圣节前夕')}, {'summary': Value(literal:'很短的垃圾车小合集')}, {'summary': Value(literal:'能成為密友\u3000大概總帶著愛 但做對好兄弟\u3000又如此相愛\u3000旁人會說不該')}, {'summary': Value(literal:'年少情深未许的小警察过世两年，刘爱身边来来往往的男女也不少，他还以为自己已经把罗明忘记了。可偏偏有一天，他在街头办事的时候，一抬眼就望见了牙尖齿利，生就一张小狗的脸，却偏要摆出猫咪神色的白真相。刘爱这才发现自己没有忘记罗明，而且他知道自己不会再让白真相逃跑，他从来不会犯相同的错误。可是人到底能不能踏入同一条河流？')}, {'summary': Value(literal:'因为肖战粉丝举报了Lofter，凝聚了六年的创作心血即将消失，跑到Pixiv避难后，来AO3也备份发一遍 我Pixiv的ID是momo，编号是5609255，欢迎找我玩 【8月1日的补充】：AO3有时候会刷不出来图片，遇到这种情况建议耐心多刷新几次，或者——我这次将图片的地址挨个放在摘要里了——可以手动复制地址然后粘贴到网页栏里，这样也能打开')}]	251	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: Show me summaries of 报告老板！ stories

Query:
"	"
prefix golem: <https://golemlab.eu/graph/>
prefix dc: <http://purl.org/dc/terms/>
SELECT ?summary WHERE {
  ?story golem:title ""报告老板！"" .
  ?story golem:summary ?summary .
}
"	[]	0	0	1
252	252	en	Show me summaries of New Blood (TV) stories	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?summary WHERE {  ?story golem:fandom ""New Blood (TV)"" . ?story golem:summary ?summary . }"	"[{'summary': Value(literal:'喬遷派對後的清晨。')}, {'summary': Value(literal:'Вызовите скорую и окажите первую доврачебную помощь.')}, {'summary': Value(literal:'список того, о чем не писали в ""гарри поттере""')}, {'summary': Value(literal:'When Harrison arrives at Dexter’s cabin, he starts to feel some strange and frankly nasty “genetic sexual attraction” to his estranged son. After Harrison goes with Dexter instead of killing him when Dexter breaks out of jail, he doesn’t realize what he’s getting into. On the run with no one but each other, they inevitably begin a sexual relationship, which, for Harrison, is based moreso on the love he’d lost from his father after he’d been gone from his life for ten years. For Dexter, however, it was nothing but pure, unadulterated lust.')}, {'summary': Value(literal:'The death of a shady British business man on the A4 takes Semir Gerkhan, in the middle of a midlife crisis due to his impending 50th birthday, to London and to meet a young version of himself in the body of Iranian rooted London Officer Arrash Sayyad and his best friend Stefan Kowolski.')}, {'summary': Value(literal:'同居三十題題目 1. 相擁入眠 2. 一同外出購物 3. 半夜一起看恐怖電影 4. 一方的起床氣 5. 烹飪 6. 大掃除 7. 瀏覽過往照片 8. 吐嘈對方的生活習慣 9. 相隔兩地的電話 10. 早安吻 11. 替對方挑衣服 12. 討論關於寵物話題 13. 一方臥病在床 14. 午睡 15. 幫對方吹頭髮 16. 出浴後的怦然心動 17. 慶祝某個紀念日 18. 接對方回家 19. 離家出走 20. 一個驚喜 21. 屋頂上觀星 22. 一場飛來橫禍 23. 討論關於孩子問題 24. 因惡劣天氣被困在家 25. 喝醉 26. 無傷大雅的打打鬧鬧 27. 穿錯衣服 28. 一方受輕傷 29. 意外的求婚 30. 滾床單')}, {'summary': Value(literal:'曖昧十題（我找不到作者，如果有人知道作者請告訴我，在此感謝題目提供！） 1：不經意間碰到的手 2：撞在一起的眼神然後迅速分開 3：對他不同的態度 4：把他的喜好記得清清楚楚 5：看到他與別人聊得火熱心生不悅 6：令人訝異的默契 7：別人眼中的一對 8：若即若離 9：因為對方的調戲而臉紅不已 10：對他有好感卻不敢表白')}, {'summary': Value(literal:'basically the title + a case. crash is a metaphor.')}, {'summary': Value(literal:'他闭上眼，用手掌按压着眼睛，直到他开始在眼皮底下看见星星为止。“操，”他说，“我们要死在这儿了。”')}, {'summary': Value(literal:'Rash and Stefan find themselves in more strife post-case 3.  Because of course they do. Many thanks to mcicioni for introducing me to these two adorable prats, and to her and pantsaretherealheroes for beta suggestions.')}, {'summary': Value(literal:""Rash and Stefan's eternal search for a place to live continues.  Or starts again. For Heliophile as a (possibly belated) birthday present.  With thanks again for mcicioni for the beta, and for introducing me to these two adorable prats."")}, {'summary': Value(literal:""In which Stefan's prior renting experience comes in handy, and the Sayyad family are resourceful. With thanks as always to mcicioni to introducing me to these adorable prats, and for the beta help.  Special thanks to her workmate for help with the Farsi phrases."")}, {'summary': Value(literal:'It could be a fact that Rash was turning him into a romantic sap, but to be honest, Stefan didn’t care that much. He liked that. He liked everything about Rash and what was he making him feel. And that feeling, he thought, was called love. God, he was such a sap. He hated that. (He didn’t hate that at all.)')}, {'summary': Value(literal:'Rash and Stefan spend their first night in their new place.  Sleeping on one air mattress.  Yeah. With thanks as always to mcicioni for introducing me to these two adorable prats and for the beta work, and to pantsaretherealheroes and Heliophile for enouragment.')}, {'summary': Value(literal:""Rash and Stefan have a combination housefurnishing day and housefiring party, as Stefan's old flatmate Jan would put it. Thanks as always to mcicioni for introducing me to these two adorable prats and for the beta, to pantsaretherealheroes for listening to me blither all over Tumblr chat, and especially to Heliophile for the superb beta that helped me say what I meant to say, rather than what I typed.  *throws streamers*"")}, {'summary': Value(literal:""It takes extreme events for Rash and Stefan to finally Get A Clue. With thanks as always to mcicioni for introducing me to the two adorable prats, for SPAG and plot betaing and for challenging me on various plot points.  Thanks also to pantsaretherealheroes for listening to me geek out at her in the process of this novel and occasionally rant at her over a sticky bit via tumblr messenger.  And finally, the words 'thank you' are not enough for Heliophile for her Britpicking, help with various aspects of London lifestyle and copyediting the fic and somehow discerning what I wanted to say as opposed to what I'd actually written. ;) Dedicated to Tyhyin, who declared the series so far 'the slowest of slow boils' and wondered just how oblivious the two could be.  Challenge accepted.  :D"")}, {'summary': Value(literal:'In which various cases left open at the end of the last fic are investigated, and Rash and Stefan really start to settle into their new lives. With thanks as always to mcicioni for introducing me to these adorable prats, and for her beta work on early drafts of this fic as well as helping nursemaid the plot.  Thanks also to pantsaretherealheroes for the readover(s?) and listening to me curse the day I decided to write anything approaching casefic.  And as always, particular thanks to Heliophile for the Britpicking, copyediting words that slipped through and taking my occasionally - OK not so occasionally - tortured prose and transforming it into what I wanted to say as opposed to what I actually typed. :)')}, {'summary': Value(literal:'In which Rash and his cousin Rahim catch up over a beer or several and exchange news. With thanks as always to mcicioni for introducing me to these two adorable prats, and to her and pantsaretherealheroes for reading and making suggestions over the earlier draft.  Thanks also to pantsaretherealheroes for putting a face to Vihaan.  Thanks as always to Heliophile for the beta and Britpick.')}, {'summary': Value(literal:""Life was good. Life was simple. And then everything went to shit. ‘I’m getting married.’ (aka Stefan gets married and Rash really can't take it)"")}, {'summary': Value(literal:'Rash can’t leave Stefan alone for five minutes.')}, {'summary': Value(literal:""It's...weird. Living with Stefan."")}, {'summary': Value(literal:'Four times people thought that Rash and Stefan were dating and one time they realized it was a good idea.')}, {'summary': Value(literal:'On a case, Stefan’s baffling.')}, {'summary': Value(literal:'Rash is either going to teach Stefan how to handle a gun or die trying. Probably the latter.')}, {'summary': Value(literal:'Stefan is nothing if not predictable. And stubborn. And very, very annoying. And also, apparently, the guy Rash has fallen in love with.')}, {'summary': Value(literal:""This was a School project and now it's this"")}, {'summary': Value(literal:""With Stefan working long hours on things that he absolutely cannot talk about, Rash finds himself feeling lonely. The perfect solution: a couple of cats. He has listed the pros and cons, worked out a new budget, found their nearest vet and decided that he's ready. But Stefan, unaware of Rash's plans, has his own, decidedly canine, ideas."")}, {'summary': Value(literal:'Stefan has nice eyes and a lot of props, for some reason. (They move in together and Rash immediately develops a hideously inappropriate crush on his roommate.)')}, {'summary': Value(literal:""A simple tale of two bickering boys, who might just like each other rather more than they're letting on..."")}, {'summary': Value(literal:'The boys celebrate becoming home-owners and Rash tries to come to terms with his Massively Obvious Crush on Stefan.')}, {'summary': Value(literal:'The day after their swimming pool dive, Rash and Stefan are faced with an invoice for cleaning the pool of certain, er, items that dropped from their pockets - or, in other words, Rash gets a clue and Stefan is going to get what he deserves.')}, {'summary': Value(literal:""Moving in with Stefan, his mate, pal, buddy, friend, partner in crime (partner against crime?)- whatever, was definitely going to be an experience. Rash expected that. He just kind of didn't really expect to maybe end up developing a crush on him."")}, {'summary': Value(literal:'Rash and Stefan are completely clueless and Leila just wants to be left alone.')}, {'summary': Value(literal:'The morning after the house warming party.')}, {'summary': Value(literal:'Ever since he found out that Stefan essentially works as an undercover operative for the Serious Fraud Office a lot of the time, he’s been curious about how that works. As a police officer, it strikes him as something the SFO probably shouldn’t be doing. As a friend, it strikes him as pretty dangerous work for Stefan, considering who they’ve gone after and what the consequences have been so far. Arrash doesn’t fancy being shot at or trapped in a car about to burn to death ever again, thank you very much.')}, {'summary': Value(literal:'Stash cute fluff. Im sorry this is awful but i plan to improve from here. This is the first thing ive ever written, and corrections or improvements are always welcome!!')}, {'summary': Value(literal:""Three times Rash and Stefan didn't say 'I love you' and two times they did."")}, {'summary': Value(literal:'Requited Sexual Tension comes to a head.')}, {'summary': Value(literal:'Stefan gets hurt, Arrash gets worried.')}, {'summary': Value(literal:'Once again Stefan gets hurt, Arrash gets worried.')}, {'summary': Value(literal:'None')}, {'summary': Value(literal:'“Anyway is no problem, I have plan!” Stefan wonders if someone’s just turned the aircon on because he feels a distinct chill in the air all of a sudden. He has no idea what Jan’s planning but he suspects it isn’t good. And probably not 100% legal. “You do anything and I will stab you. In the throat. With a biro. And Rash’ll have to help me hide your body and it’ll be super unromantic so you’ll have doubly ruined my chances but at least they’ll never find your traitorous corpse.” The gang play a game of Never Have I Ever and Stefan reveals more than he means too.')}, {'summary': Value(literal:""Was this little plan ridiculous? Yes, of course. Was it badly thought-out and likely to end in tears? Absolutely, without a doubt. And was Arrash going to do it anyway? Yes. Yes, he was. _________________________________________________________________________________ Stefan asks Arrash to show him his flirting moves, and Arrash knows it's a bad idea - but he can't help going along with it anyway."")}, {'summary': Value(literal:'After three hours of hiding from some of his mother’s friends and downing almost four beers Rash was staring at Stefan and Leila and convincing himself that his crush was absolutely harmless. It would go away soon and he would be able to not imagine... things. Anyway, that crush was little. So, so tiny. His heart just always skipped a bit when Stefan was entering the room. And he wanted to sit with him on a couch and just look at the rain outside. And... okay, fuck, maybe it wasn’t that little. But what choice did he have?')}, {'summary': Value(literal:'Stefan really likes sharing a flat with Rash.')}, {'summary': Value(literal:""As Stefan and Rash are walking back after 'visiting' Daniel Lorca's flat, Stefan brings up an awkward topic of conversation, and Rash makes something of it."")}, {'summary': Value(literal:'where Stefan is the one stupidly in love. Ha, take that .')}, {'summary': Value(literal:'Arrash is investigating a case, Stefan is also investigating the same people. Stefan gets kidnapped and tortured. Arrash gets worried and angry.')}, {'summary': Value(literal:'""What is the most efficient way to passive-aggresively say \'fuck you\' in flowers?"" Stefan couldn\'t contain the burst of laughter that emitted from him. The man in question had slapped down £20 on the counter and was looking at him expectantly, ""Well?"" The florist!Stefan that clearly you all want.')}, {'summary': Value(literal:'Stefan gets tangled up in yet another gang that now want him dead. Stef and Rash need to work together. (woo more stash)')}, {'summary': Value(literal:""This fic picks up after series one in Rash and Stefan's flat. Stefan comes home in a crop top and booty shorts, but it isn't the outfit which surprises Rash. Stefan is behaving out of character and Rash is a detective. He works it out. Awkward British comfort ensues."")}, {'summary': Value(literal:'Rash was slowly but surely starting to lose count of the amount of times he found himself on the wrong end of a gun. It felt significant to note these types of life-threatening situations had never occurred before meeting, living with, and occasionally, teaming up with, Stefan Kowolski. Therefore, Rash could only come to the conclusion that out of the two of them, Stefan was the trouble magnet.')}, {'summary': Value(literal:'Time stretched on endlessly in the dark basement. Rash had no idea what time it was, nor how long he had been there, but it had to have been a day already. The pain had become a constant companion. He was a dead man, he knew that. Rash gets abducted on a case. The aftermath proves hard to bear.')}, {'summary': Value(literal:'Porn with feelings.')}, {'summary': Value(literal:""Arrash meets Gulliver, and he's not a forgiving man."")}, {'summary': Value(literal:""Rash is behaving rather strangely, and Stefan is 'mildly' concerned."")}, {'summary': Value(literal:'Rash, Stefan and a Netflix argument that ends well...')}, {'summary': Value(literal:""Rash realises he's the worst detective ever."")}, {'summary': Value(literal:'Раш и Стефан играют в I spy with my little eye')}, {'summary': Value(literal:'наставили друг другу синяков.')}, {'summary': Value(literal:'Три раза, когда Раш и Стефан не сказали «люблю» и два раза, когда признались в любви.')}, {'summary': Value(literal:'они не целуются у воды, в которой несколько минут назад скрылась разбитая, и, возможно, готовая вот-вот взорваться машина.')}, {'summary': Value(literal:'У Раша было все под контролем... почти.')}, {'summary': Value(literal:'Раш давно собирался поцеловать Стефана, но никак не решался')}, {'summary': Value(literal:'пропущенные сцены, потому что как же без них')}]"	252	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: Show me summaries of New Blood (TV) stories

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?summary WHERE { 
?story golem:fandom ""New Blood (TV)"" . 
?story golem:summary ?summary . 
}
"	"[{'summary': Value(literal:'喬遷派對後的清晨。')}, {'summary': Value(literal:'Вызовите скорую и окажите первую доврачебную помощь.')}, {'summary': Value(literal:'список того, о чем не писали в ""гарри поттере""')}, {'summary': Value(literal:'When Harrison arrives at Dexter’s cabin, he starts to feel some strange and frankly nasty “genetic sexual attraction” to his estranged son. After Harrison goes with Dexter instead of killing him when Dexter breaks out of jail, he doesn’t realize what he’s getting into. On the run with no one but each other, they inevitably begin a sexual relationship, which, for Harrison, is based moreso on the love he’d lost from his father after he’d been gone from his life for ten years. For Dexter, however, it was nothing but pure, unadulterated lust.')}, {'summary': Value(literal:'The death of a shady British business man on the A4 takes Semir Gerkhan, in the middle of a midlife crisis due to his impending 50th birthday, to London and to meet a young version of himself in the body of Iranian rooted London Officer Arrash Sayyad and his best friend Stefan Kowolski.')}, {'summary': Value(literal:'同居三十題題目 1. 相擁入眠 2. 一同外出購物 3. 半夜一起看恐怖電影 4. 一方的起床氣 5. 烹飪 6. 大掃除 7. 瀏覽過往照片 8. 吐嘈對方的生活習慣 9. 相隔兩地的電話 10. 早安吻 11. 替對方挑衣服 12. 討論關於寵物話題 13. 一方臥病在床 14. 午睡 15. 幫對方吹頭髮 16. 出浴後的怦然心動 17. 慶祝某個紀念日 18. 接對方回家 19. 離家出走 20. 一個驚喜 21. 屋頂上觀星 22. 一場飛來橫禍 23. 討論關於孩子問題 24. 因惡劣天氣被困在家 25. 喝醉 26. 無傷大雅的打打鬧鬧 27. 穿錯衣服 28. 一方受輕傷 29. 意外的求婚 30. 滾床單')}, {'summary': Value(literal:'曖昧十題（我找不到作者，如果有人知道作者請告訴我，在此感謝題目提供！） 1：不經意間碰到的手 2：撞在一起的眼神然後迅速分開 3：對他不同的態度 4：把他的喜好記得清清楚楚 5：看到他與別人聊得火熱心生不悅 6：令人訝異的默契 7：別人眼中的一對 8：若即若離 9：因為對方的調戲而臉紅不已 10：對他有好感卻不敢表白')}, {'summary': Value(literal:'basically the title + a case. crash is a metaphor.')}, {'summary': Value(literal:'他闭上眼，用手掌按压着眼睛，直到他开始在眼皮底下看见星星为止。“操，”他说，“我们要死在这儿了。”')}, {'summary': Value(literal:'Rash and Stefan find themselves in more strife post-case 3.  Because of course they do. Many thanks to mcicioni for introducing me to these two adorable prats, and to her and pantsaretherealheroes for beta suggestions.')}, {'summary': Value(literal:""Rash and Stefan's eternal search for a place to live continues.  Or starts again. For Heliophile as a (possibly belated) birthday present.  With thanks again for mcicioni for the beta, and for introducing me to these two adorable prats."")}, {'summary': Value(literal:""In which Stefan's prior renting experience comes in handy, and the Sayyad family are resourceful. With thanks as always to mcicioni to introducing me to these adorable prats, and for the beta help.  Special thanks to her workmate for help with the Farsi phrases."")}, {'summary': Value(literal:'It could be a fact that Rash was turning him into a romantic sap, but to be honest, Stefan didn’t care that much. He liked that. He liked everything about Rash and what was he making him feel. And that feeling, he thought, was called love. God, he was such a sap. He hated that. (He didn’t hate that at all.)')}, {'summary': Value(literal:'Rash and Stefan spend their first night in their new place.  Sleeping on one air mattress.  Yeah. With thanks as always to mcicioni for introducing me to these two adorable prats and for the beta work, and to pantsaretherealheroes and Heliophile for enouragment.')}, {'summary': Value(literal:""Rash and Stefan have a combination housefurnishing day and housefiring party, as Stefan's old flatmate Jan would put it. Thanks as always to mcicioni for introducing me to these two adorable prats and for the beta, to pantsaretherealheroes for listening to me blither all over Tumblr chat, and especially to Heliophile for the superb beta that helped me say what I meant to say, rather than what I typed.  *throws streamers*"")}, {'summary': Value(literal:""It takes extreme events for Rash and Stefan to finally Get A Clue. With thanks as always to mcicioni for introducing me to the two adorable prats, for SPAG and plot betaing and for challenging me on various plot points.  Thanks also to pantsaretherealheroes for listening to me geek out at her in the process of this novel and occasionally rant at her over a sticky bit via tumblr messenger.  And finally, the words 'thank you' are not enough for Heliophile for her Britpicking, help with various aspects of London lifestyle and copyediting the fic and somehow discerning what I wanted to say as opposed to what I'd actually written. ;) Dedicated to Tyhyin, who declared the series so far 'the slowest of slow boils' and wondered just how oblivious the two could be.  Challenge accepted.  :D"")}, {'summary': Value(literal:'In which various cases left open at the end of the last fic are investigated, and Rash and Stefan really start to settle into their new lives. With thanks as always to mcicioni for introducing me to these adorable prats, and for her beta work on early drafts of this fic as well as helping nursemaid the plot.  Thanks also to pantsaretherealheroes for the readover(s?) and listening to me curse the day I decided to write anything approaching casefic.  And as always, particular thanks to Heliophile for the Britpicking, copyediting words that slipped through and taking my occasionally - OK not so occasionally - tortured prose and transforming it into what I wanted to say as opposed to what I actually typed. :)')}, {'summary': Value(literal:'In which Rash and his cousin Rahim catch up over a beer or several and exchange news. With thanks as always to mcicioni for introducing me to these two adorable prats, and to her and pantsaretherealheroes for reading and making suggestions over the earlier draft.  Thanks also to pantsaretherealheroes for putting a face to Vihaan.  Thanks as always to Heliophile for the beta and Britpick.')}, {'summary': Value(literal:""Life was good. Life was simple. And then everything went to shit. ‘I’m getting married.’ (aka Stefan gets married and Rash really can't take it)"")}, {'summary': Value(literal:'Rash can’t leave Stefan alone for five minutes.')}, {'summary': Value(literal:""It's...weird. Living with Stefan."")}, {'summary': Value(literal:'Four times people thought that Rash and Stefan were dating and one time they realized it was a good idea.')}, {'summary': Value(literal:'On a case, Stefan’s baffling.')}, {'summary': Value(literal:'Rash is either going to teach Stefan how to handle a gun or die trying. Probably the latter.')}, {'summary': Value(literal:'Stefan is nothing if not predictable. And stubborn. And very, very annoying. And also, apparently, the guy Rash has fallen in love with.')}, {'summary': Value(literal:""This was a School project and now it's this"")}, {'summary': Value(literal:""With Stefan working long hours on things that he absolutely cannot talk about, Rash finds himself feeling lonely. The perfect solution: a couple of cats. He has listed the pros and cons, worked out a new budget, found their nearest vet and decided that he's ready. But Stefan, unaware of Rash's plans, has his own, decidedly canine, ideas."")}, {'summary': Value(literal:'Stefan has nice eyes and a lot of props, for some reason. (They move in together and Rash immediately develops a hideously inappropriate crush on his roommate.)')}, {'summary': Value(literal:""A simple tale of two bickering boys, who might just like each other rather more than they're letting on..."")}, {'summary': Value(literal:'The boys celebrate becoming home-owners and Rash tries to come to terms with his Massively Obvious Crush on Stefan.')}, {'summary': Value(literal:'The day after their swimming pool dive, Rash and Stefan are faced with an invoice for cleaning the pool of certain, er, items that dropped from their pockets - or, in other words, Rash gets a clue and Stefan is going to get what he deserves.')}, {'summary': Value(literal:""Moving in with Stefan, his mate, pal, buddy, friend, partner in crime (partner against crime?)- whatever, was definitely going to be an experience. Rash expected that. He just kind of didn't really expect to maybe end up developing a crush on him."")}, {'summary': Value(literal:'Rash and Stefan are completely clueless and Leila just wants to be left alone.')}, {'summary': Value(literal:'The morning after the house warming party.')}, {'summary': Value(literal:'Ever since he found out that Stefan essentially works as an undercover operative for the Serious Fraud Office a lot of the time, he’s been curious about how that works. As a police officer, it strikes him as something the SFO probably shouldn’t be doing. As a friend, it strikes him as pretty dangerous work for Stefan, considering who they’ve gone after and what the consequences have been so far. Arrash doesn’t fancy being shot at or trapped in a car about to burn to death ever again, thank you very much.')}, {'summary': Value(literal:'Stash cute fluff. Im sorry this is awful but i plan to improve from here. This is the first thing ive ever written, and corrections or improvements are always welcome!!')}, {'summary': Value(literal:""Three times Rash and Stefan didn't say 'I love you' and two times they did."")}, {'summary': Value(literal:'Requited Sexual Tension comes to a head.')}, {'summary': Value(literal:'Stefan gets hurt, Arrash gets worried.')}, {'summary': Value(literal:'Once again Stefan gets hurt, Arrash gets worried.')}, {'summary': Value(literal:'None')}, {'summary': Value(literal:'“Anyway is no problem, I have plan!” Stefan wonders if someone’s just turned the aircon on because he feels a distinct chill in the air all of a sudden. He has no idea what Jan’s planning but he suspects it isn’t good. And probably not 100% legal. “You do anything and I will stab you. In the throat. With a biro. And Rash’ll have to help me hide your body and it’ll be super unromantic so you’ll have doubly ruined my chances but at least they’ll never find your traitorous corpse.” The gang play a game of Never Have I Ever and Stefan reveals more than he means too.')}, {'summary': Value(literal:""Was this little plan ridiculous? Yes, of course. Was it badly thought-out and likely to end in tears? Absolutely, without a doubt. And was Arrash going to do it anyway? Yes. Yes, he was. _________________________________________________________________________________ Stefan asks Arrash to show him his flirting moves, and Arrash knows it's a bad idea - but he can't help going along with it anyway."")}, {'summary': Value(literal:'After three hours of hiding from some of his mother’s friends and downing almost four beers Rash was staring at Stefan and Leila and convincing himself that his crush was absolutely harmless. It would go away soon and he would be able to not imagine... things. Anyway, that crush was little. So, so tiny. His heart just always skipped a bit when Stefan was entering the room. And he wanted to sit with him on a couch and just look at the rain outside. And... okay, fuck, maybe it wasn’t that little. But what choice did he have?')}, {'summary': Value(literal:'Stefan really likes sharing a flat with Rash.')}, {'summary': Value(literal:""As Stefan and Rash are walking back after 'visiting' Daniel Lorca's flat, Stefan brings up an awkward topic of conversation, and Rash makes something of it."")}, {'summary': Value(literal:'where Stefan is the one stupidly in love. Ha, take that .')}, {'summary': Value(literal:'Arrash is investigating a case, Stefan is also investigating the same people. Stefan gets kidnapped and tortured. Arrash gets worried and angry.')}, {'summary': Value(literal:'""What is the most efficient way to passive-aggresively say \'fuck you\' in flowers?"" Stefan couldn\'t contain the burst of laughter that emitted from him. The man in question had slapped down £20 on the counter and was looking at him expectantly, ""Well?"" The florist!Stefan that clearly you all want.')}, {'summary': Value(literal:'Stefan gets tangled up in yet another gang that now want him dead. Stef and Rash need to work together. (woo more stash)')}, {'summary': Value(literal:""This fic picks up after series one in Rash and Stefan's flat. Stefan comes home in a crop top and booty shorts, but it isn't the outfit which surprises Rash. Stefan is behaving out of character and Rash is a detective. He works it out. Awkward British comfort ensues."")}, {'summary': Value(literal:'Rash was slowly but surely starting to lose count of the amount of times he found himself on the wrong end of a gun. It felt significant to note these types of life-threatening situations had never occurred before meeting, living with, and occasionally, teaming up with, Stefan Kowolski. Therefore, Rash could only come to the conclusion that out of the two of them, Stefan was the trouble magnet.')}, {'summary': Value(literal:'Time stretched on endlessly in the dark basement. Rash had no idea what time it was, nor how long he had been there, but it had to have been a day already. The pain had become a constant companion. He was a dead man, he knew that. Rash gets abducted on a case. The aftermath proves hard to bear.')}, {'summary': Value(literal:'Porn with feelings.')}, {'summary': Value(literal:""Arrash meets Gulliver, and he's not a forgiving man."")}, {'summary': Value(literal:""Rash is behaving rather strangely, and Stefan is 'mildly' concerned."")}, {'summary': Value(literal:'Rash, Stefan and a Netflix argument that ends well...')}, {'summary': Value(literal:""Rash realises he's the worst detective ever."")}, {'summary': Value(literal:'Раш и Стефан играют в I spy with my little eye')}, {'summary': Value(literal:'наставили друг другу синяков.')}, {'summary': Value(literal:'Три раза, когда Раш и Стефан не сказали «люблю» и два раза, когда признались в любви.')}, {'summary': Value(literal:'они не целуются у воды, в которой несколько минут назад скрылась разбитая, и, возможно, готовая вот-вот взорваться машина.')}, {'summary': Value(literal:'У Раша было все под контролем... почти.')}, {'summary': Value(literal:'Раш давно собирался поцеловать Стефана, но никак не решался')}, {'summary': Value(literal:'пропущенные сцены, потому что как же без них')}]"	1	0	0
253	253	en	Show me summaries of 花与梦 stories	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?summary WHERE {  ?story golem:fandom ""花与梦"" . ?story golem:summary ?summary . }"	[{'summary': Value(literal:'None')}]	253	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: Show me summaries of 花与梦 stories

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT ?summary WHERE { 
    ?story golem:keyword ""花与梦"" . 
    ?story golem:summary ?summary . 
}
"	[]	0	0	1
254	254	en	Show me summaries of 忧郁的物怪庵 stories	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?summary WHERE {  ?story golem:fandom ""忧郁的物怪庵"" . ?story golem:summary ?summary . }"	[{'summary': Value(literal:'新年在一起的两个人，cp前后有意义')}, {'summary': Value(literal:'因为立法的恶作剧，芦屋和安倍分别变出狗狗耳朵和尾巴，猫猫耳朵和尾巴，并且带上了汪喵的口癖，安倍还被迫带上了猫铃铛')}, {'summary': Value(literal:'大写的OOC')}, {'summary': Value(literal:'旧文补档，首发于LOFTER，这边作为全文外链')}, {'summary': Value(literal:'旧文补档，原文首发于LOFTER，这边作为全文链接')}, {'summary': Value(literal:'女装攻注意 芦屋穿jk裙搞安倍，cp前后有意义')}, {'summary': Value(literal:'None')}, {'summary': Value(literal:'abo世界观 alpha的芦屋花绘无法标记beta的安倍晴斋，安倍晴斋无法感知信息素结果被omega的客人纠缠带回来的信息素导致芦屋花绘发情 后面有个后续，很甜哦ヾ(◍°∇°◍)ﾉﾞ cp前后有意义')}]	254	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: Show me summaries of 忧郁的物怪庵 stories

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?summary WHERE { 
?story golem:fandom ""忧郁的物怪庵"" . 
?story golem:summary ?summary . 
}
"	[{'summary': Value(literal:'新年在一起的两个人，cp前后有意义')}, {'summary': Value(literal:'因为立法的恶作剧，芦屋和安倍分别变出狗狗耳朵和尾巴，猫猫耳朵和尾巴，并且带上了汪喵的口癖，安倍还被迫带上了猫铃铛')}, {'summary': Value(literal:'大写的OOC')}, {'summary': Value(literal:'旧文补档，首发于LOFTER，这边作为全文外链')}, {'summary': Value(literal:'旧文补档，原文首发于LOFTER，这边作为全文链接')}, {'summary': Value(literal:'女装攻注意 芦屋穿jk裙搞安倍，cp前后有意义')}, {'summary': Value(literal:'None')}, {'summary': Value(literal:'abo世界观 alpha的芦屋花绘无法标记beta的安倍晴斋，安倍晴斋无法感知信息素结果被omega的客人纠缠带回来的信息素导致芦屋花绘发情 后面有个后续，很甜哦ヾ(◍°∇°◍)ﾉﾞ cp前后有意义')}]	1	0	0
255	255	en	Show me summaries of 短裤里的诗歌 stories	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?summary WHERE {  ?story golem:fandom ""短裤里的诗歌"" . ?story golem:summary ?summary . }"	"[{'summary': Value(literal:'张海明泥塑！ 酒吧里婚姻不幸的美丽少妇，怯懦的人没有爱……')}, {'summary': Value(literal:'张海明泥塑！ 傻乎乎的学姐，她的舌头像一片粉色花瓣')}, {'summary': Value(literal:""Poetry I've written based off life experiences or thoughts I've had. Inspired by life in general. Series: My Poems [1]"")}]"	255	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: Show me summaries of 短裤里的诗歌 stories

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT ?summary WHERE { 
?story golem:title ""短裤里的诗歌"" . 
?story golem:summary ?summary . 
}
"	[]	0	0	1
256	256	en	Show me summaries of DC vs. Vampires stories	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?summary WHERE {  ?story golem:fandom ""DC vs. Vampires"" . ?story golem:summary ?summary . }"	"[{'summary': Value(literal:""Barry's caught.  Even with Hal's fangs pressing a dark promise against his racing pulse, Barry's mind refuses to connect the vampire, his attacker, and Hal. Or: Some of the homoerotic vampire Hal on Barry action we were denied in DC vs. Vampires, with some additions from the Tumblr version. Content warnings in the tags and notes."")}, {'summary': Value(literal:'——他和杰森都是布鲁斯·韦恩的狗，如今布鲁斯死去，他们又该如何继续生活下去，又该如何与对方相处。')}, {'summary': Value(literal:'“喝吧。” 这不是一个提议，也不是一个建议。它是一个命令，像无云的天空一样纯粹。 “你将拥有永恒的时间来接受这件事。” ——迪克成功地转化了他的弟弟。 （DC大战吸血鬼第六期剧透）')}, {'summary': Value(literal:'主人想要蝙蝠侠，于是哈尔就去把他带来。 吸血鬼刊paro，假设master是大超。超蝙绿3p。布鲁斯的初拥。')}, {'summary': Value(literal:""I'm not fucking Cattle and I was this close to putting a bullet in his head over that but I don’t know if the transformation can be reversed because SOMEONE ISN’T ANSWERING THEIR FUCKING PHONE! You fucking knew there was a vampire Apocalypse\xa0happening and you didn’t fucking tell me?! We’re supposed to be friends Roy! I thought you cared- it doesn't matter because obviously I was mistaken. Fuck you Harper."")}, {'summary': Value(literal:'...The Tragedy of Death As a mortal he had avoided her and the temptation she represented but as a Vampire? He was more than happy to taste the forbidden fruit.')}, {'summary': Value(literal:""In one universe, the Vampire Lord is one of the Batman's sons. In another, it's his father."")}, {'summary': Value(literal:'Hal’s used to looking in the mirror and not liking what he sees.  But it’s no comfort when he looks in the mirror and all but two of its teeth end in dull, blunt tips. Or: A Hal-centric retelling of DC vs. Vampires 1-6, and a parallel night, not so long ago.')}, {'summary': Value(literal:'“Drink.” It wasn’t a proposal or a suggestion. It was an order, plain as a cloudless sky— —“You’ll have an eternity to come to terms with it.” Dick succeeded in turning his brother against his will. (Spoiler: DC vs. Vampires #6)')}, {'summary': Value(literal:'“A bit much, wasn’t it, Hal?”')}, {'summary': Value(literal:'She tries and fails not to think about how the Heroes who haven’t answered her calls had been absent from the news lately. Something is happening, she knows it, she just doesn’t know what.')}, {'summary': Value(literal:""Not the whole week, just for the days I'm too lazy to come up with a narrative and rather just draw porn. Day One (15th of August): Under the Red Hood/Lost Days era Day Four (18th of August): DC vs Vampires Day Five (19th of August): All-Caste era"")}, {'summary': Value(literal:'Batman attempts to console Jayna after delivering the news of Zan’s murder, and retrieving nothing of her twin but his severed fingertip. But she isn’t there. She’s gone. She was devastated, sobbing, then overwhelmingly furious , but now she’s nothing. Without her dear Wonder Brother she’s nothing.')}]"	256	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: Show me summaries of DC vs. Vampires stories

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?summary WHERE { 
?story golem:fandom ""DC vs. Vampires"" . 
?story golem:summary ?summary . 
}
"	"[{'summary': Value(literal:""Barry's caught.  Even with Hal's fangs pressing a dark promise against his racing pulse, Barry's mind refuses to connect the vampire, his attacker, and Hal. Or: Some of the homoerotic vampire Hal on Barry action we were denied in DC vs. Vampires, with some additions from the Tumblr version. Content warnings in the tags and notes."")}, {'summary': Value(literal:'——他和杰森都是布鲁斯·韦恩的狗，如今布鲁斯死去，他们又该如何继续生活下去，又该如何与对方相处。')}, {'summary': Value(literal:'“喝吧。” 这不是一个提议，也不是一个建议。它是一个命令，像无云的天空一样纯粹。 “你将拥有永恒的时间来接受这件事。” ——迪克成功地转化了他的弟弟。 （DC大战吸血鬼第六期剧透）')}, {'summary': Value(literal:'主人想要蝙蝠侠，于是哈尔就去把他带来。 吸血鬼刊paro，假设master是大超。超蝙绿3p。布鲁斯的初拥。')}, {'summary': Value(literal:""I'm not fucking Cattle and I was this close to putting a bullet in his head over that but I don’t know if the transformation can be reversed because SOMEONE ISN’T ANSWERING THEIR FUCKING PHONE! You fucking knew there was a vampire Apocalypse\xa0happening and you didn’t fucking tell me?! We’re supposed to be friends Roy! I thought you cared- it doesn't matter because obviously I was mistaken. Fuck you Harper."")}, {'summary': Value(literal:'...The Tragedy of Death As a mortal he had avoided her and the temptation she represented but as a Vampire? He was more than happy to taste the forbidden fruit.')}, {'summary': Value(literal:""In one universe, the Vampire Lord is one of the Batman's sons. In another, it's his father."")}, {'summary': Value(literal:'Hal’s used to looking in the mirror and not liking what he sees.  But it’s no comfort when he looks in the mirror and all but two of its teeth end in dull, blunt tips. Or: A Hal-centric retelling of DC vs. Vampires 1-6, and a parallel night, not so long ago.')}, {'summary': Value(literal:'“Drink.” It wasn’t a proposal or a suggestion. It was an order, plain as a cloudless sky— —“You’ll have an eternity to come to terms with it.” Dick succeeded in turning his brother against his will. (Spoiler: DC vs. Vampires #6)')}, {'summary': Value(literal:'“A bit much, wasn’t it, Hal?”')}, {'summary': Value(literal:'She tries and fails not to think about how the Heroes who haven’t answered her calls had been absent from the news lately. Something is happening, she knows it, she just doesn’t know what.')}, {'summary': Value(literal:""Not the whole week, just for the days I'm too lazy to come up with a narrative and rather just draw porn. Day One (15th of August): Under the Red Hood/Lost Days era Day Four (18th of August): DC vs Vampires Day Five (19th of August): All-Caste era"")}, {'summary': Value(literal:'Batman attempts to console Jayna after delivering the news of Zan’s murder, and retrieving nothing of her twin but his severed fingertip. But she isn’t there. She’s gone. She was devastated, sobbing, then overwhelmingly furious , but now she’s nothing. Without her dear Wonder Brother she’s nothing.')}]"	1	0	0
257	257	en	Show me summaries of stony - Fandom stories	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?summary WHERE {  ?story golem:fandom ""stony - Fandom"" . ?story golem:summary ?summary . }"	"[{'summary': Value(literal:'A veces lo que uno necesita esta frente a sus propios ojos.')}, {'summary': Value(literal:'Para Steve Rogers, el matrimonio que mantenía con Anthony Stark estaba siendo un caos, por su parte él ya no desea ser parte de su vida, y para terminar con todo esa incomodidad, decide firmar los papeles de divorcio. ¿Como tomara todo esto Peter?')}, {'summary': Value(literal:'Todo fue un malentendido, lo habían juzgado mal y no le dieron la oportunidad de hablar. Ahora vagaba sólo, bajo las cálidas calles de Italia, con sus memorias revueltas y su corazoncito hecho añicos.')}, {'summary': Value(literal:'Anthony está raro, su humor ya no es el mismo y sus ánimos están por los suelos. Steve, el Alfa de la manada, estaba bastante preocupado que el único Omega este así; no es sano para él ni mucho menos para su manda. ¿Qué es lo que quieres Tony?')}, {'summary': Value(literal:'Yo estaba por lo bajo de todos, no tenía sustento y para vivir me ofrecía. No podía tener hijos y tenía una marca en mi cuello. Estaba usado y botado cruelmente.')}, {'summary': Value(literal:'Tony conspira para deshacerse de Steve... Por desgracia, Steve descubre estar perdidamente enamorado y su traición va a romperle el corazón.')}, {'summary': Value(literal:""Steve rogers has been missing the past but when it comes to him, he noticed things have changed. he's changed."")}, {'summary': Value(literal:""Tony get's low. Too low"")}, {'summary': Value(literal:""Whenever Steve has nightmares, Tony sings him to sleep even if he's halfway across the world."")}, {'summary': Value(literal:'普通内容被屏蔽，无奈之下走链接')}, {'summary': Value(literal:'无任何警示')}, {'summary': Value(literal:'产乳')}, {'summary': Value(literal:'La humanidad está al borde de la extinción, una amenaza insuperable esta venciendo lentamente a todos los “héroes” que quedan… pero cuando se cree que toda esperanza ha muerto, el primer vengador es encontrado por el joven Tony Stark. Gracias a este encuentro ¿la humanidad tendrá una oportunidad? ¿Qué podrá aprender un hombre de los años 40’s en un futuro incierto? ¡¿Qué podrá enseñarle un adolescente con demasiadas responsabilidades?')}, {'summary': Value(literal:'Lo que no vimos en la película Heroes United: IronMan & Captain America de Marvel. El capitán América es dorrotado por Hydra ante los incrédulos ojos de IronMan, pero las cosas no van a ser tan sencillas como para captar al capitán y esperar que su compañero no haga nada más que mirar. Gran sorpresa se ha de llevar el multimillonario al encontrarse con Steve portando otro traje y obedeciendo órdenes de Hydra. Trabajo para el Special Stony Challenge Multiverse')}, {'summary': Value(literal:'Steve se ve atrapado en una dimensión desconocida donde el amor y el instinto de supervivencia serán lo único que le mantenga a flote en ese viaje a la deriva. Adaptación Stony del cómic. 💕')}, {'summary': Value(literal:'Steve Rogers es dueño de una gran empresa, reconocida a nivel mundial. Siendo un hombre serio, de buen porte y con mucha dedicación a su trabajo, piensa que es una pérdida de tiempo dedicar su atención a otras cuestiones. A pesar de ello, muy en lo profundo de su corazón, sueña con algún día tener hijos y formar su propia familia. Sin embargo, para obtenerla, tendrá que encontrar a quien se atreva a vivir junto a él, la aventura más grande de sus vidas: fingir un  matrimonio consumado. ¿Logrará Steve cumplir su más grande deseo?')}, {'summary': Value(literal:'Shot basado en una foto de TuSecreto')}, {'summary': Value(literal:'Tony era un doncel excepcional y eso solo lo hacia más irresistible AllxTony Stony')}, {'summary': Value(literal:'¿ Y si un teléfono roto fuera lo único que te queda de aquel a quien amaste? ¿Lo repararías? ¿O repararías tu orgullo el cual lo dejo ir? ¿Podrías arreglarlo?')}, {'summary': Value(literal:'Después de la guerra Civil todo cambio. Los Vengadores jamás volvieron a ser los mismos de antes. Steve jamás volvió a ver a Tony, aún cuando lo buscaba incansablemente, su esperanza se fue desvaneciendo con los años, todo había terminado... Hasta que aquel pequeño niño de cuatro años y grandes ojos azules pronunció dos palabras: ""Soy Peter, Peter Stark""')}, {'summary': Value(literal:'None')}, {'summary': Value(literal:'盾铁联文之第六章 pwp Nc17 ID：阿恋_')}, {'summary': Value(literal:'没关系，来日方长。')}, {'summary': Value(literal:""Tony était bourré et Steve, surprotecteur. Autrement dit, nuit de folie à l'horizon ! Ceci est la traduction d'un OS de Olivier_Mira, dont vous pouvez trouver la version originale sur ce même site. Beta-lectrice : Angel."")}, {'summary': Value(literal:""Steve and Tony are in the lab. Loki is an asshole. What happens next? SMUT THAT'S WHAT [read. I suck at summaries :)]"")}, {'summary': Value(literal:""In an alternative universe, Tony Stark and Steve Rogers have a complicated relationship. Between sadness and joy, here are 10 short stories about them. Warning: There's no link between the different chapters."")}, {'summary': Value(literal:'Being avengers and working for a safe world was one thing, but having to work even harder to take care of the person you love most, even if the situation is unexpected, is the challenge that they did not ask for and that no one should know. Oneshot Stony, based on a commission that draws and that brought me so much trouble that it avenges me making it a magnificent story with explicit delivery and a lot, enjoy it! STONY - MPREG - YAOI - PARTO - BABY PETER - MUCH LOVE!!')}, {'summary': Value(literal:'This is my nod and written thanks unto which I hope is allowed.')}, {'summary': Value(literal:""Tony spent years coming up with a plan. Ever since he laid eyes on the great Captain America at his party a few years back, all he wanted to do was go on one date. But life's shit with all the constant missions but now he finally has a chance. Until Bucky Barnes was found."")}, {'summary': Value(literal:'In which Steve can\'t believe he might be into guys but gets aroused by the thought of Tony. ""Oh god! Tony had really bought him a computer! And it wasn\'t a cheap one. That was amazing! Steve never had owned one and really didn\'t know how this thing worked. And he definitely couldn\'t ask Tony about it, could he? "" Includes Tony watching porn with Steve, masturbating and a little bit of fluff. ;)')}, {'summary': Value(literal:""Peter Parker has way too many problems as it is, being Spider Man and the son of two of the Avengers- and now, he has to deal with a certain psycho, armed with katanas, shitty pickup lines, and loads of sarcasm, following him around during his patrols. At first, it's annoying- but he finds himself growing fond of this man, Deadpool- the only person who doesn't treat him like he's made of glass all the time, the only person who takes him seriously, and the only person he feels he can trust. Peter finds himself slowly letting Pool into his everyday life, forming a fragile and unstable bond between the two of them, as they try to navigate the struggles of disapproving parents, depression, and the struggle of being a freak."")}, {'summary': Value(literal:'Tony walks in on Steve during a work out. Smut ensues.')}, {'summary': Value(literal:""Steve Rogers can't help himself from falling in love with the great Tony Stark. It was one thing to flirt with a man, but to be completely and utterly in love with him? Now that was something different."")}, {'summary': Value(literal:""Tony and Steve get in an argument... I just realized I should change this to M for character death, it used to be T..  I know it's sort of cliche but I feel like it keeps them in character the best way possible."")}, {'summary': Value(literal:'Tony and Steve meet Peters girlfriend, Gwen, for the first time. Awkward family moments ensue and lots of fluff is to be expected.')}, {'summary': Value(literal:'The Avengers have a night in- what better thing to do than sing? Tony starts to sing to a blushing Steve, but eventually he warms up to it.  ~SongFic for the songs ""Marvin Gaye"" by Charlie Puth ft. Meghan Trainor and ""Stay With Me"" by Sam Smith')}, {'summary': Value(literal:""Tony becomes determined to help Steve's nightmares go away"")}, {'summary': Value(literal:""Slice of life for Peter Parker. Some eventual Peter x Tony. I don't own any of these characters. If you are not aware of the glory that is the Marvel universe you need to crawl back under your rock."")}, {'summary': Value(literal:'Tony Stark is your average rich smart boy but what lies beneath the surface? How will the sudden change of working with ""The Steve Rodgers?"" I DO NOT OWN THESE CHARACTERS NOR DO I CLAM I DO. ALL CREDIT GOES TO MARVEL')}, {'summary': Value(literal:'14年托尼老背锅的感想，灵感来自黄浦江伐开心')}, {'summary': Value(literal:'复联四之后钢铁侠二以前，队长穿越到过去见到了还不认识自己的托尼。')}, {'summary': Value(literal:'五年故事系列，我真的算是没有想好题目23333，先放上来吧，有HE和BE 主要时间段是无限战争后的五年 托尼没有和佩珀结婚，也没有摩根小可爱（但是我真的好爱她）')}, {'summary': Value(literal:'Loki escapó de la prisión donde Thanos lo encerró, luego de haber fingido su muerte, asustado y en pánico usa su ultimo vestigio de poder para llegar al único lugar donde recuerda alguien lo puede proteger: La torre Vengadores, en la tierra. Sin embargo no llega en el mejor momento, Tony se encuentra en un estado lamentable, dado al trago y lider de un equipo fragmentado, se encuentra con el dios de las mentiras, y contrario a su mejor juicio lo lleva a casa. Ambos comienzan un proceso extraño de recuperación, dónde comparten experiencias, tragos, bromas y promesas, por que tanto Tony como Loky saben que esa tregua es temporal y tarde o temprano tendrán que separarse.')}, {'summary': Value(literal:'Steve quería más, mucho más de lo que él le daba, pero exigir era algo fuera de su personalidad. Entonces, simplemente hizo puchero y dijo aquello prohibido. -No lo entiendes...')}, {'summary': Value(literal:'Johnny y Peter son dos niños de 11 años que se conocen en un campamento, en un principio se impresionan de lo iguales que sus rostros son, luego descubren que son gemelos y hacen un plan para volver a unir a sus padres. ----------------------- Novela basada en la pelicula ""Parent Trap"" o ""Juego de Gemelas"". Los gemelos son protagonizados por Peter Parker y Johnny Storm (Los 4 fantásticos). Aca: Peter Stark y Johnny Rogers.')}, {'summary': Value(literal:'Steve vuela directamente a Nueva York al enterarse por Natasha que Tony, su expareja, guardaba un secreto que casi pierde en siberia, el dolor de fallarle a alguien a quien juraste amar es un golpe mas helado que el hielo de donde salio. Tony lleva entre sus brazos aquella promesa de un futuro mejor. ¿podrá Steve recuperar su futuro?')}, {'summary': Value(literal:'El hijo de Howard Stark, Tony, es el omega más más deseado de la empresa, pero nadie se le acerca por ser el hijo del jefe. Todo cambiará el día en el que Howard tenga que salir de la ciudad y deje a su hijo a merced de los Alfas de la compañía, cuando pasa por un celo. Steve Rogers siempre intentó alejarse del hijo de su amigo, era demasiado joven para él, casi un adolescente. Pero cuando el olor dulzón llegue hacia a él, le es inevitable ir a su encuentro, junto a todos los alfas del lugar.')}, {'summary': Value(literal:'Steve found out that it\'s Tony\'s birthday. He needed to do something extra special for his ""friend"".')}, {'summary': Value(literal:'Tony đã chưa bao giờ giỏi trong việc níu giữ những điều tốt đẹp.')}, {'summary': Value(literal:'""Giờ em nên cho rằng họ đã phát triển một số loại thuốc cho bệnh này đi thôi."" Gã nói đùa. Pepper bắn cho gã một cái lườm nghiêm khắc khi cô xoay những cánh hoa màu hồng dính đầy máu trên tay, nhuộm vài vệt đỏ lên bộ móng được cắt tỉa hoàn hảo của cô. ""Chuyện này không đùa được đâu, Tony."" ""Oh, anh không biết đấy, Pep à. Có lẽ đó là trò đùa lớn nhất trong cả cuộc đời anh. Và em biết anh đã nói đùa rất nhiều mà."" Gã nói thêm, nhổ một cánh hoa ra khỏi kẽ răng. ""Bị giết chết bởi tình yêu. Chà, trong trường hợp này, là tình yêu đơn phương. Thật mỉa mai làm sao.""')}, {'summary': Value(literal:'Vấn về về tổn thương não vĩnh viễn chính là nó thường không liên quan đến sự phức tạp của hôn nhân.')}, {'summary': Value(literal:'Sau ba năm vui vẻ, Học viện Avengers sắp kết thúc một cách bất ngờ, và Tony dường như vẫn không thể nói cho Steve biết cậu cảm thấy thế nào về anh. Thời gian không còn nhiều, và cậu rất cần một lời khuyên. Và ai tốt hơn để đưa ra nó hơn chính bản thân? Nghĩa đen! Chuyển sang đa vũ trụ để được giúp đỡ, cậu gặp Tony Stark, một phiên bản buồn hơn, người không chỉ nói cho cậu biết những gì cậu cần nghe, mà còn cho cậu biết một lý thuyết thú vị, có tính tương tác: Steve Rogers và Tony Stark, trong các lần lặp vô hạn của họ, định mệnh với nhau trong mọi vũ trụ?')}, {'summary': Value(literal:'Tony chẳng biết nên cảm thấy thế nào khi Steve đã chứng minh, một cách thật tàn nhẫn, rằng tất cả tình yêu giữa họ là đích thực.')}, {'summary': Value(literal:'Steve está embarazado y Tony se ha propuesto ser el mejor padre del mundo, sin embargo no contará con que existe un fetiche que será su perdición.')}, {'summary': Value(literal:'Steve Rogers es un Alpha poco convencional, pues al no sentirse atraído por los Omegas, un Beta peculiar ha robado su corazón pero, ¿eso será suficiente para llevar a cabo una unión?')}, {'summary': Value(literal:'""And here I thought the worst kind of parental problems were preventing your kids from sneaking out to parties... Not to stop fucking robberies under a mask as he sweeps from building to building."" Another one where Peter is Spiderman. Tony is overprotective. Steve is tired. And the Avengers are underattack.')}, {'summary': Value(literal:""Steve knows the man he loves, something's going on with Tony, he can't quite figure it out, but he can't ignore the fact that Tony's wearing a long sleeved sweater when they are at 113 °F"")}, {'summary': Value(literal:""While working in his lab, Tony Stark finds out that the reality he's currently living in is completely false. With his dear boyfriend, Steve Rogers and the Avengers, he's going to track the person who created their reality to put everything back in order."")}, {'summary': Value(literal:'Steve and Tony are finally moved into their new house as newlyweds!')}, {'summary': Value(literal:'Steve and Tony have a big fight. Happy ending.')}, {'summary': Value(literal:'Retired works until further notice. **Extreme editing in this set of works. You have been warned.')}, {'summary': Value(literal:'Tony gets drunk. Steve gets overprotective. Trouble ensues.')}, {'summary': Value(literal:""Clint and Bruce attend Tony's costume party. Things get pretty rowdy between a certain pair..."")}, {'summary': Value(literal:'Después de ser dolorosamente derrotados por Ultrón, Los Vengadores son recibidos por la familia de Clint para recuperar fuerzas y armar el plan de respuesta y ataque. Sin embargo, parece que el descanso será difícil para Tony y Steve, quienes tendrán que compartir habitación, obligándolos a hablar y aclarar su complicada y confusa relación.')}, {'summary': Value(literal:'What do you do when you run into your boss who is also scrolling through the appalling gay porn selection at the DVD store on a Friday night? You go home with him and together you make your own, of course.')}, {'summary': Value(literal:'Merry Christmas for The Rogers family :)')}, {'summary': Value(literal:'Porque el amor lo puedes encontrar en el momento menos inesperado. ""Tᴏᴅᴏ ʟᴏ ǫᴜᴇ ʜᴀɢᴏ, ʟᴏ ʜᴀɢᴏ ᴘᴏʀ ᴛɪ.""')}, {'summary': Value(literal:'Un mundo dividido en donde angeles y demonios no pueden unirse. Un rey en cada bando, descendientes de cada uno. Y los sucesores al trono viven un pecado que seria cruelmente castigado si alguien se entera. Pero, existe algo llamado amor, que va mucho más allá de cualquier ley.')}, {'summary': Value(literal:""Christmas doesn't feel the same, especially for one Peter Stark-Rogers...and it only starts with the ham.  (Post-Divorce fic)"")}, {'summary': Value(literal:'Tony Stark, the smart-ass playboy. Steve Rogers, the embodiment of justice and kindness himself. Unbelievable couple, right?')}, {'summary': Value(literal:'1970肉，加A4结局改写。HE 盾铁Forever。')}, {'summary': Value(literal:""Kissing Steve Rogers was one of the best decisions of Tony Stark's life. To be fair, he was a genius, so maybe the scales were tipped in his favor when it came to smart decision-making. Still, genius or not, he wasn't above patting himself on the back for recognizing a good thing when he saw it. And Steve was a very good thing. In a life that might generously be characterized as morally ambiguous, this was the one thing Tony could point to and say, without hesitation, “This is good.” Of course, that thought was immediately followed by, “Do not fuck this up.” Tony's old man balls were most definitely a factor, in his mind anyway, for potentially fucking this up."")}, {'summary': Value(literal:'Tonight was the night. Steve had been planning this for weeks and today was the perfect day. He’d wrote down what he was going to say rehearsed them in front of the mirror not caring how stupid he looked he needed this to be perfect. This is what he had been waiting to do ever since he woke up from his frozen sleep.')}, {'summary': Value(literal:""In the course of a very busy forty-eight hours, Tony Stark managed to enlist the scientific mind of Bruce Banner on a top secret project involving an anti-aging serum for his balls; admit and act on his attraction to America's superhero sweetheart himself, Steve Rogers, aka Captain America; and get caught in an altogether compromising position with his science bro.  It was all perfectly innocent, if a little weird.  He just had to find a way to explain it to Steve, and salvage their barely-begun relationship before it all went to hell."")}, {'summary': Value(literal:'Happy Hogan has some advice for his billionaire boss Toni Stark after a sour meeting with the Avengers who remain after the snap from the Infinity Gauntlet. The advice concerns a certain Captain America, who is still at odds with Toni. Will the scorned Iron Woman heed Happy’s advice, and take advantage of the opportunity presented to her?')}, {'summary': Value(literal:""Three years ago, if someone had told him that he would've been going shot for verbal shot with (an ALIVE) Captain America, getting ready to fight an alien army and one sassy God, and almost get sucked into a wormhole, he would have asked what they were smoking and if they'd share. But now, after everything with the Madarian and Extremis, and Steve and Natasha's little adventure in DC, it seemed like Ultron was the final candle on a really fucked up cake. But they survived- together. And somewhere along the way Tony Stark and Steve Rogers fell for one another; in the midst of all the craziness, they worked. But who could have imagined that before the war in New York, a young woman was fighting for her life, only to be saved by a serum that many thought to be lost.  When Natasha brings this young woman into the two Avenger's lives, hearts are broken and mended, and lives are on the line. **This story is on temporary hiatus. Not sure when it'll be picked back up!**"")}, {'summary': Value(literal:'Steve sacrifices himself to protect his team, but he doesn’t die. The serum lasts long enough to keep him alive but then fades, reverting Steve back to his pre-serum state. Steve once again finds himself out of place and questions his new role in The Avengers')}, {'summary': Value(literal:'Everything about them happened in seconds. Their first meeting was quick, with Tony landing next to the Captain, each man giving a curt nod and name in greeting. Their argument on the hellicarrier took mere seconds to escalate. Until Steve was goading Tony into putting on the suit and going a few rounds and Tony not so subtly reminding Steve that he wasn’t afraid to hit an old man. It was only seconds of staring at Tony on that New York City Street, his arc reactor dark, no rise and fall of his chest, for Steve to know that inside the tin can, was a good man. Then Ultron happened, and it took seconds for their world to change, seconds for Steve to throw his shield at Tony and for the billionaire to send a repulsor blast back. They went from laughing and relaxing to standing on an edge thousands of feet above solid ground. And now…now everything’s changed. And all it took was a combination of seconds; of decisions made, actions performed and words spoken that they couldn’t get back. Just a few ticks of the clock for their world to shatter. It’ll take more than that to make things right.')}, {'summary': Value(literal:""Apparently, he's not enjoying the feeling of being solitude."")}, {'summary': Value(literal:'Donde Peter busca al famoso mercernario para darle un pequeño trabajo')}, {'summary': Value(literal:'Después de  ver a Peter esfumarse, ahora Tony tiene que lidiar con la idea de que Steve haya tenido el mismo destino. Él junto con Nébula regresarán a la tierra para averiguar si la persona que tanto ama Tony está a salvo... | Drabble (Historia Corta)')}, {'summary': Value(literal:'Un shot basado en una foto que vi en el grupo Stony Shippers')}, {'summary': Value(literal:'Stony Like I can - Sam Smith')}, {'summary': Value(literal:'Tony spots Steve looking miserable at a party and helps him enjoy himself a little bit.')}, {'summary': Value(literal:""Ok, so I haven't written in the fandom in a while so forgive me for any mistakes in grammar, spelling, punctuation lol all of it. Had to take care of my mental, emotional, and physical health. In doing that, this came about. I hope you enjoy and again, forgive me for any and all mistakes, they are mine. As always, I do NOT own any rights to anything Marvel..This work is simply a work of fiction and only for entertainment :)"")}, {'summary': Value(literal:'The clock was ticking. And then, black.')}, {'summary': Value(literal:'Tony is dead. Its only been a year.')}, {'summary': Value(literal:'Captain Antonio Stark changes his mind on a certain Captain.')}, {'summary': Value(literal:'When Pepper takes Tony to the dentist for a procedure, he tells her an insane secret while hopped up on the wacky gas.')}, {'summary': Value(literal:'Peter enlists the help of his Uncle Clint when he decides that he wants to make the perfect costume to make his dads proud.')}, {'summary': Value(literal:'Steve lists all the best first times throughout his relationship with Tony, and parenthood with Peter in his first few years.')}, {'summary': Value(literal:'It’s Steve and Tony’s 3 month anniversary, and Steve has planned something special.')}, {'summary': Value(literal:'Tony contemplates death and admires the galaxy as he waits for his oxygen to run out. A blurb inspired by the Endgame Trailer.')}, {'summary': Value(literal:""[POST END GAME] Tony Stark came back to life as a super soldier after a successful experiment. It's been 10 years since Steve Rogers went into hiding after the funeral, nobody except Bucky know where he is. After several years of peace, it's finally coming to an end. Will the both meet each other and rewrite earth's fate, or are they destined to be star crossed lovers?"")}, {'summary': Value(literal:""Steve stared around him, his unfamiliar environment. “How’d I get here?” He asked himself aloud. As his eyes gradually accustomed to light, he realised that he was in Tony’s room. ----------------------------------------------------------------------------------------------------- So Steve wakes up in Tony's bed and learns quite a lot about his fellow Avengers. Cue Cute fluff and angst x"")}, {'summary': Value(literal:'""How the hell did they get here?"" It was a running theme in both men\'s minds. It popped up when they were arguing within the first few hours they\'d met, when Steve watched Tony\'s house fall into the Pacific, when Tony watched Steve fall from the sky, when Sokovia was hovering above the Earth. But somewhere in all that falling, they fell for one another, and that phrase turned into: ""Thank God we made it here."" It followed in the moments after their first kiss, in soft caresses against skin, in their first time coming together. But Steve has found that phrase entering his mind again. And he knows that all too soon, they\'re going to say something or do something that cannot be taken back. And there will be no where to go, but forward. Tony on the other hand, is hoping to stop all of this before it gets to that point. I have watched both trailers more times than I can count. This movie has broken me and it\'s not even out yet. I am a Stony shipper, and this is my way of writing out those feelings and making sense of the scenes we\'ve been given. And hopefully, keeping the bloodshed and broken hearts to a minimum.')}, {'summary': Value(literal:'Young Peter Parker is having some trouble sleeping, and his father Tony tries to comfort him the only way he knows how.')}, {'summary': Value(literal:""Peter Parker says his first words, much to his fathers' joy. AKA a huge ball of FLUFF :)"")}, {'summary': Value(literal:""As Steve and Tony prepare for their new son's arrival home from the orphanage, Tony begins to have doubts on whether or not he will be a good father."")}, {'summary': Value(literal:'Who would think that Steve would tell his feelings to Tony and what he thought was impossible to happen?')}, {'summary': Value(literal:'Before Steve had time to move, he felt a quick and sharp poke on his ass, causing his spine to tingle and his face to morph into a red glowing haze as he blushed. Tony was already laying there waiting. With his arms poised, and smiling at full capacity…')}, {'summary': Value(literal:'Agent Romanoff talks about Capt Rogers.')}, {'summary': Value(literal:""Papa Steve insists that twelve year old Ava drinks too much coffee, and forbids her from drinking it. Ava provides a bizarre defense. Another addition to a series of shorts involving Steve Rogers and Tony Stark with a daughter. Will hopefully lead up to a longer fic that follows Ava's transition into Iron Woman. Series can be read in any order."")}, {'summary': Value(literal:'Steve is once again believed to be dead, which leaves Tony as his child’s guardian. Years later Steve is found alive, but something isn’t right.')}, {'summary': Value(literal:'学院au，学生会长三好学生盾私底下是学园stony论坛的开车大手，理工学科全能天才铁私底下是学园stony论坛的常客，全文的车是Steve开车的内容…… 我实在不行了，我好想自恋一下……')}, {'summary': Value(literal:""Just some random baby fluff about the Stony Peter Superfamily. Steve Rogers (a.k.a. Captain America) is married to Tony Stark (a.k.a. Iron Man) and decide to adopt a recently orphaned baby Peter Parker (future Spiderman). I do not own these characters, Marvel and Sony do. I pulled some ideas from other fanfics such as Je t'aime à la folie and Superhusbands: The Making of a Superfamily but I mostly liked the idea of how Stony came by Peter in Steve's Birthday Present. Please forgive me if some of it looks familiar. They are just very well written."")}]"	257	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: Show me summaries of stony - Fandom stories

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT ?summary WHERE { 
?story golem:fandom ""stony - Fandom"" . 
?story golem:summary ?summary . 
}
"	"[{'summary': Value(literal:'A veces lo que uno necesita esta frente a sus propios ojos.')}, {'summary': Value(literal:'Para Steve Rogers, el matrimonio que mantenía con Anthony Stark estaba siendo un caos, por su parte él ya no desea ser parte de su vida, y para terminar con todo esa incomodidad, decide firmar los papeles de divorcio. ¿Como tomara todo esto Peter?')}, {'summary': Value(literal:'Todo fue un malentendido, lo habían juzgado mal y no le dieron la oportunidad de hablar. Ahora vagaba sólo, bajo las cálidas calles de Italia, con sus memorias revueltas y su corazoncito hecho añicos.')}, {'summary': Value(literal:'Anthony está raro, su humor ya no es el mismo y sus ánimos están por los suelos. Steve, el Alfa de la manada, estaba bastante preocupado que el único Omega este así; no es sano para él ni mucho menos para su manda. ¿Qué es lo que quieres Tony?')}, {'summary': Value(literal:'Yo estaba por lo bajo de todos, no tenía sustento y para vivir me ofrecía. No podía tener hijos y tenía una marca en mi cuello. Estaba usado y botado cruelmente.')}, {'summary': Value(literal:'Tony conspira para deshacerse de Steve... Por desgracia, Steve descubre estar perdidamente enamorado y su traición va a romperle el corazón.')}, {'summary': Value(literal:""Steve rogers has been missing the past but when it comes to him, he noticed things have changed. he's changed."")}, {'summary': Value(literal:""Tony get's low. Too low"")}, {'summary': Value(literal:""Whenever Steve has nightmares, Tony sings him to sleep even if he's halfway across the world."")}, {'summary': Value(literal:'普通内容被屏蔽，无奈之下走链接')}, {'summary': Value(literal:'无任何警示')}, {'summary': Value(literal:'产乳')}, {'summary': Value(literal:'La humanidad está al borde de la extinción, una amenaza insuperable esta venciendo lentamente a todos los “héroes” que quedan… pero cuando se cree que toda esperanza ha muerto, el primer vengador es encontrado por el joven Tony Stark. Gracias a este encuentro ¿la humanidad tendrá una oportunidad? ¿Qué podrá aprender un hombre de los años 40’s en un futuro incierto? ¡¿Qué podrá enseñarle un adolescente con demasiadas responsabilidades?')}, {'summary': Value(literal:'Lo que no vimos en la película Heroes United: IronMan & Captain America de Marvel. El capitán América es dorrotado por Hydra ante los incrédulos ojos de IronMan, pero las cosas no van a ser tan sencillas como para captar al capitán y esperar que su compañero no haga nada más que mirar. Gran sorpresa se ha de llevar el multimillonario al encontrarse con Steve portando otro traje y obedeciendo órdenes de Hydra. Trabajo para el Special Stony Challenge Multiverse')}, {'summary': Value(literal:'Steve se ve atrapado en una dimensión desconocida donde el amor y el instinto de supervivencia serán lo único que le mantenga a flote en ese viaje a la deriva. Adaptación Stony del cómic. 💕')}, {'summary': Value(literal:'Steve Rogers es dueño de una gran empresa, reconocida a nivel mundial. Siendo un hombre serio, de buen porte y con mucha dedicación a su trabajo, piensa que es una pérdida de tiempo dedicar su atención a otras cuestiones. A pesar de ello, muy en lo profundo de su corazón, sueña con algún día tener hijos y formar su propia familia. Sin embargo, para obtenerla, tendrá que encontrar a quien se atreva a vivir junto a él, la aventura más grande de sus vidas: fingir un  matrimonio consumado. ¿Logrará Steve cumplir su más grande deseo?')}, {'summary': Value(literal:'Shot basado en una foto de TuSecreto')}, {'summary': Value(literal:'Tony era un doncel excepcional y eso solo lo hacia más irresistible AllxTony Stony')}, {'summary': Value(literal:'¿ Y si un teléfono roto fuera lo único que te queda de aquel a quien amaste? ¿Lo repararías? ¿O repararías tu orgullo el cual lo dejo ir? ¿Podrías arreglarlo?')}, {'summary': Value(literal:'Después de la guerra Civil todo cambio. Los Vengadores jamás volvieron a ser los mismos de antes. Steve jamás volvió a ver a Tony, aún cuando lo buscaba incansablemente, su esperanza se fue desvaneciendo con los años, todo había terminado... Hasta que aquel pequeño niño de cuatro años y grandes ojos azules pronunció dos palabras: ""Soy Peter, Peter Stark""')}, {'summary': Value(literal:'None')}, {'summary': Value(literal:'盾铁联文之第六章 pwp Nc17 ID：阿恋_')}, {'summary': Value(literal:'没关系，来日方长。')}, {'summary': Value(literal:""Tony était bourré et Steve, surprotecteur. Autrement dit, nuit de folie à l'horizon ! Ceci est la traduction d'un OS de Olivier_Mira, dont vous pouvez trouver la version originale sur ce même site. Beta-lectrice : Angel."")}, {'summary': Value(literal:""Steve and Tony are in the lab. Loki is an asshole. What happens next? SMUT THAT'S WHAT [read. I suck at summaries :)]"")}, {'summary': Value(literal:""In an alternative universe, Tony Stark and Steve Rogers have a complicated relationship. Between sadness and joy, here are 10 short stories about them. Warning: There's no link between the different chapters."")}, {'summary': Value(literal:'Being avengers and working for a safe world was one thing, but having to work even harder to take care of the person you love most, even if the situation is unexpected, is the challenge that they did not ask for and that no one should know. Oneshot Stony, based on a commission that draws and that brought me so much trouble that it avenges me making it a magnificent story with explicit delivery and a lot, enjoy it! STONY - MPREG - YAOI - PARTO - BABY PETER - MUCH LOVE!!')}, {'summary': Value(literal:'This is my nod and written thanks unto which I hope is allowed.')}, {'summary': Value(literal:""Tony spent years coming up with a plan. Ever since he laid eyes on the great Captain America at his party a few years back, all he wanted to do was go on one date. But life's shit with all the constant missions but now he finally has a chance. Until Bucky Barnes was found."")}, {'summary': Value(literal:'In which Steve can\'t believe he might be into guys but gets aroused by the thought of Tony. ""Oh god! Tony had really bought him a computer! And it wasn\'t a cheap one. That was amazing! Steve never had owned one and really didn\'t know how this thing worked. And he definitely couldn\'t ask Tony about it, could he? "" Includes Tony watching porn with Steve, masturbating and a little bit of fluff. ;)')}, {'summary': Value(literal:""Peter Parker has way too many problems as it is, being Spider Man and the son of two of the Avengers- and now, he has to deal with a certain psycho, armed with katanas, shitty pickup lines, and loads of sarcasm, following him around during his patrols. At first, it's annoying- but he finds himself growing fond of this man, Deadpool- the only person who doesn't treat him like he's made of glass all the time, the only person who takes him seriously, and the only person he feels he can trust. Peter finds himself slowly letting Pool into his everyday life, forming a fragile and unstable bond between the two of them, as they try to navigate the struggles of disapproving parents, depression, and the struggle of being a freak."")}, {'summary': Value(literal:'Tony walks in on Steve during a work out. Smut ensues.')}, {'summary': Value(literal:""Steve Rogers can't help himself from falling in love with the great Tony Stark. It was one thing to flirt with a man, but to be completely and utterly in love with him? Now that was something different."")}, {'summary': Value(literal:""Tony and Steve get in an argument... I just realized I should change this to M for character death, it used to be T..  I know it's sort of cliche but I feel like it keeps them in character the best way possible."")}, {'summary': Value(literal:'Tony and Steve meet Peters girlfriend, Gwen, for the first time. Awkward family moments ensue and lots of fluff is to be expected.')}, {'summary': Value(literal:'The Avengers have a night in- what better thing to do than sing? Tony starts to sing to a blushing Steve, but eventually he warms up to it.  ~SongFic for the songs ""Marvin Gaye"" by Charlie Puth ft. Meghan Trainor and ""Stay With Me"" by Sam Smith')}, {'summary': Value(literal:""Tony becomes determined to help Steve's nightmares go away"")}, {'summary': Value(literal:""Slice of life for Peter Parker. Some eventual Peter x Tony. I don't own any of these characters. If you are not aware of the glory that is the Marvel universe you need to crawl back under your rock."")}, {'summary': Value(literal:'Tony Stark is your average rich smart boy but what lies beneath the surface? How will the sudden change of working with ""The Steve Rodgers?"" I DO NOT OWN THESE CHARACTERS NOR DO I CLAM I DO. ALL CREDIT GOES TO MARVEL')}, {'summary': Value(literal:'Tony Stark is your average rich smart boy but what lies beneath the surface? How will the sudden change of working with ""The Steve Rodgers?"" I DO NOT OWN THESE CHARACTERS NOR DO I CLAM I DO. ALL CREDIT GOES TO MARVEL')}, {'summary': Value(literal:'14年托尼老背锅的感想，灵感来自黄浦江伐开心')}, {'summary': Value(literal:'复联四之后钢铁侠二以前，队长穿越到过去见到了还不认识自己的托尼。')}, {'summary': Value(literal:'None')}, {'summary': Value(literal:'None')}, {'summary': Value(literal:'五年故事系列，我真的算是没有想好题目23333，先放上来吧，有HE和BE 主要时间段是无限战争后的五年 托尼没有和佩珀结婚，也没有摩根小可爱（但是我真的好爱她）')}, {'summary': Value(literal:'Loki escapó de la prisión donde Thanos lo encerró, luego de haber fingido su muerte, asustado y en pánico usa su ultimo vestigio de poder para llegar al único lugar donde recuerda alguien lo puede proteger: La torre Vengadores, en la tierra. Sin embargo no llega en el mejor momento, Tony se encuentra en un estado lamentable, dado al trago y lider de un equipo fragmentado, se encuentra con el dios de las mentiras, y contrario a su mejor juicio lo lleva a casa. Ambos comienzan un proceso extraño de recuperación, dónde comparten experiencias, tragos, bromas y promesas, por que tanto Tony como Loky saben que esa tregua es temporal y tarde o temprano tendrán que separarse.')}, {'summary': Value(literal:'Steve quería más, mucho más de lo que él le daba, pero exigir era algo fuera de su personalidad. Entonces, simplemente hizo puchero y dijo aquello prohibido. -No lo entiendes...')}, {'summary': Value(literal:'Johnny y Peter son dos niños de 11 años que se conocen en un campamento, en un principio se impresionan de lo iguales que sus rostros son, luego descubren que son gemelos y hacen un plan para volver a unir a sus padres. ----------------------- Novela basada en la pelicula ""Parent Trap"" o ""Juego de Gemelas"". Los gemelos son protagonizados por Peter Parker y Johnny Storm (Los 4 fantásticos). Aca: Peter Stark y Johnny Rogers.')}, {'summary': Value(literal:'Steve vuela directamente a Nueva York al enterarse por Natasha que Tony, su expareja, guardaba un secreto que casi pierde en siberia, el dolor de fallarle a alguien a quien juraste amar es un golpe mas helado que el hielo de donde salio. Tony lleva entre sus brazos aquella promesa de un futuro mejor. ¿podrá Steve recuperar su futuro?')}, {'summary': Value(literal:'El hijo de Howard Stark, Tony, es el omega más más deseado de la empresa, pero nadie se le acerca por ser el hijo del jefe. Todo cambiará el día en el que Howard tenga que salir de la ciudad y deje a su hijo a merced de los Alfas de la compañía, cuando pasa por un celo. Steve Rogers siempre intentó alejarse del hijo de su amigo, era demasiado joven para él, casi un adolescente. Pero cuando el olor dulzón llegue hacia a él, le es inevitable ir a su encuentro, junto a todos los alfas del lugar.')}, {'summary': Value(literal:'Steve found out that it\'s Tony\'s birthday. He needed to do something extra special for his ""friend"".')}, {'summary': Value(literal:'Tony đã chưa bao giờ giỏi trong việc níu giữ những điều tốt đẹp.')}, {'summary': Value(literal:'""Giờ em nên cho rằng họ đã phát triển một số loại thuốc cho bệnh này đi thôi."" Gã nói đùa. Pepper bắn cho gã một cái lườm nghiêm khắc khi cô xoay những cánh hoa màu hồng dính đầy máu trên tay, nhuộm vài vệt đỏ lên bộ móng được cắt tỉa hoàn hảo của cô. ""Chuyện này không đùa được đâu, Tony."" ""Oh, anh không biết đấy, Pep à. Có lẽ đó là trò đùa lớn nhất trong cả cuộc đời anh. Và em biết anh đã nói đùa rất nhiều mà."" Gã nói thêm, nhổ một cánh hoa ra khỏi kẽ răng. ""Bị giết chết bởi tình yêu. Chà, trong trường hợp này, là tình yêu đơn phương. Thật mỉa mai làm sao.""')}, {'summary': Value(literal:'Vấn về về tổn thương não vĩnh viễn chính là nó thường không liên quan đến sự phức tạp của hôn nhân.')}, {'summary': Value(literal:'Sau ba năm vui vẻ, Học viện Avengers sắp kết thúc một cách bất ngờ, và Tony dường như vẫn không thể nói cho Steve biết cậu cảm thấy thế nào về anh. Thời gian không còn nhiều, và cậu rất cần một lời khuyên. Và ai tốt hơn để đưa ra nó hơn chính bản thân? Nghĩa đen! Chuyển sang đa vũ trụ để được giúp đỡ, cậu gặp Tony Stark, một phiên bản buồn hơn, người không chỉ nói cho cậu biết những gì cậu cần nghe, mà còn cho cậu biết một lý thuyết thú vị, có tính tương tác: Steve Rogers và Tony Stark, trong các lần lặp vô hạn của họ, định mệnh với nhau trong mọi vũ trụ?')}, {'summary': Value(literal:'Tony chẳng biết nên cảm thấy thế nào khi Steve đã chứng minh, một cách thật tàn nhẫn, rằng tất cả tình yêu giữa họ là đích thực.')}, {'summary': Value(literal:'Steve está embarazado y Tony se ha propuesto ser el mejor padre del mundo, sin embargo no contará con que existe un fetiche que será su perdición.')}, {'summary': Value(literal:'Steve Rogers es un Alpha poco convencional, pues al no sentirse atraído por los Omegas, un Beta peculiar ha robado su corazón pero, ¿eso será suficiente para llevar a cabo una unión?')}, {'summary': Value(literal:'None')}, {'summary': Value(literal:'""And here I thought the worst kind of parental problems were preventing your kids from sneaking out to parties... Not to stop fucking robberies under a mask as he sweeps from building to building."" Another one where Peter is Spiderman. Tony is overprotective. Steve is tired. And the Avengers are underattack.')}, {'summary': Value(literal:""Steve knows the man he loves, something's going on with Tony, he can't quite figure it out, but he can't ignore the fact that Tony's wearing a long sleeved sweater when they are at 113 °F"")}, {'summary': Value(literal:""While working in his lab, Tony Stark finds out that the reality he's currently living in is completely false. With his dear boyfriend, Steve Rogers and the Avengers, he's going to track the person who created their reality to put everything back in order."")}, {'summary': Value(literal:'Steve and Tony are finally moved into their new house as newlyweds!')}, {'summary': Value(literal:'Steve and Tony have a big fight. Happy ending.')}, {'summary': Value(literal:'Retired works until further notice. **Extreme editing in this set of works. You have been warned.')}, {'summary': Value(literal:'Tony gets drunk. Steve gets overprotective. Trouble ensues.')}, {'summary': Value(literal:""Clint and Bruce attend Tony's costume party. Things get pretty rowdy between a certain pair..."")}, {'summary': Value(literal:'None')}, {'summary': Value(literal:'Después de ser dolorosamente derrotados por Ultrón, Los Vengadores son recibidos por la familia de Clint para recuperar fuerzas y armar el plan de respuesta y ataque. Sin embargo, parece que el descanso será difícil para Tony y Steve, quienes tendrán que compartir habitación, obligándolos a hablar y aclarar su complicada y confusa relación.')}, {'summary': Value(literal:'What do you do when you run into your boss who is also scrolling through the appalling gay porn selection at the DVD store on a Friday night? You go home with him and together you make your own, of course.')}, {'summary': Value(literal:'Merry Christmas for The Rogers family :)')}, {'summary': Value(literal:'Porque el amor lo puedes encontrar en el momento menos inesperado. ""Tᴏᴅᴏ ʟᴏ ǫᴜᴇ ʜᴀɢᴏ, ʟᴏ ʜᴀɢᴏ ᴘᴏʀ ᴛɪ.""')}, {'summary': Value(literal:'Un mundo dividido en donde angeles y demonios no pueden unirse. Un rey en cada bando, descendientes de cada uno. Y los sucesores al trono viven un pecado que seria cruelmente castigado si alguien se entera. Pero, existe algo llamado amor, que va mucho más allá de cualquier ley.')}, {'summary': Value(literal:""Christmas doesn't feel the same, especially for one Peter Stark-Rogers...and it only starts with the ham.  (Post-Divorce fic)"")}, {'summary': Value(literal:'Tony Stark, the smart-ass playboy. Steve Rogers, the embodiment of justice and kindness himself. Unbelievable couple, right?')}, {'summary': Value(literal:'1970肉，加A4结局改写。HE 盾铁Forever。')}, {'summary': Value(literal:""Kissing Steve Rogers was one of the best decisions of Tony Stark's life. To be fair, he was a genius, so maybe the scales were tipped in his favor when it came to smart decision-making. Still, genius or not, he wasn't above patting himself on the back for recognizing a good thing when he saw it. And Steve was a very good thing. In a life that might generously be characterized as morally ambiguous, this was the one thing Tony could point to and say, without hesitation, “This is good.” Of course, that thought was immediately followed by, “Do not fuck this up.” Tony's old man balls were most definitely a factor, in his mind anyway, for potentially fucking this up."")}, {'summary': Value(literal:'Tonight was the night. Steve had been planning this for weeks and today was the perfect day. He’d wrote down what he was going to say rehearsed them in front of the mirror not caring how stupid he looked he needed this to be perfect. This is what he had been waiting to do ever since he woke up from his frozen sleep.')}, {'summary': Value(literal:""In the course of a very busy forty-eight hours, Tony Stark managed to enlist the scientific mind of Bruce Banner on a top secret project involving an anti-aging serum for his balls; admit and act on his attraction to America's superhero sweetheart himself, Steve Rogers, aka Captain America; and get caught in an altogether compromising position with his science bro.  It was all perfectly innocent, if a little weird.  He just had to find a way to explain it to Steve, and salvage their barely-begun relationship before it all went to hell."")}, {'summary': Value(literal:'Happy Hogan has some advice for his billionaire boss Toni Stark after a sour meeting with the Avengers who remain after the snap from the Infinity Gauntlet. The advice concerns a certain Captain America, who is still at odds with Toni. Will the scorned Iron Woman heed Happy’s advice, and take advantage of the opportunity presented to her?')}, {'summary': Value(literal:""Three years ago, if someone had told him that he would've been going shot for verbal shot with (an ALIVE) Captain America, getting ready to fight an alien army and one sassy God, and almost get sucked into a wormhole, he would have asked what they were smoking and if they'd share. But now, after everything with the Madarian and Extremis, and Steve and Natasha's little adventure in DC, it seemed like Ultron was the final candle on a really fucked up cake. But they survived- together. And somewhere along the way Tony Stark and Steve Rogers fell for one another; in the midst of all the craziness, they worked. But who could have imagined that before the war in New York, a young woman was fighting for her life, only to be saved by a serum that many thought to be lost.  When Natasha brings this young woman into the two Avenger's lives, hearts are broken and mended, and lives are on the line. **This story is on temporary hiatus. Not sure when it'll be picked back up!**"")}, {'summary': Value(literal:'Steve sacrifices himself to protect his team, but he doesn’t die. The serum lasts long enough to keep him alive but then fades, reverting Steve back to his pre-serum state. Steve once again finds himself out of place and questions his new role in The Avengers')}, {'summary': Value(literal:'Everything about them happened in seconds. Their first meeting was quick, with Tony landing next to the Captain, each man giving a curt nod and name in greeting. Their argument on the hellicarrier took mere seconds to escalate. Until Steve was goading Tony into putting on the suit and going a few rounds and Tony not so subtly reminding Steve that he wasn’t afraid to hit an old man. It was only seconds of staring at Tony on that New York City Street, his arc reactor dark, no rise and fall of his chest, for Steve to know that inside the tin can, was a good man. Then Ultron happened, and it took seconds for their world to change, seconds for Steve to throw his shield at Tony and for the billionaire to send a repulsor blast back. They went from laughing and relaxing to standing on an edge thousands of feet above solid ground. And now…now everything’s changed. And all it took was a combination of seconds; of decisions made, actions performed and words spoken that they couldn’t get back. Just a few ticks of the clock for their world to shatter. It’ll take more than that to make things right.')}, {'summary': Value(literal:""Apparently, he's not enjoying the feeling of being solitude."")}, {'summary': Value(literal:'Donde Peter busca al famoso mercernario para darle un pequeño trabajo')}, {'summary': Value(literal:'Después de  ver a Peter esfumarse, ahora Tony tiene que lidiar con la idea de que Steve haya tenido el mismo destino. Él junto con Nébula regresarán a la tierra para averiguar si la persona que tanto ama Tony está a salvo... | Drabble (Historia Corta)')}, {'summary': Value(literal:'Un shot basado en una foto que vi en el grupo Stony Shippers')}, {'summary': Value(literal:'Stony Like I can - Sam Smith')}, {'summary': Value(literal:'Tony spots Steve looking miserable at a party and helps him enjoy himself a little bit.')}, {'summary': Value(literal:""Ok, so I haven't written in the fandom in a while so forgive me for any mistakes in grammar, spelling, punctuation lol all of it. Had to take care of my mental, emotional, and physical health. In doing that, this came about. I hope you enjoy and again, forgive me for any and all mistakes, they are mine. As always, I do NOT own any rights to anything Marvel..This work is simply a work of fiction and only for entertainment :)"")}, {'summary': Value(literal:'The clock was ticking. And then, black.')}, {'summary': Value(literal:'Tony is dead. Its only been a year.')}, {'summary': Value(literal:'Captain Antonio Stark changes his mind on a certain Captain.')}, {'summary': Value(literal:'When Pepper takes Tony to the dentist for a procedure, he tells her an insane secret while hopped up on the wacky gas.')}, {'summary': Value(literal:'Peter enlists the help of his Uncle Clint when he decides that he wants to make the perfect costume to make his dads proud.')}, {'summary': Value(literal:'Steve lists all the best first times throughout his relationship with Tony, and parenthood with Peter in his first few years.')}, {'summary': Value(literal:'It’s Steve and Tony’s 3 month anniversary, and Steve has planned something special.')}, {'summary': Value(literal:'Tony contemplates death and admires the galaxy as he waits for his oxygen to run out. A blurb inspired by the Endgame Trailer.')}, {'summary': Value(literal:""[POST END GAME] Tony Stark came back to life as a super soldier after a successful experiment. It's been 10 years since Steve Rogers went into hiding after the funeral, nobody except Bucky know where he is. After several years of peace, it's finally coming to an end. Will the both meet each other and rewrite earth's fate, or are they destined to be star crossed lovers?"")}, {'summary': Value(literal:""Steve stared around him, his unfamiliar environment. “How’d I get here?” He asked himself aloud. As his eyes gradually accustomed to light, he realised that he was in Tony’s room. ----------------------------------------------------------------------------------------------------- So Steve wakes up in Tony's bed and learns quite a lot about his fellow Avengers. Cue Cute fluff and angst x"")}, {'summary': Value(literal:'""And here I thought the worst kind of parental problems were preventing your kids from sneaking out to parties... Not to stop fucking robberies under a mask as he sweeps from building to building."" Another one where Peter is Spiderman. Tony is overprotective. Steve is tired. And the Avengers are underattack.')}, {'summary': Value(literal:'""How the hell did they get here?"" It was a running theme in both men\'s minds. It popped up when they were arguing within the first few hours they\'d met, when Steve watched Tony\'s house fall into the Pacific, when Tony watched Steve fall from the sky, when Sokovia was hovering above the Earth. But somewhere in all that falling, they fell for one another, and that phrase turned into: ""Thank God we made it here."" It followed in the moments after their first kiss, in soft caresses against skin, in their first time coming together. But Steve has found that phrase entering his mind again. And he knows that all too soon, they\'re going to say something or do something that cannot be taken back. And there will be no where to go, but forward. Tony on the other hand, is hoping to stop all of this before it gets to that point. I have watched both trailers more times than I can count. This movie has broken me and it\'s not even out yet. I am a Stony shipper, and this is my way of writing out those feelings and making sense of the scenes we\'ve been given. And hopefully, keeping the bloodshed and broken hearts to a minimum.')}, {'summary': Value(literal:'Young Peter Parker is having some trouble sleeping, and his father Tony tries to comfort him the only way he knows how.')}, {'summary': Value(literal:""Peter Parker says his first words, much to his fathers' joy. AKA a huge ball of FLUFF :)"")}, {'summary': Value(literal:""As Steve and Tony prepare for their new son's arrival home from the orphanage, Tony begins to have doubts on whether or not he will be a good father."")}, {'summary': Value(literal:'Who would think that Steve would tell his feelings to Tony and what he thought was impossible to happen?')}, {'summary': Value(literal:'Before Steve had time to move, he felt a quick and sharp poke on his ass, causing his spine to tingle and his face to morph into a red glowing haze as he blushed. Tony was already laying there waiting. With his arms poised, and smiling at full capacity…')}, {'summary': Value(literal:'Agent Romanoff talks about Capt Rogers.')}, {'summary': Value(literal:""Papa Steve insists that twelve year old Ava drinks too much coffee, and forbids her from drinking it. Ava provides a bizarre defense. Another addition to a series of shorts involving Steve Rogers and Tony Stark with a daughter. Will hopefully lead up to a longer fic that follows Ava's transition into Iron Woman. Series can be read in any order."")}, {'summary': Value(literal:'Steve is once again believed to be dead, which leaves Tony as his child’s guardian. Years later Steve is found alive, but something isn’t right.')}, {'summary': Value(literal:'学院au，学生会长三好学生盾私底下是学园stony论坛的开车大手，理工学科全能天才铁私底下是学园stony论坛的常客，全文的车是Steve开车的内容…… 我实在不行了，我好想自恋一下……')}, {'summary': Value(literal:""Just some random baby fluff about the Stony Peter Superfamily. Steve Rogers (a.k.a. Captain America) is married to Tony Stark (a.k.a. Iron Man) and decide to adopt a recently orphaned baby Peter Parker (future Spiderman). I do not own these characters, Marvel and Sony do. I pulled some ideas from other fanfics such as Je t'aime à la folie and Superhusbands: The Making of a Superfamily but I mostly liked the idea of how Stony came by Peter in Steve's Birthday Present. Please forgive me if some of it looks familiar. They are just very well written."")}]"	0	1	1
258	258	en	Show me summaries of Il Volo stories	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?summary WHERE {  ?story golem:fandom ""Il Volo"" . ?story golem:summary ?summary . }"	"[{'summary': Value(literal:'這是一個奇幻故事，傳說生物賽任(Seirḗn)看上了Gianluca，並試圖奪取他的聲音。 *本作中Ignazio的女友叫麗莎，Gianluca的叫愛蓮娜，Piero老大哥的叫瑪麗娜 *純屬虛構，若有雷同...哈，我還真希望有雷同')}, {'summary': Value(literal:""ad un matrimonio di un'amica in comune Alessandra incontra, dopo tanto tempo, Piero Barone (suo vecchio migliore amico di infanzia).... in compagnia di due suoi amici, Ignazio Boschetto e Gianluca Ginoble. Alla festa lei conosce subito Gianluca. Diventeranno amici? Nascerà fra i due qualcosa?"")}, {'summary': Value(literal:'Frank se siente infeliz desde que Gerard le puso punto final a ese amor prohibido que mantenían a escondidas (desde que eran adolescentes) al enterarse que Frank se iba a casar con Jamia, y aun así se arrepiente de haberlo perdido, porque según él, Gerard era el verdadero motivo para ser feliz. Tanto Anna como Sophia se preocupan por él, y con el paso del tiempo, tanto ellas como sus sobrinas Cherry y Lily, y la única amiga de las gemelas Bandit (hija de Gerard) se dan cuenta de que Frank aún sigue enamorado de Gerard, y las dos amigas harán lo posible para tratar de ayudarlo y harán lo posible para que vuelva a ser feliz. ¿Frank será lo suficiente para recuperar su felicidad?')}, {'summary': Value(literal:'Alright whose bright idea was it to not just to put the modern Eurovision participants in country separated houses on the same block,but put them in the same group chat as personified nations?')}, {'summary': Value(literal:""Ad Agrabah la vita è molto dura. C'è chi riesce a sopravvivere e chi invece per farlo deve rubare. Piero è uno di quelli, un ragazzo povero che non fa altro che sognare di essere felice e ricco. Un giorno si scontra - proprio letteralmente - con il principe Ignazio che si trovava al mercato per puro caso, per distrarsi dalla vita di palazzo... E si ritrova poi ad aiutare quel poveretto. Ma continuerà il giovane principe ad aiutare Piero? Che cosa accadrà? Piero riuscirà a compiere il suo sogno?"")}, {'summary': Value(literal:'Where Ignazio is bored, Piero is homesick and some cheering up is needed :D')}, {'summary': Value(literal:'It had been like this for a while now. They never had enough time, but being on tour, you simply had to take the time you could get and be happy with it..')}, {'summary': Value(literal:'Mafia!AU or *When there is literally no content of Il Volo so you say fuck it and write some yourself*')}, {'summary': Value(literal:""CONTROL Verb (used with object), controlled, controlling. 1. to exercise restraint or direction over; dominate; command. 2. to hold in check; curb: [ to control a horse; to control one's emotions ]"")}, {'summary': Value(literal:'""Truth be told, he wasn’t sure if it came out right, but one quick glance at Michele told him that at least their manager was pleased with him. So.. mission accomplished? Lying was a sin. None of this sat well with him at all.. ""')}, {'summary': Value(literal:'Piero gets sick in the middle of the night. Ignazio is there to help him.')}, {'summary': Value(literal:'A little fantasy on what may happen after mixing cold Italian wine and hot Italian men. I was just trying to write a sketch on Ignazio/OFC but then mr. Ginoble suddenly decided to join... :D (Disclaimer: English is not my native language!)')}, {'summary': Value(literal:'Some sing to be admired, some just to be heard. He sang to forget.')}, {'summary': Value(literal:""Prompt from anon: can you please do a piero/Ignazio Drabble were Ignazio is insanely in love with piero and piero finds out, and then he starts growing feelings for Ignazio and Ignazio thinks he's not in love with him but he pity's him."")}, {'summary': Value(literal:""Ignazio has temporal amnesia, and forgets about everything except his early years at the age of 16. Will he remember his daughter and husband before it's too late? Found out inside... Drabble series."")}, {'summary': Value(literal:'Prompt:  where Piero and Ignazio kiss for the first time... Pignazio Drabble')}, {'summary': Value(literal:'Prompt : Piero and Ignazio are in a relationship. And Piero wants to come out to everyone including their best friend and band mate ,gianluca. And Ignazio just want to be with Piero and have a good time.')}, {'summary': Value(literal:""Prompt: they are drunk and fooling around with each other and Ignazio unexpectedly gave something to Piero Te voglio bene assaje ma tanto tanto bene sai è una catena ormai. che scioglie il sangue dint'e vene sai..."")}, {'summary': Value(literal:""Sometimes you don't know if reality and dream are part of the same story. Where one ends and other begins, and in what side you are."")}, {'summary': Value(literal:'""Ricordami quando guarderai con gli occhi del passato, quando niente tornerà più come è stato e sarò ormai invisibile per te."" Based on il volo song ricordami...')}, {'summary': Value(literal:""Can you please do a Drabble or OS were ignazio has an accident and now has temporal amnesia and he doesn't remember him dating piero, until the very end and then make up"")}, {'summary': Value(literal:'a situation where Piè ask Igna why he was so close to him during the concert few hours before their discussion ^^')}, {'summary': Value(literal:""could you write an OS where Piero completely zooms out, like in that video where Gian 'wakes' him up, but Ignazio does it by, idk, feeding him cake or something?"")}, {'summary': Value(literal:""hey can you please do a pignazio One shot were its their daughter's bday and they call her up the stage ,in one of their concerts,and sing to her a song ,of your choice"")}, {'summary': Value(literal:""one where Igna et Piero are really close to each other in backstage during a Gianluca's solo"")}, {'summary': Value(literal:'None')}, {'summary': Value(literal:""OS were ignazio can't stop grabbing piero's ass lol"")}, {'summary': Value(literal:'Piero is depressed because of his recent break up with Ignazio and only tequila shots will cheer him up.')}, {'summary': Value(literal:'a one shot were Piero tries to make Ignazio jealous But he fails to do so and igna laughs at him?')}, {'summary': Value(literal:'were Piero looses his glasses and he has to wear contacts for the rest of the day and he feels ugly and insecure without his red glasses but ignazio is there to tell him the opposite ❤️')}, {'summary': Value(literal:'Prompt: can you please do a cheesy Drabble with pignazio at latinamericanmusicawards')}, {'summary': Value(literal:'A game gone wrong. Pretty cliche but why the hell not?')}, {'summary': Value(literal:'一些寫文時的筆記與和Il volo相關的記事。 #Gianazio')}]"	258	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: Show me summaries of Il Volo stories

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?summary WHERE { 
?story golem:title ""Il Volo"" . 
?story golem:summary ?summary . 
}
"	[]	0	0	1
259	259	en	What is the average word count?	prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT (AVG(?words) as ?avg_words) WHERE { ?story golem:numberOfWords ?words . }	[{'avg_words': Value(typed-literal:'8180.185545444649115')}]	259	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: What is the average word count?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/>  
SELECT AVG(?wordCount) AS ?average_word_count WHERE { 
?story golem:numberOfWords ?wordCount . }
"	[{'average_word_count': Value(typed-literal:'8180.185545444649115')}]	0	1	1
261	261	en	How many stories are tagged as fire slugs?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT COUNT(DISTINCT ?story) as ?stories WHERE { ?story golem:keyword ""fire slugs"" . }"	[{'stories': Value(typed-literal:'1')}]	261	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: How many stories are tagged as fire slugs?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT COUNT(?story) AS ?number_of_stories WHERE { 
?story golem:keyword ""fire slugs"" . 
}
"	[{'number_of_stories': Value(typed-literal:'1')}]	0	1	1
262	262	en	How many stories are tagged as Dark-ish?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT COUNT(DISTINCT ?story) as ?stories WHERE { ?story golem:keyword ""Dark-ish"" . }"	[{'stories': Value(typed-literal:'94')}]	262	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: How many stories are tagged as Dark-ish?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT COUNT(?story) AS ?number_of_stories WHERE { 
?story golem:keyword ""Dark-ish"" .
}
"	[{'number_of_stories': Value(typed-literal:'94')}]	0	1	1
263	263	en	How many stories are tagged as Swimmer Harry Potter?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT COUNT(DISTINCT ?story) as ?stories WHERE { ?story golem:keyword ""Swimmer Harry Potter"" . }"	[{'stories': Value(typed-literal:'1')}]	263	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: How many stories are tagged as Swimmer Harry Potter?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT COUNT(?story) AS ?number_of_stories WHERE { 
?story golem:keyword ""Swimmer Harry Potter"" .
}
"	[{'number_of_stories': Value(typed-literal:'1')}]	0	1	1
264	264	en	How many stories are tagged as Dark Remus Lupin?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT COUNT(DISTINCT ?story) as ?stories WHERE { ?story golem:keyword ""Dark Remus Lupin"" . }"	[{'stories': Value(typed-literal:'56')}]	264	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: How many stories are tagged as Dark Remus Lupin?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT COUNT(?story) AS ?count WHERE { 
  ?story golem:characters ""Dark Remus Lupin"" . 
}
"	[{'count': Value(typed-literal:'0')}]	0	1	1
265	265	en	How many stories are tagged as maybe bestiality??	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT COUNT(DISTINCT ?story) as ?stories WHERE { ?story golem:keyword ""maybe bestiality?"" . }"	[{'stories': Value(typed-literal:'2')}]	265	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: How many stories are tagged as maybe bestiality??

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT COUNT(?story) AS ?number_of_stories WHERE { 
?story golem:keyword ""maybe bestiality"" . }
"	[{'number_of_stories': Value(typed-literal:'0')}]	0	1	1
266	266	en	How many stories are tagged as theyre soooo cute in this one omg?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT COUNT(DISTINCT ?story) as ?stories WHERE { ?story golem:keyword ""theyre soooo cute in this one omg"" . }"	[{'stories': Value(typed-literal:'1')}]	266	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: How many stories are tagged as theyre soooo cute in this one omg?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT COUNT(?story) AS ?number_of_stories WHERE { 
?story golem:keyword ""theyre soooo cute"" .
}
"	[{'number_of_stories': Value(typed-literal:'0')}]	0	1	1
267	267	en	How many stories are tagged as criminal minds preferences?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT COUNT(DISTINCT ?story) as ?stories WHERE { ?story golem:keyword ""criminal minds preferences"" . }"	[{'stories': Value(typed-literal:'1')}]	267	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: How many stories are tagged as criminal minds preferences?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT COUNT(?story) AS ?number_of_stories WHERE { 
?story golem:keyword ""criminal minds preferences"" .
}
"	[{'number_of_stories': Value(typed-literal:'1')}]	0	1	1
268	268	en	How many stories are tagged as NaNoWriMo?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT COUNT(DISTINCT ?story) as ?stories WHERE { ?story golem:keyword ""NaNoWriMo"" . }"	[{'stories': Value(typed-literal:'1048')}]	268	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: How many stories are tagged as NaNoWriMo?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT COUNT(?story) AS ?number_of_stories WHERE { 
?story golem:keyword ""NaNoWriMo"" . 
}
"	[{'number_of_stories': Value(typed-literal:'1048')}]	0	1	1
269	269	en	How many stories are tagged as Crying During Sex?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT COUNT(DISTINCT ?story) as ?stories WHERE { ?story golem:keyword ""Crying During Sex"" . }"	[{'stories': Value(typed-literal:'2107')}]	269	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: How many stories are tagged as Crying During Sex?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT COUNT(?story) AS ?number_of_stories WHERE { 
?story golem:keyword ""Crying During Sex"" . 
}
"	[{'number_of_stories': Value(typed-literal:'2107')}]	0	1	1
270	270	en	How many stories are tagged as Spell cast to help populate the wizarding world?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT COUNT(DISTINCT ?story) as ?stories WHERE { ?story golem:keyword ""Spell cast to help populate the wizarding world"" . }"	[{'stories': Value(typed-literal:'1')}]	270	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: How many stories are tagged as Spell cast to help populate the wizarding world?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT COUNT(?story) AS ?number_of_stories WHERE { 
?story golem:keyword ""Spell cast to help populate the wizarding world"" . 
}
"	[{'number_of_stories': Value(typed-literal:'1')}]	0	1	1
271	271	en	How many authors are represented in the data?	prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT (COUNT(DISTINCT ?author) as ?authors) WHERE { ?story golem:author ?author . }	[{'authors': Value(typed-literal:'1234209')}]	271	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: How many authors are represented in the data?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT COUNT(DISTINCT ?author) AS ?number_of_authors WHERE { 
?story gc:creator ?author .
}
"	[{'number_of_authors': Value(typed-literal:'0')}]	0	1	1
272	272	en	How many stories are there on Archive of Our Own?	prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT COUNT(DISTINCT ?story) as ?stories WHERE { ?story golem:story_id ?id }	[{'stories': Value(typed-literal:'8546450')}]	272	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: How many stories are there on Archive of Our Own?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT COUNT(?story) AS ?total_stories WHERE { 
?story a golem:Story .
}
"	[{'total_stories': Value(typed-literal:'0')}]	0	1	1
274	274	en	What is the average number of comments for stories from The Professionals (TV 2020)?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""The Professionals (TV 2020)"" . ?story golem:numberOfComments ?comments . }"	[{'avg_number_of_comments': Value(typed-literal:'1.5')}]	274	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: What is the average number of comments for stories from The Professionals (TV 2020)?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { 
?story golem:fandom ""The Professionals (TV 2020)"" . 
?story golem:numberOfComments ?comments . 
}
"	[{'avg_number_of_comments': Value(typed-literal:'1.5')}]	1	0	0
275	275	en	What is the average number of comments for stories from #Original Characters - Freeform?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""#Original Characters - Freeform"" . ?story golem:numberOfComments ?comments . }"	[{'avg_number_of_comments': Value(typed-literal:'0')}]	275	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: What is the average number of comments for stories from #Original Characters - Freeform?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { 
?story golem:keyword ""#Original Characters - Freeform"" . 
?story golem:numberOfComments ?comments . }
"	[{}]	0	1	1
276	276	en	What is the average number of comments for stories from 易朔?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""易朔"" . ?story golem:numberOfComments ?comments . }"	[{'avg_number_of_comments': Value(typed-literal:'0')}]	276	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: What is the average number of comments for stories from 易朔?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { 
    ?story dc:creator ""易朔"" . 
    ?story golem:numberOfComments ?comments . 
}
"	[{}]	0	1	1
277	277	en	What is the average number of comments for stories from 并不想打tag?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""并不想打tag"" . ?story golem:numberOfComments ?comments . }"	[{'avg_number_of_comments': Value(typed-literal:'0')}]	277	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: What is the average number of comments for stories from 并不想打tag?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { 
    ?story golem:fandom ""并不想打tag"" . 
    ?story golem:numberOfComments ?comments . 
}
"	[{'avg_number_of_comments': Value(typed-literal:'0')}]	1	0	0
278	278	en	What is the average number of comments for stories from Glory of the Special Forces (TV)?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Glory of the Special Forces (TV)"" . ?story golem:numberOfComments ?comments . }"	[{'avg_number_of_comments': Value(typed-literal:'0')}]	278	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from 并不想打tag?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""并不想打tag"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: What is the average number of comments for stories from Glory of the Special Forces (TV)?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { 
?story golem:fandom ""Glory of the Special Forces (TV)"" . 
?story golem:numberOfComments ?comments . 
}
"	[{'avg_number_of_comments': Value(typed-literal:'0')}]	1	0	0
279	279	en	What is the average number of comments for stories from DS - Fandom?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""DS - Fandom"" . ?story golem:numberOfComments ?comments . }"	[{'avg_number_of_comments': Value(typed-literal:'0')}]	279	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from 并不想打tag?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""并不想打tag"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: What is the average number of comments for stories from DS - Fandom?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT AVG(?comments) AS ?avg_number_of_comments 
WHERE { 
  ?story golem:fandom ""DS - Fandom"" . 
  ?story golem:numberOfComments ?comments . 
}
"	[{'avg_number_of_comments': Value(typed-literal:'0')}]	1	0	0
280	280	en	What is the average number of comments for stories from Carlos Rey Emperador (TV)?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Carlos Rey Emperador (TV)"" . ?story golem:numberOfComments ?comments . }"	[{'avg_number_of_comments': Value(typed-literal:'10168.8')}]	280	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from 并不想打tag?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""并不想打tag"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: What is the average number of comments for stories from Carlos Rey Emperador (TV)?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { 
    ?story golem:fandom ""Carlos Rey Emperador (TV)"" . 
    ?story golem:numberOfComments ?comments . 
}
"	[{'avg_number_of_comments': Value(typed-literal:'10168.8')}]	1	0	0
281	281	en	What is the average number of comments for stories from 长安三怪探?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""长安三怪探"" . ?story golem:numberOfComments ?comments . }"	[{'avg_number_of_comments': Value(typed-literal:'0')}]	281	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from 并不想打tag?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""并不想打tag"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: What is the average number of comments for stories from 长安三怪探?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { 
    ?story golem:fandom ""长安三怪探"" . 
    ?story golem:numberOfComments ?comments . 
}
"	[{'avg_number_of_comments': Value(typed-literal:'0')}]	1	0	0
282	282	en	What is the average number of comments for stories from IdentityV第五人格?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""IdentityV第五人格"" . ?story golem:numberOfComments ?comments . }"	[{'avg_number_of_comments': Value(typed-literal:'1')}]	282	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from 并不想打tag?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""并不想打tag"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: What is the average number of comments for stories from IdentityV第五人格?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { 
    ?story golem:fandom ""IdentityV第五人格"" . 
    ?story golem:numberOfComments ?comments . 
}
"	[{'avg_number_of_comments': Value(typed-literal:'1')}]	1	0	0
283	283	en	What is the average number of comments for stories from 宣娜 - Fandom?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""宣娜 - Fandom"" . ?story golem:numberOfComments ?comments . }"	[{'avg_number_of_comments': Value(typed-literal:'0.4')}]	283	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from 并不想打tag?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""并不想打tag"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: What is the average number of comments for stories from 宣娜 - Fandom?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { 
?story golem:fandom ""宣娜 - Fandom"" . 
?story golem:numberOfComments ?comments . 
}
"	[{'avg_number_of_comments': Value(typed-literal:'0.4')}]	1	0	0
317	317	en	How many stories are tagged as explicit?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT COUNT(?story) as ?explicit_stories WHERE { ?story golem:rating ""Explicit"" . }"	[{'explicit_stories': Value(typed-literal:'1432006')}]	317	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from 并不想打tag?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""并不想打tag"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: How many stories are tagged as explicit?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT COUNT(?story) AS ?number_of_explicit_stories WHERE { 
  ?story golem:contentWarning ""explicit"" .
}
"	[{'number_of_explicit_stories': Value(typed-literal:'0')}]	0	1	1
318	318	en	How much feedback do stories usually get?	prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?kudos) AS ?average_number_of_kudos AVG(?comments) AS ?average_number_of_comments WHERE { ?story golem:numberOfKudos ?kudos . ?story golem:numberOfComments ?comments . }	[{'average_number_of_kudos': Value(typed-literal:'152.312722451740173'), 'average_number_of_comments': Value(typed-literal:'25.433749929559123')}]	318	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: How many chapters does Guardian of Hogwarts have?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Guardian of Hogwarts"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: What is the average number of comments for stories from 并不想打tag?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""并不想打tag"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: Is the story Luna Lovegood and the Chamber of Innocence completed?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Luna Lovegood and the Chamber of Innocence"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: How much feedback do stories usually get?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT AVG(?feedback) AS ?avg_number_of_feedback WHERE {
    ?story a golem:Story .
    ?story golem:numberOfComments ?comments .
    ?story golem:rating ?rating .
    BIND(COALESCE((?comments + ?rating), 0) AS ?feedback)
}
"	[{}]	0	1	1
320	320	es	Muéstrame historias del fandom 老师（06）	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?title WHERE {  ?story golem:fandom ""老师（06）"" . ?story golem:title ?title . }"	[{'title': Value(literal:'老师（06）')}]	320	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene Family is what you make it?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Family is what you make it"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia No Hero?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""No Hero"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: Muéstrame historias del fandom 老师（06）

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?story WHERE { 
  ?story golem:fandom ""老师（06）"" . 
}
"	[{'story': Value(uri:'https://golemlab.eu/graph/21420655')}]	0	1	1
321	321	es	Muéstrame historias del fandom Led Zeppelin	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?title WHERE {  ?story golem:fandom ""Led Zeppelin"" . ?story golem:title ?title . }"	"[{'title': Value(literal:""Since I've been leaving you"")}, {'title': Value(literal:'the Thief')}, {'title': Value(literal:'【一个鸡脖特的脑洞】Night Flight')}, {'title': Value(literal:'In Your Time of Dying 临终时刻')}, {'title': Value(literal:'Just Right')}, {'title': Value(literal:'Licks')}, {'title': Value(literal:""That's all it ever really was"")}, {'title': Value(literal:'退烧')}, {'title': Value(literal:'普兰渡众生')}, {'title': Value(literal:'有狐')}, {'title': Value(literal:'玫瑰葬')}, {'title': Value(literal:'硝烟蝴蝶')}, {'title': Value(literal:'药物')}, {'title': Value(literal:'让他降落')}, {'title': Value(literal:'冰冷热带鱼')}, {'title': Value(literal:'爱是弱点')}, {'title': Value(literal:'Jimbert Fables')}, {'title': Value(literal:'Gift')}, {'title': Value(literal:'地尽头')}, {'title': Value(literal:'纸月亮')}, {'title': Value(literal:'Money is the anthem of success')}, {'title': Value(literal:'Wide as a Landscape')}, {'title': Value(literal:'贪嗔痴')}, {'title': Value(literal:'妈妹拉郎')}, {'title': Value(literal:'螳螂之吻')}, {'title': Value(literal:'长尾')}, {'title': Value(literal:'Till the Heaven')}, {'title': Value(literal:'【熊/页普兰】皆大欢喜')}, {'title': Value(literal:'皮囊之下')}, {'title': Value(literal:'相见恨早')}, {'title': Value(literal:'他那失败的恋情')}, {'title': Value(literal:'在地球的暗面')}, {'title': Value(literal:'《Hang the DJ 绞死DJ》')}, {'title': Value(literal:'我的青春恋爱喜剧果然有问题')}, {'title': Value(literal:'没有标题')}, {'title': Value(literal:'桃色蛋白质')}, {'title': Value(literal:'比海更深')}, {'title': Value(literal:'Any Rags')}, {'title': Value(literal:'Title What Title')}, {'title': Value(literal:'Going Backwards')}, {'title': Value(literal:'三位客人')}, {'title': Value(literal:'Good Dream Bad Dream')}, {'title': Value(literal:'一个标题')}, {'title': Value(literal:'熊酱')}, {'title': Value(literal:'请临彭恰泽')}, {'title': Value(literal:'Сломанное крыло «золотого бога»')}, {'title': Value(literal:'Золото и Ладан')}, {'title': Value(literal:'Five Years Gone')}, {'title': Value(literal:'Цвет')}, {'title': Value(literal:'Приглючилось')}, {'title': Value(literal:'Gallows Pole')}, {'title': Value(literal:'THE GANG SOLVES A MYSTERY')}, {'title': Value(literal:'THE GANG CELEBRATES A BIRTHDAY')}, {'title': Value(literal:'L’Albatros')}, {'title': Value(literal:'玛拉弥亚')}, {'title': Value(literal:'阿波罗')}, {'title': Value(literal:'水')}, {'title': Value(literal:'以下克上')}, {'title': Value(literal:'Dark Paradise')}, {'title': Value(literal:'City of Thieves')}, {'title': Value(literal:'Drumming Song')}, {'title': Value(literal:'附骨之疽')}, {'title': Value(literal:'雀')}, {'title': Value(literal:'齿')}, {'title': Value(literal:'Rocks Off')}, {'title': Value(literal:'Tea For One')}, {'title': Value(literal:'魔法故障事件')}, {'title': Value(literal:'微暗的火')}, {'title': Value(literal:""L'éclair"")}, {'title': Value(literal:'千禧曼波')}, {'title': Value(literal:'宵夜')}, {'title': Value(literal:'魂断一七八九')}, {'title': Value(literal:""[Jimbert]Nobody's fault but mine"")}, {'title': Value(literal:'事隔经年')}, {'title': Value(literal:'荒原')}, {'title': Value(literal:'编外爱人')}, {'title': Value(literal:'My darling clementine')}, {'title': Value(literal:'逗号')}, {'title': Value(literal:'酒吧短谈（不完全记录）')}, {'title': Value(literal:'灯塔里究竟有什么？')}, {'title': Value(literal:'珍珠耳环')}, {'title': Value(literal:'远渡重洋')}, {'title': Value(literal:'THE GANG PREVENTS AN ASSASSINATION')}, {'title': Value(literal:'Blondie')}, {'title': Value(literal:""Writer's Month Series 2022"")}, {'title': Value(literal:'Texts/Messages I Have That Could Totally Be Fan Fiction')}, {'title': Value(literal:'The GC')}, {'title': Value(literal:'No One Loves Me, and Neither Do I')}, {'title': Value(literal:'Fire with Water')}, {'title': Value(literal:'Whole Lotta Love')}, {'title': Value(literal:'The May Queen')}, {'title': Value(literal:""For What It's Worth"")}, {'title': Value(literal:'More Than A Feeling')}, {'title': Value(literal:'Tumblr Collection 2')}, {'title': Value(literal:'horror edition')}, {'title': Value(literal:'I Wanna Be Your Backdoor Man')}, {'title': Value(literal:""I'm Just Looking For An Angel With a Broken Wing"")}, {'title': Value(literal:'Midnight Confessions')}, {'title': Value(literal:""You're Dropping Clues (Like You've Got Any)"")}, {'title': Value(literal:'For The Longest Time')}, {'title': Value(literal:'Cover Version')}, {'title': Value(literal:'Falls The Shadow')}, {'title': Value(literal:'Teddy Bear')}, {'title': Value(literal:'Puppy Love')}, {'title': Value(literal:'Nimble')}, {'title': Value(literal:'Tender')}, {'title': Value(literal:'Good Times Bad Times')}, {'title': Value(literal:'Revelations')}, {'title': Value(literal:'All Your Fault')}, {'title': Value(literal:'Ten (Plus) Years Gone')}, {'title': Value(literal:'Page/Plant One Shots')}, {'title': Value(literal:'Frankincense and Gold')}, {'title': Value(literal:'In Which Bonzo is Far Too Soft')}, {'title': Value(literal:'Once Upon a Party')}, {'title': Value(literal:'Rain')}, {'title': Value(literal:'Check the Calendar')}, {'title': Value(literal:'Haunted')}, {'title': Value(literal:'Stormtrooper')}, {'title': Value(literal:'Laundromat')}, {'title': Value(literal:'No Rest For the Wicked')}, {'title': Value(literal:'will you sing to me?')}, {'title': Value(literal:'Caught You Smiling At Me')}, {'title': Value(literal:'Light and Shade')}, {'title': Value(literal:'Whipcrack')}, {'title': Value(literal:'Long Black Wavy Hair')}, {'title': Value(literal:'Dazed and Confused')}, {'title': Value(literal:'Peaceful')}, {'title': Value(literal:'Music Is')}, {'title': Value(literal:'The Weight of the World')}, {'title': Value(literal:'The Rain Song')}, {'title': Value(literal:'Kashmir')}, {'title': Value(literal:'No Matter What')}, {'title': Value(literal:'Jimbert Fluff-Fest')}, {'title': Value(literal:'Hold my heart')}, {'title': Value(literal:'Letters')}, {'title': Value(literal:'Lechery & Lace')}, {'title': Value(literal:'An Open Book in an Unfamiliar Tongue')}, {'title': Value(literal:'Cimmerian Shade')}, {'title': Value(literal:'Three of Hearts')}, {'title': Value(literal:'Double Exposure')}, {'title': Value(literal:'Spellbound')}, {'title': Value(literal:'Sail Away, Leave Today')}, {'title': Value(literal:'Honeybee')}, {'title': Value(literal:'One Shot: Down by the Poolside')}, {'title': Value(literal:'Loose and Easy (4-part story, completed)')}, {'title': Value(literal:'Dawn')}, {'title': Value(literal:'One Shot: A New Start')}, {'title': Value(literal:'One Shot: Always Prepared')}, {'title': Value(literal:'One Shot: Encore')}, {'title': Value(literal:'One Shot: After the Lightning')}, {'title': Value(literal:'Friends at the Bar (Multichapter story...unfinished)')}, {'title': Value(literal:'Baby I can work all night...')}, {'title': Value(literal:'A Wild Ride')}, {'title': Value(literal:'La petite morte')}, {'title': Value(literal:'One Shot: Dancing Days')}, {'title': Value(literal:'One Shot: Teasing the Lion')}, {'title': Value(literal:'One Shot: Crown and Consort')}, {'title': Value(literal:'One Shot: Signed and Sealed')}, {'title': Value(literal:'One Shot: the Ceaseless Roar')}, {'title': Value(literal:'One Shot: Forget Me Not')}, {'title': Value(literal:'One Shot: All Better')}, {'title': Value(literal:'One Shot: Lonely Morning Blues')}, {'title': Value(literal:'One Shot: Nurses Do It Better')}, {'title': Value(literal:'One Shot: Unmasked Desire')}, {'title': Value(literal:'One Shot: Steal Away')}, {'title': Value(literal:'One Shot: Tequila Sunrise')}, {'title': Value(literal:'Everything He Wants (3-part story, completed)')}, {'title': Value(literal:'Nothing to Lose (Multichapter story...unfinished)')}, {'title': Value(literal:'One Shot: Good Cop, Bad Cop')}, {'title': Value(literal:'The Nymph of Bron-Yr-Aur')}, {'title': Value(literal:'The Song Remains The Same')}, {'title': Value(literal:'Relax')}, {'title': Value(literal:'One Shot: First Christmas')}, {'title': Value(literal:'One Shot: Medicine Woman')}, {'title': Value(literal:'Good Times, Bad Times')}, {'title': Value(literal:'One Shot: One Night Boyfriend')}, {'title': Value(literal:'Saturday Night Fever')}, {'title': Value(literal:'One Shot: Moonlight Over Essakane')}, {'title': Value(literal:'Home')}, {'title': Value(literal:'What Friends Are For')}, {'title': Value(literal:'Unforgettable')}, {'title': Value(literal:'let me fix your overdrive')}, {'title': Value(literal:'One Shot: A Little TLC')}, {'title': Value(literal:'Eye of the Storm (Multichapter story, ongoing)')}, {'title': Value(literal:'Good Times')}, {'title': Value(literal:'morning scene')}, {'title': Value(literal:'Hallowed')}, {'title': Value(literal:'Shallow')}, {'title': Value(literal:'Tangerine')}, {'title': Value(literal:'Twice')}, {'title': Value(literal:'Room 714')}, {'title': Value(literal:'In Orbit Always')}, {'title': Value(literal:'Pink Orchids')}, {'title': Value(literal:'take 54')}, {'title': Value(literal:'All that Glitters is Gold')}, {'title': Value(literal:'One Shot: Crawling King Snake')}, {'title': Value(literal:""What's In A Name?"")}, {'title': Value(literal:'One Shot: A Lion, Domesticated')}, {'title': Value(literal:'Snapshot With Cigarettes and Morning Light')}, {'title': Value(literal:'Telling my self its not as hard as it seems')}, {'title': Value(literal:'All Grown Up (Multichapter story...unfinished)')}, {'title': Value(literal:'That’s The Way')}, {'title': Value(literal:'One Shot: Duet')}, {'title': Value(literal:'Sunday Bloody Sunday')}, {'title': Value(literal:'Homecoming')}, {'title': Value(literal:'One Shot: Rampage at the Riot House')}, {'title': Value(literal:'Communication Breakdown (or) Say Hai')}, {'title': Value(literal:'Goal')}, {'title': Value(literal:""Can't keep away"")}, {'title': Value(literal:'Cleared Up')}, {'title': Value(literal:'The road we choose is always right (Bron-Yr-Aur Drabbles)')}, {'title': Value(literal:'Push Push')}, {'title': Value(literal:'Biology')}, {'title': Value(literal:'Dust')}, {'title': Value(literal:'One Shot: House Call')}, {'title': Value(literal:""One Shot: Guess Who's Back"")}, {'title': Value(literal:'‘Pack’ and other drabbles')}, {'title': Value(literal:'Sensory Overload: aka X Marks the Spot')}, {'title': Value(literal:'You Shook Me')}, {'title': Value(literal:'Halfway There')}, {'title': Value(literal:'Amaya & Jimmy~')}, {'title': Value(literal:'1971 Hawaii - Pele Olianna & Jimmy')}, {'title': Value(literal:'1973 - Jimmy & Yuridia')}, {'title': Value(literal:'1973 - Safira & Jimmy Snippet~')}, {'title': Value(literal:'1973 - Safi & Jimmy Snippet')}, {'title': Value(literal:'A Quick One - Unfinished')}, {'title': Value(literal:'all those things the best I can')}, {'title': Value(literal:'and in the core of every star')}, {'title': Value(literal:'Babe, I’m Gonna Top You')}, {'title': Value(literal:'Faithful Angel')}, {'title': Value(literal:'Birthday (1969)')}, {'title': Value(literal:'How to write Erotica.')}, {'title': Value(literal:'Condition')}, {'title': Value(literal:'Air')}, {'title': Value(literal:'Me-Time')}, {'title': Value(literal:'Salt, Sweat & Snow~')}, {'title': Value(literal:'School Days')}, {'title': Value(literal:'Body Language')}, {'title': Value(literal:'Like you mean it')}, {'title': Value(literal:'One Shot: Midnight Druid Snack')}, {'title': Value(literal:'Like Family')}, {'title': Value(literal:'One Shot: Cozying Up')}, {'title': Value(literal:'Black Cat')}, {'title': Value(literal:'Did I Let You Know')}, {'title': Value(literal:'Yours')}, {'title': Value(literal:'Sink')}, {'title': Value(literal:""Don't stop ever"")}, {'title': Value(literal:'Only')}, {'title': Value(literal:'Eros and Psyche')}, {'title': Value(literal:'Jimbert Oneshots')}, {'title': Value(literal:'Reminiscence')}, {'title': Value(literal:'Birthday (1970)')}, {'title': Value(literal:'Deceiving Looks (multichapter, ongoing)')}, {'title': Value(literal:'One Shot: Sea of Love')}, {'title': Value(literal:'Drowning In You')}, {'title': Value(literal:""Bron-Yr-Aur 1970 (That's the Way)"")}, {'title': Value(literal:'O span of youth!')}, {'title': Value(literal:'The Great Unnamed -Book 1')}, {'title': Value(literal:'Codependency')}, {'title': Value(literal:'Gimmie Danger')}, {'title': Value(literal:""You Feel Good (Though You Shouldn't)"")}, {'title': Value(literal:'Delicate')}, {'title': Value(literal:'Cold Beer')}, {'title': Value(literal:'Snow Angel - Yuletide Special')}, {'title': Value(literal:'Mistletoe')}, {'title': Value(literal:'Clasp')}, {'title': Value(literal:'One Shot: A Very Tropical Christmas')}, {'title': Value(literal:'Night Flight')}, {'title': Value(literal:'My Love, My Darling')}, {'title': Value(literal:'When the levee breaks')}, {'title': Value(literal:'Daisy')}, {'title': Value(literal:'Glass beads')}, {'title': Value(literal:'Dragon on the back')}, {'title': Value(literal:'Silk and Velvet')}, {'title': Value(literal:'Valentine’s day special')}, {'title': Value(literal:'Used To Like')}, {'title': Value(literal:'Breaking News')}, {'title': Value(literal:'1+1')}, {'title': Value(literal:'Riff')}, {'title': Value(literal:'The Flower')}, {'title': Value(literal:'Idle Work')}, {'title': Value(literal:'I Think I Might be Sinking')}, {'title': Value(literal:'The boy next door')}, {'title': Value(literal:'Heartbreaker')}, {'title': Value(literal:'Moonwalkers')}, {'title': Value(literal:'Between My Sheets')}, {'title': Value(literal:'Open Up, Precious or The Herring in the Back Alley')}, {'title': Value(literal:'Only One')}, {'title': Value(literal:'Gonna Give You My Love')}, {'title': Value(literal:'Jimmy Page Session Man ~*~  A Fan Fiction ~*~')}, {'title': Value(literal:'Warmth and Comfort')}, {'title': Value(literal:'Lines')}, {'title': Value(literal:'Picking It Up')}, {'title': Value(literal:'Io Pan')}, {'title': Value(literal:'Just This Once')}, {'title': Value(literal:'The Elf and the Wizard')}, {'title': Value(literal:'Fall In Love With Me')}, {'title': Value(literal:'I Know The Way (short Jimbert drabbles)')}, {'title': Value(literal:'A Case of You')}, {'title': Value(literal:'Surrender at Discretion')}, {'title': Value(literal:'Dazed & Confused')}, {'title': Value(literal:'Zep Writing Prompt Challenge 03')}, {'title': Value(literal:'Noir')}, {'title': Value(literal:""So They Say It's Your Birthday"")}, {'title': Value(literal:'Gimme Danger, Little Stranger')}, {'title': Value(literal:'Diary')}, {'title': Value(literal:'Strings')}, {'title': Value(literal:'But I Belong to You')}, {'title': Value(literal:'Zep Writing Prompt Challenge 04 | Candles and Cake')}, {'title': Value(literal:'Back Tracking')}, {'title': Value(literal:'Ever Onward')}, {'title': Value(literal:'Surrender - a songfic')}, {'title': Value(literal:'Keep')}, {'title': Value(literal:'Every You and Every Me')}, {'title': Value(literal:'Somebody To Love')}, {'title': Value(literal:'Long Wavy Black Hair')}, {'title': Value(literal:'I Know Him')}, {'title': Value(literal:'Led Zeppelin drabbles')}, {'title': Value(literal:'Place A Spell On Me')}, {'title': Value(literal:'Bel- Pre Declining')}, {'title': Value(literal:'Hot Dogs - short jimbert sex stories')}, {'title': Value(literal:'Rock Me')}, {'title': Value(literal:'take my body home')}, {'title': Value(literal:'The Time Jimmy Messed With Magic')}, {'title': Value(literal:'Custard Pie')}, {'title': Value(literal:'Eraser')}, {'title': Value(literal:'Graphic')}, {'title': Value(literal:'Trip the Darkness')}, {'title': Value(literal:'in which Roger is definitely a disaster bi')}, {'title': Value(literal:'the start of something new')}, {'title': Value(literal:'the art of preparing to buy a christmas tree')}, {'title': Value(literal:'when i loved you')}, {'title': Value(literal:'whose idea was this?')}, {'title': Value(literal:""it's not the same when you're gone"")}, {'title': Value(literal:""altruism's a good look for you"")}, {'title': Value(literal:'miss you tonight')}, {'title': Value(literal:'going to california')}, {'title': Value(literal:""glad you're here with me"")}, {'title': Value(literal:""someone's got to look after you"")}, {'title': Value(literal:'the little things')}, {'title': Value(literal:""i'll be alright"")}, {'title': Value(literal:'Snakeskin')}, {'title': Value(literal:'Zep Writing Prompt Challenge 10 | Back of a Van')}, {'title': Value(literal:'Like a Leaf Is To a Tree')}, {'title': Value(literal:'4 AM')}, {'title': Value(literal:'Could You?')}, {'title': Value(literal:'Lost Boy')}, {'title': Value(literal:'I finally found Serenity')}, {'title': Value(literal:'Black Dog')}, {'title': Value(literal:'On this day')}, {'title': Value(literal:'Thunderthief')}, {'title': Value(literal:'Classic Rock Elves Drabbles')}, {'title': Value(literal:'Latter Days')}, {'title': Value(literal:'Achilles Last Stand')}, {'title': Value(literal:'Zep Writing Prompt Challenge 13 | The Scent of Turpentine')}, {'title': Value(literal:'Lost Boy Volume 3')}, {'title': Value(literal:'Oysters')}, {'title': Value(literal:'Four Symbols')}, {'title': Value(literal:'Houses of the Holy')}, {'title': Value(literal:'400 Follower Celebration')}, {'title': Value(literal:'UnLedded')}, {'title': Value(literal:'Light, shade and dusk')}, {'title': Value(literal:'Latter Days Volume 2')}, {'title': Value(literal:'Take Me For a Little While')}, {'title': Value(literal:'White Summer')}, {'title': Value(literal:'The Soul Remains the Same')}, {'title': Value(literal:'25 Hours A Day')}, {'title': Value(literal:'Presence: A sequel to Gonna Give You My Love')}, {'title': Value(literal:'Calling To You')}, {'title': Value(literal:'The Moroccan Diaries')}, {'title': Value(literal:'Healing Waters')}, {'title': Value(literal:'When Giants Walked the Earth')}, {'title': Value(literal:'Boing!')}, {'title': Value(literal:'The Gang Investigates Ted Cruz: Bonus Content')}, {'title': Value(literal:'Ever Truly - and other drabbles')}, {'title': Value(literal:'August prompts')}, {'title': Value(literal:'Summer of Love 2020 Lockdown Drabbles')}, {'title': Value(literal:'Insert Page Break')}, {'title': Value(literal:'Steal Away')}, {'title': Value(literal:'Presence')}, {'title': Value(literal:'In Plain Sight')}, {'title': Value(literal:'if he only had a heart')}, {'title': Value(literal:'Stone Soup')}, {'title': Value(literal:'For Your Life')}, {'title': Value(literal:'All of my love')}, {'title': Value(literal:'Just a phone call')}, {'title': Value(literal:'Berfday')}, {'title': Value(literal:'Sanguine (Robert Plant NSFW One-Shot)')}, {'title': Value(literal:'Wings of maybe, nest in our soul')}, {'title': Value(literal:'Latter Days 3')}, {'title': Value(literal:'Fundamentally Yours - House Of Riot for Writers Month 2020')}, {'title': Value(literal:'Driven (1972)')}, {'title': Value(literal:'Zeptember a month of Love 2020')}, {'title': Value(literal:'Tiny flowers')}, {'title': Value(literal:'Zeptember 2020')}, {'title': Value(literal:'Tell Me What to Swallow')}, {'title': Value(literal:'Pace')}, {'title': Value(literal:'Walk This World')}, {'title': Value(literal:'Fever')}, {'title': Value(literal:'In The Light')}, {'title': Value(literal:'Renounced')}, {'title': Value(literal:""Lover's Moon"")}, {'title': Value(literal:'Full Moon')}, {'title': Value(literal:'Obvious and Oblivious')}, {'title': Value(literal:'Heart')}, {'title': Value(literal:'The Stage')}, {'title': Value(literal:'Sunkiss')}, {'title': Value(literal:""can't keep doing this"")}, {'title': Value(literal:'Stay')}, {'title': Value(literal:'Touch me like I ask')}, {'title': Value(literal:'Queen of Light')}, {'title': Value(literal:'October Tarot card based fic')}, {'title': Value(literal:'A Peculiar Vacation')}, {'title': Value(literal:'The Creation of Page St James')}, {'title': Value(literal:'Interesting')}, {'title': Value(literal:'Doors')}, {'title': Value(literal:'Look Sharp')}, {'title': Value(literal:'Zeppelin Requests')}, {'title': Value(literal:'The Ending of Another Era')}, {'title': Value(literal:'Gonna Make You Sweat')}, {'title': Value(literal:'Lots of people talk')}, {'title': Value(literal:'The Hunter')}, {'title': Value(literal:'Springtime of Your Loving')}, {'title': Value(literal:'Heart Of Tin')}, {'title': Value(literal:'Sleeping Dogs')}, {'title': Value(literal:'Nearing the Close of the First Era')}, {'title': Value(literal:'The Mage and his Lion')}, {'title': Value(literal:'Moby Dick')}, {'title': Value(literal:'That’s the Way')}, {'title': Value(literal:'Black Mountain Side')}, {'title': Value(literal:'Mr Page')}, {'title': Value(literal:'Live')}, {'title': Value(literal:'High School')}, {'title': Value(literal:'Getting the Girls Together')}, {'title': Value(literal:'The Song Remains The Same: Fantasies Abound')}, {'title': Value(literal:'Spring Symphony No. I & II')}, {'title': Value(literal:'Bring It on Home')}, {'title': Value(literal:'Girl')}, {'title': Value(literal:'Man with a child in his eyes')}, {'title': Value(literal:'Special Interests')}, {'title': Value(literal:'Unknown Journey')}, {'title': Value(literal:'Be My Mirror')}, {'title': Value(literal:'If Only')}, {'title': Value(literal:'In a New York Minute')}, {'title': Value(literal:'""Digging Deep(er)"" or “Holy Shit, Jimbert Is Real?!”- The Meta')}, {'title': Value(literal:'Complimentary Insults')}, {'title': Value(literal:'Take me for a little while')}, {'title': Value(literal:'Dry')}, {'title': Value(literal:'Close')}, {'title': Value(literal:'Masterpiece')}, {'title': Value(literal:'Another Mile')}, {'title': Value(literal:'A Brief History of Mistletoe')}, {'title': Value(literal:'The part nobody sees')}, {'title': Value(literal:'Joyeux Noel')}, {'title': Value(literal:'Who You Love')}, {'title': Value(literal:'Down By the Seaside')}, {'title': Value(literal:'See / Amber')}, {'title': Value(literal:'Happy')}, {'title': Value(literal:'The Eastern Glow')}, {'title': Value(literal:""Since I've Been Loving You - a Led Zeppelin fanfic (x reader)"")}, {'title': Value(literal:'golden slumbers')}, {'title': Value(literal:'A little flame, a special place')}, {'title': Value(literal:'The Brightest Sunflower')}, {'title': Value(literal:'Tarot Major Arcana')}, {'title': Value(literal:'Demons')}, {'title': Value(literal:'Led Zeppelin in Art')}, {'title': Value(literal:'In your hand')}, {'title': Value(literal:'Air Conditioner')}, {'title': Value(literal:'Down to the Sea')}, {'title': Value(literal:'Prompts of love')}, {'title': Value(literal:'Cut My Lip')}, {'title': Value(literal:'What Is and What Should Never Be')}, {'title': Value(literal:'Your Hand in Mine, We Walk the Miles')}, {'title': Value(literal:'Best')}, {'title': Value(literal:'Haunted Dreams at Headley Grange')}, {'title': Value(literal:'The Lonely Hours')}, {'title': Value(literal:'Da Hell Just Happened?')}, {'title': Value(literal:'Sometime with a Star')}, {'title': Value(literal:'What The Hell? Part Deux')}, {'title': Value(literal:'Try a little')}, {'title': Value(literal:'Some Things Do Need Saying')}, {'title': Value(literal:'Polaris')}, {'title': Value(literal:'Dragged up / Still Here - 1973')}, {'title': Value(literal:'Dead End Friends')}, {'title': Value(literal:'Morning Dew')}, {'title': Value(literal:'Inkling')}, {'title': Value(literal:'Moonlight')}, {'title': Value(literal:'Princeps Servientes')}, {'title': Value(literal:'Wonderful One')}, {'title': Value(literal:'The Question')}, {'title': Value(literal:'The Answer')}, {'title': Value(literal:'The Sun, The Moon and The Dawn')}, {'title': Value(literal:'Milk')}, {'title': Value(literal:'That Confounded Bridge(town)')}, {'title': Value(literal:'Apprentices to the Gods and Masters of Music')}, {'title': Value(literal:'Young Boy Blues')}, {'title': Value(literal:'Self Control')}, {'title': Value(literal:'Some night terrors')}, {'title': Value(literal:'Winter')}, {'title': Value(literal:'Song of the Siren')}, {'title': Value(literal:'Rasgado')}, {'title': Value(literal:'Untitled')}, {'title': Value(literal:'Superstitious')}, {'title': Value(literal:'Page St. James Picspam (Part 1)')}, {'title': Value(literal:'The Catcher in The Rye')}, {'title': Value(literal:'Stanzas')}, {'title': Value(literal:'Roberta Plant Picspam (Part 1)')}, {'title': Value(literal:'Wildflowers')}, {'title': Value(literal:'seer')}, {'title': Value(literal:'Predictable')}, {'title': Value(literal:'The Story of the Golden Goose')}, {'title': Value(literal:'Page St. James Picspam (Part 2)')}, {'title': Value(literal:'Stairway to Heaven')}, {'title': Value(literal:'Sweet')}, {'title': Value(literal:'Magnets')}, {'title': Value(literal:'ours is the fire')}, {'title': Value(literal:'an adventure in sensory overload')}, {'title': Value(literal:'Tea For No One')}, {'title': Value(literal:'writers month 2021')}, {'title': Value(literal:'77')}, {'title': Value(literal:'Since I Been Loving You')}, {'title': Value(literal:'Annealed')}, {'title': Value(literal:'Garlic bread.')}, {'title': Value(literal:'What If Terry Reid Joined Led Zeppelin?')}, {'title': Value(literal:'Celebration Day')}, {'title': Value(literal:'That Sore Love Affair of His')}, {'title': Value(literal:'Durum')}, {'title': Value(literal:'wild, or that time of the month')}, {'title': Value(literal:'a bunch of zep shit no one but me asked for')}, {'title': Value(literal:'Achilles last stand')}, {'title': Value(literal:'Zeptember 21')}, {'title': Value(literal:'Roberta Plant Picspam (Part 2)')}, {'title': Value(literal:'What Is, And What Should Never Be')}, {'title': Value(literal:'la tua cantante')}, {'title': Value(literal:'Headley Grange, 1974')}, {'title': Value(literal:'Bron-yr-aur, 1972')}, {'title': Value(literal:'London, May, 1975, 4:30 PM')}, {'title': Value(literal:'Minneapolis, 1973')}, {'title': Value(literal:'New Orleans, 1973')}, {'title': Value(literal:'Morocco, June 29, 1975, 9:06 a.m.')}, {'title': Value(literal:'Baltimore, 1975')}, {'title': Value(literal:'Rock and Roll')}, {'title': Value(literal:'Gimbal')}, {'title': Value(literal:'Good Girl')}, {'title': Value(literal:'Friends')}, {'title': Value(literal:'New York, February, 1975')}, {'title': Value(literal:'Tower House, August, 1974')}, {'title': Value(literal:'Los Angeles, January, 1973')}, {'title': Value(literal:'To Be a Rock & Not To Roll')}, {'title': Value(literal:'Somewhere in America, March, 1975')}, {'title': Value(literal:'Led Zeppelin Fanart/Fan Art/Fan-Art (Volume 1-I)')}, {'title': Value(literal:'The Black Dragonne')}, {'title': Value(literal:'Conjugate')}, {'title': Value(literal:'Castro District, San Francisco, June 1973')}, {'title': Value(literal:'Torremolinos, July, 1975')}, {'title': Value(literal:'gold rush')}, {'title': Value(literal:'born in sin')}, {'title': Value(literal:""When You've Worn Away the Cure"")}, {'title': Value(literal:'Bon Mots')}, {'title': Value(literal:'I Wanna Be Around (You!)')}, {'title': Value(literal:'Two by Two eyes of blue')}, {'title': Value(literal:'Look To The West')}, {'title': Value(literal:'The Sweetest Taboo')}, {'title': Value(literal:'La Vie En Rose')}, {'title': Value(literal:'The Definitive Article')}, {'title': Value(literal:""Everything's Fine Under Heaven"")}, {'title': Value(literal:'The Detour')}, {'title': Value(literal:'Lover Man')}, {'title': Value(literal:'Seeds Sown In Summer: Nascence~...')}, {'title': Value(literal:'taste')}, {'title': Value(literal:'Mero, Dominica, February 1975')}, {'title': Value(literal:'A Long-Expected Afterparty')}, {'title': Value(literal:'Worth A 1000 Words')}, {'title': Value(literal:'Golden Muse')}, {'title': Value(literal:'For All the Gods Departed')}, {'title': Value(literal:'A night on the Starship')}, {'title': Value(literal:'In the Pale Moonlight')}, {'title': Value(literal:'Magick Tricks')}, {'title': Value(literal:'Erogenous Zones')}, {'title': Value(literal:""Won't Get Fooled Again - Part 2"")}, {'title': Value(literal:'River Thames')}, {'title': Value(literal:'Let Me Wander In Your Garden')}, {'title': Value(literal:'Lady of the Lake')}, {'title': Value(literal:'Bountiful')}, {'title': Value(literal:""If I Can't Have You"")}, {'title': Value(literal:'Naughty Girl')}, {'title': Value(literal:'Towhead')}, {'title': Value(literal:'Queens of May')}, {'title': Value(literal:'Potpurri~')}, {'title': Value(literal:'Preface Part I: 1:09 AM, January 1, 1976')}, {'title': Value(literal:'skin to skin - jimmy page x reader')}, {'title': Value(literal:'Beat Him, Cheat Him, Treat Him Bad')}, {'title': Value(literal:'Cottage Cruising')}, {'title': Value(literal:""ghostin'"")}, {'title': Value(literal:'The Divine Mr. M')}, {'title': Value(literal:'Jimmy Sakurai Picspam (The BEST Jimmy Page Tribute, Impersonator, Imitator)')}, {'title': Value(literal:'page’s pages')}, {'title': Value(literal:'Malibu, Autumn 1975')}, {'title': Value(literal:'Jimmys Promise')}, {'title': Value(literal:'presence')}, {'title': Value(literal:'The Boys Get Their Goats')}, {'title': Value(literal:'the feeling of a ghost')}, {'title': Value(literal:'The Boys Hold a Seance')}, {'title': Value(literal:'Playgrounds and Power Tools')}, {'title': Value(literal:'Spring Morning')}, {'title': Value(literal:'Page St. James Picspam (Part 3)')}, {'title': Value(literal:'How Many More Times')}, {'title': Value(literal:'South Snowdonia, Wales, May 1970')}, {'title': Value(literal:'Invocation of My Demon Lover')}, {'title': Value(literal:'Close The Door, Put Out The Light')}, {'title': Value(literal:""Snow Drives Back the Foot That's Slow"")}, {'title': Value(literal:'Reconciliation')}, {'title': Value(literal:'Golden Threads')}, {'title': Value(literal:'Diary of a Catnip Fiend')}, {'title': Value(literal:'Heart In Your Hand')}, {'title': Value(literal:'“Jimmy And I Are Close”: Seven more short episodes set in 1975')}, {'title': Value(literal:'Rock Bands One Shots')}, {'title': Value(literal:'Seasons of Emotion')}, {'title': Value(literal:'Ode')}, {'title': Value(literal:'polaroids.')}, {'title': Value(literal:'The Sun That Lights the Day')}, {'title': Value(literal:'Out On The Tiles')}, {'title': Value(literal:'Robert and Lisa Genuinely Like Each Other')}, {'title': Value(literal:""Entr'acte: To Trust A Dream"")}, {'title': Value(literal:'Over the Hills and Far Away')}, {'title': Value(literal:'I’ll Be Home For Christmas')}, {'title': Value(literal:'Writers month 22')}, {'title': Value(literal:'Norwegian Wood')}, {'title': Value(literal:'Rough Boys')}, {'title': Value(literal:'Santa Claus is back in Town')}, {'title': Value(literal:""I Want To Be With You Night And Day, Nothing Changes On New Year's Day"")}, {'title': Value(literal:'Midnight Moonlight')}, {'title': Value(literal:'Drabbles')}, {'title': Value(literal:""Daddy I Just Can't Wait"")}, {'title': Value(literal:'The Friend That I Meet In My Sleep With No Name')}, {'title': Value(literal:'Waves')}, {'title': Value(literal:'In the Skies')}, {'title': Value(literal:'Flood')}, {'title': Value(literal:'Wild')}, {'title': Value(literal:'You and I')}, {'title': Value(literal:'Dancing Days')}, {'title': Value(literal:'What should never be')}, {'title': Value(literal:'Hidden')}, {'title': Value(literal:'On Jealousy')}, {'title': Value(literal:'Angel')}, {'title': Value(literal:'Souled Out On You')}, {'title': Value(literal:'Threes and Sevens')}, {'title': Value(literal:'Take a Bow')}, {'title': Value(literal:'Cliché (but oh so true)')}, {'title': Value(literal:'A Couple of Hours with St. Valentine')}, {'title': Value(literal:'With You There is no Wrong')}, {'title': Value(literal:""Jimmy's Promise part 2"")}, {'title': Value(literal:'The Taking of James')}, {'title': Value(literal:'Obviously Obvious')}, {'title': Value(literal:'Sleep Driven')}, {'title': Value(literal:'Art')}, {'title': Value(literal:'The Road So Far')}, {'title': Value(literal:'Transformative Before Transformative: Creativity in Tolkien and Led Zeppelin')}, {'title': Value(literal:'Night Without Stars')}, {'title': Value(literal:'Robert Plant’s Manual on Playing the Long Game')}, {'title': Value(literal:'Which Way To Go')}, {'title': Value(literal:'Lagniappe')}, {'title': Value(literal:'The Last Chance (Old Men Do It Better)')}, {'title': Value(literal:'Ten Years Gone')}, {'title': Value(literal:'The stairwell')}, {'title': Value(literal:'Nighttime noises')}, {'title': Value(literal:'Got a light?')}, {'title': Value(literal:'The Phone Call')}, {'title': Value(literal:'Check')}, {'title': Value(literal:'If It Fits It Ships!!')}, {'title': Value(literal:'The Great Continent')}, {'title': Value(literal:'Roger Daltrey’s Guide to Surviving Social Engagements')}, {'title': Value(literal:'The Hair')}, {'title': Value(literal:'Cat Of The Village')}, {'title': Value(literal:'Space Buns, More Like Curly Buns')}, {'title': Value(literal:'Expectations')}, {'title': Value(literal:'Dirty Movies')}, {'title': Value(literal:'Caught')}, {'title': Value(literal:'Lemonz, Percy, Pagey and Pangbourne')}, {'title': Value(literal:'Great Gig in the Sky')}, {'title': Value(literal:""Jimmy Page's Primer on Getting What You Want"")}, {'title': Value(literal:'Bad Boy')}, {'title': Value(literal:'樱桃香精')}, {'title': Value(literal:""NON SO COS'è MISCCHIATO A NIENTE"")}, {'title': Value(literal:'画布')}, {'title': Value(literal:'All About Jimmy Page')}, {'title': Value(literal:'鸡脖特磨剪子')}, {'title': Value(literal:'屠宰场之歌')}, {'title': Value(literal:'Inter-universal travel experiences')}, {'title': Value(literal:'Corylus Avellana')}, {'title': Value(literal:'Song-Dreams, Or, The Book of Heavy Metal')}, {'title': Value(literal:'we fly so close')}, {'title': Value(literal:""Writer's Month 2020 Stories"")}, {'title': Value(literal:'Real Cool Time')}, {'title': Value(literal:""Don't Fear the Demon"")}, {'title': Value(literal:'Where the Dragon Sleeps')}, {'title': Value(literal:'Classic Rock One Shots')}, {'title': Value(literal:'KISS One Shots')}, {'title': Value(literal:'What Is And Should Never Be')}, {'title': Value(literal:'仲夏苦')}, {'title': Value(literal:'Not Your Girl')}, {'title': Value(literal:'Innocent')}, {'title': Value(literal:'Fandom One Shots')}, {'title': Value(literal:'We are pleased to inform you that you have been accepted at Hogwarts School of Witchcraft and Wizardry...')}, {'title': Value(literal:'The New Queens of May')}, {'title': Value(literal:'The Westernborne Mystery')}, {'title': Value(literal:""Gen'rals Gathered in Their Masses"")}, {'title': Value(literal:'Just Like Witches at Black Masses')}, {'title': Value(literal:'再见阿特拉斯')}, {'title': Value(literal:'Some Girls are Bigger Than Others')}, {'title': Value(literal:'石膏雕像')}, {'title': Value(literal:'31 Days of Smut')}, {'title': Value(literal:'Tumblr Collection')}, {'title': Value(literal:'Out In The Street')}, {'title': Value(literal:'Out In The Street (ABANDONED!!!)')}, {'title': Value(literal:""It's Only Teenage Wasteland"")}, {'title': Value(literal:'帕特里克或迷醉')}, {'title': Value(literal:""I Can't Quit You Baby (rus)"")}, {'title': Value(literal:'lovechild')}, {'title': Value(literal:'Science Fiction')}, {'title': Value(literal:'Drunk Drummer Girl')}, {'title': Value(literal:'去年在马里昂巴德')}, {'title': Value(literal:'关于JPJ为什么没退出齐柏林飞艇')}, {'title': Value(literal:'午夜回航')}, {'title': Value(literal:'春意远')}, {'title': Value(literal:""Since I've Been Loving You"")}, {'title': Value(literal:'The Birthday Present')}, {'title': Value(literal:'Rock discussions :)')}, {'title': Value(literal:'☆Micro_Mods☆')}, {'title': Value(literal:'Classic Rock Crack 1')}, {'title': Value(literal:'Music stories')}, {'title': Value(literal:'Shrekles')}, {'title': Value(literal:'Shrekles the Xmas Special')}, {'title': Value(literal:""David and Jimmy's Magical Adventure"")}, {'title': Value(literal:'Strange New World')}, {'title': Value(literal:""I Can't Quit You Baby (eng)"")}, {'title': Value(literal:'Teenage Wasteland')}, {'title': Value(literal:'The Man Who Plays Guitars')}, {'title': Value(literal:'Orchard')}]"	321	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene Family is what you make it?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Family is what you make it"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia No Hero?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""No Hero"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: Muéstrame historias del fandom Led Zeppelin

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?story WHERE { 
  ?story golem:fandom ""Led Zeppelin"" . 
}
"	[{'story': Value(uri:'https://golemlab.eu/graph/2614889')}, {'story': Value(uri:'https://golemlab.eu/graph/25284424')}, {'story': Value(uri:'https://golemlab.eu/graph/24786106')}, {'story': Value(uri:'https://golemlab.eu/graph/24975241')}, {'story': Value(uri:'https://golemlab.eu/graph/22322626')}, {'story': Value(uri:'https://golemlab.eu/graph/28874184')}, {'story': Value(uri:'https://golemlab.eu/graph/36532804')}, {'story': Value(uri:'https://golemlab.eu/graph/30998936')}, {'story': Value(uri:'https://golemlab.eu/graph/31145807')}, {'story': Value(uri:'https://golemlab.eu/graph/32722852')}, {'story': Value(uri:'https://golemlab.eu/graph/40790865')}, {'story': Value(uri:'https://golemlab.eu/graph/26190313')}, {'story': Value(uri:'https://golemlab.eu/graph/19199440')}, {'story': Value(uri:'https://golemlab.eu/graph/31153688')}, {'story': Value(uri:'https://golemlab.eu/graph/31403144')}, {'story': Value(uri:'https://golemlab.eu/graph/31601879')}, {'story': Value(uri:'https://golemlab.eu/graph/17466920')}, {'story': Value(uri:'https://golemlab.eu/graph/33243592')}, {'story': Value(uri:'https://golemlab.eu/graph/34008715')}, {'story': Value(uri:'https://golemlab.eu/graph/30356433')}, {'story': Value(uri:'https://golemlab.eu/graph/30597620')}, {'story': Value(uri:'https://golemlab.eu/graph/32194279')}, {'story': Value(uri:'https://golemlab.eu/graph/33353725')}, {'story': Value(uri:'https://golemlab.eu/graph/20386771')}, {'story': Value(uri:'https://golemlab.eu/graph/27794581')}, {'story': Value(uri:'https://golemlab.eu/graph/27794692')}, {'story': Value(uri:'https://golemlab.eu/graph/35548402')}, {'story': Value(uri:'https://golemlab.eu/graph/30688202')}, {'story': Value(uri:'https://golemlab.eu/graph/30869348')}, {'story': Value(uri:'https://golemlab.eu/graph/31292573')}, {'story': Value(uri:'https://golemlab.eu/graph/33364663')}, {'story': Value(uri:'https://golemlab.eu/graph/37543699')}, {'story': Value(uri:'https://golemlab.eu/graph/20258305')}, {'story': Value(uri:'https://golemlab.eu/graph/33345265')}, {'story': Value(uri:'https://golemlab.eu/graph/34841353')}, {'story': Value(uri:'https://golemlab.eu/graph/29959311')}, {'story': Value(uri:'https://golemlab.eu/graph/31369811')}, {'story': Value(uri:'https://golemlab.eu/graph/40744422')}, {'story': Value(uri:'https://golemlab.eu/graph/40790820')}, {'story': Value(uri:'https://golemlab.eu/graph/25106848')}, {'story': Value(uri:'https://golemlab.eu/graph/25467424')}, {'story': Value(uri:'https://golemlab.eu/graph/17146445')}, {'story': Value(uri:'https://golemlab.eu/graph/20024374')}, {'story': Value(uri:'https://golemlab.eu/graph/20413456')}, {'story': Value(uri:'https://golemlab.eu/graph/26190235')}, {'story': Value(uri:'https://golemlab.eu/graph/22727500')}, {'story': Value(uri:'https://golemlab.eu/graph/10891356')}, {'story': Value(uri:'https://golemlab.eu/graph/11969277')}, {'story': Value(uri:'https://golemlab.eu/graph/1317301')}, {'story': Value(uri:'https://golemlab.eu/graph/1317307')}, {'story': Value(uri:'https://golemlab.eu/graph/35167495')}, {'story': Value(uri:'https://golemlab.eu/graph/6416188')}, {'story': Value(uri:'https://golemlab.eu/graph/6603826')}, {'story': Value(uri:'https://golemlab.eu/graph/41260233')}, {'story': Value(uri:'https://golemlab.eu/graph/37597504')}, {'story': Value(uri:'https://golemlab.eu/graph/33687247')}, {'story': Value(uri:'https://golemlab.eu/graph/34841257')}, {'story': Value(uri:'https://golemlab.eu/graph/32196637')}, {'story': Value(uri:'https://golemlab.eu/graph/39571074')}, {'story': Value(uri:'https://golemlab.eu/graph/2599640')}, {'story': Value(uri:'https://golemlab.eu/graph/28505394')}, {'story': Value(uri:'https://golemlab.eu/graph/29305119')}, {'story': Value(uri:'https://golemlab.eu/graph/30572417')}, {'story': Value(uri:'https://golemlab.eu/graph/29713554')}, {'story': Value(uri:'https://golemlab.eu/graph/29715963')}, {'story': Value(uri:'https://golemlab.eu/graph/30489195')}, {'story': Value(uri:'https://golemlab.eu/graph/30489252')}, {'story': Value(uri:'https://golemlab.eu/graph/32007403')}, {'story': Value(uri:'https://golemlab.eu/graph/34018936')}, {'story': Value(uri:'https://golemlab.eu/graph/30735317')}, {'story': Value(uri:'https://golemlab.eu/graph/31153523')}, {'story': Value(uri:'https://golemlab.eu/graph/31957126')}, {'story': Value(uri:'https://golemlab.eu/graph/17630324')}, {'story': Value(uri:'https://golemlab.eu/graph/23554552')}, {'story': Value(uri:'https://golemlab.eu/graph/27484939')}, {'story': Value(uri:'https://golemlab.eu/graph/30909101')}, {'story': Value(uri:'https://golemlab.eu/graph/32470864')}, {'story': Value(uri:'https://golemlab.eu/graph/39590673')}, {'story': Value(uri:'https://golemlab.eu/graph/40975953')}, {'story': Value(uri:'https://golemlab.eu/graph/24218410')}, {'story': Value(uri:'https://golemlab.eu/graph/26190292')}, {'story': Value(uri:'https://golemlab.eu/graph/26190367')}, {'story': Value(uri:'https://golemlab.eu/graph/10563381')}, {'story': Value(uri:'https://golemlab.eu/graph/36584572')}, {'story': Value(uri:'https://golemlab.eu/graph/40737354')}, {'story': Value(uri:'https://golemlab.eu/graph/25849453')}, {'story': Value(uri:'https://golemlab.eu/graph/26659168')}, {'story': Value(uri:'https://golemlab.eu/graph/25358773')}, {'story': Value(uri:'https://golemlab.eu/graph/26302402')}, {'story': Value(uri:'https://golemlab.eu/graph/30654830')}, {'story': Value(uri:'https://golemlab.eu/graph/33721039')}, {'story': Value(uri:'https://golemlab.eu/graph/7011601')}, {'story': Value(uri:'https://golemlab.eu/graph/28630422')}, {'story': Value(uri:'https://golemlab.eu/graph/36731341')}, {'story': Value(uri:'https://golemlab.eu/graph/40839840')}, {'story': Value(uri:'https://golemlab.eu/graph/9622064')}, {'story': Value(uri:'https://golemlab.eu/graph/1043985')}, {'story': Value(uri:'https://golemlab.eu/graph/1047204')}, {'story': Value(uri:'https://golemlab.eu/graph/1047212')}, {'story': Value(uri:'https://golemlab.eu/graph/10543137')}, {'story': Value(uri:'https://golemlab.eu/graph/10572183')}, {'story': Value(uri:'https://golemlab.eu/graph/10595211')}, {'story': Value(uri:'https://golemlab.eu/graph/10703847')}, {'story': Value(uri:'https://golemlab.eu/graph/10735725')}, {'story': Value(uri:'https://golemlab.eu/graph/10870884')}, {'story': Value(uri:'https://golemlab.eu/graph/10880613')}, {'story': Value(uri:'https://golemlab.eu/graph/1090710')}, {'story': Value(uri:'https://golemlab.eu/graph/10956837')}, {'story': Value(uri:'https://golemlab.eu/graph/10969404')}, {'story': Value(uri:'https://golemlab.eu/graph/11016828')}, {'story': Value(uri:'https://golemlab.eu/graph/11071443')}, {'story': Value(uri:'https://golemlab.eu/graph/11178696')}, {'story': Value(uri:'https://golemlab.eu/graph/11384199')}, {'story': Value(uri:'https://golemlab.eu/graph/11437962')}, {'story': Value(uri:'https://golemlab.eu/graph/11806137')}, {'story': Value(uri:'https://golemlab.eu/graph/11859138')}, {'story': Value(uri:'https://golemlab.eu/graph/11860719')}, {'story': Value(uri:'https://golemlab.eu/graph/12157131')}, {'story': Value(uri:'https://golemlab.eu/graph/12215724')}, {'story': Value(uri:'https://golemlab.eu/graph/12215778')}, {'story': Value(uri:'https://golemlab.eu/graph/12494388')}, {'story': Value(uri:'https://golemlab.eu/graph/13746198')}, {'story': Value(uri:'https://golemlab.eu/graph/13754628')}, {'story': Value(uri:'https://golemlab.eu/graph/13807023')}, {'story': Value(uri:'https://golemlab.eu/graph/13952685')}, {'story': Value(uri:'https://golemlab.eu/graph/14256885')}, {'story': Value(uri:'https://golemlab.eu/graph/14274333')}, {'story': Value(uri:'https://golemlab.eu/graph/14358621')}, {'story': Value(uri:'https://golemlab.eu/graph/14546634')}, {'story': Value(uri:'https://golemlab.eu/graph/14546739')}, {'story': Value(uri:'https://golemlab.eu/graph/15489840')}, {'story': Value(uri:'https://golemlab.eu/graph/15659730')}, {'story': Value(uri:'https://golemlab.eu/graph/15894615')}, {'story': Value(uri:'https://golemlab.eu/graph/15921406')}, {'story': Value(uri:'https://golemlab.eu/graph/15941351')}, {'story': Value(uri:'https://golemlab.eu/graph/16801528')}, {'story': Value(uri:'https://golemlab.eu/graph/16873665')}, {'story': Value(uri:'https://golemlab.eu/graph/16873896')}, {'story': Value(uri:'https://golemlab.eu/graph/16874064')}, {'story': Value(uri:'https://golemlab.eu/graph/16874142')}, {'story': Value(uri:'https://golemlab.eu/graph/16874964')}, {'story': Value(uri:'https://golemlab.eu/graph/16875159')}, {'story': Value(uri:'https://golemlab.eu/graph/16875324')}, {'story': Value(uri:'https://golemlab.eu/graph/16875402')}, {'story': Value(uri:'https://golemlab.eu/graph/16886325')}, {'story': Value(uri:'https://golemlab.eu/graph/16890171')}, {'story': Value(uri:'https://golemlab.eu/graph/16891296')}, {'story': Value(uri:'https://golemlab.eu/graph/16907925')}, {'story': Value(uri:'https://golemlab.eu/graph/16908891')}, {'story': Value(uri:'https://golemlab.eu/graph/16910295')}, {'story': Value(uri:'https://golemlab.eu/graph/16922418')}, {'story': Value(uri:'https://golemlab.eu/graph/16923006')}, {'story': Value(uri:'https://golemlab.eu/graph/16932498')}, {'story': Value(uri:'https://golemlab.eu/graph/16932900')}, {'story': Value(uri:'https://golemlab.eu/graph/16933371')}, {'story': Value(uri:'https://golemlab.eu/graph/16980153')}, {'story': Value(uri:'https://golemlab.eu/graph/16982265')}, {'story': Value(uri:'https://golemlab.eu/graph/16997793')}, {'story': Value(uri:'https://golemlab.eu/graph/16997988')}, {'story': Value(uri:'https://golemlab.eu/graph/17000517')}, {'story': Value(uri:'https://golemlab.eu/graph/17002275')}, {'story': Value(uri:'https://golemlab.eu/graph/17006928')}, {'story': Value(uri:'https://golemlab.eu/graph/17007114')}, {'story': Value(uri:'https://golemlab.eu/graph/17007369')}, {'story': Value(uri:'https://golemlab.eu/graph/17007618')}, {'story': Value(uri:'https://golemlab.eu/graph/17024916')}, {'story': Value(uri:'https://golemlab.eu/graph/17025144')}, {'story': Value(uri:'https://golemlab.eu/graph/17025417')}, {'story': Value(uri:'https://golemlab.eu/graph/17025870')}, {'story': Value(uri:'https://golemlab.eu/graph/17026374')}, {'story': Value(uri:'https://golemlab.eu/graph/17067170')}, {'story': Value(uri:'https://golemlab.eu/graph/17109230')}, {'story': Value(uri:'https://golemlab.eu/graph/17120816')}, {'story': Value(uri:'https://golemlab.eu/graph/17189855')}, {'story': Value(uri:'https://golemlab.eu/graph/17216585')}, {'story': Value(uri:'https://golemlab.eu/graph/17255387')}, {'story': Value(uri:'https://golemlab.eu/graph/17374427')}, {'story': Value(uri:'https://golemlab.eu/graph/17491559')}, {'story': Value(uri:'https://golemlab.eu/graph/17514143')}, {'story': Value(uri:'https://golemlab.eu/graph/17588429')}, {'story': Value(uri:'https://golemlab.eu/graph/17592365')}, {'story': Value(uri:'https://golemlab.eu/graph/17628389')}, {'story': Value(uri:'https://golemlab.eu/graph/17755076')}, {'story': Value(uri:'https://golemlab.eu/graph/17911823')}, {'story': Value(uri:'https://golemlab.eu/graph/17912135')}, {'story': Value(uri:'https://golemlab.eu/graph/17987228')}, {'story': Value(uri:'https://golemlab.eu/graph/17994341')}, {'story': Value(uri:'https://golemlab.eu/graph/18171554')}, {'story': Value(uri:'https://golemlab.eu/graph/18184331')}, {'story': Value(uri:'https://golemlab.eu/graph/18366446')}, {'story': Value(uri:'https://golemlab.eu/graph/18412193')}, {'story': Value(uri:'https://golemlab.eu/graph/18422349')}, {'story': Value(uri:'https://golemlab.eu/graph/18445763')}, {'story': Value(uri:'https://golemlab.eu/graph/18529567')}, {'story': Value(uri:'https://golemlab.eu/graph/18549112')}, {'story': Value(uri:'https://golemlab.eu/graph/18640570')}, {'story': Value(uri:'https://golemlab.eu/graph/18645127')}, {'story': Value(uri:'https://golemlab.eu/graph/18647554')}, {'story': Value(uri:'https://golemlab.eu/graph/18671596')}, {'story': Value(uri:'https://golemlab.eu/graph/18727999')}, {'story': Value(uri:'https://golemlab.eu/graph/18794080')}, {'story': Value(uri:'https://golemlab.eu/graph/18851836')}, {'story': Value(uri:'https://golemlab.eu/graph/18865174')}, {'story': Value(uri:'https://golemlab.eu/graph/18993082')}, {'story': Value(uri:'https://golemlab.eu/graph/19001779')}, {'story': Value(uri:'https://golemlab.eu/graph/19009603')}, {'story': Value(uri:'https://golemlab.eu/graph/19473967')}, {'story': Value(uri:'https://golemlab.eu/graph/19834981')}, {'story': Value(uri:'https://golemlab.eu/graph/19835107')}, {'story': Value(uri:'https://golemlab.eu/graph/19847179')}, {'story': Value(uri:'https://golemlab.eu/graph/19865662')}, {'story': Value(uri:'https://golemlab.eu/graph/19963540')}, {'story': Value(uri:'https://golemlab.eu/graph/19982659')}, {'story': Value(uri:'https://golemlab.eu/graph/20004820')}, {'story': Value(uri:'https://golemlab.eu/graph/20006833')}, {'story': Value(uri:'https://golemlab.eu/graph/20029897')}, {'story': Value(uri:'https://golemlab.eu/graph/20030095')}, {'story': Value(uri:'https://golemlab.eu/graph/20076322')}, {'story': Value(uri:'https://golemlab.eu/graph/20099356')}, {'story': Value(uri:'https://golemlab.eu/graph/20101120')}, {'story': Value(uri:'https://golemlab.eu/graph/20133835')}, {'story': Value(uri:'https://golemlab.eu/graph/20160184')}, {'story': Value(uri:'https://golemlab.eu/graph/20178298')}, {'story': Value(uri:'https://golemlab.eu/graph/20190022')}, {'story': Value(uri:'https://golemlab.eu/graph/20190121')}, {'story': Value(uri:'https://golemlab.eu/graph/20190205')}, {'story': Value(uri:'https://golemlab.eu/graph/20190292')}, {'story': Value(uri:'https://golemlab.eu/graph/20190433')}, {'story': Value(uri:'https://golemlab.eu/graph/20254915')}, {'story': Value(uri:'https://golemlab.eu/graph/20262511')}, {'story': Value(uri:'https://golemlab.eu/graph/20263159')}, {'story': Value(uri:'https://golemlab.eu/graph/20270767')}, {'story': Value(uri:'https://golemlab.eu/graph/20317324')}, {'story': Value(uri:'https://golemlab.eu/graph/20333977')}, {'story': Value(uri:'https://golemlab.eu/graph/20343523')}, {'story': Value(uri:'https://golemlab.eu/graph/20348803')}, {'story': Value(uri:'https://golemlab.eu/graph/20364688')}, {'story': Value(uri:'https://golemlab.eu/graph/20374924')}, {'story': Value(uri:'https://golemlab.eu/graph/20397853')}, {'story': Value(uri:'https://golemlab.eu/graph/20398093')}, {'story': Value(uri:'https://golemlab.eu/graph/20477045')}, {'story': Value(uri:'https://golemlab.eu/graph/20480216')}, {'story': Value(uri:'https://golemlab.eu/graph/20565956')}, {'story': Value(uri:'https://golemlab.eu/graph/20570816')}, {'story': Value(uri:'https://golemlab.eu/graph/20666342')}, {'story': Value(uri:'https://golemlab.eu/graph/20673347')}, {'story': Value(uri:'https://golemlab.eu/graph/20722973')}, {'story': Value(uri:'https://golemlab.eu/graph/20764667')}, {'story': Value(uri:'https://golemlab.eu/graph/20777399')}, {'story': Value(uri:'https://golemlab.eu/graph/20787230')}, {'story': Value(uri:'https://golemlab.eu/graph/20803706')}, {'story': Value(uri:'https://golemlab.eu/graph/20833805')}, {'story': Value(uri:'https://golemlab.eu/graph/20913632')}, {'story': Value(uri:'https://golemlab.eu/graph/20919389')}, {'story': Value(uri:'https://golemlab.eu/graph/20936387')}, {'story': Value(uri:'https://golemlab.eu/graph/21016403')}, {'story': Value(uri:'https://golemlab.eu/graph/21016628')}, {'story': Value(uri:'https://golemlab.eu/graph/21067166')}, {'story': Value(uri:'https://golemlab.eu/graph/21126239')}, {'story': Value(uri:'https://golemlab.eu/graph/21129818')}, {'story': Value(uri:'https://golemlab.eu/graph/21322078')}, {'story': Value(uri:'https://golemlab.eu/graph/21343447')}, {'story': Value(uri:'https://golemlab.eu/graph/21521689')}, {'story': Value(uri:'https://golemlab.eu/graph/21712039')}, {'story': Value(uri:'https://golemlab.eu/graph/21721303')}, {'story': Value(uri:'https://golemlab.eu/graph/21834463')}, {'story': Value(uri:'https://golemlab.eu/graph/21893032')}, {'story': Value(uri:'https://golemlab.eu/graph/21911260')}, {'story': Value(uri:'https://golemlab.eu/graph/22004272')}, {'story': Value(uri:'https://golemlab.eu/graph/22040968')}, {'story': Value(uri:'https://golemlab.eu/graph/22052215')}, {'story': Value(uri:'https://golemlab.eu/graph/22123141')}, {'story': Value(uri:'https://golemlab.eu/graph/22231135')}, {'story': Value(uri:'https://golemlab.eu/graph/22287217')}, {'story': Value(uri:'https://golemlab.eu/graph/22333063')}, {'story': Value(uri:'https://golemlab.eu/graph/22404925')}, {'story': Value(uri:'https://golemlab.eu/graph/22514776')}, {'story': Value(uri:'https://golemlab.eu/graph/22595428')}, {'story': Value(uri:'https://golemlab.eu/graph/22713241')}, {'story': Value(uri:'https://golemlab.eu/graph/22732225')}, {'story': Value(uri:'https://golemlab.eu/graph/22736404')}, {'story': Value(uri:'https://golemlab.eu/graph/22783453')}, {'story': Value(uri:'https://golemlab.eu/graph/22826449')}, {'story': Value(uri:'https://golemlab.eu/graph/22868884')}, {'story': Value(uri:'https://golemlab.eu/graph/22919179')}, {'story': Value(uri:'https://golemlab.eu/graph/22944046')}, {'story': Value(uri:'https://golemlab.eu/graph/23007100')}, {'story': Value(uri:'https://golemlab.eu/graph/23009866')}, {'story': Value(uri:'https://golemlab.eu/graph/23043817')}, {'story': Value(uri:'https://golemlab.eu/graph/23088283')}, {'story': Value(uri:'https://golemlab.eu/graph/23181712')}, {'story': Value(uri:'https://golemlab.eu/graph/23190832')}, {'story': Value(uri:'https://golemlab.eu/graph/23194114')}, {'story': Value(uri:'https://golemlab.eu/graph/23214274')}, {'story': Value(uri:'https://golemlab.eu/graph/23226982')}, {'story': Value(uri:'https://golemlab.eu/graph/23227846')}, {'story': Value(uri:'https://golemlab.eu/graph/23235670')}, {'story': Value(uri:'https://golemlab.eu/graph/23236099')}, {'story': Value(uri:'https://golemlab.eu/graph/23261779')}, {'story': Value(uri:'https://golemlab.eu/graph/23263966')}, {'story': Value(uri:'https://golemlab.eu/graph/23283949')}, {'story': Value(uri:'https://golemlab.eu/graph/23293624')}, {'story': Value(uri:'https://golemlab.eu/graph/23355844')}, {'story': Value(uri:'https://golemlab.eu/graph/23448442')}, {'story': Value(uri:'https://golemlab.eu/graph/23504665')}, {'story': Value(uri:'https://golemlab.eu/graph/23545024')}, {'story': Value(uri:'https://golemlab.eu/graph/23556388')}, {'story': Value(uri:'https://golemlab.eu/graph/2358764')}, {'story': Value(uri:'https://golemlab.eu/graph/23588221')}, {'story': Value(uri:'https://golemlab.eu/graph/23597710')}, {'story': Value(uri:'https://golemlab.eu/graph/23628730')}, {'story': Value(uri:'https://golemlab.eu/graph/23637868')}, {'story': Value(uri:'https://golemlab.eu/graph/23666575')}, {'story': Value(uri:'https://golemlab.eu/graph/23677168')}, {'story': Value(uri:'https://golemlab.eu/graph/23683033')}, {'story': Value(uri:'https://golemlab.eu/graph/23717950')}, {'story': Value(uri:'https://golemlab.eu/graph/23731993')}, {'story': Value(uri:'https://golemlab.eu/graph/23739109')}, {'story': Value(uri:'https://golemlab.eu/graph/23799904')}, {'story': Value(uri:'https://golemlab.eu/graph/23827366')}, {'story': Value(uri:'https://golemlab.eu/graph/23832856')}, {'story': Value(uri:'https://golemlab.eu/graph/23876620')}, {'story': Value(uri:'https://golemlab.eu/graph/23982544')}, {'story': Value(uri:'https://golemlab.eu/graph/23986072')}, {'story': Value(uri:'https://golemlab.eu/graph/24038992')}, {'story': Value(uri:'https://golemlab.eu/graph/24051481')}, {'story': Value(uri:'https://golemlab.eu/graph/24078376')}, {'story': Value(uri:'https://golemlab.eu/graph/24130417')}, {'story': Value(uri:'https://golemlab.eu/graph/24166792')}, {'story': Value(uri:'https://golemlab.eu/graph/24286861')}, {'story': Value(uri:'https://golemlab.eu/graph/24336349')}, {'story': Value(uri:'https://golemlab.eu/graph/24338398')}, {'story': Value(uri:'https://golemlab.eu/graph/24341380')}, {'story': Value(uri:'https://golemlab.eu/graph/24341632')}, {'story': Value(uri:'https://golemlab.eu/graph/24341896')}, {'story': Value(uri:'https://golemlab.eu/graph/24341998')}, {'story': Value(uri:'https://golemlab.eu/graph/24342199')}, {'story': Value(uri:'https://golemlab.eu/graph/24342307')}, {'story': Value(uri:'https://golemlab.eu/graph/24342433')}, {'story': Value(uri:'https://golemlab.eu/graph/24342685')}, {'story': Value(uri:'https://golemlab.eu/graph/24343045')}, {'story': Value(uri:'https://golemlab.eu/graph/24343432')}, {'story': Value(uri:'https://golemlab.eu/graph/24343546')}, {'story': Value(uri:'https://golemlab.eu/graph/24343627')}, {'story': Value(uri:'https://golemlab.eu/graph/24344047')}, {'story': Value(uri:'https://golemlab.eu/graph/24384037')}, {'story': Value(uri:'https://golemlab.eu/graph/24388216')}, {'story': Value(uri:'https://golemlab.eu/graph/24390715')}, {'story': Value(uri:'https://golemlab.eu/graph/24496024')}, {'story': Value(uri:'https://golemlab.eu/graph/24565900')}, {'story': Value(uri:'https://golemlab.eu/graph/24574321')}, {'story': Value(uri:'https://golemlab.eu/graph/24610465')}, {'story': Value(uri:'https://golemlab.eu/graph/24646546')}, {'story': Value(uri:'https://golemlab.eu/graph/24648592')}, {'story': Value(uri:'https://golemlab.eu/graph/24667717')}, {'story': Value(uri:'https://golemlab.eu/graph/24725368')}, {'story': Value(uri:'https://golemlab.eu/graph/24744319')}, {'story': Value(uri:'https://golemlab.eu/graph/24756121')}, {'story': Value(uri:'https://golemlab.eu/graph/24786793')}, {'story': Value(uri:'https://golemlab.eu/graph/24849430')}, {'story': Value(uri:'https://golemlab.eu/graph/24886333')}, {'story': Value(uri:'https://golemlab.eu/graph/24935953')}, {'story': Value(uri:'https://golemlab.eu/graph/24969364')}, {'story': Value(uri:'https://golemlab.eu/graph/25004767')}, {'story': Value(uri:'https://golemlab.eu/graph/25005052')}, {'story': Value(uri:'https://golemlab.eu/graph/25019077')}, {'story': Value(uri:'https://golemlab.eu/graph/25031506')}, {'story': Value(uri:'https://golemlab.eu/graph/25068265')}, {'story': Value(uri:'https://golemlab.eu/graph/25149433')}, {'story': Value(uri:'https://golemlab.eu/graph/25232386')}, {'story': Value(uri:'https://golemlab.eu/graph/25290670')}, {'story': Value(uri:'https://golemlab.eu/graph/25291624')}, {'story': Value(uri:'https://golemlab.eu/graph/25310350')}, {'story': Value(uri:'https://golemlab.eu/graph/25379800')}, {'story': Value(uri:'https://golemlab.eu/graph/25404808')}, {'story': Value(uri:'https://golemlab.eu/graph/25422469')}, {'story': Value(uri:'https://golemlab.eu/graph/25455445')}, {'story': Value(uri:'https://golemlab.eu/graph/25523617')}, {'story': Value(uri:'https://golemlab.eu/graph/25602145')}, {'story': Value(uri:'https://golemlab.eu/graph/25646152')}, {'story': Value(uri:'https://golemlab.eu/graph/25652623')}, {'story': Value(uri:'https://golemlab.eu/graph/25689556')}, {'story': Value(uri:'https://golemlab.eu/graph/25693699')}, {'story': Value(uri:'https://golemlab.eu/graph/25713115')}, {'story': Value(uri:'https://golemlab.eu/graph/25745452')}, {'story': Value(uri:'https://golemlab.eu/graph/25802917')}, {'story': Value(uri:'https://golemlab.eu/graph/25849240')}, {'story': Value(uri:'https://golemlab.eu/graph/25886404')}, {'story': Value(uri:'https://golemlab.eu/graph/2589788')}, {'story': Value(uri:'https://golemlab.eu/graph/25899781')}, {'story': Value(uri:'https://golemlab.eu/graph/26012953')}, {'story': Value(uri:'https://golemlab.eu/graph/26044735')}, {'story': Value(uri:'https://golemlab.eu/graph/26051788')}, {'story': Value(uri:'https://golemlab.eu/graph/26139628')}, {'story': Value(uri:'https://golemlab.eu/graph/26142019')}, {'story': Value(uri:'https://golemlab.eu/graph/26150023')}, {'story': Value(uri:'https://golemlab.eu/graph/26221216')}, {'story': Value(uri:'https://golemlab.eu/graph/26235253')}, {'story': Value(uri:'https://golemlab.eu/graph/26238853')}, {'story': Value(uri:'https://golemlab.eu/graph/26260540')}, {'story': Value(uri:'https://golemlab.eu/graph/26367220')}, {'story': Value(uri:'https://golemlab.eu/graph/26389972')}, {'story': Value(uri:'https://golemlab.eu/graph/26487616')}, {'story': Value(uri:'https://golemlab.eu/graph/26503099')}, {'story': Value(uri:'https://golemlab.eu/graph/2651189')}, {'story': Value(uri:'https://golemlab.eu/graph/26514325')}, {'story': Value(uri:'https://golemlab.eu/graph/26537149')}, {'story': Value(uri:'https://golemlab.eu/graph/26540242')}, {'story': Value(uri:'https://golemlab.eu/graph/26620243')}, {'story': Value(uri:'https://golemlab.eu/graph/26620483')}, {'story': Value(uri:'https://golemlab.eu/graph/26647423')}, {'story': Value(uri:'https://golemlab.eu/graph/26653099')}, {'story': Value(uri:'https://golemlab.eu/graph/26688403')}, {'story': Value(uri:'https://golemlab.eu/graph/26721238')}, {'story': Value(uri:'https://golemlab.eu/graph/26723641')}, {'story': Value(uri:'https://golemlab.eu/graph/26740159')}, {'story': Value(uri:'https://golemlab.eu/graph/26779768')}, {'story': Value(uri:'https://golemlab.eu/graph/26795557')}, {'story': Value(uri:'https://golemlab.eu/graph/26877019')}, {'story': Value(uri:'https://golemlab.eu/graph/26883895')}, {'story': Value(uri:'https://golemlab.eu/graph/26912533')}, {'story': Value(uri:'https://golemlab.eu/graph/26929786')}, {'story': Value(uri:'https://golemlab.eu/graph/26954824')}, {'story': Value(uri:'https://golemlab.eu/graph/26960245')}, {'story': Value(uri:'https://golemlab.eu/graph/26972647')}, {'story': Value(uri:'https://golemlab.eu/graph/27014887')}, {'story': Value(uri:'https://golemlab.eu/graph/27042253')}, {'story': Value(uri:'https://golemlab.eu/graph/27110155')}, {'story': Value(uri:'https://golemlab.eu/graph/27141037')}, {'story': Value(uri:'https://golemlab.eu/graph/27165400')}, {'story': Value(uri:'https://golemlab.eu/graph/27205177')}, {'story': Value(uri:'https://golemlab.eu/graph/27249421')}, {'story': Value(uri:'https://golemlab.eu/graph/27290359')}, {'story': Value(uri:'https://golemlab.eu/graph/27355657')}, {'story': Value(uri:'https://golemlab.eu/graph/27404059')}, {'story': Value(uri:'https://golemlab.eu/graph/27404149')}, {'story': Value(uri:'https://golemlab.eu/graph/27406732')}, {'story': Value(uri:'https://golemlab.eu/graph/27408895')}, {'story': Value(uri:'https://golemlab.eu/graph/27479524')}, {'story': Value(uri:'https://golemlab.eu/graph/27556096')}, {'story': Value(uri:'https://golemlab.eu/graph/27558235')}, {'story': Value(uri:'https://golemlab.eu/graph/27664006')}, {'story': Value(uri:'https://golemlab.eu/graph/27674314')}, {'story': Value(uri:'https://golemlab.eu/graph/27758173')}, {'story': Value(uri:'https://golemlab.eu/graph/27784558')}, {'story': Value(uri:'https://golemlab.eu/graph/27797092')}, {'story': Value(uri:'https://golemlab.eu/graph/27803227')}, {'story': Value(uri:'https://golemlab.eu/graph/27804208')}, {'story': Value(uri:'https://golemlab.eu/graph/27807544')}, {'story': Value(uri:'https://golemlab.eu/graph/27857901')}, {'story': Value(uri:'https://golemlab.eu/graph/27862290')}, {'story': Value(uri:'https://golemlab.eu/graph/27942059')}, {'story': Value(uri:'https://golemlab.eu/graph/27947051')}, {'story': Value(uri:'https://golemlab.eu/graph/27974027')}, {'story': Value(uri:'https://golemlab.eu/graph/28047042')}, {'story': Value(uri:'https://golemlab.eu/graph/28078368')}, {'story': Value(uri:'https://golemlab.eu/graph/28119429')}, {'story': Value(uri:'https://golemlab.eu/graph/28180533')}, {'story': Value(uri:'https://golemlab.eu/graph/28226712')}, {'story': Value(uri:'https://golemlab.eu/graph/28263816')}, {'story': Value(uri:'https://golemlab.eu/graph/28337553')}, {'story': Value(uri:'https://golemlab.eu/graph/28383396')}, {'story': Value(uri:'https://golemlab.eu/graph/28399950')}, {'story': Value(uri:'https://golemlab.eu/graph/28440510')}, {'story': Value(uri:'https://golemlab.eu/graph/28453311')}, {'story': Value(uri:'https://golemlab.eu/graph/28466790')}, {'story': Value(uri:'https://golemlab.eu/graph/28477095')}, {'story': Value(uri:'https://golemlab.eu/graph/28496751')}, {'story': Value(uri:'https://golemlab.eu/graph/28512813')}, {'story': Value(uri:'https://golemlab.eu/graph/28583157')}, {'story': Value(uri:'https://golemlab.eu/graph/28593267')}, {'story': Value(uri:'https://golemlab.eu/graph/28594209')}, {'story': Value(uri:'https://golemlab.eu/graph/28594272')}, {'story': Value(uri:'https://golemlab.eu/graph/28621644')}, {'story': Value(uri:'https://golemlab.eu/graph/28624506')}, {'story': Value(uri:'https://golemlab.eu/graph/28656999')}, {'story': Value(uri:'https://golemlab.eu/graph/28699317')}, {'story': Value(uri:'https://golemlab.eu/graph/28706679')}, {'story': Value(uri:'https://golemlab.eu/graph/28904067')}, {'story': Value(uri:'https://golemlab.eu/graph/29144544')}, {'story': Value(uri:'https://golemlab.eu/graph/29165484')}, {'story': Value(uri:'https://golemlab.eu/graph/29228730')}, {'story': Value(uri:'https://golemlab.eu/graph/29256075')}, {'story': Value(uri:'https://golemlab.eu/graph/29301738')}, {'story': Value(uri:'https://golemlab.eu/graph/29437788')}, {'story': Value(uri:'https://golemlab.eu/graph/29465205')}, {'story': Value(uri:'https://golemlab.eu/graph/29585634')}, {'story': Value(uri:'https://golemlab.eu/graph/29788917')}, {'story': Value(uri:'https://golemlab.eu/graph/29888034')}, {'story': Value(uri:'https://golemlab.eu/graph/29956368')}, {'story': Value(uri:'https://golemlab.eu/graph/30017919')}, {'story': Value(uri:'https://golemlab.eu/graph/30025413')}, {'story': Value(uri:'https://golemlab.eu/graph/30033426')}, {'story': Value(uri:'https://golemlab.eu/graph/30095943')}, {'story': Value(uri:'https://golemlab.eu/graph/30196485')}, {'story': Value(uri:'https://golemlab.eu/graph/30224007')}, {'story': Value(uri:'https://golemlab.eu/graph/30237423')}, {'story': Value(uri:'https://golemlab.eu/graph/30371541')}, {'story': Value(uri:'https://golemlab.eu/graph/30391839')}, {'story': Value(uri:'https://golemlab.eu/graph/30449652')}, {'story': Value(uri:'https://golemlab.eu/graph/30545541')}, {'story': Value(uri:'https://golemlab.eu/graph/30704006')}, {'story': Value(uri:'https://golemlab.eu/graph/3072068')}, {'story': Value(uri:'https://golemlab.eu/graph/30722795')}, {'story': Value(uri:'https://golemlab.eu/graph/30829295')}, {'story': Value(uri:'https://golemlab.eu/graph/30972314')}, {'story': Value(uri:'https://golemlab.eu/graph/30995618')}, {'story': Value(uri:'https://golemlab.eu/graph/31111916')}, {'story': Value(uri:'https://golemlab.eu/graph/31157912')}, {'story': Value(uri:'https://golemlab.eu/graph/31174709')}, {'story': Value(uri:'https://golemlab.eu/graph/31185521')}, {'story': Value(uri:'https://golemlab.eu/graph/31328738')}, {'story': Value(uri:'https://golemlab.eu/graph/31461743')}, {'story': Value(uri:'https://golemlab.eu/graph/31474016')}, {'story': Value(uri:'https://golemlab.eu/graph/31553789')}, {'story': Value(uri:'https://golemlab.eu/graph/31743004')}, {'story': Value(uri:'https://golemlab.eu/graph/31912267')}, {'story': Value(uri:'https://golemlab.eu/graph/31954468')}, {'story': Value(uri:'https://golemlab.eu/graph/32146930')}, {'story': Value(uri:'https://golemlab.eu/graph/32151970')}, {'story': Value(uri:'https://golemlab.eu/graph/32396212')}, {'story': Value(uri:'https://golemlab.eu/graph/32420794')}, {'story': Value(uri:'https://golemlab.eu/graph/32554975')}, {'story': Value(uri:'https://golemlab.eu/graph/32685313')}, {'story': Value(uri:'https://golemlab.eu/graph/3288866')}, {'story': Value(uri:'https://golemlab.eu/graph/32892046')}, {'story': Value(uri:'https://golemlab.eu/graph/32904157')}, {'story': Value(uri:'https://golemlab.eu/graph/32941579')}, {'story': Value(uri:'https://golemlab.eu/graph/32960335')}, {'story': Value(uri:'https://golemlab.eu/graph/33066307')}, {'story': Value(uri:'https://golemlab.eu/graph/33104143')}, {'story': Value(uri:'https://golemlab.eu/graph/3332987')}, {'story': Value(uri:'https://golemlab.eu/graph/33356530')}, {'story': Value(uri:'https://golemlab.eu/graph/33356683')}, {'story': Value(uri:'https://golemlab.eu/graph/33365047')}, {'story': Value(uri:'https://golemlab.eu/graph/33400750')}, {'story': Value(uri:'https://golemlab.eu/graph/33454921')}, {'story': Value(uri:'https://golemlab.eu/graph/33467995')}, {'story': Value(uri:'https://golemlab.eu/graph/33569698')}, {'story': Value(uri:'https://golemlab.eu/graph/33640543')}, {'story': Value(uri:'https://golemlab.eu/graph/33753859')}, {'story': Value(uri:'https://golemlab.eu/graph/33824059')}, {'story': Value(uri:'https://golemlab.eu/graph/3385496')}, {'story': Value(uri:'https://golemlab.eu/graph/3396650')}, {'story': Value(uri:'https://golemlab.eu/graph/34041478')}, {'story': Value(uri:'https://golemlab.eu/graph/34041892')}, {'story': Value(uri:'https://golemlab.eu/graph/34058887')}, {'story': Value(uri:'https://golemlab.eu/graph/34059058')}, {'story': Value(uri:'https://golemlab.eu/graph/34060216')}, {'story': Value(uri:'https://golemlab.eu/graph/34060396')}, {'story': Value(uri:'https://golemlab.eu/graph/34095130')}, {'story': Value(uri:'https://golemlab.eu/graph/34111309')}, {'story': Value(uri:'https://golemlab.eu/graph/34134319')}, {'story': Value(uri:'https://golemlab.eu/graph/34181164')}, {'story': Value(uri:'https://golemlab.eu/graph/34181248')}, {'story': Value(uri:'https://golemlab.eu/graph/34265908')}, {'story': Value(uri:'https://golemlab.eu/graph/34272982')}, {'story': Value(uri:'https://golemlab.eu/graph/34274602')}, {'story': Value(uri:'https://golemlab.eu/graph/34309792')}, {'story': Value(uri:'https://golemlab.eu/graph/34339921')}, {'story': Value(uri:'https://golemlab.eu/graph/34394068')}, {'story': Value(uri:'https://golemlab.eu/graph/34764358')}, {'story': Value(uri:'https://golemlab.eu/graph/34832788')}, {'story': Value(uri:'https://golemlab.eu/graph/34951699')}, {'story': Value(uri:'https://golemlab.eu/graph/35157394')}, {'story': Value(uri:'https://golemlab.eu/graph/35486917')}, {'story': Value(uri:'https://golemlab.eu/graph/35562157')}, {'story': Value(uri:'https://golemlab.eu/graph/35621581')}, {'story': Value(uri:'https://golemlab.eu/graph/35639128')}, {'story': Value(uri:'https://golemlab.eu/graph/35896429')}, {'story': Value(uri:'https://golemlab.eu/graph/35949721')}, {'story': Value(uri:'https://golemlab.eu/graph/36052579')}, {'story': Value(uri:'https://golemlab.eu/graph/36059710')}, {'story': Value(uri:'https://golemlab.eu/graph/36075511')}, {'story': Value(uri:'https://golemlab.eu/graph/36223048')}, {'story': Value(uri:'https://golemlab.eu/graph/36314248')}, {'story': Value(uri:'https://golemlab.eu/graph/36319621')}, {'story': Value(uri:'https://golemlab.eu/graph/36322645')}, {'story': Value(uri:'https://golemlab.eu/graph/36334864')}, {'story': Value(uri:'https://golemlab.eu/graph/36504268')}, {'story': Value(uri:'https://golemlab.eu/graph/36505321')}, {'story': Value(uri:'https://golemlab.eu/graph/36581353')}, {'story': Value(uri:'https://golemlab.eu/graph/36749905')}, {'story': Value(uri:'https://golemlab.eu/graph/36758230')}, {'story': Value(uri:'https://golemlab.eu/graph/36758995')}, {'story': Value(uri:'https://golemlab.eu/graph/37126987')}, {'story': Value(uri:'https://golemlab.eu/graph/37202302')}, {'story': Value(uri:'https://golemlab.eu/graph/37221064')}, {'story': Value(uri:'https://golemlab.eu/graph/37221358')}, {'story': Value(uri:'https://golemlab.eu/graph/37221697')}, {'story': Value(uri:'https://golemlab.eu/graph/37224004')}, {'story': Value(uri:'https://golemlab.eu/graph/37235284')}, {'story': Value(uri:'https://golemlab.eu/graph/37235419')}, {'story': Value(uri:'https://golemlab.eu/graph/37243159')}, {'story': Value(uri:'https://golemlab.eu/graph/37243201')}, {'story': Value(uri:'https://golemlab.eu/graph/37243234')}, {'story': Value(uri:'https://golemlab.eu/graph/37243342')}, {'story': Value(uri:'https://golemlab.eu/graph/37243774')}, {'story': Value(uri:'https://golemlab.eu/graph/37254265')}, {'story': Value(uri:'https://golemlab.eu/graph/37363861')}, {'story': Value(uri:'https://golemlab.eu/graph/3742825')}, {'story': Value(uri:'https://golemlab.eu/graph/37516048')}, {'story': Value(uri:'https://golemlab.eu/graph/37522486')}, {'story': Value(uri:'https://golemlab.eu/graph/37606693')}, {'story': Value(uri:'https://golemlab.eu/graph/37714408')}, {'story': Value(uri:'https://golemlab.eu/graph/37714822')}, {'story': Value(uri:'https://golemlab.eu/graph/37874176')}, {'story': Value(uri:'https://golemlab.eu/graph/37965082')}, {'story': Value(uri:'https://golemlab.eu/graph/37988977')}, {'story': Value(uri:'https://golemlab.eu/graph/38016100')}, {'story': Value(uri:'https://golemlab.eu/graph/38051341')}, {'story': Value(uri:'https://golemlab.eu/graph/38054083')}, {'story': Value(uri:'https://golemlab.eu/graph/38076994')}, {'story': Value(uri:'https://golemlab.eu/graph/38086309')}, {'story': Value(uri:'https://golemlab.eu/graph/38099062')}, {'story': Value(uri:'https://golemlab.eu/graph/38128513')}, {'story': Value(uri:'https://golemlab.eu/graph/38381653')}, {'story': Value(uri:'https://golemlab.eu/graph/38548719')}, {'story': Value(uri:'https://golemlab.eu/graph/38600304')}, {'story': Value(uri:'https://golemlab.eu/graph/38833332')}, {'story': Value(uri:'https://golemlab.eu/graph/3900505')}, {'story': Value(uri:'https://golemlab.eu/graph/39091455')}, {'story': Value(uri:'https://golemlab.eu/graph/39162669')}, {'story': Value(uri:'https://golemlab.eu/graph/39330327')}, {'story': Value(uri:'https://golemlab.eu/graph/39336318')}, {'story': Value(uri:'https://golemlab.eu/graph/39439299')}, {'story': Value(uri:'https://golemlab.eu/graph/39499836')}, {'story': Value(uri:'https://golemlab.eu/graph/39503382')}, {'story': Value(uri:'https://golemlab.eu/graph/39665463')}, {'story': Value(uri:'https://golemlab.eu/graph/39741639')}, {'story': Value(uri:'https://golemlab.eu/graph/39743112')}, {'story': Value(uri:'https://golemlab.eu/graph/39801522')}, {'story': Value(uri:'https://golemlab.eu/graph/39802386')}, {'story': Value(uri:'https://golemlab.eu/graph/39960885')}, {'story': Value(uri:'https://golemlab.eu/graph/39994008')}, {'story': Value(uri:'https://golemlab.eu/graph/40039347')}, {'story': Value(uri:'https://golemlab.eu/graph/40078596')}, {'story': Value(uri:'https://golemlab.eu/graph/40096032')}, {'story': Value(uri:'https://golemlab.eu/graph/40173633')}, {'story': Value(uri:'https://golemlab.eu/graph/40454340')}, {'story': Value(uri:'https://golemlab.eu/graph/40591380')}, {'story': Value(uri:'https://golemlab.eu/graph/40735074')}, {'story': Value(uri:'https://golemlab.eu/graph/40755051')}, {'story': Value(uri:'https://golemlab.eu/graph/40787472')}, {'story': Value(uri:'https://golemlab.eu/graph/40814703')}, {'story': Value(uri:'https://golemlab.eu/graph/40828758')}, {'story': Value(uri:'https://golemlab.eu/graph/40870797')}, {'story': Value(uri:'https://golemlab.eu/graph/40872153')}, {'story': Value(uri:'https://golemlab.eu/graph/40991628')}, {'story': Value(uri:'https://golemlab.eu/graph/41018784')}, {'story': Value(uri:'https://golemlab.eu/graph/41047758')}, {'story': Value(uri:'https://golemlab.eu/graph/41071041')}, {'story': Value(uri:'https://golemlab.eu/graph/41115300')}, {'story': Value(uri:'https://golemlab.eu/graph/41115390')}, {'story': Value(uri:'https://golemlab.eu/graph/41115417')}, {'story': Value(uri:'https://golemlab.eu/graph/41129121')}, {'story': Value(uri:'https://golemlab.eu/graph/41191485')}, {'story': Value(uri:'https://golemlab.eu/graph/41229654')}, {'story': Value(uri:'https://golemlab.eu/graph/41229723')}, {'story': Value(uri:'https://golemlab.eu/graph/41276730')}, {'story': Value(uri:'https://golemlab.eu/graph/41292576')}, {'story': Value(uri:'https://golemlab.eu/graph/41323137')}, {'story': Value(uri:'https://golemlab.eu/graph/41365284')}, {'story': Value(uri:'https://golemlab.eu/graph/41365314')}, {'story': Value(uri:'https://golemlab.eu/graph/41425170')}, {'story': Value(uri:'https://golemlab.eu/graph/41477796')}, {'story': Value(uri:'https://golemlab.eu/graph/41583597')}, {'story': Value(uri:'https://golemlab.eu/graph/41607396')}, {'story': Value(uri:'https://golemlab.eu/graph/41623458')}, {'story': Value(uri:'https://golemlab.eu/graph/4372682')}, {'story': Value(uri:'https://golemlab.eu/graph/4426592')}, {'story': Value(uri:'https://golemlab.eu/graph/4430729')}, {'story': Value(uri:'https://golemlab.eu/graph/4557273')}, {'story': Value(uri:'https://golemlab.eu/graph/4689836')}, {'story': Value(uri:'https://golemlab.eu/graph/5018827')}, {'story': Value(uri:'https://golemlab.eu/graph/5101967')}, {'story': Value(uri:'https://golemlab.eu/graph/5150858')}, {'story': Value(uri:'https://golemlab.eu/graph/5681902')}, {'story': Value(uri:'https://golemlab.eu/graph/6930385')}, {'story': Value(uri:'https://golemlab.eu/graph/6955669')}, {'story': Value(uri:'https://golemlab.eu/graph/7011553')}, {'story': Value(uri:'https://golemlab.eu/graph/7099090')}, {'story': Value(uri:'https://golemlab.eu/graph/7177166')}, {'story': Value(uri:'https://golemlab.eu/graph/7242481')}, {'story': Value(uri:'https://golemlab.eu/graph/7307002')}, {'story': Value(uri:'https://golemlab.eu/graph/7375651')}, {'story': Value(uri:'https://golemlab.eu/graph/7619296')}, {'story': Value(uri:'https://golemlab.eu/graph/7934062')}, {'story': Value(uri:'https://golemlab.eu/graph/807471')}, {'story': Value(uri:'https://golemlab.eu/graph/807477')}, {'story': Value(uri:'https://golemlab.eu/graph/8123638')}, {'story': Value(uri:'https://golemlab.eu/graph/8841037')}, {'story': Value(uri:'https://golemlab.eu/graph/8852296')}, {'story': Value(uri:'https://golemlab.eu/graph/9070339')}, {'story': Value(uri:'https://golemlab.eu/graph/9456473')}, {'story': Value(uri:'https://golemlab.eu/graph/9459452')}, {'story': Value(uri:'https://golemlab.eu/graph/9563462')}, {'story': Value(uri:'https://golemlab.eu/graph/956664')}, {'story': Value(uri:'https://golemlab.eu/graph/9657077')}, {'story': Value(uri:'https://golemlab.eu/graph/26024608')}, {'story': Value(uri:'https://golemlab.eu/graph/36435844')}, {'story': Value(uri:'https://golemlab.eu/graph/12533824')}, {'story': Value(uri:'https://golemlab.eu/graph/40790427')}, {'story': Value(uri:'https://golemlab.eu/graph/29151873')}, {'story': Value(uri:'https://golemlab.eu/graph/19374073')}, {'story': Value(uri:'https://golemlab.eu/graph/34550131')}, {'story': Value(uri:'https://golemlab.eu/graph/41010972')}, {'story': Value(uri:'https://golemlab.eu/graph/27200335')}, {'story': Value(uri:'https://golemlab.eu/graph/37892302')}, {'story': Value(uri:'https://golemlab.eu/graph/10342950')}, {'story': Value(uri:'https://golemlab.eu/graph/25676068')}, {'story': Value(uri:'https://golemlab.eu/graph/26341423')}, {'story': Value(uri:'https://golemlab.eu/graph/22061731')}, {'story': Value(uri:'https://golemlab.eu/graph/22190773')}, {'story': Value(uri:'https://golemlab.eu/graph/28526253')}, {'story': Value(uri:'https://golemlab.eu/graph/37912612')}, {'story': Value(uri:'https://golemlab.eu/graph/29581935')}, {'story': Value(uri:'https://golemlab.eu/graph/29698104')}, {'story': Value(uri:'https://golemlab.eu/graph/13723080')}, {'story': Value(uri:'https://golemlab.eu/graph/14521887')}, {'story': Value(uri:'https://golemlab.eu/graph/6841699')}, {'story': Value(uri:'https://golemlab.eu/graph/38027401')}, {'story': Value(uri:'https://golemlab.eu/graph/41614062')}, {'story': Value(uri:'https://golemlab.eu/graph/25718452')}, {'story': Value(uri:'https://golemlab.eu/graph/25739644')}, {'story': Value(uri:'https://golemlab.eu/graph/40837113')}, {'story': Value(uri:'https://golemlab.eu/graph/29393841')}, {'story': Value(uri:'https://golemlab.eu/graph/17770280')}, {'story': Value(uri:'https://golemlab.eu/graph/22582756')}, {'story': Value(uri:'https://golemlab.eu/graph/16161869')}, {'story': Value(uri:'https://golemlab.eu/graph/25710709')}, {'story': Value(uri:'https://golemlab.eu/graph/25860676')}, {'story': Value(uri:'https://golemlab.eu/graph/32984068')}, {'story': Value(uri:'https://golemlab.eu/graph/31770529')}, {'story': Value(uri:'https://golemlab.eu/graph/9814517')}, {'story': Value(uri:'https://golemlab.eu/graph/22256677')}, {'story': Value(uri:'https://golemlab.eu/graph/8435473')}, {'story': Value(uri:'https://golemlab.eu/graph/35918755')}, {'story': Value(uri:'https://golemlab.eu/graph/27484834')}, {'story': Value(uri:'https://golemlab.eu/graph/25489603')}, {'story': Value(uri:'https://golemlab.eu/graph/29214087')}, {'story': Value(uri:'https://golemlab.eu/graph/29214273')}, {'story': Value(uri:'https://golemlab.eu/graph/20399167')}, {'story': Value(uri:'https://golemlab.eu/graph/39654507')}, {'story': Value(uri:'https://golemlab.eu/graph/33396001')}, {'story': Value(uri:'https://golemlab.eu/graph/33421954')}, {'story': Value(uri:'https://golemlab.eu/graph/10860795')}, {'story': Value(uri:'https://golemlab.eu/graph/17518544')}, {'story': Value(uri:'https://golemlab.eu/graph/18220175')}, {'story': Value(uri:'https://golemlab.eu/graph/23625067')}, {'story': Value(uri:'https://golemlab.eu/graph/23625343')}, {'story': Value(uri:'https://golemlab.eu/graph/29208111')}, {'story': Value(uri:'https://golemlab.eu/graph/30171537')}, {'story': Value(uri:'https://golemlab.eu/graph/34238200')}, {'story': Value(uri:'https://golemlab.eu/graph/9604286')}, {'story': Value(uri:'https://golemlab.eu/graph/7361524')}, {'story': Value(uri:'https://golemlab.eu/graph/29714415')}, {'story': Value(uri:'https://golemlab.eu/graph/10503699')}, {'story': Value(uri:'https://golemlab.eu/graph/9630821')}, {'story': Value(uri:'https://golemlab.eu/graph/27672902')}]	0	1	1
322	322	es	Muéstrame historias del fandom Like Shooting Stars In The Twilight	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?title WHERE {  ?story golem:fandom ""Like Shooting Stars In The Twilight"" . ?story golem:title ?title . }"	[{'title': Value(literal:'苦柚')}]	322	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene Family is what you make it?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Family is what you make it"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia No Hero?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""No Hero"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: Muéstrame historias del fandom Like Shooting Stars In The Twilight

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?story WHERE { 
?story golem:fandom ""Like Shooting Stars In The Twilight"" . 
}
"	[{'story': Value(uri:'https://golemlab.eu/graph/39734277')}]	0	1	1
323	323	es	Muéstrame historias del fandom Xuan-Yuan Sword (Video Games)	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?title WHERE {  ?story golem:fandom ""Xuan-Yuan Sword (Video Games)"" . ?story golem:title ?title . }"	[{'title': Value(literal:'山有木兮')}]	323	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene Family is what you make it?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Family is what you make it"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia No Hero?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""No Hero"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: Muéstrame historias del fandom Xuan-Yuan Sword (Video Games)

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?story WHERE { 
?story golem:fandom ""Xuan-Yuan Sword (Video Games)"" . 
}
"	[{'story': Value(uri:'https://golemlab.eu/graph/20999237')}]	0	1	1
324	324	es	Muéstrame historias del fandom 百合 灵异 美少女战士	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?title WHERE {  ?story golem:fandom ""百合 灵异 美少女战士"" . ?story golem:title ?title . }"	[{'title': Value(literal:'NE：无明之洞')}]	324	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene Family is what you make it?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Family is what you make it"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia No Hero?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""No Hero"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: Muéstrame historias del fandom 百合 灵异 美少女战士

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?story WHERE { 
  ?story golem:fandom ""百合"" . 
  ?story golem:series ""灵异"" . 
  ?story golem:characters ""美少女战士"" . 
}
"	[]	0	0	1
325	325	es	Muéstrame historias del fandom 年轻的教宗	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?title WHERE {  ?story golem:fandom ""年轻的教宗"" . ?story golem:title ?title . }"	[{'title': Value(literal:'only a genius will love a man like you')}]	325	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene Family is what you make it?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Family is what you make it"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia No Hero?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""No Hero"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: Muéstrame historias del fandom 年轻的教宗

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?story WHERE { 
?story golem:fandom ""年轻的教宗"" . 
}
"	[{'story': Value(uri:'https://golemlab.eu/graph/35688637')}]	0	1	1
326	326	es	Muéstrame historias del fandom Inumaki Toge/Original Character(s) - Fandom	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?title WHERE {  ?story golem:fandom ""Inumaki Toge/Original Character(s) - Fandom"" . ?story golem:title ?title . }"	[{'title': Value(literal:'【咒回乙女】【咒术回战】与狗卷棘睡觉  上')}]	326	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene Family is what you make it?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Family is what you make it"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia No Hero?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""No Hero"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: Muéstrame historias del fandom Inumaki Toge/Original Character(s) - Fandom

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?story WHERE { 
?story golem:fandom ""Inumaki Toge/Original Character(s) - Fandom"" . }
"	[{'story': Value(uri:'https://golemlab.eu/graph/33401569')}]	0	1	1
327	327	es	Muéstrame historias del fandom Go Princess Go	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?title WHERE {  ?story golem:fandom ""Go Princess Go"" . ?story golem:title ?title . }"	[{'title': Value(literal:'无题（纯玻璃渣，慎入）')}, {'title': Value(literal:'《最是情字留不住》')}, {'title': Value(literal:'兴圣宫起居注')}, {'title': Value(literal:'Императрица')}, {'title': Value(literal:'Untouchable')}, {'title': Value(literal:'Гимн попаданцев')}]	327	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene Family is what you make it?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Family is what you make it"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia No Hero?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""No Hero"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: Muéstrame historias del fandom Go Princess Go

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?story WHERE { 
?story golem:fandom ""Go Princess Go"" . 
}
"	[{'story': Value(uri:'https://golemlab.eu/graph/24618442')}, {'story': Value(uri:'https://golemlab.eu/graph/41579259')}, {'story': Value(uri:'https://golemlab.eu/graph/24618025')}, {'story': Value(uri:'https://golemlab.eu/graph/20058256')}, {'story': Value(uri:'https://golemlab.eu/graph/28785657')}, {'story': Value(uri:'https://golemlab.eu/graph/32663668')}]	0	1	1
328	328	es	Muéstrame historias del fandom 方子一 - Fandom	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?title WHERE {  ?story golem:fandom ""方子一 - Fandom"" . ?story golem:title ?title . }"	[{'title': Value(literal:'明明我才是alpha好吗！24章番外')}, {'title': Value(literal:'《明明我才是alpha好吗！》第13章')}]	328	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene Family is what you make it?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Family is what you make it"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia No Hero?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""No Hero"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: Muéstrame historias del fandom 方子一 - Fandom

Query:
"	"
prefix golem: <https://golemlab.eu/graph/>
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>
SELECT DISTINCT ?story WHERE { 
    ?story golem:fandom ""方子一 - Fandom"" . 
}
"	[{'story': Value(uri:'https://golemlab.eu/graph/20770139')}, {'story': Value(uri:'https://golemlab.eu/graph/20488325')}]	0	1	1
329	329	es	Muéstrame historias del fandom Hóng Huāng Lì - zhttty	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?title WHERE {  ?story golem:fandom ""Hóng Huāng Lì - zhttty"" . ?story golem:title ?title . }"	[{'title': Value(literal:'背面是火')}, {'title': Value(literal:'【男古x女钧】pwp')}, {'title': Value(literal:'风起天阑')}]	329	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene Family is what you make it?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Family is what you make it"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia No Hero?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""No Hero"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: Muéstrame historias del fandom Hóng Huāng Lì - zhttty

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?story WHERE { 
?story golem:fandom ""Hóng Huāng Lì - zhttty"" . 
}
"	[{'story': Value(uri:'https://golemlab.eu/graph/37054321')}, {'story': Value(uri:'https://golemlab.eu/graph/35255377')}, {'story': Value(uri:'https://golemlab.eu/graph/29419173')}]	0	1	1
331	331	es	Muéstrame historias del universo 2.5次元	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?title  WHERE {  ?story golem:fandom ""2.5次元"" . ?story golem:title ?title . }"	[{'title': Value(literal:'近视')}, {'title': Value(literal:'【和牧】休息室里到底发生了什么')}, {'title': Value(literal:'【和牧】交心')}, {'title': Value(literal:'女友视角引发的惨案')}]	331	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene Family is what you make it?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Family is what you make it"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia No Hero?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""No Hero"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: Muéstrame historias del universo 2.5次元

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?story WHERE { 
?story golem:fandom ""2.5次元"" . 
}
"	[{'story': Value(uri:'https://golemlab.eu/graph/20952371')}, {'story': Value(uri:'https://golemlab.eu/graph/22504987')}, {'story': Value(uri:'https://golemlab.eu/graph/30874151')}, {'story': Value(uri:'https://golemlab.eu/graph/23051221')}]	0	1	1
332	332	es	Muéstrame historias del universo porduce 101 japan	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?title  WHERE {  ?story golem:fandom ""porduce 101 japan"" . ?story golem:title ?title . }"	[{'title': Value(literal:'藏狐攻略')}]	332	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene Family is what you make it?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Family is what you make it"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia No Hero?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""No Hero"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: Muéstrame historias del universo porduce 101 japan

Query:
"	"
prefix golem: <https://golemlab.eu/graph/>  
prefix dc: <http://purl.org/dc/terms/>  
prefix gc: <https://ontology.golemlab.eu/>  
SELECT DISTINCT ?title WHERE { 
  ?story golem:publisher ""101 japan"" . 
  ?story golem:title ?title . 
}
"	[]	0	0	1
333	333	es	Muéstrame historias del universo 贩罪 - 三天两觉	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?title  WHERE {  ?story golem:fandom ""贩罪 - 三天两觉"" . ?story golem:title ?title . }"	[{'title': Value(literal:'【茶天】无路可逃')}, {'title': Value(literal:'【茶天】暴力影片')}, {'title': Value(literal:'【茶天】本能回归')}, {'title': Value(literal:'【茶天】限制级的短篇故事集')}, {'title': Value(literal:'【mob天】开化')}]	333	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene Family is what you make it?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Family is what you make it"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia No Hero?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""No Hero"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: Muéstrame historias del universo 贩罪 - 三天两觉

Query:
"	"
prefix golem: <https://golemlab.eu/graph/>
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>
SELECT DISTINCT ?title WHERE { 
  ?story gc:fandom ""贩罪 - 三天两觉"" . 
  ?story golem:title ?title . 
}
"	[]	0	0	1
334	334	es	Muéstrame historias del universo Chris Evans-Fandom	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?title  WHERE {  ?story golem:fandom ""Chris Evans-Fandom"" . ?story golem:title ?title . }"	[{'title': Value(literal:'59分60秒（一发完）')}, {'title': Value(literal:'Ransom Drysdale: Relationship Struggle')}, {'title': Value(literal:'Sick baby')}, {'title': Value(literal:'【Evanstan】MANSERVANTS 男仆公司')}, {'title': Value(literal:'Frank Adler: Would you maybe?')}, {'title': Value(literal:'Challenging The Storm')}, {'title': Value(literal:'I Heard A Rumour....')}, {'title': Value(literal:'Club')}, {'title': Value(literal:'In Too Deep')}, {'title': Value(literal:'Meeting the Davis Family')}, {'title': Value(literal:'Alone')}, {'title': Value(literal:'Teacher Conference')}, {'title': Value(literal:'A Weekend With The Avengers')}, {'title': Value(literal:'Love Me Harder')}]	334	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene Family is what you make it?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Family is what you make it"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia No Hero?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""No Hero"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: Muéstrame historias del universo Chris Evans-Fandom

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?story WHERE { 
  ?story golem:fandom ""Chris Evans-Fandom"" . 
}
"	[{'story': Value(uri:'https://golemlab.eu/graph/9233897')}, {'story': Value(uri:'https://golemlab.eu/graph/24283462')}, {'story': Value(uri:'https://golemlab.eu/graph/36789223')}, {'story': Value(uri:'https://golemlab.eu/graph/2125077')}, {'story': Value(uri:'https://golemlab.eu/graph/24018700')}, {'story': Value(uri:'https://golemlab.eu/graph/3948490')}, {'story': Value(uri:'https://golemlab.eu/graph/26363602')}, {'story': Value(uri:'https://golemlab.eu/graph/2698991')}, {'story': Value(uri:'https://golemlab.eu/graph/3869335')}, {'story': Value(uri:'https://golemlab.eu/graph/7535071')}, {'story': Value(uri:'https://golemlab.eu/graph/7826812')}, {'story': Value(uri:'https://golemlab.eu/graph/8151194')}, {'story': Value(uri:'https://golemlab.eu/graph/34724974')}, {'story': Value(uri:'https://golemlab.eu/graph/14943663')}]	0	1	1
335	335	es	Muéstrame historias del universo 青蓝 - Fandom	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?title  WHERE {  ?story golem:fandom ""青蓝 - Fandom"" . ?story golem:title ?title . }"	[{'title': Value(literal:'当俱乐部经理接到电话时在想什么2')}, {'title': Value(literal:'蓝色黄昏')}]	335	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene Family is what you make it?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Family is what you make it"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia No Hero?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""No Hero"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: Muéstrame historias del universo 青蓝 - Fandom

Query:
"	"
prefix golem: <https://golemlab.eu/graph/>  
prefix dc: <http://purl.org/dc/terms/>  
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?story WHERE { 
  ?story golem:fandom ""青蓝 - Fandom"" . 
}
"	[{'story': Value(uri:'https://golemlab.eu/graph/27122128')}, {'story': Value(uri:'https://golemlab.eu/graph/28563594')}]	0	1	1
336	336	es	Muéstrame historias del universo 肉-fandom	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?title  WHERE {  ?story golem:fandom ""肉-fandom"" . ?story golem:title ?title . }"	[{'title': Value(literal:'迷之酵素1')}]	336	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene Family is what you make it?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Family is what you make it"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia No Hero?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""No Hero"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: Muéstrame historias del universo 肉-fandom

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?story WHERE { 
?story golem:fandom ""肉-fandom"" .
}
"	[{'story': Value(uri:'https://golemlab.eu/graph/3406637')}]	0	1	1
337	337	es	Muéstrame historias del universo 天堂2 OL	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?title  WHERE {  ?story golem:fandom ""天堂2 OL"" . ?story golem:title ?title . }"	[{'title': Value(literal:'黑精灵式的爱情')}]	337	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene Family is what you make it?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Family is what you make it"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia No Hero?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""No Hero"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: Muéstrame historias del universo 天堂2 OL

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?story WHERE { 
?story golem:fandom ""天堂2 OL"" . 
}
"	[{'story': Value(uri:'https://golemlab.eu/graph/17927978')}]	0	1	1
338	338	es	Muéstrame historias del universo Mole's World (Video Game)	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?title  WHERE {  ?story golem:fandom ""Mole's World (Video Game)"" . ?story golem:title ?title . }"	[{'title': Value(literal:'“淘米天天不给米”')}, {'title': Value(literal:'如坠梦中')}, {'title': Value(literal:'[库洛中心]只有山知道')}, {'title': Value(literal:'震惊！新兵弗兰克的名字一朝之间全团尽知！原因竟是………')}, {'title': Value(literal:'忏悔者亲吻*')}, {'title': Value(literal:'破云')}, {'title': Value(literal:'罗记串串香')}, {'title': Value(literal:'【瑞R｜pwp】海的儿子')}, {'title': Value(literal:'假想敌')}, {'title': Value(literal:'seven deadly sins 【上】')}, {'title': Value(literal:'【R瑞】野火(R18)')}, {'title': Value(literal:'【R瑞】龙湖')}, {'title': Value(literal:'河心岛')}, {'title': Value(literal:'龙与研究员')}, {'title': Value(literal:'【瑞R】神秘人')}, {'title': Value(literal:'今夜无人入眠')}, {'title': Value(literal:'一件怪事')}, {'title': Value(literal:'平行恋人')}, {'title': Value(literal:'三个秘密')}, {'title': Value(literal:'爱人者溶于落日')}, {'title': Value(literal:'夜风')}, {'title': Value(literal:'【菩库】爱人错过')}, {'title': Value(literal:'红缨摇曳时（作者：雨云欣渺）')}, {'title': Value(literal:'【R瑞】Flesh')}, {'title': Value(literal:'【R瑞】Ero Event!!!!')}, {'title': Value(literal:'海上的卡托布莱帕斯')}, {'title': Value(literal:'访客')}, {'title': Value(literal:'【R瑞】色之岚')}, {'title': Value(literal:'【摩爾手遊/瑞夏】騎士的準則')}, {'title': Value(literal:'魅影（作者：雨云欣渺）')}, {'title': Value(literal:'等待浪花')}, {'title': Value(literal:'【瑞R】不坦率恋人')}, {'title': Value(literal:'【R瑞】MILK')}, {'title': Value(literal:'怪盗三面相')}, {'title': Value(literal:'記憶斷片')}, {'title': Value(literal:'【R瑞】无性之鸩')}]	338	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene Family is what you make it?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Family is what you make it"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia No Hero?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""No Hero"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: Muéstrame historias del universo Mole's World (Video Game)

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?story WHERE { 
  ?story gc:fandom ""Mole's World (Video Game)"" . 
}
"	[]	0	0	1
339	339	es	Muéstrame historias del universo Persischstunden (2020)	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?title  WHERE {  ?story golem:fandom ""Persischstunden (2020)"" . ?story golem:title ?title . }"	[{'title': Value(literal:'假面派对｜A Masquerade Party')}, {'title': Value(literal:'He Was but One Hour Mine | 他只是我的片刻时光')}]	339	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene Family is what you make it?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Family is what you make it"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia No Hero?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""No Hero"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: Muéstrame historias del universo Persischstunden (2020)

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?story WHERE { 
    ?story dc:publisher ""Persischstunden (2020)"" . 
}
"	[]	0	0	1
340	340	es	Muéstrame historias del universo We Are 1 (Dance Group)	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?title  WHERE {  ?story golem:fandom ""We Are 1 (Dance Group)"" . ?story golem:title ?title . }"	[{'title': Value(literal:'The One With The Pink Cap')}]	340	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene Family is what you make it?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Family is what you make it"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia No Hero?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""No Hero"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: Muéstrame historias del universo We Are 1 (Dance Group)

Query:
"	"
prefix golem: <https://golemlab.eu/graph/>  
prefix dc: <http://purl.org/dc/terms/>  
prefix gc: <https://ontology.golemlab.eu/>   
SELECT DISTINCT ?story WHERE { 
  ?story golem:fandom ""We Are 1 (Dance Group)"" . 
}
"	[{'story': Value(uri:'https://golemlab.eu/graph/11166429')}]	0	1	1
342	342	es	¿Está completada la historia Powerful & Pure?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Powerful & Pure"" . ?story golem:publicationStatus ?status . }"	[{'status': Value(literal:'In-Progress')}]	342	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene Family is what you make it?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Family is what you make it"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia No Hero?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""No Hero"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Está completada la historia Powerful & Pure?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?status WHERE { 
?story golem:title ""Powerful & Pure"" . 
?story golem:publicationStatus ?status . 
}
"	[{'status': Value(literal:'In-Progress')}]	1	0	0
343	343	es	¿Está completada la historia Snape Watches the Puppy Bowl?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Snape Watches the Puppy Bowl"" . ?story golem:publicationStatus ?status . }"	[{'status': Value(literal:'Completed')}]	343	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene Family is what you make it?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Family is what you make it"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia No Hero?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""No Hero"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Está completada la historia Snape Watches the Puppy Bowl?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?status WHERE { 
  ?story golem:title ""Snape Watches the Puppy Bowl"" . 
  ?story golem:publicationStatus ?status . 
}
"	[{'status': Value(literal:'Completed')}]	1	0	0
344	344	es	¿Está completada la historia A Small Steep Valley?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }"	[{'status': Value(literal:'Completed')}]	344	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene Family is what you make it?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Family is what you make it"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia No Hero?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""No Hero"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Está completada la historia A Small Steep Valley?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?status WHERE { 
?story golem:title ""A Small Steep Valley"" . 
?story golem:publicationStatus ?status . 
}
"	[{'status': Value(literal:'Completed')}]	1	0	0
345	345	es	¿Está completada la historia No Hero?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""No Hero"" . ?story golem:publicationStatus ?status . }"	[{'status': Value(literal:'Completed')}, {'status': Value(literal:'In-Progress')}]	345	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene Family is what you make it?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Family is what you make it"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Está completada la historia No Hero?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?status WHERE { 
?story golem:title ""No Hero"" . 
?story golem:publicationStatus ?status . 
}
"	[{'status': Value(literal:'Completed')}, {'status': Value(literal:'In-Progress')}]	1	0	0
346	346	es	¿Está completada la historia Family, mental breakdowns and strawberry cake?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Family, mental breakdowns and strawberry cake"" . ?story golem:publicationStatus ?status . }"	[{'status': Value(literal:'Completed')}]	346	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene Family is what you make it?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Family is what you make it"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Está completada la historia Family, mental breakdowns and strawberry cake?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?status WHERE { 
  ?story golem:title ""Family, mental breakdowns and strawberry cake"" . 
  ?story golem:publicationStatus ?status . 
}
"	[{'status': Value(literal:'Completed')}]	1	0	0
347	347	es	¿Está completada la historia Harry Potter and the Sorcerer's Sweet Ass Ride?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Harry Potter and the Sorcerer's Sweet Ass Ride"" . ?story golem:publicationStatus ?status . }"	[{'status': Value(literal:'Completed')}]	347	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene Family is what you make it?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Family is what you make it"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Está completada la historia Harry Potter and the Sorcerer's Sweet Ass Ride?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?status WHERE { 
?story golem:title ""Harry Potter and the Sorcerer's Sweet Ass Ride"" . 
?story golem:publicationStatus ?status . 
}
"	[{'status': Value(literal:'Completed')}]	1	0	0
348	348	es	¿Está completada la historia Bae-watch?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Bae-watch"" . ?story golem:publicationStatus ?status . }"	[{'status': Value(literal:'Completed')}]	348	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene Family is what you make it?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Family is what you make it"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Está completada la historia Bae-watch?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?status WHERE { 
?story golem:title ""Bae-watch"" . 
?story golem:publicationStatus ?status . 
}
"	[{'status': Value(literal:'Completed')}]	1	0	0
349	349	es	¿Está completada la historia Encounter?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""Encounter"" . ?story golem:publicationStatus ?status . }"	[{'status': Value(literal:'In-Progress')}, {'status': Value(literal:'Completed')}]	349	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene Family is what you make it?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Family is what you make it"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Está completada la historia Encounter?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?status WHERE { 
?story golem:title ""Encounter"" . 
?story golem:publicationStatus ?status . 
}
"	[{'status': Value(literal:'In-Progress')}, {'status': Value(literal:'Completed')}]	1	0	0
350	350	es	¿Está completada la historia I will carry you, always?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""I will carry you, always"" . ?story golem:publicationStatus ?status . }"	[{'status': Value(literal:'Completed')}]	350	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene Family is what you make it?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Family is what you make it"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Está completada la historia I will carry you, always?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?status WHERE { 
?story golem:title ""I will carry you, always"" . 
?story golem:publicationStatus ?status . 
}
"	[{'status': Value(literal:'Completed')}]	1	0	0
351	351	es	¿Está completada la historia The Four Times Remus Lupin Didn't Have a Crush On A Black And The One Time He Did?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""The Four Times Remus Lupin Didn't Have a Crush On A Black And The One Time He Did"" . ?story golem:publicationStatus ?status . }"	[{'status': Value(literal:'Completed')}]	351	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene Family is what you make it?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Family is what you make it"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Está completada la historia The Four Times Remus Lupin Didn't Have a Crush On A Black And The One Time He Did?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?status WHERE { 
  ?story golem:title ""The Four Times Remus Lupin Didn't Have a Crush On A Black And The One Time He Did"" . 
  ?story golem:publicationStatus ?status . 
}
"	[{'status': Value(literal:'Completed')}]	1	0	0
353	353	es	¿Cuándo se publicó Non-Existent Meetings?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?date WHERE {  ?story golem:title ""Non-Existent Meetings"" . ?story golem:datePublished ?date . }"	[{'date': Value(literal:'2017-05-07')}]	353	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene Family is what you make it?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Family is what you make it"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Cuándo se publicó Non-Existent Meetings?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?datePublished WHERE { 
?story golem:title ""Non-Existent Meetings"" . 
?story dc:datePublished ?datePublished . }
"	[]	0	0	1
354	354	es	¿Cuándo se publicó Still Don't Fit?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?date WHERE {  ?story golem:title ""Still Don't Fit"" . ?story golem:datePublished ?date . }"	[{'date': Value(literal:'2020-11-09')}]	354	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene Family is what you make it?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Family is what you make it"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Cuándo se publicó Still Don't Fit?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?datePublished WHERE { 
?story golem:title ""Still Don't Fit"" . 
?story dc:date ?datePublished . 
}
"	[]	0	0	1
355	355	es	¿Cuándo se publicó Sugar and Smoke Rings?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?date WHERE {  ?story golem:title ""Sugar and Smoke Rings"" . ?story golem:datePublished ?date . }"	[{'date': Value(literal:'2018-06-07')}, {'date': Value(literal:'2020-04-04')}, {'date': Value(literal:'2021-12-11')}, {'date': Value(literal:'2019-10-13')}, {'date': Value(literal:'2020-08-31')}, {'date': Value(literal:'2021-03-27')}, {'date': Value(literal:'2021-04-10')}]	355	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene Family is what you make it?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Family is what you make it"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Cuándo se publicó Sugar and Smoke Rings?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?datePublished WHERE { 
  ?story golem:title ""Sugar and Smoke Rings"" . 
  ?story golem:datePublished ?datePublished . 
}
"	[{'datePublished': Value(literal:'2018-06-07')}, {'datePublished': Value(literal:'2020-04-04')}, {'datePublished': Value(literal:'2021-12-11')}, {'datePublished': Value(literal:'2019-10-13')}, {'datePublished': Value(literal:'2020-08-31')}, {'datePublished': Value(literal:'2021-03-27')}, {'datePublished': Value(literal:'2021-04-10')}]	0	1	1
356	356	es	¿Cuándo se publicó The Camp Counselor AU No One Asked For?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?date WHERE {  ?story golem:title ""The Camp Counselor AU No One Asked For"" . ?story golem:datePublished ?date . }"	[{'date': Value(literal:'2018-04-03')}]	356	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene Family is what you make it?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Family is what you make it"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Cuándo se publicó The Camp Counselor AU No One Asked For?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/>  
SELECT DISTINCT ?datePublished WHERE { 
?story golem:title ""The Camp Counselor AU No One Asked For"" . 
?story golem:datePublished ?datePublished . 
}
"	[{'datePublished': Value(literal:'2018-04-03')}]	0	1	1
357	357	es	¿Cuándo se publicó Under Water?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?date WHERE {  ?story golem:title ""Under Water"" . ?story golem:datePublished ?date . }"	[{'date': Value(literal:'2021-02-21')}, {'date': Value(literal:'2018-02-12')}, {'date': Value(literal:'2016-06-01')}, {'date': Value(literal:'2014-11-24')}, {'date': Value(literal:'2017-01-20')}, {'date': Value(literal:'2016-03-19')}, {'date': Value(literal:'2017-02-19')}, {'date': Value(literal:'2021-12-23')}, {'date': Value(literal:'2015-05-06')}, {'date': Value(literal:'2021-07-21')}, {'date': Value(literal:'2020-03-01')}, {'date': Value(literal:'2020-06-18')}, {'date': Value(literal:'2018-09-16')}, {'date': Value(literal:'2017-04-06')}, {'date': Value(literal:'2021-10-28')}, {'date': Value(literal:'2019-12-26')}, {'date': Value(literal:'2019-08-08')}, {'date': Value(literal:'2018-03-31')}]	357	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene Family is what you make it?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Family is what you make it"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Cuándo se publicó Under Water?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?datePublished WHERE { 
?story golem:title ""Under Water"" . 
?story golem:datePublished ?datePublished . 
}
"	[{'datePublished': Value(literal:'2021-02-21')}, {'datePublished': Value(literal:'2018-02-12')}, {'datePublished': Value(literal:'2016-06-01')}, {'datePublished': Value(literal:'2014-11-24')}, {'datePublished': Value(literal:'2017-01-20')}, {'datePublished': Value(literal:'2016-03-19')}, {'datePublished': Value(literal:'2017-02-19')}, {'datePublished': Value(literal:'2021-12-23')}, {'datePublished': Value(literal:'2015-05-06')}, {'datePublished': Value(literal:'2021-07-21')}, {'datePublished': Value(literal:'2020-03-01')}, {'datePublished': Value(literal:'2020-06-18')}, {'datePublished': Value(literal:'2018-09-16')}, {'datePublished': Value(literal:'2017-04-06')}, {'datePublished': Value(literal:'2021-10-28')}, {'datePublished': Value(literal:'2019-12-26')}, {'datePublished': Value(literal:'2019-08-08')}, {'datePublished': Value(literal:'2018-03-31')}]	0	1	1
358	358	es	¿Cuándo se publicó Hold Me One More Time?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?date WHERE {  ?story golem:title ""Hold Me One More Time"" . ?story golem:datePublished ?date . }"	[{'date': Value(literal:'2018-04-27')}]	358	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene Family is what you make it?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Family is what you make it"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Cuándo se publicó Hold Me One More Time?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?datePublished WHERE { 
?story golem:title ""Hold Me One More Time"" . 
?story golem:datePublished ?datePublished . 
}
"	[{'datePublished': Value(literal:'2018-04-27')}]	0	1	1
359	359	es	¿Cuándo se publicó Tucked Into the Night Sky?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?date WHERE {  ?story golem:title ""Tucked Into the Night Sky"" . ?story golem:datePublished ?date . }"	[{'date': Value(literal:'2022-09-22')}]	359	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene Family is what you make it?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Family is what you make it"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Cuándo se publicó Tucked Into the Night Sky?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/>  
SELECT DISTINCT ?datePublished WHERE { 
  ?story golem:title ""Tucked Into the Night Sky"" . 
  ?story golem:datePublished ?datePublished . 
}
"	[{'datePublished': Value(literal:'2022-09-22')}]	0	1	1
360	360	es	¿Cuándo se publicó the silhouettes of our memories?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?date WHERE {  ?story golem:title ""the silhouettes of our memories"" . ?story golem:datePublished ?date . }"	[{'date': Value(literal:'2022-01-14')}]	360	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene Family is what you make it?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Family is what you make it"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Cuándo se publicó the silhouettes of our memories?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?datePublished WHERE { 
?story golem:title ""the silhouettes of our memories"" . 
?story dc:date ?datePublished . 
}
"	[]	0	0	1
361	361	es	¿Cuándo se publicó The Things We Do?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?date WHERE {  ?story golem:title ""The Things We Do"" . ?story golem:datePublished ?date . }"	[{'date': Value(literal:'2018-07-14')}, {'date': Value(literal:'2018-06-02')}, {'date': Value(literal:'2018-10-04')}, {'date': Value(literal:'2009-11-10')}, {'date': Value(literal:'2018-02-23')}, {'date': Value(literal:'2021-08-22')}, {'date': Value(literal:'2010-02-25')}, {'date': Value(literal:'2021-08-12')}, {'date': Value(literal:'2020-01-02')}, {'date': Value(literal:'2021-12-07')}, {'date': Value(literal:'2007-08-07')}, {'date': Value(literal:'2017-08-21')}, {'date': Value(literal:'2012-12-04')}, {'date': Value(literal:'2019-06-28')}, {'date': Value(literal:'2019-07-02')}, {'date': Value(literal:'2013-11-17')}, {'date': Value(literal:'2016-02-01')}, {'date': Value(literal:'2016-01-28')}, {'date': Value(literal:'2016-08-12')}, {'date': Value(literal:'2013-09-12')}, {'date': Value(literal:'2018-09-05')}, {'date': Value(literal:'2019-07-15')}, {'date': Value(literal:'2021-10-23')}, {'date': Value(literal:'2014-02-12')}, {'date': Value(literal:'2008-01-05')}, {'date': Value(literal:'2017-06-03')}, {'date': Value(literal:'2010-03-04')}, {'date': Value(literal:'2019-07-08')}, {'date': Value(literal:'2018-03-24')}, {'date': Value(literal:'2017-08-27')}, {'date': Value(literal:'2016-09-01')}, {'date': Value(literal:'2020-02-26')}, {'date': Value(literal:'2010-01-28')}, {'date': Value(literal:'2013-05-26')}, {'date': Value(literal:'2013-04-16')}, {'date': Value(literal:'2019-05-02')}, {'date': Value(literal:'2021-05-24')}, {'date': Value(literal:'2009-11-29')}, {'date': Value(literal:'2016-01-26')}, {'date': Value(literal:'2017-08-06')}, {'date': Value(literal:'2014-12-20')}, {'date': Value(literal:'2015-06-26')}, {'date': Value(literal:'2019-06-14')}, {'date': Value(literal:'2011-10-30')}, {'date': Value(literal:'2021-08-05')}, {'date': Value(literal:'2019-12-27')}, {'date': Value(literal:'2018-05-08')}, {'date': Value(literal:'2019-07-25')}, {'date': Value(literal:'2022-03-07')}, {'date': Value(literal:'2018-04-20')}, {'date': Value(literal:'2021-10-19')}, {'date': Value(literal:'2015-08-10')}, {'date': Value(literal:'2021-03-15')}, {'date': Value(literal:'2022-02-16')}, {'date': Value(literal:'2008-08-07')}, {'date': Value(literal:'2022-01-31')}, {'date': Value(literal:'2022-07-24')}, {'date': Value(literal:'2015-09-07')}, {'date': Value(literal:'2019-05-09')}, {'date': Value(literal:'2018-02-18')}]	361	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene Family is what you make it?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Family is what you make it"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Cuándo se publicó The Things We Do?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?datePublished WHERE { 
?story golem:title ""The Things We Do"" . 
?story golem:datePublished ?datePublished . 
}
"	[{'datePublished': Value(literal:'2018-07-14')}, {'datePublished': Value(literal:'2018-06-02')}, {'datePublished': Value(literal:'2018-10-04')}, {'datePublished': Value(literal:'2009-11-10')}, {'datePublished': Value(literal:'2018-02-23')}, {'datePublished': Value(literal:'2021-08-22')}, {'datePublished': Value(literal:'2010-02-25')}, {'datePublished': Value(literal:'2021-08-12')}, {'datePublished': Value(literal:'2020-01-02')}, {'datePublished': Value(literal:'2021-12-07')}, {'datePublished': Value(literal:'2007-08-07')}, {'datePublished': Value(literal:'2017-08-21')}, {'datePublished': Value(literal:'2012-12-04')}, {'datePublished': Value(literal:'2019-06-28')}, {'datePublished': Value(literal:'2019-07-02')}, {'datePublished': Value(literal:'2013-11-17')}, {'datePublished': Value(literal:'2016-02-01')}, {'datePublished': Value(literal:'2016-01-28')}, {'datePublished': Value(literal:'2016-08-12')}, {'datePublished': Value(literal:'2013-09-12')}, {'datePublished': Value(literal:'2018-09-05')}, {'datePublished': Value(literal:'2019-07-15')}, {'datePublished': Value(literal:'2021-10-23')}, {'datePublished': Value(literal:'2014-02-12')}, {'datePublished': Value(literal:'2008-01-05')}, {'datePublished': Value(literal:'2017-06-03')}, {'datePublished': Value(literal:'2010-03-04')}, {'datePublished': Value(literal:'2019-07-08')}, {'datePublished': Value(literal:'2018-03-24')}, {'datePublished': Value(literal:'2017-08-27')}, {'datePublished': Value(literal:'2016-09-01')}, {'datePublished': Value(literal:'2020-02-26')}, {'datePublished': Value(literal:'2010-01-28')}, {'datePublished': Value(literal:'2013-05-26')}, {'datePublished': Value(literal:'2013-04-16')}, {'datePublished': Value(literal:'2019-05-02')}, {'datePublished': Value(literal:'2021-05-24')}, {'datePublished': Value(literal:'2009-11-29')}, {'datePublished': Value(literal:'2016-01-26')}, {'datePublished': Value(literal:'2017-08-06')}, {'datePublished': Value(literal:'2014-12-20')}, {'datePublished': Value(literal:'2015-06-26')}, {'datePublished': Value(literal:'2019-06-14')}, {'datePublished': Value(literal:'2011-10-30')}, {'datePublished': Value(literal:'2021-08-05')}, {'datePublished': Value(literal:'2019-12-27')}, {'datePublished': Value(literal:'2018-05-08')}, {'datePublished': Value(literal:'2019-07-25')}, {'datePublished': Value(literal:'2022-03-07')}, {'datePublished': Value(literal:'2018-04-20')}, {'datePublished': Value(literal:'2021-10-19')}, {'datePublished': Value(literal:'2015-08-10')}, {'datePublished': Value(literal:'2021-03-15')}, {'datePublished': Value(literal:'2022-02-16')}, {'datePublished': Value(literal:'2008-08-07')}, {'datePublished': Value(literal:'2022-01-31')}, {'datePublished': Value(literal:'2022-07-24')}, {'datePublished': Value(literal:'2015-09-07')}, {'datePublished': Value(literal:'2019-05-09')}, {'datePublished': Value(literal:'2018-02-18')}]	0	1	1
362	362	es	¿Cuándo se publicó [Art] A Stroll Through 1920s Diagon Alley?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?date WHERE {  ?story golem:title ""[Art] A Stroll Through 1920s Diagon Alley"" . ?story golem:datePublished ?date . }"	[{'date': Value(literal:'2020-10-08')}]	362	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene Family is what you make it?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Family is what you make it"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Cuándo se publicó [Art] A Stroll Through 1920s Diagon Alley?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
SELECT DISTINCT ?datePublished WHERE { 
  ?story golem:title ""[Art] A Stroll Through 1920s Diagon Alley"" . 
  ?story dc:datePublished ?datePublished . 
}
"	[]	0	0	1
363	363	es	¿Cuál es la historia más reciente?	prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?title WHERE {  ?story golem:datePublished ?date . ?story golem:title ?title . } ORDER BY DESC(?date) LIMIT 1	[{'title': Value(literal:'𝓑𝓾𝓽𝓽𝓮𝓻𝓯𝓵𝓲𝓮𝓼 𝓘𝓷 𝓗𝓮𝓻 𝓢𝓽𝓸𝓶𝓪𝓬𝓱 🦋')}]	363	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene Family is what you make it?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Family is what you make it"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Cuál es la historia más reciente?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?story ?dateModified WHERE { 
  ?story a golem:Story .
  ?story golem:dateModified ?dateModified .
  ORDER BY DESC(?dateModified)
  LIMIT 1
}
"	"QueryBadFormed: A bad request has been sent to the endpoint: probably the SPARQL query is badly formed. 

Response:
b""Virtuoso 37000 Error SP030: SPARQL compiler, line 10: syntax error at 'ORDER'\n\nSPARQL query:\ndefine sql:big-data-const 0\n#output-format:application/sparql-results+json\n\nprefix golem: <https://golemlab.eu/graph/> \nprefix dc: <http://purl.org/dc/terms/> \nprefix gc: <https://ontology.golemlab.eu/> \nSELECT DISTINCT ?story ?dateModified WHERE { \n  ?story a golem:Story .\n  ?story golem:dateModified ?dateModified .\n  ORDER BY DESC(?dateModified)\n  LIMIT 1\n}\n"""	0	1	1
366	366	es	¿Qué palabras clave tiene Fan Girl?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT  (GROUP_CONCAT(DISTINCT ?keyword; separator="", "") AS ?keywords ) WHERE {  ?story golem:title ""Fan Girl"" . ?story golem:keyword ?keyword . }"	[{'keywords': Value(literal:'Explicit Language, Explicit Sexual Content, Meeting Your Idols, Older Man/Younger Woman, Oral Sex, Smut')}]	366	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene Family is what you make it?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Family is what you make it"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Qué palabras clave tiene Fan Girl?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/>  
SELECT DISTINCT ?keyword WHERE { 
  ?story golem:title ""Fan Girl"" . 
  ?story golem:keyword ?keyword . 
}
"	[{'keyword': Value(literal:'Explicit Sexual Content')}, {'keyword': Value(literal:'Smut')}, {'keyword': Value(literal:'Older Man/Younger Woman')}, {'keyword': Value(literal:'Meeting Your Idols')}, {'keyword': Value(literal:'Explicit Language')}, {'keyword': Value(literal:'Oral Sex')}]	0	1	1
368	368	es	¿Qué palabras clave tiene Contentment Crowns a Home?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT  (GROUP_CONCAT(DISTINCT ?keyword; separator="", "") AS ?keywords ) WHERE {  ?story golem:title ""Contentment Crowns a Home"" . ?story golem:keyword ?keyword . }"	[{'keywords': Value(literal:'Baking, Bubble Bath, Dancing, Fluff, Forced Proximity, HP Fluff Fest 2021, Harry Potter Epilogue What Epilogue | EWE, Magical Theorist Harry Potter, Malfoy Manor (Harry Potter), Quidditch, Sentient Magical Houses (Harry Potter), Smitten Draco Malfoy')}]	368	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene Family is what you make it?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Family is what you make it"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Qué palabras clave tiene Contentment Crowns a Home?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?keyword WHERE { 
?story golem:title ""Contentment Crowns a Home"" . 
?story golem:keyword ?keyword . 
}
"	[{'keyword': Value(literal:'Baking')}, {'keyword': Value(literal:'Dancing')}, {'keyword': Value(literal:'Fluff')}, {'keyword': Value(literal:'Harry Potter Epilogue What Epilogue | EWE')}, {'keyword': Value(literal:'Quidditch')}, {'keyword': Value(literal:'Forced Proximity')}, {'keyword': Value(literal:'Bubble Bath')}, {'keyword': Value(literal:'Malfoy Manor (Harry Potter)')}, {'keyword': Value(literal:'Sentient Magical Houses (Harry Potter)')}, {'keyword': Value(literal:'Smitten Draco Malfoy')}, {'keyword': Value(literal:'HP Fluff Fest 2021')}, {'keyword': Value(literal:'Magical Theorist Harry Potter')}]	0	1	1
369	369	es	¿Qué palabras clave tiene You already have the bloody prince?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT  (GROUP_CONCAT(DISTINCT ?keyword; separator="", "") AS ?keywords ) WHERE {  ?story golem:title ""You already have the bloody prince"" . ?story golem:keyword ?keyword . }"	[{'keywords': Value(literal:'Banter, Dancing, Established Relationship, Fluff, Suits, Teasing')}]	369	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene Family is what you make it?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Family is what you make it"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Qué palabras clave tiene You already have the bloody prince?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?keyword WHERE { 
?story golem:title ""You already have the bloody prince"" . 
?story golem:keyword ?keyword . 
}
"	[{'keyword': Value(literal:'Dancing')}, {'keyword': Value(literal:'Established Relationship')}, {'keyword': Value(literal:'Fluff')}, {'keyword': Value(literal:'Teasing')}, {'keyword': Value(literal:'Banter')}, {'keyword': Value(literal:'Suits')}]	0	1	1
370	370	es	¿Qué palabras clave tiene Never Have I Ever...?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT  (GROUP_CONCAT(DISTINCT ?keyword; separator="", "") AS ?keywords ) WHERE {  ?story golem:title ""Never Have I Ever..."" . ?story golem:keyword ?keyword . }"	"[{'keywords': Value(literal:""(mentioned) - Freeform, .Top Dinah Lance, 2017 gpf banquet, A bit of angst i guess, Aftercare, Alcohol, Alien Biology, Alien/Human Relationships, Aliens Make Them Do It, Alternate Universe, Alternate Universe - Modern Setting, Although Colin has his moments where he realises it's all a bit weird, Although their age is not specified tbh, Anal Fingering, Anal Sex, Angst, Angst and Feels, Ass to Mouth, Aurors, Aw he's so adorable, Barry and Lup's sex life, Begging, Birthday Sex, Bisexual Male Character, Biting, Blackmadhi Day, Blow Jobs, Bondage, Bottom Bruce Wayne, Bottom Cas, Brotherly Love, Brothers, But mostly fluff, Can be read as original or fanwork, Canon Compliant, Canon-Typical Violence, Character's Name Spelled as Viktor, Cock Rings, Cock Warming, Collars, Come Swallowing, Community: bill_ficathon, Confessions, Crack, Crossover, Cunnilingus, Derek sucks dick, Destiel - Freeform, Dialogue Heavy, Diana/Barry isn't a tag??, Do not repost, Dom Diana (Wonder Woman), Dom/sub, Double Penetration, Drink, Drinking, Drinking Games, Drunk Sex, Drunken Confessions, Drunken deductions, During Canon, Episode: e060-066 The Stolen Century Parts 1-7, Established Relationship, Established Relationship - Wolfstar, Eventual Smut, Except it's 8k, Explicit Sexual Content, Face-Fucking, Fangirl Japanese, Feelings, First Kiss, First Time, First Time Blow Jobs, Fluff, Fluff and Smut, Fluffy Smut, Friends to Lovers, Frottage, Gambling, Gangbang, Gonna fix that some day promise, Hand Jobs, Happy Ending, How Do I Tag, Humor, I know I'm embarrassed too, Ignores Civil War, It doesn't matter they're all doing it, James F Potter is the biggest Wolfstar shipper, Kissing, Klavier and Nahyuta are kind of sluts, Light Dom/sub, Loss of Virginity, Love, Mage Hawke - Freeform, Male Slash, Mildly Dubious Consent, My First Fanwork, NSFW, Nerd Castiel, Never Have I Ever, Never Have I Ever..., One Shot, Or is it more groupsex?, Oral Sex, Past Sexual Abuse, Peter is over 21, Please Don't Kill Me, Plot What Plot/Porn Without Plot, Porn With Plot, Porn with Feelings, Possessive Behavior, Post-Sirius Black in Azkaban, Praise Kink, Punk Dean, Reader-Insert, Referenced Semi-Public Sex, Rimming, Second base action, Self-Doubt, Sex, Sex with Sirius Black, Shameless Smut, Shenanigans, Sheriarty - Freeform, Sirius Black Lives, Slavery, Slow Build, Smut, Smutty i guess, Snark, Spanking, Spitroasting, Sub Barry Allen, Switch Barry Allen, Team Bonding, That also isn't a tag??, They're all sort of in it together I guess, Threesome - F/M/M, Threesome - M/M/M, Top Clark Kent, Top Dean, Top Hal Jordan (Green Lantern), Top J'onn J'onzz, Topping from the Bottom, Twins, Underage Drinking, Underage Sex, Vaginal Fingering, Vaginal Sex, Virgin!Sherlock, Voyeurism, Yurio's unfortunate adolescent crush on yuuri, all consensual, all the snark, apparently Peter is a slut, because I can't write succinctly, because I said so, but also during episode 12, cause why not, do not copy to another site, drinking game, drunk!lock, everyone has a giant gay crush on yuuri but theyre subtle, everyone has so many questions, fenhawke - Freeform, game with alcohol, i will also add more things later on, i will write a chapter for every one of the things i put in there never you worry, older sirius, phichit and yuuri are Ride or Die Bros, phichit consistently does The Most, phichit is a bad bitch who will cut you if you mess with his best friend, post episode 12, rip that one italian guy, shocking confessions, slight angst, slight mention of angst, thank you hootie, the pack watches, this is so dumb, to celebrate Ianto's birthday (it's not his birthday in the story), viktor is so freaking in love, will we ever find out what happened that night in the alleyway behind sears"")}]"	370	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene Family is what you make it?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Family is what you make it"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Qué palabras clave tiene Never Have I Ever...?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?keyword WHERE { 
  ?story golem:title ""Never Have I Ever..."" . 
  ?story golem:keyword ?keyword . 
}
"	"[{'keyword': Value(literal:'Angst and Feels')}, {'keyword': Value(literal:'Drinking')}, {'keyword': Value(literal:'Eventual Smut')}, {'keyword': Value(literal:'Fluff and Smut')}, {'keyword': Value(literal:'Friends to Lovers')}, {'keyword': Value(literal:'Love')}, {'keyword': Value(literal:'NSFW')}, {'keyword': Value(literal:'Oral Sex')}, {'keyword': Value(literal:'Porn With Plot')}, {'keyword': Value(literal:'Porn with Feelings')}, {'keyword': Value(literal:'Reader-Insert')}, {'keyword': Value(literal:'Sex')}, {'keyword': Value(literal:'Sirius Black Lives')}, {'keyword': Value(literal:'Slow Build')}, {'keyword': Value(literal:'Smut')}, {'keyword': Value(literal:'Aurors')}, {'keyword': Value(literal:'Post-Sirius Black in Azkaban')}, {'keyword': Value(literal:'Sex with Sirius Black')}, {'keyword': Value(literal:'older sirius')}, {'keyword': Value(literal:'Confessions')}, {'keyword': Value(literal:'Crack')}, {'keyword': Value(literal:'Drinking Games')}, {'keyword': Value(literal:'Never Have I Ever')}, {'keyword': Value(literal:'Ignores Civil War')}, {'keyword': Value(literal:'because I said so')}, {'keyword': Value(literal:'Peter is over 21')}, {'keyword': Value(literal:'apparently Peter is a slut')}, {'keyword': Value(literal:'shocking confessions')}, {'keyword': Value(literal:'Humor')}, {'keyword': Value(literal:'Dialogue Heavy')}, {'keyword': Value(literal:'Shenanigans')}, {'keyword': Value(literal:'Can be read as original or fanwork')}, {'keyword': Value(literal:'Alcohol')}, {'keyword': Value(literal:'Do not repost')}, {'keyword': Value(literal:'post episode 12')}, {'keyword': Value(literal:'do not copy to another site')}, {'keyword': Value(literal:""Character's Name Spelled as Viktor"")}, {'keyword': Value(literal:'2017 gpf banquet')}, {'keyword': Value(literal:""Yurio's unfortunate adolescent crush on yuuri"")}, {'keyword': Value(literal:'but also during episode 12')}, {'keyword': Value(literal:'everyone has so many questions')}, {'keyword': Value(literal:'i will also add more things later on')}, {'keyword': Value(literal:'phichit and yuuri are Ride or Die Bros')}, {'keyword': Value(literal:'phichit consistently does The Most')}, {'keyword': Value(literal:'phichit is a bad bitch who will cut you if you mess with his best friend')}, {'keyword': Value(literal:'rip that one italian guy')}, {'keyword': Value(literal:'viktor is so freaking in love')}, {'keyword': Value(literal:'i will write a chapter for every one of the things i put in there never you worry')}, {'keyword': Value(literal:'will we ever find out what happened that night in the alleyway behind sears')}, {'keyword': Value(literal:'everyone has a giant gay crush on yuuri but theyre subtle')}, {'keyword': Value(literal:'Fluff')}, {'keyword': Value(literal:'Team Bonding')}, {'keyword': Value(literal:'game with alcohol')}, {'keyword': Value(literal:""to celebrate Ianto's birthday (it's not his birthday in the story)"")}, {'keyword': Value(literal:'Brothers')}, {'keyword': Value(literal:'Community: bill_ficathon')}, {'keyword': Value(literal:'Bisexual Male Character')}, {'keyword': Value(literal:'Male Slash')}, {'keyword': Value(literal:'During Canon')}, {'keyword': Value(literal:'Episode: e060-066 The Stolen Century Parts 1-7')}, {'keyword': Value(literal:""Barry and Lup's sex life"")}, {'keyword': Value(literal:'Snark')}, {'keyword': Value(literal:'all the snark')}, {'keyword': Value(literal:'Aliens Make Them Do It')}, {'keyword': Value(literal:'Angst')}, {'keyword': Value(literal:'Canon Compliant')}, {'keyword': Value(literal:'Canon-Typical Violence')}, {'keyword': Value(literal:'One Shot')}, {'keyword': Value(literal:'Underage Drinking')}, {'keyword': Value(literal:'Underage Sex')}, {'keyword': Value(literal:'Fangirl Japanese')}, {'keyword': Value(literal:'Although their age is not specified tbh')}, {'keyword': Value(literal:'Gonna fix that some day promise')}, {'keyword': Value(literal:""I know I'm embarrassed too"")}, {'keyword': Value(literal:'Second base action')}, {'keyword': Value(literal:'Established Relationship')}, {'keyword': Value(literal:'Virgin!Sherlock')}, {'keyword': Value(literal:'But mostly fluff')}, {'keyword': Value(literal:'Drink')}, {'keyword': Value(literal:'Sheriarty - Freeform')}, {'keyword': Value(literal:'drinking game')}, {'keyword': Value(literal:'Never Have I Ever...')}, {'keyword': Value(literal:'Drunken deductions')}, {'keyword': Value(literal:'drunk!lock')}, {'keyword': Value(literal:'slight mention of angst')}, {'keyword': Value(literal:'Alternate Universe')}, {'keyword': Value(literal:'Anal Sex')}, {'keyword': Value(literal:'Crossover')}, {'keyword': Value(literal:'Cunnilingus')}, {'keyword': Value(literal:'Threesome - F/M/M')}, {'keyword': Value(literal:'Twins')}, {'keyword': Value(literal:'Brotherly Love')}, {'keyword': Value(literal:'First Kiss')}, {'keyword': Value(literal:'How Do I Tag')}, {'keyword': Value(literal:'Possessive Behavior')}, {'keyword': Value(literal:""Please Don't Kill Me"")}, {'keyword': Value(literal:'My First Fanwork')}, {'keyword': Value(literal:'Happy Ending')}, {'keyword': Value(literal:'Kissing')}, {'keyword': Value(literal:'Self-Doubt')}, {'keyword': Value(literal:'Slavery')}, {'keyword': Value(literal:'slight angst')}, {'keyword': Value(literal:'Past Sexual Abuse')}, {'keyword': Value(literal:'Drunken Confessions')}, {'keyword': Value(literal:'Feelings')}, {'keyword': Value(literal:'Gambling')}, {'keyword': Value(literal:'(mentioned) - Freeform')}, {'keyword': Value(literal:'fenhawke - Freeform')}, {'keyword': Value(literal:'Mage Hawke - Freeform')}, {'keyword': Value(literal:'Anal Fingering')}, {'keyword': Value(literal:'Begging')}, {'keyword': Value(literal:'Blow Jobs')}, {'keyword': Value(literal:'Explicit Sexual Content')}, {'keyword': Value(literal:'Light Dom/sub')}, {'keyword': Value(literal:'Plot What Plot/Porn Without Plot')}, {'keyword': Value(literal:'Spitroasting')}, {'keyword': Value(literal:'Threesome - M/M/M')}, {'keyword': Value(literal:'Established Relationship - Wolfstar')}, {'keyword': Value(literal:""Except it's 8k"")}, {'keyword': Value(literal:'James F Potter is the biggest Wolfstar shipper')}, {'keyword': Value(literal:'Referenced Semi-Public Sex')}, {'keyword': Value(literal:""because I can't write succinctly"")}, {'keyword': Value(literal:'Birthday Sex')}, {'keyword': Value(literal:'Double Penetration')}, {'keyword': Value(literal:'Drunk Sex')}, {'keyword': Value(literal:'First Time')}, {'keyword': Value(literal:'Frottage')}, {'keyword': Value(literal:'Loss of Virginity')}, {'keyword': Value(literal:'Biting')}, {'keyword': Value(literal:'this is so dumb')}, {'keyword': Value(literal:'Blackmadhi Day')}, {'keyword': Value(literal:'Klavier and Nahyuta are kind of sluts')}, {'keyword': Value(literal:'Aftercare')}, {'keyword': Value(literal:'Bondage')}, {'keyword': Value(literal:'Cock Rings')}, {'keyword': Value(literal:'Cock Warming')}, {'keyword': Value(literal:'Collars')}, {'keyword': Value(literal:'Dom/sub')}, {'keyword': Value(literal:'Hand Jobs')}, {'keyword': Value(literal:'Praise Kink')}, {'keyword': Value(literal:'Rimming')}, {'keyword': Value(literal:'Shameless Smut')}, {'keyword': Value(literal:'Spanking')}, {'keyword': Value(literal:'Vaginal Fingering')}, {'keyword': Value(literal:'Vaginal Sex')}, {'keyword': Value(literal:'Voyeurism')}, {'keyword': Value(literal:'Alien Biology')}, {'keyword': Value(literal:'Alien/Human Relationships')}, {'keyword': Value(literal:'Ass to Mouth')}, {'keyword': Value(literal:'Bottom Bruce Wayne')}, {'keyword': Value(literal:'Face-Fucking')}, {'keyword': Value(literal:'Top Clark Kent')}, {'keyword': Value(literal:'Topping from the Bottom')}, {'keyword': Value(literal:'Top Hal Jordan (Green Lantern)')}, {'keyword': Value(literal:'Sub Barry Allen')}, {'keyword': Value(literal:'Dom Diana (Wonder Woman)')}, {'keyword': Value(literal:'.Top Dinah Lance')}, {'keyword': Value(literal:""Diana/Barry isn't a tag??"")}, {'keyword': Value(literal:'Switch Barry Allen')}, {'keyword': Value(literal:""That also isn't a tag??"")}, {'keyword': Value(literal:""Top J'onn J'onzz"")}, {'keyword': Value(literal:'Gangbang')}, {'keyword': Value(literal:'cause why not')}, {'keyword': Value(literal:'all consensual')}, {'keyword': Value(literal:'Fluffy Smut')}, {'keyword': Value(literal:""It doesn't matter they're all doing it"")}, {'keyword': Value(literal:'Or is it more groupsex?')}, {'keyword': Value(literal:""They're all sort of in it together I guess"")}, {'keyword': Value(literal:'thank you hootie')}, {'keyword': Value(literal:""Although Colin has his moments where he realises it's all a bit weird"")}, {'keyword': Value(literal:'Destiel - Freeform')}, {'keyword': Value(literal:'Top Dean')}, {'keyword': Value(literal:'Bottom Cas')}, {'keyword': Value(literal:'Nerd Castiel')}, {'keyword': Value(literal:'Punk Dean')}, {'keyword': Value(literal:'A bit of angst i guess')}, {'keyword': Value(literal:""Aw he's so adorable"")}, {'keyword': Value(literal:'Smutty i guess')}, {'keyword': Value(literal:'Come Swallowing')}, {'keyword': Value(literal:'First Time Blow Jobs')}, {'keyword': Value(literal:'Mildly Dubious Consent')}, {'keyword': Value(literal:'Derek sucks dick')}, {'keyword': Value(literal:'the pack watches')}, {'keyword': Value(literal:'Alternate Universe - Modern Setting')}]"	0	1	1
371	371	es	¿Qué palabras clave tiene Best Man?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT  (GROUP_CONCAT(DISTINCT ?keyword; separator="", "") AS ?keywords ) WHERE {  ?story golem:title ""Best Man"" . ?story golem:keyword ?keyword . }"	"[{'keywords': Value(literal:'3.17, Adultery, Age Difference, Aged-Up Character(s), Alcohol Abuse/Alcoholism, Alternate Universe, Alternate Universe - Canon Divergence, Alternate Universe - Modern Setting, Anal, Anal Sex, Angst, Angst and Feels, Angst with a Happy Ending, Arranged Marriage, Auror Harry Potter, Backrubs, Banter, Based on a Tumblr Post, Bathroom Sex, Best Friends, Best Man, Bisexual Kyle Broflovski, Bittersweet Ending, Bottom Stan Marsh, Break Up, Brokenhearted Sherlock, Brotherly Affection, Brotherly Love, Canon Compliant, Canon Divergence - Post-Harry Potter and the Deathly Hallows, Canon Divergence - Post-Harry Potter and the Order of the Phoenix, Canon Relationships, Character Study, Charles ""Charlie"" Spring (Heartstopper) is a Good Boyfriend, Cheating, Clintasha - Freeform, Coming Out, Complete, Confession, Cross-Generation Relationship, Dancing, Depression, Developing Relationship, Disguised Sherlock, Dissociation, Divorced Harry Potter & Ginny Weasley, Don’t copy to another site, Drabble, Drinking to Cope, Drunk Sex, Duet, Emotional Manipulation, Engaged Couple, Enjoy my angsty trash, Episode: s03e02 The Sign of Three, Established Relationship, Evans Family Headcanons, Excessive Drinking, Explicit Language, Explicit Sexual Content, Families of Choice, Family, Family Feels, Father-Son Relationship, Feel-good, Ficlet, Finding Acceptance, First Time, Flashbacks, Fluff, Fluff and Angst, Forced Marriage, Forgive Me, Forgiveness, Friends to Lovers, Friendship, Friendship Troubles, Friendship/Love, Funny, Future Fic, Gay Male Character, Gay Rights, Gay Sex, Ginny Weasley Bashing, Going Home, Grief/Mourning, Grover (Percy Jackson) is a Good Friend, Grover centred, Grover feels under appreciated, Grover is the best man, Gwen\'s alive because I say so, HP Cross Gen Fest 2020, Happy Ending, He\'s disguised as Sherlock Holmes, Hinata is sad, Homophobia, Homosocial Continuum, Honeymoon, How can I make this more sad?, Humor, Hurt No Comfort, Hurt/Comfort, I love to make Hinata suffer, I wanted to cry so I wrote something sad, I\'m Bad At Tagging, Incest, Infidelity, Inspired by Tumblr, Internalized Emotions, Jealousy, Kageyama is engaged, Kidnapping, KuroKen - Freeform, Kyle\'s a lawyer, Lack of Communication, Lee Minho (Lee Know) as cameo, Light Angst, Loneliness, Loopy!Blaine, Love, Love Confessions, Makeup, Male Friendship, Marriage, Mentioned Lee Jihoon | Woozi, Mentioned Xu Ming Hao | The8, Mild Angst, Minor Albus Severus Potter/Original Male Character(s), Misunderstandings, NUFF SAID, Nicholas ""Nick"" Nelson Speaks French, No I really don\'t but oh well, Non-endgame Klaine, OT3, Oh, One Shot, Onesided Ernesto/Imelda, Orgasm Delay/Denial, POV First Person, POV Harry Potter, Past Relationship(s), Percabeth wedding, Percy Jackson is a Good Bro, Percy Jackson is a Good Friend, Percy Jackson is understanding, Polyamory, Possible Spoilers for Series 3 Episode 2, Post canon, Post-Canon, Post-Hogwarts, Post-Reichenbach, Post-Top Gun (1986), Post-Wedding, Pre-Top Gun: Maverick (2020), Pregnant Mindy, Queer Themes, Recovery, References to Depression, References to Drug Use, Rimming, Romance, Ron Weasley Bashing, Sad, Salty Harry Potter, Scorpius Malfoy & Albus Severus Potter Friendship, Self-Harm, Sex, Shenanigans, Sibling Incest, Sick Mindy, Slice of Life, Slow Dancing, Smitten Nicholas ""Nick"" Nelson, Surprise Ending, TDWritersLoveandFriendshipWeek21, Tags Are Hard, Tao Xu is a Good Friend, Teary-eyed groom, Ten Years Later, Threesome, Threesome - M/M/M, Time Skips, Title is rubbish please ignore, Top Kyle Broflovski, Toxic Masculinity, Triple Drabble, True Love, Typing that tag just broke my heart, Unexpected Confession, Unrequited Love, Unresolved Emotional Tension, Unresolved Sexual Tension, Warstan, Wedding, Wedding Fluff, Wedding Night, Wedding Planning, Wedding Planning kinda, Weddings, With a side of angst, Wordcount: 100-500, Work In Progress, Yachi is a good friend, Yoon Jae is Trying His Best, Yoon Jae is a Good Bro, Yuletide Treat, a few other characters show up (eg Sam Cam Mike Zoey and Duncan) but they\'re not main characters, all is resolved, and Nico and will make out in the corner, basically all the fluff, coming to terms, confession au, feminine stan marsh, gay bars, grover feels left out, i love liam gallagher, in which ilhoon sees himself in love w hyunsik and its cute af, insecure Grover, just a little, kenhina - Freeform, make this happen please, reaction fic, reconnecting, seokmin still loves soonyoung, seoksoon angst, soft angst, sorry kuroo my son, stan\'s a makeup artist, super best friends are forever, there’s slight sexual content but i don’t think it’s enough to make it mature, this is my 1st work')}]"	371	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene Family is what you make it?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Family is what you make it"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Qué palabras clave tiene Best Man?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?keyword WHERE { 
?story golem:title ""Best Man"" . 
?story golem:keyword ?keyword . 
}
"	"[{'keyword': Value(literal:'Drunk Sex')}, {'keyword': Value(literal:'Infidelity')}, {'keyword': Value(literal:'Rimming')}, {'keyword': Value(literal:'Sibling Incest')}, {'keyword': Value(literal:'Mild Angst')}, {'keyword': Value(literal:'Backrubs')}, {'keyword': Value(literal:'Angst')}, {'keyword': Value(literal:'Episode: s03e02 The Sign of Three')}, {'keyword': Value(literal:'Self-Harm')}, {'keyword': Value(literal:'Dissociation')}, {'keyword': Value(literal:'Disguised Sherlock')}, {'keyword': Value(literal:'Brokenhearted Sherlock')}, {'keyword': Value(literal:""He's disguised as Sherlock Holmes"")}, {'keyword': Value(literal:'Typing that tag just broke my heart')}, {'keyword': Value(literal:'Fluff')}, {'keyword': Value(literal:'Warstan')}, {'keyword': Value(literal:'With a side of angst')}, {'keyword': Value(literal:'Brotherly Love')}, {'keyword': Value(literal:'Family')}, {'keyword': Value(literal:'Shenanigans')}, {'keyword': Value(literal:'Loopy!Blaine')}, {'keyword': Value(literal:'Past Relationship(s)')}, {'keyword': Value(literal:'Post-Hogwarts')}, {'keyword': Value(literal:'Weddings')}, {'keyword': Value(literal:'Canon Divergence - Post-Harry Potter and the Order of the Phoenix')}, {'keyword': Value(literal:'Arranged Marriage')}, {'keyword': Value(literal:'Forced Marriage')}, {'keyword': Value(literal:'Ginny Weasley Bashing')}, {'keyword': Value(literal:'Honeymoon')}, {'keyword': Value(literal:'Incest')}, {'keyword': Value(literal:'Marriage')}, {'keyword': Value(literal:'Ron Weasley Bashing')}, {'keyword': Value(literal:'Canon Divergence - Post-Harry Potter and the Deathly Hallows')}, {'keyword': Value(literal:'Post-Wedding')}, {'keyword': Value(literal:'Salty Harry Potter')}, {'keyword': Value(literal:'Family Feels')}, {'keyword': Value(literal:'Don’t copy to another site')}, {'keyword': Value(literal:'Alternate Universe')}, {'keyword': Value(literal:'Friends to Lovers')}, {'keyword': Value(literal:'Wedding')}, {'keyword': Value(literal:'Confession')}, {'keyword': Value(literal:'Unexpected Confession')}, {'keyword': Value(literal:'confession au')}, {'keyword': Value(literal:'in which ilhoon sees himself in love w hyunsik and its cute af')}, {'keyword': Value(literal:'Age Difference')}, {'keyword': Value(literal:'Anal Sex')}, {'keyword': Value(literal:'Auror Harry Potter')}, {'keyword': Value(literal:'Cross-Generation Relationship')}, {'keyword': Value(literal:'Dancing')}, {'keyword': Value(literal:'Depression')}, {'keyword': Value(literal:'Developing Relationship')}, {'keyword': Value(literal:'Explicit Language')}, {'keyword': Value(literal:'Explicit Sexual Content')}, {'keyword': Value(literal:'Father-Son Relationship')}, {'keyword': Value(literal:'Friendship')}, {'keyword': Value(literal:'Gay Male Character')}, {'keyword': Value(literal:'Gay Sex')}, {'keyword': Value(literal:'Grief/Mourning')}, {'keyword': Value(literal:'Love')}, {'keyword': Value(literal:'Male Friendship')}, {'keyword': Value(literal:'Sex')}, {'keyword': Value(literal:'Unresolved Sexual Tension')}, {'keyword': Value(literal:'Wedding Planning')}, {'keyword': Value(literal:'Excessive Drinking')}, {'keyword': Value(literal:'POV Harry Potter')}, {'keyword': Value(literal:'Wedding Fluff')}, {'keyword': Value(literal:'Drinking to Cope')}, {'keyword': Value(literal:'Loneliness')}, {'keyword': Value(literal:'Divorced Harry Potter & Ginny Weasley')}, {'keyword': Value(literal:'Scorpius Malfoy & Albus Severus Potter Friendship')}, {'keyword': Value(literal:'HP Cross Gen Fest 2020')}, {'keyword': Value(literal:'Minor Albus Severus Potter/Original Male Character(s)')}, {'keyword': Value(literal:'Non-endgame Klaine')}, {'keyword': Value(literal:'Ficlet')}, {'keyword': Value(literal:'Homosocial Continuum')}, {'keyword': Value(literal:'Recovery')}, {'keyword': Value(literal:'References to Depression')}, {'keyword': Value(literal:'Angst with a Happy Ending')}, {'keyword': Value(literal:'Fluff and Angst')}, {'keyword': Value(literal:'Happy Ending')}, {'keyword': Value(literal:'Light Angst')}, {'keyword': Value(literal:'POV First Person')}, {'keyword': Value(literal:'Oh')}, {'keyword': Value(literal:'Grover (Percy Jackson) is a Good Friend')}, {'keyword': Value(literal:'Percy Jackson is a Good Friend')}, {'keyword': Value(literal:'NUFF SAID')}, {'keyword': Value(literal:'Percy Jackson is a Good Bro')}, {'keyword': Value(literal:'Friendship Troubles')}, {'keyword': Value(literal:'Grover centred')}, {'keyword': Value(literal:'Grover feels under appreciated')}, {'keyword': Value(literal:'Grover is the best man')}, {'keyword': Value(literal:'Percabeth wedding')}, {'keyword': Value(literal:'Percy Jackson is understanding')}, {'keyword': Value(literal:'all is resolved')}, {'keyword': Value(literal:'and Nico and will make out in the corner')}, {'keyword': Value(literal:'grover feels left out')}, {'keyword': Value(literal:'insecure Grover')}, {'keyword': Value(literal:'basically all the fluff')}, {'keyword': Value(literal:""Gwen's alive because I say so"")}, {'keyword': Value(literal:'Title is rubbish please ignore')}, {'keyword': Value(literal:'Aged-Up Character(s)')}, {'keyword': Value(literal:'Alcohol Abuse/Alcoholism')}, {'keyword': Value(literal:'Cheating')}, {'keyword': Value(literal:'Coming Out')}, {'keyword': Value(literal:'Homophobia')}, {'keyword': Value(literal:'Jealousy')}, {'keyword': Value(literal:'Romance')}, {'keyword': Value(literal:'Slice of Life')}, {'keyword': Value(literal:'True Love')}, {'keyword': Value(literal:'Adultery')}, {'keyword': Value(literal:'Makeup')}, {'keyword': Value(literal:'Feel-good')}, {'keyword': Value(literal:'Forgiveness')}, {'keyword': Value(literal:'Queer Themes')}, {'keyword': Value(literal:'Going Home')}, {'keyword': Value(literal:'reconnecting')}, {'keyword': Value(literal:'Toxic Masculinity')}, {'keyword': Value(literal:'coming to terms')}, {'keyword': Value(literal:'Top Kyle Broflovski')}, {'keyword': Value(literal:'Bottom Stan Marsh')}, {'keyword': Value(literal:'Bisexual Kyle Broflovski')}, {'keyword': Value(literal:'Finding Acceptance')}, {'keyword': Value(literal:""Kyle's a lawyer"")}, {'keyword': Value(literal:'feminine stan marsh')}, {'keyword': Value(literal:'super best friends are forever')}, {'keyword': Value(literal:""stan's a makeup artist"")}, {'keyword': Value(literal:'Angst and Feels')}, {'keyword': Value(literal:'Unrequited Love')}, {'keyword': Value(literal:'Wedding Night')}, {'keyword': Value(literal:'Break Up')}, {'keyword': Value(literal:'Mentioned Lee Jihoon | Woozi')}, {'keyword': Value(literal:'Mentioned Xu Ming Hao | The8')}, {'keyword': Value(literal:'seokmin still loves soonyoung')}, {'keyword': Value(literal:'seoksoon angst')}, {'keyword': Value(literal:'Hurt/Comfort')}, {'keyword': Value(literal:'Post-Reichenbach')}, {'keyword': Value(literal:'Established Relationship')}, {'keyword': Value(literal:'Humor')}, {'keyword': Value(literal:'just a little')}, {'keyword': Value(literal:'Brotherly Affection')}, {'keyword': Value(literal:'Engaged Couple')}, {'keyword': Value(literal:'Evans Family Headcanons')}, {'keyword': Value(literal:'Duet')}, {'keyword': Value(literal:'reaction fic')}, {'keyword': Value(literal:'3.17')}, {'keyword': Value(literal:'Teary-eyed groom')}, {'keyword': Value(literal:'Alternate Universe - Modern Setting')}, {'keyword': Value(literal:'Onesided Ernesto/Imelda')}, {'keyword': Value(literal:'Drabble')}, {'keyword': Value(literal:'OT3')}, {'keyword': Value(literal:'Yuletide Treat')}, {'keyword': Value(literal:'Post canon')}, {'keyword': Value(literal:'Flashbacks')}, {'keyword': Value(literal:'Time Skips')}, {'keyword': Value(literal:'Polyamory')}, {'keyword': Value(literal:'Bathroom Sex')}, {'keyword': Value(literal:'Anal')}, {'keyword': Value(literal:'Lee Minho (Lee Know) as cameo')}, {'keyword': Value(literal:'soft angst')}, {'keyword': Value(literal:'Kidnapping')}, {'keyword': Value(literal:'Orgasm Delay/Denial')}, {'keyword': Value(literal:'Threesome')}, {'keyword': Value(literal:'Threesome - M/M/M')}, {'keyword': Value(literal:'Families of Choice')}, {'keyword': Value(literal:'Future Fic')}, {'keyword': Value(literal:'Triple Drabble')}, {'keyword': Value(literal:'Post-Canon')}, {'keyword': Value(literal:'Charles ""Charlie"" Spring (Heartstopper) is a Good Boyfriend')}, {'keyword': Value(literal:'Tao Xu is a Good Friend')}, {'keyword': Value(literal:'Nicholas ""Nick"" Nelson Speaks French')}, {'keyword': Value(literal:'Smitten Nicholas ""Nick"" Nelson')}, {'keyword': Value(literal:'Love Confessions')}, {'keyword': Value(literal:'Character Study')}, {'keyword': Value(literal:'Alternate Universe - Canon Divergence')}, {'keyword': Value(literal:'Sad')}, {'keyword': Value(literal:'Surprise Ending')}, {'keyword': Value(literal:'Based on a Tumblr Post')}, {'keyword': Value(literal:'Inspired by Tumblr')}, {'keyword': Value(literal:'Wordcount: 100-500')}, {'keyword': Value(literal:'First Time')}, {'keyword': Value(literal:'Funny')}, {'keyword': Value(literal:'Lack of Communication')}, {'keyword': Value(literal:'Banter')}, {'keyword': Value(literal:'Canon Compliant')}, {'keyword': Value(literal:'Canon Relationships')}, {'keyword': Value(literal:'Post-Top Gun (1986)')}, {'keyword': Value(literal:'Pre-Top Gun: Maverick (2020)')}, {'keyword': Value(literal:'Best Man')}, {'keyword': Value(literal:'Clintasha - Freeform')}, {'keyword': Value(literal:'Enjoy my angsty trash')}, {'keyword': Value(literal:'Hinata is sad')}, {'keyword': Value(literal:'How can I make this more sad?')}, {'keyword': Value(literal:'I love to make Hinata suffer')}, {'keyword': Value(literal:'I wanted to cry so I wrote something sad')}, {'keyword': Value(literal:'Kageyama is engaged')}, {'keyword': Value(literal:""No I really don't but oh well"")}, {'keyword': Value(literal:'Yachi is a good friend')}, {'keyword': Value(literal:'Best Friends')}, {'keyword': Value(literal:'Pregnant Mindy')}, {'keyword': Value(literal:'Sick Mindy')}, {'keyword': Value(literal:'Misunderstandings')}, {'keyword': Value(literal:'Gay Rights')}, {'keyword': Value(literal:'gay bars')}, {'keyword': Value(literal:'Yoon Jae is Trying His Best')}, {'keyword': Value(literal:'Yoon Jae is a Good Bro')}, {'keyword': Value(literal:'Bittersweet Ending')}, {'keyword': Value(literal:'Unresolved Emotional Tension')}, {'keyword': Value(literal:'Internalized Emotions')}, {'keyword': Value(literal:'Friendship/Love')}, {'keyword': Value(literal:'One Shot')}, {'keyword': Value(literal:'Ten Years Later')}, {'keyword': Value(literal:""a few other characters show up (eg Sam Cam Mike Zoey and Duncan) but they're not main characters"")}, {'keyword': Value(literal:'TDWritersLoveandFriendshipWeek21')}, {'keyword': Value(literal:'Emotional Manipulation')}, {'keyword': Value(literal:'Hurt No Comfort')}, {'keyword': Value(literal:'References to Drug Use')}, {'keyword': Value(literal:'Possible Spoilers for Series 3 Episode 2')}, {'keyword': Value(literal:'Forgive Me')}, {'keyword': Value(literal:'KuroKen - Freeform')}, {'keyword': Value(literal:'kenhina - Freeform')}, {'keyword': Value(literal:'sorry kuroo my son')}, {'keyword': Value(literal:'this is my 1st work')}, {'keyword': Value(literal:'Complete')}, {'keyword': Value(literal:'Work In Progress')}, {'keyword': Value(literal:""I'm Bad At Tagging"")}, {'keyword': Value(literal:'Slow Dancing')}, {'keyword': Value(literal:'Tags Are Hard')}, {'keyword': Value(literal:'there’s slight sexual content but i don’t think it’s enough to make it mature')}, {'keyword': Value(literal:'Wedding Planning kinda')}, {'keyword': Value(literal:'i love liam gallagher')}, {'keyword': Value(literal:'make this happen please')}]"	0	1	1
372	372	es	¿Qué palabras clave tiene I'll Be The One Who Saved Her?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT  (GROUP_CONCAT(DISTINCT ?keyword; separator="", "") AS ?keywords ) WHERE {  ?story golem:title ""I'll Be The One Who Saved Her"" . ?story golem:keyword ?keyword . }"	[{'keywords': Value(literal:'Alternate Universe - obviously, Hermione Belongs In Ravenclaw, Light Angst, Not Bashing The Boys, Wars Leave Their Marks')}]	372	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene Family is what you make it?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Family is what you make it"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Qué palabras clave tiene I'll Be The One Who Saved Her?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?keyword WHERE { 
?story golem:title ""I'll Be The One Who Saved Her"" . 
?story golem:keyword ?keyword . 
}
"	[{'keyword': Value(literal:'Light Angst')}, {'keyword': Value(literal:'Alternate Universe - obviously')}, {'keyword': Value(literal:'Hermione Belongs In Ravenclaw')}, {'keyword': Value(literal:'Not Bashing The Boys')}, {'keyword': Value(literal:'Wars Leave Their Marks')}]	0	1	1
373	373	es	¿Qué palabras clave tiene Take it in Stride?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT  (GROUP_CONCAT(DISTINCT ?keyword; separator="", "") AS ?keywords ) WHERE {  ?story golem:title ""Take it in Stride"" . ?story golem:keyword ?keyword . }"	"[{'keywords': Value(literal:""Awesome Angelina, Book 1: Harry Potter and the Philosopher's Stone, Hurt/Comfort, One Shot"")}]"	373	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene Family is what you make it?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Family is what you make it"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Qué palabras clave tiene Take it in Stride?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/>  
SELECT DISTINCT ?keyword WHERE { 
?story golem:title ""Take it in Stride"" . 
?story golem:keyword ?keyword . 
}
"	"[{'keyword': Value(literal:'Hurt/Comfort')}, {'keyword': Value(literal:'One Shot')}, {'keyword': Value(literal:""Book 1: Harry Potter and the Philosopher's Stone"")}, {'keyword': Value(literal:'Awesome Angelina')}]"	0	1	1
374	374	es	¿Qué palabras clave tiene Kiss Me (Under the Light of a Thousand Stars)?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT  (GROUP_CONCAT(DISTINCT ?keyword; separator="", "") AS ?keywords ) WHERE {  ?story golem:title ""Kiss Me (Under the Light of a Thousand Stars)"" . ?story golem:keyword ?keyword . }"	[{'keywords': Value(literal:'A tiny bit of angst but not too much I promise, Explicit Language, Explicit Sexual Content, Falling In Love, Finding Oneself, First Time, Getting Together, Happy Ending, Hurt/Comfort, Loss of Virginity, Memory Loss, Mildly Dubious Consent, OCD, Obsessive-Compulsive Disorder, PTSD, Pensieve, Pensieves, Post-Traumatic Stress Disorder - PTSD, Romance, Switching, Traducción autorizada, Un poco de angst pero no demasiado, healing/recovering, healing/recovery')}]	374	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene Family is what you make it?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Family is what you make it"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Qué palabras clave tiene Kiss Me (Under the Light of a Thousand Stars)?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?keyword WHERE { 
?story golem:title ""Kiss Me (Under the Light of a Thousand Stars)"" . 
?story golem:keyword ?keyword . 
}
"	[{'keyword': Value(literal:'Explicit Language')}, {'keyword': Value(literal:'Explicit Sexual Content')}, {'keyword': Value(literal:'Falling In Love')}, {'keyword': Value(literal:'First Time')}, {'keyword': Value(literal:'Getting Together')}, {'keyword': Value(literal:'Happy Ending')}, {'keyword': Value(literal:'Hurt/Comfort')}, {'keyword': Value(literal:'Loss of Virginity')}, {'keyword': Value(literal:'Memory Loss')}, {'keyword': Value(literal:'Mildly Dubious Consent')}, {'keyword': Value(literal:'PTSD')}, {'keyword': Value(literal:'Romance')}, {'keyword': Value(literal:'Switching')}, {'keyword': Value(literal:'OCD')}, {'keyword': Value(literal:'Pensieve')}, {'keyword': Value(literal:'Finding Oneself')}, {'keyword': Value(literal:'A tiny bit of angst but not too much I promise')}, {'keyword': Value(literal:'healing/recovering')}, {'keyword': Value(literal:'Post-Traumatic Stress Disorder - PTSD')}, {'keyword': Value(literal:'Obsessive-Compulsive Disorder')}, {'keyword': Value(literal:'Pensieves')}, {'keyword': Value(literal:'Traducción autorizada')}, {'keyword': Value(literal:'Un poco de angst pero no demasiado')}, {'keyword': Value(literal:'healing/recovery')}]	0	1	1
375	375	es	¿Qué palabras clave tiene Summer Lovin'?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT  (GROUP_CONCAT(DISTINCT ?keyword; separator="", "") AS ?keywords ) WHERE {  ?story golem:title ""Summer Lovin'"" . ?story golem:keyword ?keyword . }"	"[{'keywords': Value(literal:'""long"" distance relationship, (Blink and you miss it), (Ish) - Freeform, (i should chill with the drowning stuff lmao), 2016-2017 NHL Season, 21st Birthday, 50s, 69 (Sex Position), ASL, AU, Abusive Ex, Accidental Kissing, Acting, Actors, Actually Winter, Aftercare, Age Difference, Akatsuki Gift Exchange 2018, Alex is a Camp Counselor, Alpha Castiel (Supernatural), Alpha Castiel/Omega Dean Winchester, Alpha/Beta/Omega Dynamics, Also a disaster bi-sexual, Alternate Scene, Alternate Universe, Alternate Universe - 1960s, Alternate Universe - Beach, Alternate Universe - Canon Divergence, Alternate Universe - Childhood Friends, Alternate Universe - College/University, Alternate Universe - Country Club, Alternate Universe - Everyone Lives/Nobody Dies, Alternate Universe - Fantasy, Alternate Universe - Gender Changes, Alternate Universe - High School, Alternate Universe - Human, Alternate Universe - Lifeguards, Alternate Universe - Modern Setting, Alternate Universe - Muggle, Alternate Universe - No Kwamis, Alternate Universe - No Powers, Alternate Universe - No Quirks (My Hero Academia), Alternate Universe - Summer Camp, Alternate Universe - Teenagers, Alternate Universe - Vampire, Always a different sex, Anal Fingering, Anal Sex, And they\'re at the beach and in a Dani/Sandy situation, Angst, Angst and Pining, Angst with a Happy Ending, Animals, Anxiety, Anxiety Attacks, Aoyama Breaks the Fourth Wall, Aromantic, Artist Grantaire, Attempt at Humor, Attempted Seduction, Attraction, Author is not also named Jean Liu and desperately in love with a Davy Jackson, Awkward Conversations, Awkward Crush, Awkward Flirting, Awkward Germany (Hetalia), Awkward James Potter, Awkwardness, Background Les Amis de l\'ABC, Background PolDul, Background Relationships, Bad Touch, Bad Touch Bakugou, Banter, Barebacking, Barely Legal, Based on an rp I did, Based on the Grease song Summer Nights, Basically, Beach House, Beach Sex, Beach Volleyball, Beaches, Begging, Best Friends, Betaed, Bi Dean, Bi Draco Malfoy, Bi Jimmy, Bi Theo Nott, Bible Thumper Ben, Bifur is a good bro, Bilingual Lance (Voltron), Billy Hargrove Lives, Billy Hargrove/ Henderson! reader, Birthday Party, Bisexual Characters, Bisexual Lance (Voltron), Bisexual Steve, Blow Job, Blow Jobs, Body Worship, Bottom Dean Winchester, Bottom Hwang Hyunjin, Bottom Min Yoongi | Suga, Bottom Robin Buckley, Boys In Love, Boys Kissing, Bromance, Brothers Germany & Prussia (Hetalia), Brothers North Italy & South Italy (Hetalia), Bruce Wayne is a Good Dad, Bucky is a vampire, Cabin Fic, Cabins, Calm Before The Storm, Camp Camp - Freeform, Camp Claremont, Camp Counselor AU, Camp Rock AU, Camping, Canon Compliant, Canon Divergance, Canon Queer Character, Canon Related, Car Sex, Carnival, Castiel and Dean Winchester Need to Use Their Words, Casually adds random kpop idols, Cat Will, Celebratory Sex, Childhood Sexual Abuse, Chrissy Cunningham Lives, Chrissy and Heather are besties, Christine tops, Clint is a Lowly Human, Comedy, Comeplay, Comfort, Coming Out, Community: dogdaysofsummer, Community: rarepair_shorts, Complete, Confession Time!, Consensual Underage Sex, Cosette And Enjolras Are Siblings, Crack, Crime Fighting, Crime fighting team, Cross-Posted on FanFiction.Net, Crush at First Sight, Crushes, Cuban Lance (Voltron), Cuddling, Cunnilingus, Cussing, Cute, Cute Couples, Cute Grantaire, Cute Midoriya Izuku, Cute Uraraka Ochako, Daddy Kink, Dan\'s an adorable bean, Dancer Ryan, Dark, David x Reader, Day At The Beach, Dead Dove: Do Not Eat, Deaf Clint Barton, Dean Winchester is Sam Winchester\'s Legal Guardian, Destiel - Freeform, Detroit Red Wings, Dialogue Heavy, Dildos, Dirty Talk, Doctor Rose Tico, Dog Chewbacca, Dog Kirsch, Dom Jeon Jungkook, Dom/sub, Domestic, Domestic Bliss, Domestic Fluff, Don\'t copy to another site, Don\'t copy to other sites, Double Date, Drabble, Drabble Collection, Drabbles, Drinking, Drinking Games, Drug Dealing, Drunk David, Drunken Shenanigans, Eddie Munson Loves Steve Harrington, Eddie Munson is a Little Shit, Ellen is the Director of a summer camp, Emails, Emotional Hurt/Comfort, Emotions, Enemies to Friends to Lovers, Enemies to Lovers, Enjolras is an Idiot, Enjolras/Grantaire-centric, Enthusiastic Consent, Epistolary, Established Midoriya Izuku/Uraraka Ochako, Established Relationship, Evan Hansen is only mentioned, Eventual Relationships, Eventual Romance, Eventual Smut, Everybody Lives, Everyone Is Gay, Everything is Beautiful and Nothing Hurts, Explicit Language, Explicit Sexual Content, Fake/Pretend Relationship, Falling In Love, Families of Choice, Family, Family Feels, Family Fluff, Family store, Fan Casting, Female Bilbo, Female Bilbo Baggins/Female Thorin Oakenshield, Female Jean Liu, Female Kíli, Female Thorin Oakenshield, Femslash, Fic Exchange, Fireworks, First Crush, First Kiss, First Meeting, First Meetings, First Time, First Time Blow Jobs, Flashbacks, Flirting, Flowers, Fluff, Fluff and Angst, Fluff and Crack, Fluff and Humor, Fluff and Hurt/Comfort, Fluff and Smut, Fluff without Plot, Fluffy, Fluffyfest, Football | Soccer, Freshers Week, Friends With Benefits, Friends to Lovers, Friendship, Fruity four and the kids, Futanari, Future Fic, GSA, Gay, Gay Eddie Munson, Gay Porn Hard, Geeks, Gender or Sex Swap, Gender-neutral Reader, Genderfluid Awsten Knight, Genderfluid Barry Allen, Genderfluid Character, Genderfluid Nori, Get together fic, Getting Together, Getting to Know Each Other, Grantaire Has A Cat, Grantaire Has Issues, Grantaire is an idiot, Grease - Freeform, Grease AU, Grease References, Grease-inspired, Greaser AU, Hal Is A Moron, Hallelujah, Hand Job, Happy Ending, Harry Potter Epilogue What Epilogue | EWE, Has to add tags suddenly forgets what the fic is about, Hawaii, Healthy Relationships, Heather Holloway Lives, Henry is also a camp counselor, High School, High School AU, High School Teacher AU, Hijinks & Shenanigans, Hockey, Holiday, Holidays, Homophobia, Hot Weather, Human Castiel, Humor, Hunk & Lance (Voltron) Friendship, Hurt/Comfort, I Don\'t Even Know, I Will Go Down With This Ship, I Wrote This For Fun, I Wrote This Instead of Sleeping, I don\'t know what to tag it as, I honestly can\'t believe I\'m writing this either, I literally managed to give every character in Class 1-A a line, I mean Teddy and Billy and Tommy are fixing a car in a Grease-esque manner, I need help, I wish my counselors looked like that, I\'M FEELING FLUFFY, IDENTITY SHENANIGANS, IT\'S A LOT OF FLUFF OKAY, Ice Cream, Ichabbie Summer, Idiots in Love, Idk enjoy this, Implied Sexual Assault, Implied/Referenced Sex, Inaccurate, Incest, Innacurate depiction of cinema, Insecurity, Inspired by Grease, Introspection, It\'s also really long oops, It\'s hot, It\'s implied that he has a lisp but his dialogue is written normally, Jaebum is whipped, Jake moves in with his cousin across the street from Rich after his parents leave, Jared and Connor are awkward and gay, Jealousy, Jean Has a Potty Mouth, Johnlock - Freeform, Jung Wooyoung is Whipped, Kaminari is Thirsty, Karaoke, Keith (Voltron) is Bad at Feelings, Keith and Shiro are Adoptive Siblings, Kid Fic, Kidfic, Kinda, Kink Meme, Kissing, Lance & Pidge | Katie Holt Friendship, Lance (Voltron) is a Mess, Lawyer Ben Solo, Les Amis de l\'ABC - Freeform, Les Amis de l\'ABC Shenanigans, Licking, Lifeguard!Marco, Light Angst, Light-Hearted, Lipstick Kisses, Loss of Virginity, Love, Love Confessions, Love Triangles, Love at First Sight, Lucy being lucy, Luke is a shit, Lydia loves Grease, Lydia loves Stiles, M/M/M, Making Love, Making Out, Marauders\' Era, Marcus is Tomas\' Impulse Control, Marriage Proposal, Marriage Proposal (Technically), Married Life, Married Rey & Rose, Masturbation, Mechanic!Harry, Meet-Cute, Mentioned Character Death, Mentions of Dwarf Culture, MerMay, Mermaid Jongin, Merman!Simon, Mild Inneundo, Mild Smut, Minor Character Death, Missionary Position, Misunderstandings, Model UN, Modern AU, More characters and relationships to come, Morning Sex, Mpreg, Multiple Orgasms, Musicals, Mutual Pining, Mycroft has Low Self Esteem, NHL RPF, NOT BETA READ!, Naked Cuddling, Nancy Wheeler Loves Robin Buckley, Natasha is a Succubus, Nerd!Jean, Nerdy John, Nightmares, No beta we die like ed-, No real NinoxAdrien, Non-Penetrative Sex, Non-Traditional Alpha/Beta/Omega Dynamics, Nonbinary Awsten Knight, Nori is a Little Shit, Not Beta Read, Not Klaine Friendly, Nudity, Nwalin Week, Oblivious, Old Married Couple, Olicity Summer Sizzle, Omega Dean Winchester, Omorashi, On a hunt, One Night Stands, One Shot, One Shot Collection, One-Shot/Two-Shot/Or a Few-Shot, Open Marriage, Open Relationships, Or not, Oral Sex, Orchestra Pit, Original Character(s), Other Additional Tags to Be Added, Outside Sex, PLOT (Probably Lots Of Tiddies), POV Alternating, POV Carmilla, POV Outsider, PWP, Pack Feels, Panic Attacks, Pansexual Rose and Rey, Park Seonghwa is Whipped, Part 2 coming soon ;), Partying, Past Child Abuse, Past Harry Potter/Ginny Weasley, Past Matsuoka Rin/Yamazaki Sousuke, Pastel Jackson Wang, Pedophilia, Pegging, Percy is a Dork, Period-Typical Homophobia, Phil needs to be appreciated, Pining, Piper is a fangirl, Piss, Plot What Plot/Porn Without Plot, Polyamory, Pool, Pool Party, Poolgirl Byleth AU, Popsicles, Post baseball game, Post-Canon, Post-Hogwarts, Post-Series, Pre-Apocalypse, Pre-Canon, Prequel, Professor Remus Lupin, Prompt Fill, Prompt: Heat, Prussia Won\'t Say She\'s In Love, Public Blow Jobs, Puppy Love, Rare Ships!!! On Ice, Rated T because Sylvain cannot stop being horny on main for more than 2 seconds, Rating May Change, Reader Insert, Reader is adopted by the moomins, Reader is depressed, Reader is human, Reader-Insert, Reconciliation, Recreational Drug Use, Relationship Advice, Requests/Prompts Open, Rest of the Black Eagles are Mentioned, Revised fic, Rich goes by Richard and doesn\'t have a Squip, Richard is a HUGE dork, Rimming, Rivalry, Rivals to Lovers, Road Trips, Robin Buckley Loves Nancy Wheeler, Robin Buckley is Not Amused, Robin Buckley is a Little Shit, Romance, Romantic Fluff, Ronanace, Ronance, Rule 63, SO MUCH FLUFF, Sabriel - Freeform, Same-Sex Marriage, Schmoop, School Year, Seaside, Season of Kink 2020, Season/Series 03, Secret Relationship, Self-Esteem Issues, Semi-Public Sex, Sequel, Sex, Sex Toys, Sex on the Beach, Sexual Abuse, Sexual Tension, Shameless Smut, Shenanigans, Sherlock has a cunning plan, Short & Sweet, Short One Shot, Short Reader, Shower Sex, Sibling Incest, Siblings, Sirius Black Fest, Sirius Black Fest 2019, Sirius is a romantic goofball, Skinny Dipping, Sleepovers, Sleepy Cuddles, Slice of Life, Slow Build, Slow Burn, Small Town Typical (?) Homophobia, Smut, Sneaking Out, SnowBarry ff, So in a way it\'s a Grease AU, So much cuddling yall, Sober sex tho, Socially Awkward Keith (Voltron), Soft Jackson Wang, Soft kazumaji for self indulgence, Some Plot, Some light smut, Someone gets hit by a car, Sorry Not Sorry, Sorry literally forgot condoms exist, Spanking, Spiraling, Spit As Lube, Spoiler: The Treat is art, Spoilers, Spoilers for The Stolen Century, Stalia breakup, Steve Harrington Loves Eddie Munson, Stiles loves Lydia, Story in Pictures, Strap-Ons, Sub Min Yoongi | Suga, Sugar Daddy, Summer, Summer Camp, Summer Camp AU, Summer Fluff, Summer Love, Summer Reperatory Theater, Summer Romance, Summer Vacation, Supernatural Elements, Sweet, TJLC | The Johnlock Conspiracy, Tags May Change, Teacher AU, Teasing, Teen Crush, Teen John, Teen Romance, Teen Sherlock, Teenage Sam Winchester, Teenagers, Teenlock, Texting, The Beach AU We All Needed, The Fruity Four, There\'s a little extra treat at the end, They\'re both so adorable, Things get funny and cute and emotional and steamy, Third Wheels, This Was Just Supposed to Be Hot and Smutty but I Love Love, Threesome, Threesome - F/F/F, Threesome - F/M/M, Tickling, Tiny Enjolras, Tobi Deidara and Hidan are friends and stupid, Tobi has a surprise, Tobi\'s mask is...confusing in this fic. a medical mask probably, Tooth-Rotting Fluff, Top Castiel (Supernatural), Top Castiel/Bottom Dean Winchester, Top Jeon Jungkook, Top Nancy Wheeler, Top Yang Jeongin | I.N, Totally Not Projecting At All, Totally excited for this, Trans Patty Walters, Tree Houses, True Love, Tumblr Prompt, Twincest, Tyrannus Basilton ""Baz"" Pitch Is Gay for Simon Snow, Underage Drinking, Underage Sam, Underage Sex, Underage Smoking, University, Unsafe Sex, Uraraka and Kirishima are Wingmen, Vaginal Fingering, Vaginal Sex, Vibrators, Virgin Sherlock, Virgin Yang Jeongin | I.N, Walks On The Beach, Water Guns, Weddings, Wetting, Whirlwind Romance, Winterhawk Week, Y/n henderson, Yang Jeongin | I.N Has Sexuality Realizations, Young Love, Young Sirius Black, a little Jealous!Lilith, abusive ex is an oc, actual sex too, adopting max in the future!, ah the old days, alcohol tw, all characters are legal age, also, also smut probably, alternative universe, amusement park in the summer time, and kind of sad, and setting them up, and some others implied hehe, and teaches horseback riding, au where Billy doesn\'t get possessed right away so there\'s time for a summer romance, awkward Connor and Jared, bad boy!Rin, bc - Freeform, be warned, beach date, beach party, bi chad, blowjob, brief mentions of homophobia and transphobia, bruce is a dad, but actually she is, but no-one actually sings, camp counselors, canonverse, cis-swapped Bifur, cockslut!loki, college student sehun, completely for fun, completely self-indulgent, cool kids, cuteness, dark shota - really really noncon, david cries a lot, david might seem ooc sometimes?, david protection squad 2k17, david x reader gets married!, don\'t ask me-ask Wet Hot American Summer for that one..., dont look at me im trash, double-date, drunk, drunkAU!Barry, enjoltaire - Freeform, epic crush, ethan freeman-based erik, european trip, extremely juvenile behavior, fantastic foursome - Freeform, fear boner lol, feral suga, fluu, formatting is so shitty I\'m sorry, fuck it everyone is bi, fun in the sun, fun times in the pool locker room, gabriel thinks he\'s straight, gay cas, gay ryan, gonna be a long one, good god what have I done?, good vibes only, goody goody!Ai, grantaire\'s hoodie, gwen is mvp, hard decisions, healthy competition, here\'s another one, hinted at eventual Steve/reader, history teacher reader, holmescest, hopefully in copious and indecent amounts, horrible past, how they got together, i really like this fic, i wrote a lot of this when i was supposed to be sleeping, ichabbie - Freeform, im not good with tags, in as much as i can do slow build, in case you\'re missing summertime like i am, in this house we love Theo Putnam and will protect him at all costs, injured grantaire, innocent david, instafic, irresponsible counselors, is there a kink for having sex outside?, it\'s cute, it\'s kinda late, jake is precious, jk everyone will get it, kind of, kirikami - Freeform, kurtbastian, language warning, lifeguard Rey, like a cotton candy cloud, like soooo much fluff, like suuuuper gay, literally so fluffy I can\'t even, little ficlets, loki is briefly involved with someone else, loki is way to pale to be spending all summer at the pool, lol what is canon, long story, lots of exposition, lots-of-kissing, magic fingers too, makeout scenes??, master kink, max is your best friend, might do sin, mirror situation, mlm, mostly dean tho, motorcycles and fast cars, mute character, mutual pining (kind of), mystrade, night swimming, no beta we die like Shelby Colson, no serious plots- easy going, not canon, not entirely sure if I have tagged everything bc i\'m not amazing at tagging, not much angst tho, nothing like the film!, oh god the title is even worse, okay i know i already wrote a fake dating fic but whatever, over seas trips, overheated!mycroft, percabeth, poor bby im so sorry, preston and his romeo x juliet plays smh, prior relationships mentioned but nothing specific, prompt, queer community, rated for language, rating wil probably change, really hot, relationships, religion teacher gabriel, reminescent, rental houses, roadtrip au, season three, seonghwa-gets-caught-by-campers, seriously very underage - kiri is 6, set malfunction, sex and love, she has to overcome her own fears, short enjolras, short people are the best, short-oneshot-fluff-before-i-post-the-full-fic, sibling relationships, siiiiiiiiiiiiiiiiiiiiiiiiiighs, slight crossover (the new normal), so adorable, so much UST, soft, soft enjolras, soft grantaire, some gay shit, some smut, someone almost DROWNS, spoilers for the end of matt fraction\'s run, steddie, steve being a mom, steve eddie and robin form a band?!?!, steve is my angst baby, summer alts, summer antics, summer fun, summer lovin, summer lovin. had me a blaaaast! summer lovin. dick in my aaaaaass!, summer time, supportive families, taiora - Freeform, tall grantaire, teachers and students betting on them getting together, the beginning of a smut scene, the fluffiest of proposals, the group goes to the beach, the hell is fluu?, the kraken is there, the vagueist grease au ever, the whole \'whoops we need to share a room but you\'re my crush\' troupe bc love, there might be sex in a storage shed, there was no second war, there\'s some sex I guess?, they are truly soft and neat, they did the job right the first time around, they fight, they gay, they get into some shenanagins, they\'re idiots, this is so shameful and i\'m not even sorry, this is the latest i\'ve ever been for an exchange I am SO SORRY, this might be my worst fic writing-wise but it brings me joy, trans!byleth, unadvisable kitchen conduct, unrequited Steve/ Reader, very bad, very gently implied sexual content, water fights, we smol and fluff, well there is now, what really happened, what the fuck i was typing in \'licking\' and found out that \'eye licking\' is a tag on here, whoever gets the title ily, why are they so cute, wlw, wolfstar, woohwa-are-camp-counsellors, yall are weird., yes im aware its july but i started writing this for mermay, zenmasters')}]"	375	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene Family is what you make it?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Family is what you make it"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Qué palabras clave tiene Summer Lovin'?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?keyword WHERE { 
?story golem:title ""Summer Lovin'"" . 
?story golem:keyword ?keyword . 
}
"	"[{'keyword': Value(literal:'Alternate Universe - Muggle')}, {'keyword': Value(literal:'Angst')}, {'keyword': Value(literal:'Fluff')}, {'keyword': Value(literal:'Secret Relationship')}, {'keyword': Value(literal:'Smut')}, {'keyword': Value(literal:'Summer Romance')}, {'keyword': Value(literal:'roadtrip au')}, {'keyword': Value(literal:'Anal Fingering')}, {'keyword': Value(literal:'Anal Sex')}, {'keyword': Value(literal:'Barebacking')}, {'keyword': Value(literal:'Comeplay')}, {'keyword': Value(literal:'Enthusiastic Consent')}, {'keyword': Value(literal:'Established Relationship')}, {'keyword': Value(literal:'Everybody Lives')}, {'keyword': Value(literal:'Harry Potter Epilogue What Epilogue | EWE')}, {'keyword': Value(literal:'Multiple Orgasms')}, {'keyword': Value(literal:'Oral Sex')}, {'keyword': Value(literal:'Domestic Bliss')}, {'keyword': Value(literal:'Professor Remus Lupin')}, {'keyword': Value(literal:""Don't copy to other sites"")}, {'keyword': Value(literal:'Celebratory Sex')}, {'keyword': Value(literal:'Sirius Black Fest')}, {'keyword': Value(literal:'Sirius Black Fest 2019')}, {'keyword': Value(literal:'(Blink and you miss it)')}, {'keyword': Value(literal:'Marriage Proposal (Technically)')}, {'keyword': Value(literal:'Sirius is a romantic goofball')}, {'keyword': Value(literal:'there was no second war')}, {'keyword': Value(literal:'they did the job right the first time around')}, {'keyword': Value(literal:'unadvisable kitchen conduct')}, {'keyword': Value(literal:""Marauders' Era"")}, {'keyword': Value(literal:'Sex on the Beach')}, {'keyword': Value(literal:'Community: dogdaysofsummer')}, {'keyword': Value(literal:""it's cute"")}, {'keyword': Value(literal:'beach date')}, {'keyword': Value(literal:'First Kiss')}, {'keyword': Value(literal:'Flirting')}, {'keyword': Value(literal:'Post-Hogwarts')}, {'keyword': Value(literal:'Sexual Tension')}, {'keyword': Value(literal:'Summer')}, {'keyword': Value(literal:'Teasing')}, {'keyword': Value(literal:'Past Harry Potter/Ginny Weasley')}, {'keyword': Value(literal:'Summer Vacation')}, {'keyword': Value(literal:'Beaches')}, {'keyword': Value(literal:'Skinny Dipping')}, {'keyword': Value(literal:'Community: rarepair_shorts')}, {'keyword': Value(literal:'Season of Kink 2020')}, {'keyword': Value(literal:'Consensual Underage Sex')}, {'keyword': Value(literal:'Fluff and Angst')}, {'keyword': Value(literal:'Sibling Incest')}, {'keyword': Value(literal:'holmescest')}, {'keyword': Value(literal:'Prompt Fill')}, {'keyword': Value(literal:'Teenlock')}, {'keyword': Value(literal:'Day At The Beach')}, {'keyword': Value(literal:'Mycroft has Low Self Esteem')}, {'keyword': Value(literal:'Sherlock has a cunning plan')}, {'keyword': Value(literal:'Actors')}, {'keyword': Value(literal:'Age Difference')}, {'keyword': Value(literal:'Daddy Kink')}, {'keyword': Value(literal:'Sugar Daddy')}, {'keyword': Value(literal:'Implied/Referenced Sex')}, {'keyword': Value(literal:'Acting')}, {'keyword': Value(literal:'Grease References')}, {'keyword': Value(literal:'Alternate Universe - Gender Changes')}, {'keyword': Value(literal:'Cunnilingus')}, {'keyword': Value(literal:'Fluff and Smut')}, {'keyword': Value(literal:'Gender or Sex Swap')}, {'keyword': Value(literal:'Kissing')}, {'keyword': Value(literal:'Making Out')}, {'keyword': Value(literal:'Teenagers')}, {'keyword': Value(literal:'Rule 63')}, {'keyword': Value(literal:'Aftercare')}, {'keyword': Value(literal:'Dirty Talk')}, {'keyword': Value(literal:'Dom/sub')}, {'keyword': Value(literal:'Spanking')}, {'keyword': Value(literal:'Bottom Min Yoongi | Suga')}, {'keyword': Value(literal:'Top Jeon Jungkook')}, {'keyword': Value(literal:'master kink')}, {'keyword': Value(literal:'Dom Jeon Jungkook')}, {'keyword': Value(literal:'Sub Min Yoongi | Suga')}, {'keyword': Value(literal:'Polyamory')}, {'keyword': Value(literal:'Hot Weather')}, {'keyword': Value(literal:'Prompt: Heat')}, {'keyword': Value(literal:'Kaminari is Thirsty')}, {'keyword': Value(literal:'all characters are legal age')}, {'keyword': Value(literal:'Alternate Universe - Human')}, {'keyword': Value(literal:'Begging')}, {'keyword': Value(literal:'Blow Jobs')}, {'keyword': Value(literal:'Incest')}, {'keyword': Value(literal:'Plot What Plot/Porn Without Plot')}, {'keyword': Value(literal:'Semi-Public Sex')}, {'keyword': Value(literal:'Underage Sex')}, {'keyword': Value(literal:'summer lovin. had me a blaaaast! summer lovin. dick in my aaaaaass!')}, {'keyword': Value(literal:'cockslut!loki')}, {'keyword': Value(literal:'fun times in the pool locker room')}, {'keyword': Value(literal:'loki is briefly involved with someone else')}, {'keyword': Value(literal:'oh god the title is even worse')}, {'keyword': Value(literal:""this is so shameful and i'm not even sorry"")}, {'keyword': Value(literal:'loki is way to pale to be spending all summer at the pool')}, {'keyword': Value(literal:'Alternate Universe - High School')}, {'keyword': Value(literal:'Alternate Universe - Beach')}, {'keyword': Value(literal:'AU')}, {'keyword': Value(literal:'One Shot')}, {'keyword': Value(literal:'prompt')}, {'keyword': Value(literal:'drunk')}, {'keyword': Value(literal:'Spiraling')}, {'keyword': Value(literal:'Alternate Scene')}, {'keyword': Value(literal:'SnowBarry ff')}, {'keyword': Value(literal:'drunkAU!Barry')}, {'keyword': Value(literal:'mirror situation')}, {'keyword': Value(literal:'Getting to Know Each Other')}, {'keyword': Value(literal:'relationships')}, {'keyword': Value(literal:'Alternate Universe - Summer Camp')}, {'keyword': Value(literal:'I need help')}, {'keyword': Value(literal:'Summer Camp AU')}, {'keyword': Value(literal:'summer fun')}, {'keyword': Value(literal:'Fan Casting')}, {'keyword': Value(literal:'Alex is a Camp Counselor')}, {'keyword': Value(literal:'Also a disaster bi-sexual')}, {'keyword': Value(literal:'Camp Claremont')}, {'keyword': Value(literal:'Ellen is the Director of a summer camp')}, {'keyword': Value(literal:'Henry is also a camp counselor')}, {'keyword': Value(literal:""I honestly can't believe I'm writing this either"")}, {'keyword': Value(literal:'Totally excited for this')}, {'keyword': Value(literal:'and teaches horseback riding')}, {'keyword': Value(literal:'completely for fun')}, {'keyword': Value(literal:'no serious plots- easy going')}, {'keyword': Value(literal:'there might be sex in a storage shed')}, {'keyword': Value(literal:""don't ask me-ask Wet Hot American Summer for that one..."")}, {'keyword': Value(literal:'Canon Related')}, {'keyword': Value(literal:'Summer Camp')}, {'keyword': Value(literal:'On a hunt')}, {'keyword': Value(literal:'Cuddling')}, {'keyword': Value(literal:'Drabble')}, {'keyword': Value(literal:'Self-Esteem Issues')}, {'keyword': Value(literal:'Short & Sweet')}, {'keyword': Value(literal:'Introspection')}, {'keyword': Value(literal:'they fight')}, {'keyword': Value(literal:'language warning')}, {'keyword': Value(literal:'and kind of sad')}, {'keyword': Value(literal:'steve is my angst baby')}, {'keyword': Value(literal:'Slow Burn')}, {'keyword': Value(literal:'steddie')}, {'keyword': Value(literal:'Gay Eddie Munson')}, {'keyword': Value(literal:'not canon')}, {'keyword': Value(literal:'Bisexual Steve')}, {'keyword': Value(literal:'Camp Counselor AU')}, {'keyword': Value(literal:'Ronanace')}, {'keyword': Value(literal:'Inaccurate')}, {'keyword': Value(literal:'I Wrote This For Fun')}, {'keyword': Value(literal:'very bad')}, {'keyword': Value(literal:'Y/n henderson')}, {'keyword': Value(literal:'Recreational Drug Use')}, {'keyword': Value(literal:'wlw')}, {'keyword': Value(literal:'some smut')}, {'keyword': Value(literal:'mlm')}, {'keyword': Value(literal:'Angst and Pining')}, {'keyword': Value(literal:'Ronance')}, {'keyword': Value(literal:'The Fruity Four')}, {'keyword': Value(literal:'Canon Divergance')}, {'keyword': Value(literal:'gonna be a long one')}, {'keyword': Value(literal:'steve being a mom')}, {'keyword': Value(literal:'Fruity four and the kids')}, {'keyword': Value(literal:'steve eddie and robin form a band?!?!')}, {'keyword': Value(literal:'Alternate Universe - Fantasy')}, {'keyword': Value(literal:'Meet-Cute')}, {'keyword': Value(literal:'First Meetings')}, {'keyword': Value(literal:'Summer Love')}, {'keyword': Value(literal:'Seaside')}, {'keyword': Value(literal:'Mermaid Jongin')}, {'keyword': Value(literal:'college student sehun')}, {'keyword': Value(literal:'Canon Compliant')}, {'keyword': Value(literal:'Rimming')}, {'keyword': Value(literal:'Fic Exchange')}, {'keyword': Value(literal:'Rare Ships!!! On Ice')}, {'keyword': Value(literal:'Alternate Universe - Modern Setting')}, {'keyword': Value(literal:'Explicit Language')}, {'keyword': Value(literal:'Explicit Sexual Content')}, {'keyword': Value(literal:'I Will Go Down With This Ship')}, {'keyword': Value(literal:'Future Fic')}, {'keyword': Value(literal:'Humor')}, {'keyword': Value(literal:'Tumblr Prompt')}, {'keyword': Value(literal:'canonverse')}, {'keyword': Value(literal:'Friends to Lovers')}, {'keyword': Value(literal:'Love Confessions')}, {'keyword': Value(literal:'Nightmares')}, {'keyword': Value(literal:'Awkward Conversations')}, {'keyword': Value(literal:'Awkward Flirting')}, {'keyword': Value(literal:'Relationship Advice')}, {'keyword': Value(literal:'Background PolDul')}, {'keyword': Value(literal:'Period-Typical Homophobia')}, {'keyword': Value(literal:'Underage Smoking')}, {'keyword': Value(literal:'Alternate Universe - 1960s')}, {'keyword': Value(literal:'Same-Sex Marriage')}, {'keyword': Value(literal:'cuteness')}, {'keyword': Value(literal:""And they're at the beach and in a Dani/Sandy situation"")}, {'keyword': Value(literal:""So in a way it's a Grease AU"")}, {'keyword': Value(literal:'I mean Teddy and Billy and Tommy are fixing a car in a Grease-esque manner')}, {'keyword': Value(literal:'Best Friends')}, {'keyword': Value(literal:'Getting Together')}, {'keyword': Value(literal:'Beach House')}, {'keyword': Value(literal:'Romance')}, {'keyword': Value(literal:'Love')}, {'keyword': Value(literal:'Masturbation')}, {'keyword': Value(literal:'Sex')}, {'keyword': Value(literal:'Sex Toys')}, {'keyword': Value(literal:'Vaginal Fingering')}, {'keyword': Value(literal:'Vibrators')}, {'keyword': Value(literal:'sex and love')}, {'keyword': Value(literal:'Alternate Universe - Childhood Friends')}, {'keyword': Value(literal:'Drinking')}, {'keyword': Value(literal:'First Time')}, {'keyword': Value(literal:'Loss of Virginity')}, {'keyword': Value(literal:'Morning Sex')}, {'keyword': Value(literal:'Spit As Lube')}, {'keyword': Value(literal:'Bottom Hwang Hyunjin')}, {'keyword': Value(literal:'Partying')}, {'keyword': Value(literal:'Top Yang Jeongin | I.N')}, {'keyword': Value(literal:'good vibes only')}, {'keyword': Value(literal:'Has to add tags suddenly forgets what the fic is about')}, {'keyword': Value(literal:'Casually adds random kpop idols')}, {'keyword': Value(literal:'Sober sex tho')}, {'keyword': Value(literal:'Sorry literally forgot condoms exist')}, {'keyword': Value(literal:'Virgin Yang Jeongin | I.N')}, {'keyword': Value(literal:'Yang Jeongin | I.N Has Sexuality Realizations')}, {'keyword': Value(literal:'Alternate Universe')}, {'keyword': Value(literal:'Pining')}, {'keyword': Value(literal:'Fireworks')}, {'keyword': Value(literal:'MerMay')}, {'keyword': Value(literal:'Tyrannus Basilton ""Baz"" Pitch Is Gay for Simon Snow')}, {'keyword': Value(literal:'Merman!Simon')}, {'keyword': Value(literal:'like suuuuper gay')}, {'keyword': Value(literal:'yes im aware its july but i started writing this for mermay')}, {'keyword': Value(literal:'Kink Meme')}, {'keyword': Value(literal:'overheated!mycroft')}, {'keyword': Value(literal:'Alternate Universe - College/University')}, {'keyword': Value(literal:'Texting')}, {'keyword': Value(literal:'Schmoop')}, {'keyword': Value(literal:'Hockey')}, {'keyword': Value(literal:'Detroit Red Wings')}, {'keyword': Value(literal:'NHL RPF')}, {'keyword': Value(literal:'Insecurity')}, {'keyword': Value(literal:'Gay Porn Hard')}, {'keyword': Value(literal:'Crushes')}, {'keyword': Value(literal:'Enemies to Lovers')}, {'keyword': Value(literal:'Oblivious')}, {'keyword': Value(literal:'Alternate Universe - Teenagers')}, {'keyword': Value(literal:""they're idiots"")}, {'keyword': Value(literal:'Alternate Universe - Country Club')}, {'keyword': Value(literal:'Spoilers for The Stolen Century')}, {'keyword': Value(literal:'very gently implied sexual content')}, {'keyword': Value(literal:'jake is precious')}, {'keyword': Value(literal:""It's implied that he has a lisp but his dialogue is written normally"")}, {'keyword': Value(literal:""Rich goes by Richard and doesn't have a Squip"")}, {'keyword': Value(literal:'Richard is a HUGE dork')}, {'keyword': Value(literal:'Things get funny and cute and emotional and steamy')}, {'keyword': Value(literal:'Jake moves in with his cousin across the street from Rich after his parents leave')}, {'keyword': Value(literal:'I Wrote This Instead of Sleeping')}, {'keyword': Value(literal:'they gay')}, {'keyword': Value(literal:'why are they so cute')}, {'keyword': Value(literal:'Based on an rp I did')}, {'keyword': Value(literal:'awkward Connor and Jared')}, {'keyword': Value(literal:""formatting is so shitty I'm sorry"")}, {'keyword': Value(literal:'jk everyone will get it')}, {'keyword': Value(literal:'whoever gets the title ily')}, {'keyword': Value(literal:'Gay')}, {'keyword': Value(literal:'Tooth-Rotting Fluff')}, {'keyword': Value(literal:'Carnival')}, {'keyword': Value(literal:'i really like this fic')}, {'keyword': Value(literal:'Revised fic')}, {'keyword': Value(literal:'Evan Hansen is only mentioned')}, {'keyword': Value(literal:'Idk enjoy this')}, {'keyword': Value(literal:'Jared and Connor are awkward and gay')}, {'keyword': Value(literal:'Football | Soccer')}, {'keyword': Value(literal:'High School')}, {'keyword': Value(literal:'Barely Legal')}, {'keyword': Value(literal:'Destiel - Freeform')}, {'keyword': Value(literal:'Sabriel - Freeform')}, {'keyword': Value(literal:'Underage Sam')}, {'keyword': Value(literal:'Grease-inspired')}, {'keyword': Value(literal:""gabriel thinks he's straight"")}, {'keyword': Value(literal:'rating wil probably change')}, {'keyword': Value(literal:'Alpha/Beta/Omega Dynamics')}, {'keyword': Value(literal:'Angst with a Happy Ending')}, {'keyword': Value(literal:'Bottom Dean Winchester')}, {'keyword': Value(literal:'Enemies to Friends to Lovers')}, {'keyword': Value(literal:'Non-Traditional Alpha/Beta/Omega Dynamics')}, {'keyword': Value(literal:'POV Alternating')}, {'keyword': Value(literal:'Omega Dean Winchester')}, {'keyword': Value(literal:'Top Castiel (Supernatural)')}, {'keyword': Value(literal:'Top Castiel/Bottom Dean Winchester')}, {'keyword': Value(literal:'Alpha Castiel (Supernatural)')}, {'keyword': Value(literal:'Teenage Sam Winchester')}, {'keyword': Value(literal:'Castiel and Dean Winchester Need to Use Their Words')}, {'keyword': Value(literal:'Alpha Castiel/Omega Dean Winchester')}, {'keyword': Value(literal:""Dean Winchester is Sam Winchester's Legal Guardian"")}, {'keyword': Value(literal:'PWP')}, {'keyword': Value(literal:'Femslash')}, {'keyword': Value(literal:'magic fingers too')}, {'keyword': Value(literal:'Beach Volleyball')}, {'keyword': Value(literal:'some gay shit')}, {'keyword': Value(literal:'(i should chill with the drowning stuff lmao)')}, {'keyword': Value(literal:'someone almost DROWNS')}, {'keyword': Value(literal:'the group goes to the beach')}, {'keyword': Value(literal:'the kraken is there')}, {'keyword': Value(literal:'they get into some shenanagins')}, {'keyword': Value(literal:'Alternate Universe - No Quirks (My Hero Academia)')}, {'keyword': Value(literal:'Romantic Fluff')}, {'keyword': Value(literal:'Third Wheels')}, {'keyword': Value(literal:'Teen Crush')}, {'keyword': Value(literal:'Crush at First Sight')}, {'keyword': Value(literal:'Cute Midoriya Izuku')}, {'keyword': Value(literal:'Cute Uraraka Ochako')}, {'keyword': Value(literal:'Established Midoriya Izuku/Uraraka Ochako')}, {'keyword': Value(literal:""I'M FEELING FLUFFY"")}, {'keyword': Value(literal:""IT'S A LOT OF FLUFF OKAY"")}, {'keyword': Value(literal:'Part 2 coming soon ;)')}, {'keyword': Value(literal:'Comedy')}, {'keyword': Value(literal:'Fluff and Crack')}, {'keyword': Value(literal:'Background Relationships')}, {'keyword': Value(literal:'kirikami - Freeform')}, {'keyword': Value(literal:'Aoyama Breaks the Fourth Wall')}, {'keyword': Value(literal:'Mild Inneundo')}, {'keyword': Value(literal:'The Beach AU We All Needed')}, {'keyword': Value(literal:'Uraraka and Kirishima are Wingmen')}, {'keyword': Value(literal:'and some others implied hehe')}, {'keyword': Value(literal:'I literally managed to give every character in Class 1-A a line')}, {'keyword': Value(literal:""this is the latest i've ever been for an exchange I am SO SORRY"")}, {'keyword': Value(literal:'Bisexual Lance (Voltron)')}, {'keyword': Value(literal:'Cuban Lance (Voltron)')}, {'keyword': Value(literal:'Socially Awkward Keith (Voltron)')}, {'keyword': Value(literal:'Keith (Voltron) is Bad at Feelings')}, {'keyword': Value(literal:'Lance (Voltron) is a Mess')}, {'keyword': Value(literal:'Bilingual Lance (Voltron)')}, {'keyword': Value(literal:'Hunk & Lance (Voltron) Friendship')}, {'keyword': Value(literal:'Lance & Pidge | Katie Holt Friendship')}, {'keyword': Value(literal:'Keith and Shiro are Adoptive Siblings')}, {'keyword': Value(literal:'Accidental Kissing')}, {'keyword': Value(literal:'kind of')}, {'keyword': Value(literal:'rated for language')}, {'keyword': Value(literal:'water fights')}, {'keyword': Value(literal:'Cross-Posted on FanFiction.Net')}, {'keyword': Value(literal:'Water Guns')}, {'keyword': Value(literal:'No real NinoxAdrien')}, {'keyword': Value(literal:'summer antics')}, {'keyword': Value(literal:'Alternate Universe - Vampire')}, {'keyword': Value(literal:'Domestic')}, {'keyword': Value(literal:'Idiots in Love')}, {'keyword': Value(literal:'Kinda')}, {'keyword': Value(literal:'Light-Hearted')}, {'keyword': Value(literal:'Get together fic')}, {'keyword': Value(literal:'Bucky is a vampire')}, {'keyword': Value(literal:'Clint is a Lowly Human')}, {'keyword': Value(literal:'Natasha is a Succubus')}, {'keyword': Value(literal:'Spoiler: The Treat is art')}, {'keyword': Value(literal:""There's a little extra treat at the end"")}, {'keyword': Value(literal:'Complete')}, {'keyword': Value(literal:'Happy Ending')}, {'keyword': Value(literal:'Unsafe Sex')}, {'keyword': Value(literal:'Genderfluid Character')}, {'keyword': Value(literal:'Reconciliation')}, {'keyword': Value(literal:'Rivals to Lovers')}, {'keyword': Value(literal:'Greaser AU')}, {'keyword': Value(literal:'ASL')}, {'keyword': Value(literal:'mute character')}, {'keyword': Value(literal:'Nori is a Little Shit')}, {'keyword': Value(literal:'so much UST')}, {'keyword': Value(literal:'IDENTITY SHENANIGANS')}, {'keyword': Value(literal:'queer community')}, {'keyword': Value(literal:'Lipstick Kisses')}, {'keyword': Value(literal:'Nwalin Week')}, {'keyword': Value(literal:'lol what is canon')}, {'keyword': Value(literal:'Genderfluid Nori')}, {'keyword': Value(literal:'Bifur is a good bro')}, {'keyword': Value(literal:'cis-swapped Bifur')}, {'keyword': Value(literal:'extremely juvenile behavior')}, {'keyword': Value(literal:'motorcycles and fast cars')}, {'keyword': Value(literal:'True Love')}, {'keyword': Value(literal:'Animals')}, {'keyword': Value(literal:'Emotions')}, {'keyword': Value(literal:'Drabbles')}, {'keyword': Value(literal:'summer time')}, {'keyword': Value(literal:'Reader-Insert')}, {'keyword': Value(literal:'soft')}, {'keyword': Value(literal:'Reader is human')}, {'keyword': Value(literal:'Reader is adopted by the moomins')}, {'keyword': Value(literal:'Attempted Seduction')}, {'keyword': Value(literal:'Open Marriage')}, {'keyword': Value(literal:'Awkwardness')}, {'keyword': Value(literal:'lifeguard Rey')}, {'keyword': Value(literal:'Bible Thumper Ben')}, {'keyword': Value(literal:'Doctor Rose Tico')}, {'keyword': Value(literal:'Married Rey & Rose')}, {'keyword': Value(literal:'Pansexual Rose and Rey')}, {'keyword': Value(literal:'Coming Out')}, {'keyword': Value(literal:'Open Relationships')}, {'keyword': Value(literal:'Post-Series')}, {'keyword': Value(literal:""in case you're missing summertime like i am"")}, {'keyword': Value(literal:'Shameless Smut')}, {'keyword': Value(literal:'good god what have I done?')}, {'keyword': Value(literal:'trans!byleth')}, {'keyword': Value(literal:'Poolgirl Byleth AU')}, {'keyword': Value(literal:'Rest of the Black Eagles are Mentioned')}, {'keyword': Value(literal:'Alternate Universe - Canon Divergence')}, {'keyword': Value(literal:'Domestic Fluff')}, {'keyword': Value(literal:'Old Married Couple')}, {'keyword': Value(literal:'Slice of Life')}, {'keyword': Value(literal:'Soft kazumaji for self indulgence')}, {'keyword': Value(literal:'Not Beta Read')}, {'keyword': Value(literal:'Summer Reperatory Theater')}, {'keyword': Value(literal:'ah the old days')}, {'keyword': Value(literal:'epic crush')}, {'keyword': Value(literal:'Friends With Benefits')}, {'keyword': Value(literal:'Shower Sex')}, {'keyword': Value(literal:'Non-Penetrative Sex')}, {'keyword': Value(literal:'camp counselors')}, {'keyword': Value(literal:'So much cuddling yall')}, {'keyword': Value(literal:'Drabble Collection')}, {'keyword': Value(literal:'Fluffy')}, {'keyword': Value(literal:'Ice Cream')}, {'keyword': Value(literal:'Popsicles')}, {'keyword': Value(literal:'Actually Winter')}, {'keyword': Value(literal:'taiora - Freeform')}, {'keyword': Value(literal:'Aromantic')}, {'keyword': Value(literal:'Friendship')}, {'keyword': Value(literal:'Misunderstandings')}, {'keyword': Value(literal:'Mpreg')}, {'keyword': Value(literal:'POV Outsider')}, {'keyword': Value(literal:'2016-2017 NHL Season')}, {'keyword': Value(literal:'Prequel')}, {'keyword': Value(literal:'50s')}, {'keyword': Value(literal:'summer lovin')}, {'keyword': Value(literal:'Homophobia')}, {'keyword': Value(literal:'Rating May Change')}, {'keyword': Value(literal:'Some light smut')}, {'keyword': Value(literal:'supportive families')}, {'keyword': Value(literal:'gay ryan')}, {'keyword': Value(literal:'Dancer Ryan')}, {'keyword': Value(literal:'Post baseball game')}, {'keyword': Value(literal:'bi chad')}, {'keyword': Value(literal:'Pool')}, {'keyword': Value(literal:""It's hot"")}, {'keyword': Value(literal:'really hot')}, {'keyword': Value(literal:'fun in the sun')}, {'keyword': Value(literal:'Shenanigans')}, {'keyword': Value(literal:'Rivalry')}, {'keyword': Value(literal:'feral suga')}, {'keyword': Value(literal:'Jean Has a Potty Mouth')}, {'keyword': Value(literal:'Lifeguard!Marco')}, {'keyword': Value(literal:'Nerd!Jean')}, {'keyword': Value(literal:'Modern AU')}, {'keyword': Value(literal:'alcohol tw')}, {'keyword': Value(literal:'dont look at me im trash')}, {'keyword': Value(literal:'siiiiiiiiiiiiiiiiiiiiiiiiiighs')}, {'keyword': Value(literal:'Akatsuki Gift Exchange 2018')}, {'keyword': Value(literal:'Tobi Deidara and Hidan are friends and stupid')}, {'keyword': Value(literal:'Tobi has a surprise')}, {'keyword': Value(literal:""Tobi's mask is...confusing in this fic. a medical mask probably"")}, {'keyword': Value(literal:'season three')}, {'keyword': Value(literal:'Billy Hargrove/ Henderson! reader')}, {'keyword': Value(literal:'hinted at eventual Steve/reader')}, {'keyword': Value(literal:'unrequited Steve/ Reader')}, {'keyword': Value(literal:""au where Billy doesn't get possessed right away so there's time for a summer romance"")}, {'keyword': Value(literal:'Bromance')}, {'keyword': Value(literal:'Young Love')}, {'keyword': Value(literal:'Double Date')}, {'keyword': Value(literal:'Billy Hargrove Lives')}, {'keyword': Value(literal:'Chrissy Cunningham Lives')}, {'keyword': Value(literal:'Heather Holloway Lives')}, {'keyword': Value(literal:'Chrissy and Heather are besties')}, {'keyword': Value(literal:'Holidays')}, {'keyword': Value(literal:'fluu')}, {'keyword': Value(literal:""I don't know what to tag it as"")}, {'keyword': Value(literal:'the hell is fluu?')}, {'keyword': Value(literal:""there's some sex I guess?"")}, {'keyword': Value(literal:'First Time Blow Jobs')}, {'keyword': Value(literal:'Road Trips')}, {'keyword': Value(literal:'Season/Series 03')}, {'keyword': Value(literal:'Olicity Summer Sizzle')}, {'keyword': Value(literal:'Fluff and Humor')}, {'keyword': Value(literal:'Drug Dealing')}, {'keyword': Value(literal:'Past Child Abuse')}, {'keyword': Value(literal:'SO MUCH FLUFF')}, {'keyword': Value(literal:'Alternate Universe - Lifeguards')}, {'keyword': Value(literal:'percabeth')}, {'keyword': Value(literal:'Percy is a Dork')}, {'keyword': Value(literal:'Luke is a shit')}, {'keyword': Value(literal:'Piper is a fangirl')}, {'keyword': Value(literal:'Light Angst')}, {'keyword': Value(literal:'Other Additional Tags to Be Added')}, {'keyword': Value(literal:'Tree Houses')}, {'keyword': Value(literal:'Nonbinary Awsten Knight')}, {'keyword': Value(literal:'Genderfluid Awsten Knight')}, {'keyword': Value(literal:'Trans Patty Walters')}, {'keyword': Value(literal:'Jaebum is whipped')}, {'keyword': Value(literal:'Soft Jackson Wang')}, {'keyword': Value(literal:'Pastel Jackson Wang')}, {'keyword': Value(literal:'Boys In Love')}, {'keyword': Value(literal:'Boys Kissing')}, {'keyword': Value(literal:'Falling In Love')}, {'keyword': Value(literal:'Jealousy')}, {'keyword': Value(literal:'One Night Stands')}, {'keyword': Value(literal:'Dialogue Heavy')}, {'keyword': Value(literal:'University')}, {'keyword': Value(literal:'Geeks')}, {'keyword': Value(literal:'Inspired by Grease')}, {'keyword': Value(literal:'hard decisions')}, {'keyword': Value(literal:'cool kids')}, {'keyword': Value(literal:'Freshers Week')}, {'keyword': Value(literal:'69 (Sex Position)')}, {'keyword': Value(literal:'Beach Sex')}, {'keyword': Value(literal:'Futanari')}, {'keyword': Value(literal:'Licking')}, {'keyword': Value(literal:'Public Blow Jobs')}, {'keyword': Value(literal:""what the fuck i was typing in 'licking' and found out that 'eye licking' is a tag on here"")}, {'keyword': Value(literal:'yall are weird.')}, {'keyword': Value(literal:'Fake/Pretend Relationship')}, {'keyword': Value(literal:'Hurt/Comfort')}, {'keyword': Value(literal:'Original Character(s)')}, {'keyword': Value(literal:""here's another one"")}, {'keyword': Value(literal:'okay i know i already wrote a fake dating fic but whatever')}, {'keyword': Value(literal:'Threesome - F/M/M')}, {'keyword': Value(literal:'alternative universe')}, {'keyword': Value(literal:'Pool Party')}, {'keyword': Value(literal:'Bi Draco Malfoy')}, {'keyword': Value(literal:'Bi Theo Nott')}, {'keyword': Value(literal:'fuck it everyone is bi')}, {'keyword': Value(literal:'Mechanic!Harry')}, {'keyword': Value(literal:'Kid Fic')}, {'keyword': Value(literal:'like soooo much fluff')}, {'keyword': Value(literal:'like a cotton candy cloud')}, {'keyword': Value(literal:'Supernatural Elements')}, {'keyword': Value(literal:'Reader Insert')}, {'keyword': Value(literal:'Body Worship')}, {'keyword': Value(literal:'Always a different sex')}, {'keyword': Value(literal:""Prussia Won't Say She's In Love"")}, {'keyword': Value(literal:'Cute')}, {'keyword': Value(literal:'Gender-neutral Reader')}, {'keyword': Value(literal:'Short Reader')}, {'keyword': Value(literal:'short people are the best')}, {'keyword': Value(literal:'we smol and fluff')}, {'keyword': Value(literal:'First Meeting')}, {'keyword': Value(literal:'Anxiety Attacks')}, {'keyword': Value(literal:'Epistolary')}, {'keyword': Value(literal:'Fluff and Hurt/Comfort')}, {'keyword': Value(literal:'Panic Attacks')}, {'keyword': Value(literal:'Musicals')}, {'keyword': Value(literal:'Artist Grantaire')}, {'keyword': Value(literal:""Les Amis de l'ABC - Freeform"")}, {'keyword': Value(literal:'Enjolras/Grantaire-centric')}, {'keyword': Value(literal:'Orchestra Pit')}, {'keyword': Value(literal:'enjoltaire - Freeform')}, {'keyword': Value(literal:'Grease - Freeform')}, {'keyword': Value(literal:'GSA')}, {'keyword': Value(literal:""Background Les Amis de l'ABC"")}, {'keyword': Value(literal:'Emails')}, {'keyword': Value(literal:'not much angst tho')}, {'keyword': Value(literal:'Model UN')}, {'keyword': Value(literal:'School Year')}, {'keyword': Value(literal:""Les Amis de l'ABC Shenanigans"")}, {'keyword': Value(literal:'Cosette And Enjolras Are Siblings')}, {'keyword': Value(literal:'Enjolras is an Idiot')}, {'keyword': Value(literal:'Grantaire Has A Cat')}, {'keyword': Value(literal:'Grantaire Has Issues')}, {'keyword': Value(literal:'soft enjolras')}, {'keyword': Value(literal:'short enjolras')}, {'keyword': Value(literal:'tall grantaire')}, {'keyword': Value(literal:'Grantaire is an idiot')}, {'keyword': Value(literal:'Tiny Enjolras')}, {'keyword': Value(literal:'""long"" distance relationship')}, {'keyword': Value(literal:'Cute Grantaire')}, {'keyword': Value(literal:'Someone gets hit by a car')}, {'keyword': Value(literal:""grantaire's hoodie"")}, {'keyword': Value(literal:'injured grantaire')}, {'keyword': Value(literal:'set malfunction')}, {'keyword': Value(literal:'soft grantaire')}, {'keyword': Value(literal:'Crack')}, {'keyword': Value(literal:'Summer Fluff')}, {'keyword': Value(literal:'More characters and relationships to come')}, {'keyword': Value(literal:'in this house we love Theo Putnam and will protect him at all costs')}, {'keyword': Value(literal:'One-Shot/Two-Shot/Or a Few-Shot')}, {'keyword': Value(literal:'Requests/Prompts Open')}, {'keyword': Value(literal:'Small Town Typical (?) Homophobia')}, {'keyword': Value(literal:'a little Jealous!Lilith')}, {'keyword': Value(literal:'hopefully in copious and indecent amounts')}, {'keyword': Value(literal:'double-date')}, {'keyword': Value(literal:'summer alts')}, {'keyword': Value(literal:'brief mentions of homophobia and transphobia')}, {'keyword': Value(literal:'Rated T because Sylvain cannot stop being horny on main for more than 2 seconds')}, {'keyword': Value(literal:'wolfstar')}, {'keyword': Value(literal:'Car Sex')}, {'keyword': Value(literal:'Johnlock - Freeform')}, {'keyword': Value(literal:'Virgin Sherlock')}, {'keyword': Value(literal:'Teen Sherlock')}, {'keyword': Value(literal:'mystrade')}, {'keyword': Value(literal:'TJLC | The Johnlock Conspiracy')}, {'keyword': Value(literal:'Teen John')}, {'keyword': Value(literal:'Nerdy John')}, {'keyword': Value(literal:'Dildos')}, {'keyword': Value(literal:'Pegging')}, {'keyword': Value(literal:'Vaginal Sex')}, {'keyword': Value(literal:'Strap-Ons')}, {'keyword': Value(literal:'Threesome - F/F/F')}, {'keyword': Value(literal:'Naked Cuddling')}, {'keyword': Value(literal:'Sleepy Cuddles')}, {'keyword': Value(literal:'Puppy Love')}, {'keyword': Value(literal:'Eventual Romance')}, {'keyword': Value(literal:'Minor Character Death')}, {'keyword': Value(literal:'Attraction')}, {'keyword': Value(literal:'Awkward Crush')}, {'keyword': Value(literal:'Young Sirius Black')}, {'keyword': Value(literal:'Eventual Relationships')}, {'keyword': Value(literal:'Awkward James Potter')}, {'keyword': Value(literal:'Family')}, {'keyword': Value(literal:'One Shot Collection')}, {'keyword': Value(literal:'Blow Job')}, {'keyword': Value(literal:'Hand Job')}, {'keyword': Value(literal:'Slow Build')}, {'keyword': Value(literal:'Underage Drinking')}, {'keyword': Value(literal:'Or not')}, {'keyword': Value(literal:'be warned')}, {'keyword': Value(literal:'actual sex too')}, {'keyword': Value(literal:'in as much as i can do slow build')}, {'keyword': Value(literal:""it's kinda late"")}, {'keyword': Value(literal:'Teen Romance')}, {'keyword': Value(literal:'Brothers Germany & Prussia (Hetalia)')}, {'keyword': Value(literal:'Brothers North Italy & South Italy (Hetalia)')}, {'keyword': Value(literal:'Awkward Germany (Hetalia)')}, {'keyword': Value(literal:'Grease AU')}, {'keyword': Value(literal:'Past Matsuoka Rin/Yamazaki Sousuke')}, {'keyword': Value(literal:'bad boy!Rin')}, {'keyword': Value(literal:'goody goody!Ai')}, {'keyword': Value(literal:'Flashbacks')}, {'keyword': Value(literal:'Holiday')}, {'keyword': Value(literal:'so adorable')}, {'keyword': Value(literal:""They're both so adorable"")}, {'keyword': Value(literal:""Dan's an adorable bean"")}, {'keyword': Value(literal:'Phil needs to be appreciated')}, {'keyword': Value(literal:'fantastic foursome - Freeform')}, {'keyword': Value(literal:'little ficlets')}, {'keyword': Value(literal:'reminescent')}, {'keyword': Value(literal:'they are truly soft and neat')}, {'keyword': Value(literal:'Anxiety')}, {'keyword': Value(literal:'Comfort')}, {'keyword': Value(literal:'Emotional Hurt/Comfort')}, {'keyword': Value(literal:'Family Feels')}, {'keyword': Value(literal:'Spoilers')}, {'keyword': Value(literal:'Married Life')}, {'keyword': Value(literal:'Making Love')}, {'keyword': Value(literal:'Christine tops')}, {'keyword': Value(literal:'ethan freeman-based erik')}, {'keyword': Value(literal:'Families of Choice')}, {'keyword': Value(literal:'Hijinks & Shenanigans')}, {'keyword': Value(literal:'Marriage Proposal')}, {'keyword': Value(literal:'Weddings')}, {'keyword': Value(literal:'Cussing')}, {'keyword': Value(literal:'Lucy being lucy')}, {'keyword': Value(literal:'the fluffiest of proposals')}, {'keyword': Value(literal:'ichabbie - Freeform')}, {'keyword': Value(literal:'Ichabbie Summer')}, {'keyword': Value(literal:'Threesome')}, {'keyword': Value(literal:'Twincest')}, {'keyword': Value(literal:'blowjob')}, {'keyword': Value(literal:'M/M/M')}, {'keyword': Value(literal:'Bisexual Characters')}, {'keyword': Value(literal:'Outside Sex')}, {'keyword': Value(literal:'Bi Dean')}, {'keyword': Value(literal:'gay cas')}, {'keyword': Value(literal:'well there is now')}, {'keyword': Value(literal:'Bi Jimmy')}, {'keyword': Value(literal:'I wish my counselors looked like that')}, {'keyword': Value(literal:'irresponsible counselors')}, {'keyword': Value(literal:'is there a kink for having sex outside?')}, {'keyword': Value(literal:'prior relationships mentioned but nothing specific')}, {'keyword': Value(literal:'Pre-Apocalypse')}, {'keyword': Value(literal:'Park Seonghwa is Whipped')}, {'keyword': Value(literal:'Sneaking Out')}, {'keyword': Value(literal:'Jung Wooyoung is Whipped')}, {'keyword': Value(literal:'Calm Before The Storm')}, {'keyword': Value(literal:'night swimming')}, {'keyword': Value(literal:'lots-of-kissing')}, {'keyword': Value(literal:'seonghwa-gets-caught-by-campers')}, {'keyword': Value(literal:'short-oneshot-fluff-before-i-post-the-full-fic')}, {'keyword': Value(literal:'woohwa-are-camp-counsellors')}, {'keyword': Value(literal:'Missionary Position')}, {'keyword': Value(literal:'Sorry Not Sorry')}, {'keyword': Value(literal:'Sweet')}, {'keyword': Value(literal:'Hallelujah')}, {'keyword': Value(literal:'long story')}, {'keyword': Value(literal:'Abusive Ex')}, {'keyword': Value(literal:'Reader is depressed')}, {'keyword': Value(literal:'Implied Sexual Assault')}, {'keyword': Value(literal:'lots of exposition')}, {'keyword': Value(literal:'im not good with tags')}, {'keyword': Value(literal:'NOT BETA READ!')}, {'keyword': Value(literal:'horrible past')}, {'keyword': Value(literal:'Drunk David')}, {'keyword': Value(literal:'Camp Camp - Freeform')}, {'keyword': Value(literal:'David x Reader')}, {'keyword': Value(literal:'abusive ex is an oc')}, {'keyword': Value(literal:'adopting max in the future!')}, {'keyword': Value(literal:'david cries a lot')}, {'keyword': Value(literal:'david might seem ooc sometimes?')}, {'keyword': Value(literal:'david protection squad 2k17')}, {'keyword': Value(literal:'david x reader gets married!')}, {'keyword': Value(literal:'gwen is mvp')}, {'keyword': Value(literal:'innocent david')}, {'keyword': Value(literal:'makeout scenes??')}, {'keyword': Value(literal:'max is your best friend')}, {'keyword': Value(literal:'might do sin')}, {'keyword': Value(literal:'poor bby im so sorry')}, {'keyword': Value(literal:'preston and his romeo x juliet plays smh')}, {'keyword': Value(literal:'she has to overcome her own fears')}, {'keyword': Value(literal:'i wrote a lot of this when i was supposed to be sleeping')}, {'keyword': Value(literal:'Childhood Sexual Abuse')}, {'keyword': Value(literal:'Dark')}, {'keyword': Value(literal:'Dead Dove: Do Not Eat')}, {'keyword': Value(literal:'Omorashi')}, {'keyword': Value(literal:'Piss')}, {'keyword': Value(literal:'Sexual Abuse')}, {'keyword': Value(literal:'Pedophilia')}, {'keyword': Value(literal:'Wetting')}, {'keyword': Value(literal:'Bad Touch')}, {'keyword': Value(literal:'Bad Touch Bakugou')}, {'keyword': Value(literal:'dark shota - really really noncon')}, {'keyword': Value(literal:'fear boner lol')}, {'keyword': Value(literal:'seriously very underage - kiri is 6')}, {'keyword': Value(literal:'Drinking Games')}, {'keyword': Value(literal:'Family Fluff')}, {'keyword': Value(literal:'Healthy Relationships')}, {'keyword': Value(literal:'Siblings')}, {'keyword': Value(literal:'Birthday Party')}, {'keyword': Value(literal:'Crime Fighting')}, {'keyword': Value(literal:'Bruce Wayne is a Good Dad')}, {'keyword': Value(literal:'sibling relationships')}, {'keyword': Value(literal:'beach party')}, {'keyword': Value(literal:'21st Birthday')}, {'keyword': Value(literal:'Cute Couples')}, {'keyword': Value(literal:'bruce is a dad')}, {'keyword': Value(literal:'healthy competition')}, {'keyword': Value(literal:'Crime fighting team')}, {'keyword': Value(literal:'rental houses')}, {'keyword': Value(literal:'mutual pining (kind of)')}, {'keyword': Value(literal:'Genderfluid Barry Allen')}, {'keyword': Value(literal:'Hal Is A Moron')}, {'keyword': Value(literal:'Innacurate depiction of cinema')}, {'keyword': Value(literal:'nothing like the film!')}, {'keyword': Value(literal:'the beginning of a smut scene')}, {'keyword': Value(literal:'the vagueist grease au ever')}, {'keyword': Value(literal:'Post-Canon')}, {'keyword': Value(literal:'Nudity')}, {'keyword': Value(literal:'PLOT (Probably Lots Of Tiddies)')}, {'keyword': Value(literal:'Alternate Universe - Everyone Lives/Nobody Dies')}, {'keyword': Value(literal:'Flowers')}, {'keyword': Value(literal:'also')}, {'keyword': Value(literal:'Female Kíli')}, {'keyword': Value(literal:'Female Bilbo')}, {'keyword': Value(literal:'Female Thorin Oakenshield')}, {'keyword': Value(literal:'Female Bilbo Baggins/Female Thorin Oakenshield')}, {'keyword': Value(literal:'Mentions of Dwarf Culture')}, {'keyword': Value(literal:'POV Carmilla')}, {'keyword': Value(literal:'Cat Will')}, {'keyword': Value(literal:'Dog Kirsch')}, {'keyword': Value(literal:'Teacher AU')}, {'keyword': Value(literal:'Deaf Clint Barton')}, {'keyword': Value(literal:'Mentioned Character Death')}, {'keyword': Value(literal:'Winterhawk Week')}, {'keyword': Value(literal:""spoilers for the end of matt fraction's run"")}, {'keyword': Value(literal:'Pre-Canon')}, {'keyword': Value(literal:'Sequel')}, {'keyword': Value(literal:'Eventual Smut')}, {'keyword': Value(literal:'Mutual Pining')}, {'keyword': Value(literal:'Basically')}, {'keyword': Value(literal:'what really happened')}, {'keyword': Value(literal:'how they got together')}, {'keyword': Value(literal:'also smut probably')}, {'keyword': Value(literal:'zenmasters')}, {'keyword': Value(literal:'Banter')}, {'keyword': Value(literal:'Everything is Beautiful and Nothing Hurts')}, {'keyword': Value(literal:'Canon Queer Character')}, {'keyword': Value(literal:""Marcus is Tomas' Impulse Control"")}, {'keyword': Value(literal:'Fluff without Plot')}, {'keyword': Value(literal:'Betaed')}, {'keyword': Value(literal:""I Don't Even Know"")}, {'keyword': Value(literal:'Female Jean Liu')}, {'keyword': Value(literal:'Totally Not Projecting At All')}, {'keyword': Value(literal:'Author is not also named Jean Liu and desperately in love with a Davy Jackson')}, {'keyword': Value(literal:'no beta we die like Shelby Colson')}, {'keyword': Value(literal:'High School AU')}, {'keyword': Value(literal:'High School Teacher AU')}, {'keyword': Value(literal:'(Ish) - Freeform')}, {'keyword': Value(literal:""not entirely sure if I have tagged everything bc i'm not amazing at tagging"")}, {'keyword': Value(literal:'and setting them up')}, {'keyword': Value(literal:'european trip')}, {'keyword': Value(literal:'history teacher reader')}, {'keyword': Value(literal:'mostly dean tho')}, {'keyword': Value(literal:'over seas trips')}, {'keyword': Value(literal:""the whole 'whoops we need to share a room but you're my crush' troupe bc love"")}, {'keyword': Value(literal:'religion teacher gabriel')}, {'keyword': Value(literal:'teachers and students betting on them getting together')}, {'keyword': Value(literal:'Short One Shot')}, {'keyword': Value(literal:'Human Castiel')}, {'keyword': Value(literal:""literally so fluffy I can't even"")}, {'keyword': Value(literal:'Tickling')}, {'keyword': Value(literal:'Attempt at Humor')}, {'keyword': Value(literal:'Drunken Shenanigans')}, {'keyword': Value(literal:'Sleepovers')}, {'keyword': Value(literal:'Karaoke')}, {'keyword': Value(literal:'Pack Feels')}, {'keyword': Value(literal:'Stalia breakup')}, {'keyword': Value(literal:'Stiles loves Lydia')}, {'keyword': Value(literal:'Lydia loves Stiles')}, {'keyword': Value(literal:""It's also really long oops"")}, {'keyword': Value(literal:'Lydia loves Grease')}, {'keyword': Value(literal:""Don't copy to another site"")}, {'keyword': Value(literal:'Confession Time!')}, {'keyword': Value(literal:'amusement park in the summer time')}, {'keyword': Value(literal:'Based on the Grease song Summer Nights')}, {'keyword': Value(literal:'but no-one actually sings')}, {'keyword': Value(literal:'Alternate Universe - No Powers')}, {'keyword': Value(literal:'Love Triangles')}, {'keyword': Value(literal:'First Crush')}, {'keyword': Value(literal:'Alternate Universe - No Kwamis')}, {'keyword': Value(literal:'Camp Rock AU')}, {'keyword': Value(literal:'slight crossover (the new normal)')}, {'keyword': Value(literal:'kurtbastian')}, {'keyword': Value(literal:'Not Klaine Friendly')}, {'keyword': Value(literal:'Whirlwind Romance')}, {'keyword': Value(literal:'Story in Pictures')}, {'keyword': Value(literal:'instafic')}, {'keyword': Value(literal:'Some Plot')}, {'keyword': Value(literal:'Tags May Change')}, {'keyword': Value(literal:'Camping')}, {'keyword': Value(literal:'Everyone Is Gay')}, {'keyword': Value(literal:'Cabin Fic')}, {'keyword': Value(literal:'Cabins')}, {'keyword': Value(literal:'completely self-indulgent')}, {'keyword': Value(literal:'Eddie Munson Loves Steve Harrington')}, {'keyword': Value(literal:'Robin Buckley Loves Nancy Wheeler')}, {'keyword': Value(literal:'Steve Harrington Loves Eddie Munson')}, {'keyword': Value(literal:'Nancy Wheeler Loves Robin Buckley')}, {'keyword': Value(literal:'bc - Freeform')}, {'keyword': Value(literal:'Top Nancy Wheeler')}, {'keyword': Value(literal:'Bottom Robin Buckley')}, {'keyword': Value(literal:'Eddie Munson is a Little Shit')}, {'keyword': Value(literal:'No beta we die like ed-')}, {'keyword': Value(literal:'Robin Buckley is a Little Shit')}, {'keyword': Value(literal:'Robin Buckley is Not Amused')}, {'keyword': Value(literal:'this might be my worst fic writing-wise but it brings me joy')}, {'keyword': Value(literal:'but actually she is')}, {'keyword': Value(literal:'This Was Just Supposed to Be Hot and Smutty but I Love Love')}, {'keyword': Value(literal:'Kidfic')}, {'keyword': Value(literal:'Love at First Sight')}, {'keyword': Value(literal:'Mild Smut')}, {'keyword': Value(literal:'Fluffyfest')}, {'keyword': Value(literal:'Walks On The Beach')}, {'keyword': Value(literal:'Hawaii')}, {'keyword': Value(literal:'Dog Chewbacca')}, {'keyword': Value(literal:'Family store')}, {'keyword': Value(literal:'Lawyer Ben Solo')}]"	0	1	1
388	388	es	¿Cuántos capítulos tiene A Hat For Alice?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""A Hat For Alice"" . ?story golem:numberOfChapters ?chapters . }"	[{'chapters': Value(typed-literal:'1')}]	388	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene Family is what you make it?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Family is what you make it"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Cuántos capítulos tiene A Hat For Alice?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?chapters WHERE { 
?story golem:title ""A Hat For Alice"" . 
?story golem:numberOfChapters ?chapters . 
}
"	[{'chapters': Value(typed-literal:'1')}]	1	0	0
389	389	es	¿Cuántos capítulos tiene Lonely?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Lonely"" . ?story golem:numberOfChapters ?chapters . }"	[{'chapters': Value(typed-literal:'28')}, {'chapters': Value(typed-literal:'1')}, {'chapters': Value(typed-literal:'3')}, {'chapters': Value(typed-literal:'27')}, {'chapters': Value(typed-literal:'2')}, {'chapters': Value(typed-literal:'5')}, {'chapters': Value(typed-literal:'7')}, {'chapters': Value(typed-literal:'4')}, {'chapters': Value(typed-literal:'52')}, {'chapters': Value(typed-literal:'10')}, {'chapters': Value(typed-literal:'8')}, {'chapters': Value(typed-literal:'11')}, {'chapters': Value(typed-literal:'16')}, {'chapters': Value(typed-literal:'32')}, {'chapters': Value(typed-literal:'6')}, {'chapters': Value(typed-literal:'9')}, {'chapters': Value(typed-literal:'48')}, {'chapters': Value(typed-literal:'25')}]	389	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene Family is what you make it?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Family is what you make it"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Cuántos capítulos tiene Lonely?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?chapters WHERE { 
?story golem:title ""Lonely"" . 
?story golem:numberOfChapters ?chapters . 
}
"	[{'chapters': Value(typed-literal:'28')}, {'chapters': Value(typed-literal:'1')}, {'chapters': Value(typed-literal:'3')}, {'chapters': Value(typed-literal:'27')}, {'chapters': Value(typed-literal:'2')}, {'chapters': Value(typed-literal:'5')}, {'chapters': Value(typed-literal:'7')}, {'chapters': Value(typed-literal:'4')}, {'chapters': Value(typed-literal:'52')}, {'chapters': Value(typed-literal:'10')}, {'chapters': Value(typed-literal:'8')}, {'chapters': Value(typed-literal:'11')}, {'chapters': Value(typed-literal:'16')}, {'chapters': Value(typed-literal:'32')}, {'chapters': Value(typed-literal:'6')}, {'chapters': Value(typed-literal:'9')}, {'chapters': Value(typed-literal:'48')}, {'chapters': Value(typed-literal:'25')}]	1	0	0
390	390	es	¿Cuántos capítulos tiene a light shared?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""a light shared"" . ?story golem:numberOfChapters ?chapters . }"	[{'chapters': Value(typed-literal:'1')}]	390	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene Family is what you make it?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Family is what you make it"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Cuántos capítulos tiene a light shared?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?chapters WHERE { 
?story golem:title ""a light shared"" . 
?story golem:numberOfChapters ?chapters . 
}
"	[{'chapters': Value(typed-literal:'1')}]	1	0	0
391	391	es	¿Cuántos capítulos tiene The Creature You Know?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""The Creature You Know"" . ?story golem:numberOfChapters ?chapters . }"	[{'chapters': Value(typed-literal:'24')}, {'chapters': Value(typed-literal:'11')}]	391	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene Family is what you make it?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Family is what you make it"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Cuántos capítulos tiene The Creature You Know?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""The Creature You Know"" . ?story golem:numberOfChapters ?chapters . }
"	[{'chapters': Value(typed-literal:'24')}, {'chapters': Value(typed-literal:'11')}]	1	0	0
392	392	es	¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }"	[{'chapters': Value(typed-literal:'6')}]	392	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene Family is what you make it?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Family is what you make it"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
"	[{'chapters': Value(typed-literal:'6')}]	1	0	0
393	393	es	¿Cuántos capítulos tiene Family is what you make it?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Family is what you make it"" . ?story golem:numberOfChapters ?chapters . }"	[{'chapters': Value(typed-literal:'1')}, {'chapters': Value(typed-literal:'4')}, {'chapters': Value(typed-literal:'7')}]	393	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Cuántos capítulos tiene Family is what you make it?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?chapters WHERE { 
?story golem:title ""Family is what you make it"" . 
?story golem:numberOfChapters ?chapters . 
}
"	[{'chapters': Value(typed-literal:'1')}, {'chapters': Value(typed-literal:'4')}, {'chapters': Value(typed-literal:'7')}]	1	0	0
394	394	es	¿Cuántos capítulos tiene Hug?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Hug"" . ?story golem:numberOfChapters ?chapters . }"	[{'chapters': Value(typed-literal:'1')}, {'chapters': Value(typed-literal:'2')}, {'chapters': Value(typed-literal:'5')}]	394	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Cuántos capítulos tiene Hug?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?chapters WHERE { 
?story golem:title ""Hug"" . 
?story golem:numberOfChapters ?chapters . 
}
"	[{'chapters': Value(typed-literal:'1')}, {'chapters': Value(typed-literal:'2')}, {'chapters': Value(typed-literal:'5')}]	1	0	0
395	395	es	¿Cuántos capítulos tiene Unbreakable Vows?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Unbreakable Vows"" . ?story golem:numberOfChapters ?chapters . }"	[{'chapters': Value(typed-literal:'1')}, {'chapters': Value(typed-literal:'2')}]	395	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Cuántos capítulos tiene Unbreakable Vows?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/>  
SELECT DISTINCT ?chapters WHERE { 
?story golem:title ""Unbreakable Vows"" . 
?story golem:numberOfChapters ?chapters . 
}
"	[{'chapters': Value(typed-literal:'1')}, {'chapters': Value(typed-literal:'2')}]	1	0	0
396	396	es	¿Cuántos capítulos tiene Harriet Potter & the Stray Cat?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Harriet Potter & the Stray Cat"" . ?story golem:numberOfChapters ?chapters . }"	[{'chapters': Value(typed-literal:'1')}]	396	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Cuántos capítulos tiene Harriet Potter & the Stray Cat?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Harriet Potter & the Stray Cat"" . ?story golem:numberOfChapters ?chapters . }
"	[{'chapters': Value(typed-literal:'1')}]	1	0	0
397	397	es	¿Cuántos capítulos tiene Train to Nowhere-Fanart?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""Train to Nowhere-Fanart"" . ?story golem:numberOfChapters ?chapters . }"	[{'chapters': Value(typed-literal:'2')}]	397	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Cuántos capítulos tiene Train to Nowhere-Fanart?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?chapters WHERE { 
?story golem:title ""Train to Nowhere-Fanart"" . 
?story golem:numberOfChapters ?chapters . 
}
"	[{'chapters': Value(typed-literal:'2')}]	1	0	0
399	399	es	¿Qué calificación de contenido tiene Blank Canvas?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?rating WHERE {  ?story golem:title ""Blank Canvas"" . ?story golem:rating ?rating . }"	[{'rating': Value(literal:'Mature')}, {'rating': Value(literal:'General Audiences')}, {'rating': Value(literal:'Teen And Up Audiences')}, {'rating': Value(literal:'Not Rated')}, {'rating': Value(literal:'Explicit')}]	399	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Qué calificación de contenido tiene Blank Canvas?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/>  
SELECT DISTINCT ?contentRating WHERE { 
?story golem:title ""Blank Canvas"" . 
?story golem:contentWarning ?contentRating . 
}
"	[{'contentRating': Value(literal:'Major Character Death')}, {'contentRating': Value(literal:'Creator Chose Not To Use Archive Warnings')}, {'contentRating': Value(literal:'No Archive Warnings Apply')}, {'contentRating': Value(literal:'Graphic Depictions Of Violence')}, {'contentRating': Value(literal:'Rape/Non-Con')}]	0	1	1
400	400	es	¿Qué calificación de contenido tiene After Work Tales?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?rating WHERE {  ?story golem:title ""After Work Tales"" . ?story golem:rating ?rating . }"	[{'rating': Value(literal:'Not Rated')}]	400	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Qué calificación de contenido tiene After Work Tales?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/>  
SELECT DISTINCT ?content_rating WHERE { 
?story golem:title ""After Work Tales"" . 
?story golem:contentWarning ?content_rating . }
"	[{'content_rating': Value(literal:'Creator Chose Not To Use Archive Warnings')}]	0	1	1
401	401	es	¿Qué calificación de contenido tiene the weight of inheritance?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?rating WHERE {  ?story golem:title ""the weight of inheritance"" . ?story golem:rating ?rating . }"	[{'rating': Value(literal:'Mature')}]	401	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Qué calificación de contenido tiene the weight of inheritance?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?contentRating WHERE { 
  ?story golem:title ""the weight of inheritance"" . 
  ?story golem:contentWarning ?contentRating . 
}
"	[{'contentRating': Value(literal:'No Archive Warnings Apply')}]	0	1	1
402	402	es	¿Qué calificación de contenido tiene Library Indulgence?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?rating WHERE {  ?story golem:title ""Library Indulgence"" . ?story golem:rating ?rating . }"	[{'rating': Value(literal:'Mature')}]	402	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Qué calificación de contenido tiene Library Indulgence?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?contentRating WHERE { 
  ?story golem:title ""Library Indulgence"" . 
  ?story golem:contentWarning ?contentRating . 
}
"	[{'contentRating': Value(literal:'Creator Chose Not To Use Archive Warnings')}]	0	1	1
403	403	es	¿Qué calificación de contenido tiene Holiday Travelers?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?rating WHERE {  ?story golem:title ""Holiday Travelers"" . ?story golem:rating ?rating . }"	[{'rating': Value(literal:'Mature')}]	403	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Qué calificación de contenido tiene Holiday Travelers?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?contentRating WHERE { 
?story golem:title ""Holiday Travelers"" . 
?story golem:contentWarning ?contentRating . 
}
"	[{'contentRating': Value(literal:'No Archive Warnings Apply')}]	0	1	1
404	404	es	¿Qué calificación de contenido tiene These Things Take Forever?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?rating WHERE {  ?story golem:title ""These Things Take Forever"" . ?story golem:rating ?rating . }"	[{'rating': Value(literal:'Mature')}, {'rating': Value(literal:'Explicit')}, {'rating': Value(literal:'General Audiences')}]	404	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Qué calificación de contenido tiene These Things Take Forever?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/>  
SELECT DISTINCT ?contentRating WHERE { 
?story golem:title ""These Things Take Forever"" . 
?story golem:contentWarning ?contentRating . 
}
"	[{'contentRating': Value(literal:'Creator Chose Not To Use Archive Warnings')}, {'contentRating': Value(literal:'No Archive Warnings Apply')}]	0	1	1
405	405	es	¿Qué calificación de contenido tiene A Death Eater's Happy Hour?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?rating WHERE {  ?story golem:title ""A Death Eater's Happy Hour"" . ?story golem:rating ?rating . }"	[{'rating': Value(literal:'Explicit')}]	405	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Qué calificación de contenido tiene A Death Eater's Happy Hour?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/>  
SELECT DISTINCT ?contentRating WHERE { 
?story golem:title ""A Death Eater's Happy Hour"" . 
?story golem:contentWarning ?contentRating . }
"	[{'contentRating': Value(literal:'Creator Chose Not To Use Archive Warnings')}, {'contentRating': Value(literal:'Rape/Non-Con')}]	0	1	1
406	406	es	¿Qué calificación de contenido tiene 25 Days of Kinkmas 2020?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?rating WHERE {  ?story golem:title ""25 Days of Kinkmas 2020"" . ?story golem:rating ?rating . }"	[{'rating': Value(literal:'Explicit')}]	406	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Qué calificación de contenido tiene 25 Days of Kinkmas 2020?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/>
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>
SELECT DISTINCT ?content_rating WHERE {
  ?story golem:title ""25 Days of Kinkmas 2020"" .
  ?story golem:contentWarning ?content_rating .
}
"	[{'content_rating': Value(literal:'Creator Chose Not To Use Archive Warnings')}, {'content_rating': Value(literal:'No Archive Warnings Apply')}]	0	1	1
407	407	es	¿Qué calificación de contenido tiene Disappointment?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?rating WHERE {  ?story golem:title ""Disappointment"" . ?story golem:rating ?rating . }"	[{'rating': Value(literal:'Explicit')}, {'rating': Value(literal:'Teen And Up Audiences')}, {'rating': Value(literal:'General Audiences')}, {'rating': Value(literal:'Mature')}, {'rating': Value(literal:'Not Rated')}]	407	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Qué calificación de contenido tiene Disappointment?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?contentRating WHERE { 
?story golem:title ""Disappointment"" . 
?story golem:contentWarning ?contentRating . 
}
"	[{'contentRating': Value(literal:'Graphic Depictions Of Violence')}, {'contentRating': Value(literal:'Major Character Death')}, {'contentRating': Value(literal:'Rape/Non-Con')}, {'contentRating': Value(literal:'No Archive Warnings Apply')}, {'contentRating': Value(literal:'Creator Chose Not To Use Archive Warnings')}, {'contentRating': Value(literal:'Underage')}]	0	1	1
408	408	es	¿Qué calificación de contenido tiene Hope Returns?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?rating WHERE {  ?story golem:title ""Hope Returns"" . ?story golem:rating ?rating . }"	[{'rating': Value(literal:'Teen And Up Audiences')}, {'rating': Value(literal:'General Audiences')}, {'rating': Value(literal:'Mature')}]	408	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Qué calificación de contenido tiene Hope Returns?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?contentRating WHERE { 
?story golem:title ""Hope Returns"" . 
?story golem:contentWarning ?contentRating . 
}
"	[{'contentRating': Value(literal:'Creator Chose Not To Use Archive Warnings')}, {'contentRating': Value(literal:'No Archive Warnings Apply')}]	0	1	1
410	410	es	¿Cómo de larga es If We Are Shadows?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters ?words WHERE {  ?story golem:title ""If We Are Shadows"" . ?story golem:numberOfChapters ?chapters . ?story golem:numberOfWords ?words . }"	[{'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'1563')}]	410	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Cómo de larga es If We Are Shadows?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/>  
SELECT ?average_word_length WHERE { 
?story golem:title ""If We Are Shadows"" . 
?story golem:numberOfWords ?words . 
?story golem:averageWordLength ?average_word_length . 
}
"	[]	0	0	1
411	411	es	¿Cómo de larga es This Has Changed Everything?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters ?words WHERE {  ?story golem:title ""This Has Changed Everything"" . ?story golem:numberOfChapters ?chapters . ?story golem:numberOfWords ?words . }"	[{'chapters': Value(typed-literal:'4'), 'words': Value(typed-literal:'9742')}]	411	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Cómo de larga es This Has Changed Everything?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT (SUM(?words) AS ?total_words) WHERE { 
 ?story golem:title ""This Has Changed Everything"" . 
 ?story golem:numberOfWords ?words . 
}
"	[{'total_words': Value(typed-literal:'9742')}]	0	1	1
412	412	es	¿Cómo de larga es Trust Me.?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters ?words WHERE {  ?story golem:title ""Trust Me."" . ?story golem:numberOfChapters ?chapters . ?story golem:numberOfWords ?words . }"	[{'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'1662')}, {'chapters': Value(typed-literal:'25'), 'words': Value(typed-literal:'38363')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'4641')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'1561')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'1870')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'2019')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'3812')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'13317')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'387')}]	412	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Cómo de larga es Trust Me.?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT ?average_word_length WHERE { 
?story golem:title ""Trust Me."" . 
?story golem:numberOfWords ?total_words . 
?story golem:summary ?summary . 
FILTER(LANG(?summary) = ""en"") 
BIND((STRLEN(?summary) - STRLEN(REPLACE(?summary, "" "", """")) + 1) / (STRLEN(?summary) = 0 ? 1 : STRLEN(?summary)) AS ?average_word_length) 
}
"	"QueryBadFormed: A bad request has been sent to the endpoint: probably the SPARQL query is badly formed. 

Response:
b'Virtuoso 37000 Error SP030: SPARQL compiler, line 12: syntax error at \'?\' before \'1\'\n\nSPARQL query:\ndefine sql:big-data-const 0\n#output-format:application/sparql-results+json\n\nprefix golem: <https://golemlab.eu/graph/> \nprefix dc: <http://purl.org/dc/terms/> \nprefix gc: <https://ontology.golemlab.eu/> \nSELECT ?average_word_length WHERE { \n?story golem:title ""Trust Me."" . \n?story golem:numberOfWords ?total_words . \n?story golem:summary ?summary . \nFILTER(LANG(?summary) = ""en"") \nBIND((STRLEN(?summary) - STRLEN(REPLACE(?summary, "" "", """")) + 1) / (STRLEN(?summary) = 0 ? 1 : STRLEN(?summary)) AS ?average_word_length) \n}\n'"	0	1	1
413	413	es	¿Cómo de larga es 1000 Kisses: #68 That Time on the Balcony, During a Ministry Party?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters ?words WHERE {  ?story golem:title ""1000 Kisses: #68 That Time on the Balcony, During a Ministry Party"" . ?story golem:numberOfChapters ?chapters . ?story golem:numberOfWords ?words . }"	[{'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'5967')}]	413	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Cómo de larga es 1000 Kisses: #68 That Time on the Balcony, During a Ministry Party?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT ?numberOfWords WHERE { 
?story golem:title ""1000 Kisses: #68 That Time on the Balcony, During a Ministry Party"" . 
?story golem:numberOfWords ?numberOfWords . 
}
"	[{'numberOfWords': Value(typed-literal:'5967')}]	0	1	1
414	414	es	¿Cómo de larga es Stress Relief (no GIFs)?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters ?words WHERE {  ?story golem:title ""Stress Relief (no GIFs)"" . ?story golem:numberOfChapters ?chapters . ?story golem:numberOfWords ?words . }"	[{'chapters': Value(typed-literal:'8'), 'words': Value(typed-literal:'57500')}, {'chapters': Value(typed-literal:'8'), 'words': Value(typed-literal:'83018')}, {'chapters': Value(typed-literal:'15'), 'words': Value(typed-literal:'57500')}, {'chapters': Value(typed-literal:'15'), 'words': Value(typed-literal:'83018')}]	414	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Cómo de larga es Stress Relief (no GIFs)?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT ?storyLength WHERE { 
?story golem:title ""Stress Relief (no GIFs)"" .
?story golem:numberOfWords ?storyLength . 
}
"	[{'storyLength': Value(typed-literal:'57500')}, {'storyLength': Value(typed-literal:'83018')}]	0	1	1
415	415	es	¿Cómo de larga es The Christmas Stocking?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters ?words WHERE {  ?story golem:title ""The Christmas Stocking"" . ?story golem:numberOfChapters ?chapters . ?story golem:numberOfWords ?words . }"	[{'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'101')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'2386')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'460')}]	415	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Cómo de larga es The Christmas Stocking?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT ?averageWordLength WHERE { 
?story golem:title ""The Christmas Stocking"" . 
?story golem:averageWordLength ?averageWordLength . 
}
"	[]	0	0	1
416	416	es	¿Cómo de larga es Two Can Keep a Secret?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters ?words WHERE {  ?story golem:title ""Two Can Keep a Secret"" . ?story golem:numberOfChapters ?chapters . ?story golem:numberOfWords ?words . }"	[{'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'3172')}, {'chapters': Value(typed-literal:'21'), 'words': Value(typed-literal:'35298')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'685')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'2327')}, {'chapters': Value(typed-literal:'13'), 'words': Value(typed-literal:'6472')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'125')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'1633')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'902')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'2906')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'1553')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'1364')}, {'chapters': Value(typed-literal:'13'), 'words': Value(typed-literal:'36383')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'4334')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'1796')}, {'chapters': Value(typed-literal:'2'), 'words': Value(typed-literal:'17218')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'2116')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'2598')}, {'chapters': Value(typed-literal:'5'), 'words': Value(typed-literal:'6767')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'7744')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'754')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'8872')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'1799')}, {'chapters': Value(typed-literal:'4'), 'words': Value(typed-literal:'3946')}, {'chapters': Value(typed-literal:'3'), 'words': Value(typed-literal:'7285')}]	416	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Cómo de larga es Two Can Keep a Secret?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT (SUM(?words) AS ?total_words) WHERE { 
  ?story golem:title ""Two Can Keep a Secret"" . 
  ?story golem:numberOfWords ?words . 
}
"	[{'total_words': Value(typed-literal:'158049')}]	0	1	1
417	417	es	¿Cómo de larga es TIED TO HIM?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters ?words WHERE {  ?story golem:title ""TIED TO HIM"" . ?story golem:numberOfChapters ?chapters . ?story golem:numberOfWords ?words . }"	[{'chapters': Value(typed-literal:'25'), 'words': Value(typed-literal:'22715')}]	417	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Cómo de larga es TIED TO HIM?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?numberOfWords WHERE { 
?story golem:title ""TIED TO HIM"" . 
?story golem:numberOfWords ?numberOfWords . 
}
"	[{'numberOfWords': Value(typed-literal:'22715')}]	0	1	1
418	418	es	¿Cómo de larga es Inadvertent Curses?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters ?words WHERE {  ?story golem:title ""Inadvertent Curses"" . ?story golem:numberOfChapters ?chapters . ?story golem:numberOfWords ?words . }"	[{'chapters': Value(typed-literal:'2'), 'words': Value(typed-literal:'13759')}]	418	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Cómo de larga es Inadvertent Curses?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/>  
SELECT ?story (SUM(?words) AS ?total_word_count) WHERE { 
?story golem:title ""Inadvertent Curses"" . 
?story golem:numberOfWords ?words . 
} GROUP BY ?story
"	[{'story': Value(uri:'https://golemlab.eu/graph/36929374'), 'total_word_count': Value(typed-literal:'13759')}]	0	1	1
419	419	es	¿Cómo de larga es The Speeches?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters ?words WHERE {  ?story golem:title ""The Speeches"" . ?story golem:numberOfChapters ?chapters . ?story golem:numberOfWords ?words . }"	[{'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'2155')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'2309')}, {'chapters': Value(typed-literal:'1'), 'words': Value(typed-literal:'3797')}]	419	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Cómo de larga es The Speeches?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT (SUM(?words) AS ?total_words) WHERE { 
  ?story golem:title ""The Speeches"" . 
  ?story golem:numberOfWords ?words . 
}
"	[{'total_words': Value(typed-literal:'8261')}]	0	1	1
421	421	es	La historia Old Solemnly Swear Chapters tiene algún aviso de contenido?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT (GROUP_CONCAT(DISTINCT ?warning; separator="", "") AS ?warnings) WHERE {  ?story golem:title ""Old Solemnly Swear Chapters"" . ?story golem:contentWarning ?warning . }"	[{'warnings': Value(literal:'Creator Chose Not To Use Archive Warnings')}]	421	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: La historia Old Solemnly Swear Chapters tiene algún aviso de contenido?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?contentWarning WHERE { 
  ?story golem:title ""Old Solemnly Swear Chapters"" . 
  ?story golem:contentWarning ?contentWarning . 
}
"	[{'contentWarning': Value(literal:'Creator Chose Not To Use Archive Warnings')}]	0	1	1
422	422	es	La historia The Amorata tiene algún aviso de contenido?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT (GROUP_CONCAT(DISTINCT ?warning; separator="", "") AS ?warnings) WHERE {  ?story golem:title ""The Amorata"" . ?story golem:contentWarning ?warning . }"	[{'warnings': Value(literal:'Underage')}]	422	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: La historia The Amorata tiene algún aviso de contenido?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?contentWarning WHERE { 
?story golem:title ""The Amorata"" . 
?story golem:contentWarning ?contentWarning . 
}
"	[{'contentWarning': Value(literal:'Underage')}]	0	1	1
423	423	es	La historia One Plus One Equals Three tiene algún aviso de contenido?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT (GROUP_CONCAT(DISTINCT ?warning; separator="", "") AS ?warnings) WHERE {  ?story golem:title ""One Plus One Equals Three"" . ?story golem:contentWarning ?warning . }"	[{'warnings': Value(literal:'Creator Chose Not To Use Archive Warnings, No Archive Warnings Apply, Underage')}]	423	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: La historia One Plus One Equals Three tiene algún aviso de contenido?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?contentWarning WHERE { 
?story golem:title ""One Plus One Equals Three"" . 
?story golem:contentWarning ?contentWarning . 
}
"	[{'contentWarning': Value(literal:'Underage')}, {'contentWarning': Value(literal:'No Archive Warnings Apply')}, {'contentWarning': Value(literal:'Creator Chose Not To Use Archive Warnings')}]	0	1	1
424	424	es	La historia Overheard at Hogwart's tiene algún aviso de contenido?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT (GROUP_CONCAT(DISTINCT ?warning; separator="", "") AS ?warnings) WHERE {  ?story golem:title ""Overheard at Hogwart's"" . ?story golem:contentWarning ?warning . }"	[{'warnings': Value(literal:'Creator Chose Not To Use Archive Warnings')}]	424	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: La historia Overheard at Hogwart's tiene algún aviso de contenido?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?contentWarning WHERE { 
  ?story golem:title ""Overheard at Hogwart's"" . 
  ?story golem:contentWarning ?contentWarning . 
}
"	[{'contentWarning': Value(literal:'Creator Chose Not To Use Archive Warnings')}]	0	1	1
425	425	es	La historia Bird of Prey tiene algún aviso de contenido?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT (GROUP_CONCAT(DISTINCT ?warning; separator="", "") AS ?warnings) WHERE {  ?story golem:title ""Bird of Prey"" . ?story golem:contentWarning ?warning . }"	[{'warnings': Value(literal:'Creator Chose Not To Use Archive Warnings, Graphic Depictions Of Violence, Major Character Death, No Archive Warnings Apply, Rape/Non-Con')}]	425	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: La historia Bird of Prey tiene algún aviso de contenido?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?contentWarning WHERE { 
?story golem:title ""Bird of Prey"" . 
?story golem:contentWarning ?contentWarning . 
}
"	[{'contentWarning': Value(literal:'No Archive Warnings Apply')}, {'contentWarning': Value(literal:'Creator Chose Not To Use Archive Warnings')}, {'contentWarning': Value(literal:'Graphic Depictions Of Violence')}, {'contentWarning': Value(literal:'Major Character Death')}, {'contentWarning': Value(literal:'Rape/Non-Con')}]	0	1	1
426	426	es	La historia The Wall tiene algún aviso de contenido?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT (GROUP_CONCAT(DISTINCT ?warning; separator="", "") AS ?warnings) WHERE {  ?story golem:title ""The Wall"" . ?story golem:contentWarning ?warning . }"	[{'warnings': Value(literal:'Creator Chose Not To Use Archive Warnings, Graphic Depictions Of Violence, Major Character Death, No Archive Warnings Apply, Rape/Non-Con, Underage')}]	426	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: La historia The Wall tiene algún aviso de contenido?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/>  
SELECT DISTINCT ?contentWarning WHERE { 
?story golem:title ""The Wall"" . 
?story golem:contentWarning ?contentWarning . 
}
"	[{'contentWarning': Value(literal:'No Archive Warnings Apply')}, {'contentWarning': Value(literal:'Creator Chose Not To Use Archive Warnings')}, {'contentWarning': Value(literal:'Graphic Depictions Of Violence')}, {'contentWarning': Value(literal:'Major Character Death')}, {'contentWarning': Value(literal:'Rape/Non-Con')}, {'contentWarning': Value(literal:'Underage')}]	0	1	1
427	427	es	La historia Sad Sometimes tiene algún aviso de contenido?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT (GROUP_CONCAT(DISTINCT ?warning; separator="", "") AS ?warnings) WHERE {  ?story golem:title ""Sad Sometimes"" . ?story golem:contentWarning ?warning . }"	[{'warnings': Value(literal:'No Archive Warnings Apply')}]	427	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: La historia Sad Sometimes tiene algún aviso de contenido?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/>  
SELECT DISTINCT ?contentWarning WHERE { 
  ?story golem:title ""Sad Sometimes"" . 
  ?story golem:contentWarning ?contentWarning . 
}
"	[{'contentWarning': Value(literal:'No Archive Warnings Apply')}]	0	1	1
428	428	es	La historia Sunday, Monday or Always tiene algún aviso de contenido?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT (GROUP_CONCAT(DISTINCT ?warning; separator="", "") AS ?warnings) WHERE {  ?story golem:title ""Sunday, Monday or Always"" . ?story golem:contentWarning ?warning . }"	[{'warnings': Value(literal:'No Archive Warnings Apply')}]	428	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: La historia Sunday, Monday or Always tiene algún aviso de contenido?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/>  
SELECT DISTINCT ?contentWarning WHERE { 
?story golem:title ""Sunday, Monday or Always"" . 
?story golem:contentWarning ?contentWarning . 
}
"	[{'contentWarning': Value(literal:'No Archive Warnings Apply')}]	0	1	1
429	429	es	La historia Trying Not to Cry tiene algún aviso de contenido?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT (GROUP_CONCAT(DISTINCT ?warning; separator="", "") AS ?warnings) WHERE {  ?story golem:title ""Trying Not to Cry"" . ?story golem:contentWarning ?warning . }"	[{'warnings': Value(literal:'Creator Chose Not To Use Archive Warnings, No Archive Warnings Apply')}]	429	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: La historia Trying Not to Cry tiene algún aviso de contenido?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?contentWarning WHERE { 
  ?story golem:title ""Trying Not to Cry"" . 
  ?story golem:contentWarning ?contentWarning . 
}
"	[{'contentWarning': Value(literal:'No Archive Warnings Apply')}, {'contentWarning': Value(literal:'Creator Chose Not To Use Archive Warnings')}]	0	1	1
430	430	es	La historia Fantastic Treats tiene algún aviso de contenido?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT (GROUP_CONCAT(DISTINCT ?warning; separator="", "") AS ?warnings) WHERE {  ?story golem:title ""Fantastic Treats"" . ?story golem:contentWarning ?warning . }"	[{'warnings': Value(literal:'No Archive Warnings Apply')}]	430	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: La historia Fantastic Treats tiene algún aviso de contenido?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?contentWarning WHERE { 
  ?story golem:title ""Fantastic Treats"" . 
  ?story golem:contentWarning ?contentWarning . 
}
"	[{'contentWarning': Value(literal:'No Archive Warnings Apply')}]	0	1	1
432	432	es	¿Quién es el autor de Triptych - Ron?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?author WHERE {  ?story golem:title ""Triptych - Ron"" . ?story golem:author ?author . }"	[{'author': Value(literal:'A000001008')}]	432	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Quién es el autor de Triptych - Ron?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?author WHERE { 
?story golem:title ""Triptych - Ron"" . 
?story dc:creator ?author . 
}
"	[]	0	0	1
433	433	es	¿Quién es el autor de My AU Notes?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?author WHERE {  ?story golem:title ""My AU Notes"" . ?story golem:author ?author . }"	[{'author': Value(literal:'A000260424')}]	433	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Quién es el autor de My AU Notes?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/>  
SELECT DISTINCT ?author WHERE { 
    ?story golem:title ""My AU Notes"" . 
    ?story dc:creator ?author . }
"	[]	0	0	1
434	434	es	¿Quién es el autor de {david tennant oneshots}?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?author WHERE {  ?story golem:title ""{david tennant oneshots}"" . ?story golem:author ?author . }"	[{'author': Value(literal:'A000188520')}]	434	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Quién es el autor de {david tennant oneshots}?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?author WHERE { 
  ?story golem:title ""david tennant oneshots"" . 
  ?story dc:creator ?author . 
}
"	[]	0	0	1
435	435	es	¿Quién es el autor de doctor can you help me ‘cause something just don’t feel right??	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?author WHERE {  ?story golem:title ""doctor can you help me ‘cause something just don’t feel right?"" . ?story golem:author ?author . }"	[{'author': Value(literal:'A000033627')}]	435	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Quién es el autor de doctor can you help me ‘cause something just don’t feel right??

Query:
"	"
prefix golem: <https://golemlab.eu/graph/>  
prefix dc: <http://purl.org/dc/terms/>  
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?author WHERE { 
?story golem:title ""doctor can you help me 'cause something just don’t feel right?"" . 
?story dc:creator ?author . 
}
"	[]	0	0	1
436	436	es	¿Quién es el autor de ghosting you?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?author WHERE {  ?story golem:title ""ghosting you"" . ?story golem:author ?author . }"	[{'author': Value(literal:'A000146161')}, {'author': Value(literal:'A000257024')}]	436	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Quién es el autor de ghosting you?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?author WHERE { 
?story golem:title ""ghosting you"" . 
?story dc:creator ?author . 
}
"	[]	0	0	1
437	437	es	¿Quién es el autor de Peace?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?author WHERE {  ?story golem:title ""Peace"" . ?story golem:author ?author . }"	[{'author': Value(literal:'A000010235')}, {'author': Value(literal:'A000328837')}, {'author': Value(literal:'A000162190')}, {'author': Value(literal:'A000314682')}, {'author': Value(literal:'A000177702')}, {'author': Value(literal:'A000310672')}, {'author': Value(literal:'A000001939')}, {'author': Value(literal:'A000184058')}, {'author': Value(literal:'A000004936')}, {'author': Value(literal:'A001052437')}, {'author': Value(literal:'A000056938')}, {'author': Value(literal:'A000106358')}, {'author': Value(literal:'A000464112')}, {'author': Value(literal:'A000233973')}, {'author': Value(literal:'A000339630')}, {'author': Value(literal:'A000528565')}, {'author': Value(literal:'A000122126')}, {'author': Value(literal:'A000312803')}, {'author': Value(literal:'A000000000')}, {'author': Value(literal:'A000046749')}, {'author': Value(literal:'A000552224')}, {'author': Value(literal:'A000072984')}, {'author': Value(literal:'A000008080')}, {'author': Value(literal:'A000005287')}, {'author': Value(literal:'A000000634')}, {'author': Value(literal:'A000114656')}, {'author': Value(literal:'A000234202')}, {'author': Value(literal:'A000000360')}, {'author': Value(literal:'A000062129')}, {'author': Value(literal:'A000249311')}, {'author': Value(literal:'A000212998')}, {'author': Value(literal:'A000079988')}, {'author': Value(literal:'A000000995')}, {'author': Value(literal:'A000436731')}, {'author': Value(literal:'A000079653')}, {'author': Value(literal:'A000014241')}, {'author': Value(literal:'A001155141')}, {'author': Value(literal:'A001124700')}, {'author': Value(literal:'A000226063')}, {'author': Value(literal:'A000057452')}, {'author': Value(literal:'A000369963')}, {'author': Value(literal:'A000358999')}, {'author': Value(literal:'A000257882')}, {'author': Value(literal:'A000266994')}, {'author': Value(literal:'A000040415')}, {'author': Value(literal:'A000049209')}, {'author': Value(literal:'A000045119')}, {'author': Value(literal:'A000067790')}, {'author': Value(literal:'A000002476')}, {'author': Value(literal:'A000175673')}, {'author': Value(literal:'A000282793')}, {'author': Value(literal:'A000025759')}, {'author': Value(literal:'A000003316')}, {'author': Value(literal:'A000000050')}, {'author': Value(literal:'A000045988')}, {'author': Value(literal:'A000438279')}, {'author': Value(literal:'A000049680')}, {'author': Value(literal:'A000004749')}, {'author': Value(literal:'A000444796')}, {'author': Value(literal:'A000014706')}, {'author': Value(literal:'A000004984')}, {'author': Value(literal:'A000040476')}, {'author': Value(literal:'A000041040')}, {'author': Value(literal:'A000217142')}, {'author': Value(literal:'A000447741')}, {'author': Value(literal:'A000264618')}, {'author': Value(literal:'A000013753')}, {'author': Value(literal:'A000069126')}, {'author': Value(literal:'A000076335')}, {'author': Value(literal:'A000101810')}, {'author': Value(literal:'A000473784')}, {'author': Value(literal:'A000000407')}, {'author': Value(literal:'A000226695')}, {'author': Value(literal:'A000634800')}, {'author': Value(literal:'A000214185')}, {'author': Value(literal:'A000090163')}, {'author': Value(literal:'A000025260')}, {'author': Value(literal:'A000004685')}, {'author': Value(literal:'A000003551')}, {'author': Value(literal:'A000506241')}, {'author': Value(literal:'A000000342')}, {'author': Value(literal:'A000001575')}, {'author': Value(literal:'A000097668')}, {'author': Value(literal:'A000004106')}, {'author': Value(literal:'A000002041')}, {'author': Value(literal:'A000042979')}, {'author': Value(literal:'A000000147')}, {'author': Value(literal:'A000054816')}, {'author': Value(literal:'A000029241')}, {'author': Value(literal:'A000003465')}, {'author': Value(literal:'A000211185')}, {'author': Value(literal:'A000007424')}, {'author': Value(literal:'A000216896')}, {'author': Value(literal:'A000303870')}, {'author': Value(literal:'A000009217')}, {'author': Value(literal:'A000037312')}, {'author': Value(literal:'A000588481')}, {'author': Value(literal:'A001104747')}, {'author': Value(literal:'A001104768')}, {'author': Value(literal:'A001106749')}, {'author': Value(literal:'A000214050')}, {'author': Value(literal:'A001195878')}, {'author': Value(literal:'A000227175')}, {'author': Value(literal:'A000011112')}, {'author': Value(literal:'A000045771')}, {'author': Value(literal:'A000000023')}, {'author': Value(literal:'A000000223')}, {'author': Value(literal:'A000165064')}, {'author': Value(literal:'A000000530')}, {'author': Value(literal:'A000251322')}, {'author': Value(literal:'A000019945')}, {'author': Value(literal:'A000005680')}, {'author': Value(literal:'A000001848')}, {'author': Value(literal:'A000032029')}, {'author': Value(literal:'A000477420')}, {'author': Value(literal:'A000017998')}, {'author': Value(literal:'A000003090')}, {'author': Value(literal:'A000022492')}, {'author': Value(literal:'A000615497')}, {'author': Value(literal:'A000232108')}, {'author': Value(literal:'A000002416')}, {'author': Value(literal:'A000032725')}, {'author': Value(literal:'A000371927')}, {'author': Value(literal:'A000215039')}, {'author': Value(literal:'A000156298')}, {'author': Value(literal:'A000028160')}, {'author': Value(literal:'A000621472')}, {'author': Value(literal:'A000000207')}, {'author': Value(literal:'A000000416')}, {'author': Value(literal:'A000003296')}, {'author': Value(literal:'A000003485')}, {'author': Value(literal:'A000005635')}, {'author': Value(literal:'A000646693')}, {'author': Value(literal:'A000693659')}, {'author': Value(literal:'A000245878')}, {'author': Value(literal:'A000000499')}, {'author': Value(literal:'A001121627')}, {'author': Value(literal:'A000004804')}, {'author': Value(literal:'A000639386')}, {'author': Value(literal:'A000005623')}, {'author': Value(literal:'A000000049')}, {'author': Value(literal:'A000023226')}, {'author': Value(literal:'A000074389')}, {'author': Value(literal:'A000102955')}, {'author': Value(literal:'A000033505')}, {'author': Value(literal:'A000063882')}, {'author': Value(literal:'A000452236')}, {'author': Value(literal:'A000240056')}, {'author': Value(literal:'A000014495')}, {'author': Value(literal:'A000091798')}, {'author': Value(literal:'A000066539')}, {'author': Value(literal:'A000035309')}, {'author': Value(literal:'A000000266')}, {'author': Value(literal:'A000275276')}, {'author': Value(literal:'A000032291')}, {'author': Value(literal:'A000230095')}, {'author': Value(literal:'A000049224')}, {'author': Value(literal:'A000000106')}, {'author': Value(literal:'A000675580')}, {'author': Value(literal:'A000009076')}, {'author': Value(literal:'A000003255')}, {'author': Value(literal:'A000081797')}, {'author': Value(literal:'A000028994')}, {'author': Value(literal:'A000003155')}, {'author': Value(literal:'A000052396')}, {'author': Value(literal:'A000002664')}, {'author': Value(literal:'A000052882')}, {'author': Value(literal:'A000686446')}, {'author': Value(literal:'A000067785')}, {'author': Value(literal:'A000241938')}, {'author': Value(literal:'A000069155')}, {'author': Value(literal:'A000095231')}, {'author': Value(literal:'A000007189')}, {'author': Value(literal:'A000011998')}, {'author': Value(literal:'A000000700')}, {'author': Value(literal:'A000002803')}, {'author': Value(literal:'A000032674')}, {'author': Value(literal:'A000464208')}, {'author': Value(literal:'A000000265')}, {'author': Value(literal:'A000499688')}, {'author': Value(literal:'A000240923')}, {'author': Value(literal:'A000001268')}, {'author': Value(literal:'A000030801')}, {'author': Value(literal:'A000717301')}, {'author': Value(literal:'A000003227')}, {'author': Value(literal:'A000000457')}, {'author': Value(literal:'A000002688')}, {'author': Value(literal:'A000066745')}, {'author': Value(literal:'A000761101')}, {'author': Value(literal:'A000042790')}, {'author': Value(literal:'A000002397')}, {'author': Value(literal:'A000793294')}, {'author': Value(literal:'A000667768')}, {'author': Value(literal:'A000000923')}, {'author': Value(literal:'A000000210')}, {'author': Value(literal:'A000052479')}, {'author': Value(literal:'A000737362')}, {'author': Value(literal:'A000025142')}, {'author': Value(literal:'A000174677')}, {'author': Value(literal:'A000314185')}, {'author': Value(literal:'A000218137')}, {'author': Value(literal:'A000039598')}, {'author': Value(literal:'A000078488')}, {'author': Value(literal:'A000082429')}, {'author': Value(literal:'A000004916')}, {'author': Value(literal:'A000285291')}, {'author': Value(literal:'A000054768')}, {'author': Value(literal:'A000009485')}, {'author': Value(literal:'A000000184')}, {'author': Value(literal:'A000069742')}, {'author': Value(literal:'A000078734')}, {'author': Value(literal:'A000913115')}, {'author': Value(literal:'A000265491')}, {'author': Value(literal:'A000471541')}, {'author': Value(literal:'A000074058')}, {'author': Value(literal:'A000395831')}, {'author': Value(literal:'A000061931')}, {'author': Value(literal:'A000915408')}, {'author': Value(literal:'A000019660')}, {'author': Value(literal:'A000237441')}, {'author': Value(literal:'A000921750')}, {'author': Value(literal:'A000006711')}, {'author': Value(literal:'A000901448')}, {'author': Value(literal:'A000944493')}, {'author': Value(literal:'A000329102')}, {'author': Value(literal:'A001113893')}, {'author': Value(literal:'A000770173')}, {'author': Value(literal:'A000048298')}, {'author': Value(literal:'A000900851')}, {'author': Value(literal:'A000002629')}, {'author': Value(literal:'A000033534')}, {'author': Value(literal:'A000038799')}, {'author': Value(literal:'A000017066')}, {'author': Value(literal:'A000977318')}, {'author': Value(literal:'A000000690')}, {'author': Value(literal:'A000042094')}, {'author': Value(literal:'A000040775')}, {'author': Value(literal:'A000002447')}, {'author': Value(literal:'A000002391')}, {'author': Value(literal:'A000007194')}, {'author': Value(literal:'A000092471')}, {'author': Value(literal:'A000008953')}, {'author': Value(literal:'A000814647')}, {'author': Value(literal:'A000232347')}, {'author': Value(literal:'A000006788')}, {'author': Value(literal:'A000744474')}, {'author': Value(literal:'A000016624')}, {'author': Value(literal:'A001053724')}, {'author': Value(literal:'A000230241')}, {'author': Value(literal:'A000006916')}, {'author': Value(literal:'A000030727')}, {'author': Value(literal:'A001158986')}, {'author': Value(literal:'A001112008')}, {'author': Value(literal:'A000005949')}, {'author': Value(literal:'A000012769')}, {'author': Value(literal:'A000210977')}, {'author': Value(literal:'A000013578')}, {'author': Value(literal:'A000210374')}, {'author': Value(literal:'A000881326')}, {'author': Value(literal:'A000051968')}, {'author': Value(literal:'A000382237')}, {'author': Value(literal:'A000009393')}, {'author': Value(literal:'A000090474')}, {'author': Value(literal:'A000162617')}, {'author': Value(literal:'A000487243')}, {'author': Value(literal:'A000406586')}, {'author': Value(literal:'A000016437')}, {'author': Value(literal:'A000015257')}, {'author': Value(literal:'A000027869')}, {'author': Value(literal:'A000954842')}, {'author': Value(literal:'A000257793')}, {'author': Value(literal:'A000472654')}, {'author': Value(literal:'A000009562')}, {'author': Value(literal:'A000075848')}, {'author': Value(literal:'A000000034')}, {'author': Value(literal:'A000029078')}, {'author': Value(literal:'A000000011')}, {'author': Value(literal:'A000054063')}, {'author': Value(literal:'A000020030')}, {'author': Value(literal:'A000035851')}, {'author': Value(literal:'A000000443')}, {'author': Value(literal:'A000090025')}, {'author': Value(literal:'A000469430')}, {'author': Value(literal:'A000011242')}, {'author': Value(literal:'A000053674')}, {'author': Value(literal:'A000001839')}, {'author': Value(literal:'A000082852')}, {'author': Value(literal:'A000063766')}, {'author': Value(literal:'A000050367')}, {'author': Value(literal:'A000029887')}, {'author': Value(literal:'A000000001')}, {'author': Value(literal:'A000009391')}, {'author': Value(literal:'A000093128')}, {'author': Value(literal:'A000888026')}, {'author': Value(literal:'A000802405')}, {'author': Value(literal:'A000124596')}, {'author': Value(literal:'A000438570')}, {'author': Value(literal:'A000000044')}, {'author': Value(literal:'A000006972')}, {'author': Value(literal:'A000000158')}, {'author': Value(literal:'A000276299')}, {'author': Value(literal:'A000913693')}, {'author': Value(literal:'A000008122')}, {'author': Value(literal:'A000002726')}, {'author': Value(literal:'A000087115')}, {'author': Value(literal:'A000060087')}, {'author': Value(literal:'A000417153')}, {'author': Value(literal:'A000000187')}, {'author': Value(literal:'A000096609')}, {'author': Value(literal:'A000049542')}, {'author': Value(literal:'A000019825')}, {'author': Value(literal:'A000001294')}, {'author': Value(literal:'A000414001')}, {'author': Value(literal:'A000023084')}, {'author': Value(literal:'A000038775')}, {'author': Value(literal:'A000000051')}, {'author': Value(literal:'A000018175')}, {'author': Value(literal:'A000066228')}, {'author': Value(literal:'A000011263')}, {'author': Value(literal:'A000003743')}, {'author': Value(literal:'A000006031')}, {'author': Value(literal:'A000002589')}, {'author': Value(literal:'A000058619')}, {'author': Value(literal:'A000328119')}, {'author': Value(literal:'A000077261')}, {'author': Value(literal:'A000091663')}, {'author': Value(literal:'A000968458')}, {'author': Value(literal:'A001204079')}, {'author': Value(literal:'A001239545')}, {'author': Value(literal:'A000054200')}, {'author': Value(literal:'A000820729')}, {'author': Value(literal:'A000907004')}, {'author': Value(literal:'A000000918')}, {'author': Value(literal:'A000003639')}, {'author': Value(literal:'A000004780')}, {'author': Value(literal:'A000017227')}, {'author': Value(literal:'A000020386')}, {'author': Value(literal:'A000497531')}, {'author': Value(literal:'A000023915')}, {'author': Value(literal:'A000087983')}, {'author': Value(literal:'A000013144')}, {'author': Value(literal:'A000000901')}, {'author': Value(literal:'A000081623')}, {'author': Value(literal:'A000069102')}, {'author': Value(literal:'A000858637')}, {'author': Value(literal:'A000070972')}, {'author': Value(literal:'A000011450')}, {'author': Value(literal:'A000006363')}, {'author': Value(literal:'A000012501')}, {'author': Value(literal:'A000001114')}, {'author': Value(literal:'A000018557')}, {'author': Value(literal:'A000102573')}, {'author': Value(literal:'A000026236')}, {'author': Value(literal:'A000101891')}, {'author': Value(literal:'A000995417')}, {'author': Value(literal:'A000215988')}, {'author': Value(literal:'A000029843')}, {'author': Value(literal:'A000014288')}, {'author': Value(literal:'A000978930')}, {'author': Value(literal:'A000787724')}, {'author': Value(literal:'A000640828')}, {'author': Value(literal:'A000974348')}, {'author': Value(literal:'A000099497')}, {'author': Value(literal:'A000012633')}, {'author': Value(literal:'A001002346')}, {'author': Value(literal:'A000357660')}, {'author': Value(literal:'A000918117')}, {'author': Value(literal:'A000176426')}, {'author': Value(literal:'A000496509')}, {'author': Value(literal:'A000038586')}, {'author': Value(literal:'A000115721')}, {'author': Value(literal:'A000873186')}, {'author': Value(literal:'A000008216')}, {'author': Value(literal:'A000029371')}, {'author': Value(literal:'A000718037')}, {'author': Value(literal:'A000012523')}, {'author': Value(literal:'A000005277')}, {'author': Value(literal:'A000000286')}, {'author': Value(literal:'A000339622')}, {'author': Value(literal:'A000000840')}, {'author': Value(literal:'A000007878')}, {'author': Value(literal:'A000073109')}, {'author': Value(literal:'A000009050')}, {'author': Value(literal:'A000012540')}, {'author': Value(literal:'A000716494')}, {'author': Value(literal:'A001059745')}, {'author': Value(literal:'A000089030')}, {'author': Value(literal:'A001007080')}, {'author': Value(literal:'A000007798')}, {'author': Value(literal:'A000003919')}, {'author': Value(literal:'A000510550')}, {'author': Value(literal:'A000147389')}, {'author': Value(literal:'A000008077')}, {'author': Value(literal:'A000113686')}, {'author': Value(literal:'A000015839')}, {'author': Value(literal:'A000590028')}, {'author': Value(literal:'A000622032')}, {'author': Value(literal:'A001022467')}, {'author': Value(literal:'A000051650')}, {'author': Value(literal:'A000002302')}, {'author': Value(literal:'A000084018')}, {'author': Value(literal:'A000001116')}, {'author': Value(literal:'A000597656')}, {'author': Value(literal:'A000039823')}, {'author': Value(literal:'A000010586')}, {'author': Value(literal:'A000111067')}, {'author': Value(literal:'A000044883')}, {'author': Value(literal:'A000031418')}, {'author': Value(literal:'A000074636')}, {'author': Value(literal:'A000179909')}, {'author': Value(literal:'A000001447')}, {'author': Value(literal:'A000002798')}, {'author': Value(literal:'A000000651')}, {'author': Value(literal:'A000804909')}, {'author': Value(literal:'A000109992')}, {'author': Value(literal:'A000008417')}, {'author': Value(literal:'A000009316')}, {'author': Value(literal:'A000819876')}, {'author': Value(literal:'A000002616')}, {'author': Value(literal:'A001126927')}, {'author': Value(literal:'A001239150')}, {'author': Value(literal:'A000369612')}, {'author': Value(literal:'A000015078')}, {'author': Value(literal:'A000004899')}, {'author': Value(literal:'A001014822')}, {'author': Value(literal:'A001040211')}, {'author': Value(literal:'A000026506')}, {'author': Value(literal:'A000002488')}, {'author': Value(literal:'A000041637')}, {'author': Value(literal:'A000025083')}, {'author': Value(literal:'A000450777')}, {'author': Value(literal:'A000012645')}, {'author': Value(literal:'A000005461')}, {'author': Value(literal:'A000076420')}, {'author': Value(literal:'A000289676')}, {'author': Value(literal:'A000197465')}, {'author': Value(literal:'A000046907')}, {'author': Value(literal:'A000005290')}, {'author': Value(literal:'A000105463')}, {'author': Value(literal:'A000040318')}, {'author': Value(literal:'A000000302')}, {'author': Value(literal:'A000029000')}, {'author': Value(literal:'A000625363')}, {'author': Value(literal:'A000063885')}, {'author': Value(literal:'A001118200')}, {'author': Value(literal:'A001080612')}, {'author': Value(literal:'A000045621')}, {'author': Value(literal:'A001184017')}, {'author': Value(literal:'A001183895')}, {'author': Value(literal:'A000220950')}, {'author': Value(literal:'A000022321')}, {'author': Value(literal:'A000038116')}, {'author': Value(literal:'A000485955')}, {'author': Value(literal:'A000110241')}, {'author': Value(literal:'A000376009')}, {'author': Value(literal:'A000105334')}, {'author': Value(literal:'A000033073')}, {'author': Value(literal:'A000008303')}, {'author': Value(literal:'A000012548')}, {'author': Value(literal:'A000017327')}, {'author': Value(literal:'A000000236')}]	437	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Quién es el autor de Peace?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?author WHERE { 
  ?story golem:title ""Peace"" . 
  ?story dc:creator ?author . 
}
"	[]	0	0	1
438	438	es	¿Quién es el autor de Scraped Palms?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?author WHERE {  ?story golem:title ""Scraped Palms"" . ?story golem:author ?author . }"	[{'author': Value(literal:'A000039300')}]	438	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Quién es el autor de Scraped Palms?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?author WHERE { 
  ?story golem:title ""Scraped Palms"" . 
  ?story dc:creator ?author . 
}
"	[]	0	0	1
439	439	es	¿Quién es el autor de Hearts of painted Black Part 2: The Forgotten Echo?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?author WHERE {  ?story golem:title ""Hearts of painted Black Part 2: The Forgotten Echo"" . ?story golem:author ?author . }"	[{'author': Value(literal:'A000054006')}]	439	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Quién es el autor de Hearts of painted Black Part 2: The Forgotten Echo?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?author WHERE { 
?story golem:title ""Hearts of painted Black Part 2: The Forgotten Echo"" . 
?story dc:creator ?author . 
}
"	[]	0	0	1
440	440	es	¿Quién es el autor de You're Alive[so alive...]?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?author WHERE {  ?story golem:title ""You're Alive[so alive...]"" . ?story golem:author ?author . }"	[{'author': Value(literal:'A000264390')}]	440	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Quién es el autor de You're Alive[so alive...]?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?author WHERE { 
  ?story golem:title ""You're Alive[so alive...]"" . 
  ?story dc:creator ?author . 
}
"	[]	0	0	1
441	441	es	¿Quién es el autor de Feathers, Paper Football, and Spiked Punch?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?author WHERE {  ?story golem:title ""Feathers, Paper Football, and Spiked Punch"" . ?story golem:author ?author . }"	[{'author': Value(literal:'A000291092')}]	441	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Quién es el autor de Feathers, Paper Football, and Spiked Punch?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/>  
SELECT DISTINCT ?author WHERE { 
?story golem:title ""Feathers, Paper Football, and Spiked Punch"" . 
?story dc:creator ?author . }
"	[]	0	0	1
443	443	es	¿A qué colecciones pertenece Το Συμβούλιο των Θεών?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?collections WHERE {  ?story golem:title ""Το Συμβούλιο των Θεών"" . ?story golem:collections ?collections . }"	[{'collections': Value(literal:'None')}]	443	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿A qué colecciones pertenece Το Συμβούλιο των Θεών?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?collection WHERE { 
  ?story golem:title ""Το Συμβούλιο των Θεών"" . 
  ?story golem:collections ?collection . 
}
"	[{'collection': Value(literal:'None')}]	0	1	1
444	444	es	¿A qué colecciones pertenece Untameable?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?collections WHERE {  ?story golem:title ""Untameable"" . ?story golem:collections ?collections . }"	"[{'collections': Value(literal:""Alternative Universes of Fandoms I enjoy., Ashes' Library, Collection of treasures that I've cried river if it ever got delete :)), Fics so good I want to throw my chair out the window, Identity Crisis, Long Fics to Binge, Mo Dao Zu Shi, Reincarnation and Transmigration, Storycatchers' cultivation stories, System, The Witch's Woods, alternate Universe Harry Potter, Разные фендомы, 💖ONLY THE BEST💖"")}, {'collections': Value(literal:'Best AUs')}, {'collections': Value(literal:'None')}, {'collections': Value(literal:'Humans Are Space Orcs')}, {'collections': Value(literal:'Wrecursive Fanworks')}, {'collections': Value(literal:'Top 20 Ereri Fics of All Time')}]"	444	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿A qué colecciones pertenece Untameable?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?collection WHERE { 
  ?story golem:title ""Untameable"" . 
  ?story golem:collections ?collection . 
}
"	"[{'collection': Value(literal:""Alternative Universes of Fandoms I enjoy., Ashes' Library, Collection of treasures that I've cried river if it ever got delete :)), Fics so good I want to throw my chair out the window, Identity Crisis, Long Fics to Binge, Mo Dao Zu Shi, Reincarnation and Transmigration, Storycatchers' cultivation stories, System, The Witch's Woods, alternate Universe Harry Potter, Разные фендомы, 💖ONLY THE BEST💖"")}, {'collection': Value(literal:'Best AUs')}, {'collection': Value(literal:'None')}, {'collection': Value(literal:'Humans Are Space Orcs')}, {'collection': Value(literal:'Wrecursive Fanworks')}, {'collection': Value(literal:'Top 20 Ereri Fics of All Time')}]"	0	1	1
445	445	es	¿A qué colecciones pertenece Planes, Trains, and Automobiles?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?collections WHERE {  ?story golem:title ""Planes, Trains, and Automobiles"" . ?story golem:collections ?collections . }"	[{'collections': Value(literal:'None')}, {'collections': Value(literal:'852 Prospect Archive')}]	445	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿A qué colecciones pertenece Planes, Trains, and Automobiles?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?collection WHERE { 
 ?story golem:title ""Planes, Trains, and Automobiles"" . 
 ?story golem:collections ?collection . 
}
"	[{'collection': Value(literal:'None')}, {'collection': Value(literal:'852 Prospect Archive')}]	0	1	1
446	446	es	¿A qué colecciones pertenece Their Little Girl?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?collections WHERE {  ?story golem:title ""Their Little Girl"" . ?story golem:collections ?collections . }"	[{'collections': Value(literal:'None')}]	446	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿A qué colecciones pertenece Their Little Girl?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?collection WHERE { 
  ?story golem:title ""Their Little Girl"" . 
  ?story golem:collections ?collection . 
}
"	[{'collection': Value(literal:'None')}]	0	1	1
447	447	es	¿A qué colecciones pertenece We look like we feel?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?collections WHERE {  ?story golem:title ""We look like we feel"" . ?story golem:collections ?collections . }"	[{'collections': Value(literal:'None')}]	447	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿A qué colecciones pertenece We look like we feel?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?collection WHERE { 
  ?story golem:title ""We look like we feel"" . 
  ?story golem:collections ?collection . 
}
"	[{'collection': Value(literal:'None')}]	0	1	1
448	448	es	¿A qué colecciones pertenece Silver Sin?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?collections WHERE {  ?story golem:title ""Silver Sin"" . ?story golem:collections ?collections . }"	[{'collections': Value(literal:'None')}]	448	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿A qué colecciones pertenece Silver Sin?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?collection WHERE { 
    ?story golem:title ""Silver Sin"" . 
    ?story golem:collections ?collection . 
}
"	[{'collection': Value(literal:'None')}]	0	1	1
449	449	es	¿A qué colecciones pertenece Tom Riddle, Ghost?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?collections WHERE {  ?story golem:title ""Tom Riddle, Ghost"" . ?story golem:collections ?collections . }"	[{'collections': Value(literal:'None')}]	449	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿A qué colecciones pertenece Tom Riddle, Ghost?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/>  
SELECT DISTINCT ?collection WHERE { 
  ?story golem:title ""Tom Riddle, Ghost"" . 
  ?story golem:collections ?collection . 
}
"	[{'collection': Value(literal:'None')}]	0	1	1
450	450	es	¿A qué colecciones pertenece Building Bridges (and Snowmen)?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?collections WHERE {  ?story golem:title ""Building Bridges (and Snowmen)"" . ?story golem:collections ?collections . }"	[{'collections': Value(literal:'None')}]	450	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿A qué colecciones pertenece Building Bridges (and Snowmen)?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?collection WHERE { 
  ?story golem:title ""Building Bridges (and Snowmen)"" . 
  ?story golem:collections ?collection . 
}
"	[{'collection': Value(literal:'None')}]	0	1	1
451	451	es	¿A qué colecciones pertenece Sleeping Beauty - Dark!Severus Snape x Reader?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?collections WHERE {  ?story golem:title ""Sleeping Beauty - Dark!Severus Snape x Reader"" . ?story golem:collections ?collections . }"	[{'collections': Value(literal:'None')}]	451	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿A qué colecciones pertenece Sleeping Beauty - Dark!Severus Snape x Reader?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?collection WHERE { 
?story golem:title ""Sleeping Beauty - Dark!Severus Snape x Reader"" . 
?story golem:collections ?collection . 
}
"	[{'collection': Value(literal:'None')}]	0	1	1
452	452	es	¿A qué colecciones pertenece I can't help but love you?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?collections WHERE {  ?story golem:title ""I can't help but love you"" . ?story golem:collections ?collections . }"	[{'collections': Value(literal:'None')}]	452	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿A qué colecciones pertenece I can't help but love you?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?collection WHERE { 
  ?story golem:title ""I can't help but love you"" . 
  ?story golem:collections ?collection . 
}
"	[{'collection': Value(literal:'None')}]	0	1	1
454	454	es	¿Qué personajes aparecen en Bring Me to Life?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT ?characters WHERE {  ?story golem:title ""Bring Me to Life"" . ?story golem:characters ?characters . }"	"[{'characters': Value(literal:'Hermione Granger')}, {'characters': Value(literal:'Original Characters')}, {'characters': Value(literal:'Eric Northman')}, {'characters': Value(literal:'Bill Compton')}, {'characters': Value(literal:'Sookie Stackhouse')}, {'characters': Value(literal:'Pam Swynford De Beaufort')}, {'characters': Value(literal:'Harry Potter')}, {'characters': Value(literal:'Hermione Granger')}, {'characters': Value(literal:'Minerva McGonagall')}, {'characters': Value(literal:'Original Male Character(s)')}, {'characters': Value(literal:'Tom Riddle')}, {'characters': Value(literal:'Kingsley Shacklebolt')}, {'characters': Value(literal:'Moaning Myrtle')}, {'characters': Value(literal:'Crowley (Good Omens)')}, {'characters': Value(literal:'Original Characters')}, {'characters': Value(literal:'Anathema Device')}, {'characters': Value(literal:'Aziraphale (Good Omens)')}, {'characters': Value(literal:'Beelzebub (Good Omens)')}, {'characters': Value(literal:'Brian (Good Omens)')}, {'characters': Value(literal:'Madame Tracy (Good Omens)')}, {'characters': Value(literal:'Newton Pulsifer')}, {'characters': Value(literal:'Pepper (Good Omens)')}, {'characters': Value(literal:'Sergeant Shadwell (Good Omens)')}, {'characters': Value(literal:'Wensleydale (Good Omens)')}, {'characters': Value(literal:'Hastur (Good Omens)')}, {'characters': Value(literal:'Ligur (Good Omens)')}, {'characters': Value(literal:'Dagon (Good Omens)')}, {'characters': Value(literal:'Adam (Good Omens)')}, {'characters': Value(literal:'Warlock (Good Omens)')}, {'characters': Value(literal:'Original Female Character(s)')}, {'characters': Value(literal:'Karl Heisenberg')}, {'characters': Value(literal:'Bill Weasley')}, {'characters': Value(literal:'Ginny Weasley')}, {'characters': Value(literal:'Harry Potter')}, {'characters': Value(literal:'Hermione Granger')}, {'characters': Value(literal:'Molly Weasley')}, {'characters': Value(literal:'Aksel Ackerman')}, {'characters': Value(literal:'Samantha Walker')}, {'characters': Value(literal:'Victoria Moore | Katarina Ackerman')}, {'characters': Value(literal:'Original Characters')}, {'characters': Value(literal:'Emma Swan')}, {'characters': Value(literal:'Captain Hook | Killian Jones')}, {'characters': Value(literal:'Jaime Lannister')}, {'characters': Value(literal:'Jon Snow')}, {'characters': Value(literal:'Tyrion Lannister')}, {'characters': Value(literal:'Sansa Stark')}, {'characters': Value(literal:'Daenerys Targaryen')}, {'characters': Value(literal:'Brienne of Tarth')}, {'characters': Value(literal:'Bronn (ASoIaF)')}, {'characters': Value(literal:'Podrick Payne')}, {'characters': Value(literal:'Tormund Giantsbane')}, {'characters': Value(literal:'Kim Jungwoo (NCT)')}, {'characters': Value(literal:'Mark Lee (NCT)')}, {'characters': Value(literal:'Wong Yuk Hei | Lucas')}, {'characters': Value(literal:'Kim Dongyoung | Doyoung')}, {'characters': Value(literal:'Lee Taeyong')}, {'characters': Value(literal:'Moon Taeil')}, {'characters': Value(literal:'Jiāng Chéng | Jiāng Wǎnyín')}, {'characters': Value(literal:'Lán Huàn | Lán Xīchén')}, {'characters': Value(literal:'Lán Zhàn | Lán Wàngjī')}, {'characters': Value(literal:'Wèi Yīng | Wèi Wúxiàn')}, {'characters': Value(literal:'Mèng Yáo | Jīn Guāngyáo')}, {'characters': Value(literal:'Wēn Níng | Wēn Qiónglín')}, {'characters': Value(literal:'Niè Huáisāng')}, {'characters': Value(literal:'Niè Míngjué')}, {'characters': Value(literal:'Jīn Zǐxuān')}, {'characters': Value(literal:'Jiāng Yànlí')}, {'characters': Value(literal:'Wēn Qíng')}, {'characters': Value(literal:'Xiǎo Xīngchén')}, {'characters': Value(literal:'Xuē Yáng | Xuē Chéngměi')}, {'characters': Value(literal:'Mèng Yáo | Jīn Guāngyáo')}, {'characters': Value(literal:'Sòng Lán | Sòng Zǐchēn')}, {'characters': Value(literal:'Diego Brando')}, {'characters': Value(literal:'Dio Brando')}, {'characters': Value(literal:'Giorno Giovanna')}, {'characters': Value(literal:'Jonathan Joestar')}, {'characters': Value(literal:""Ba'al (SG-1)"")}, {'characters': Value(literal:""Ba'al's Host"")}, {'characters': Value(literal:'Jonathan | H2ODelirious')}, {'characters': Value(literal:'Evan Fong')}, {'characters': Value(literal:'Harry Potter')}, {'characters': Value(literal:'Severus Snape')}, {'characters': Value(literal:'Aerith Gainsborough')}, {'characters': Value(literal:'Angeal Hewley')}, {'characters': Value(literal:'Cloud Strife')}, {'characters': Value(literal:'Genesis Rhapsodos')}, {'characters': Value(literal:'Tifa Lockhart')}, {'characters': Value(literal:'Zack Fair')}, {'characters': Value(literal:'Sephiroth')}, {'characters': Value(literal:'Barret Wallace')}, {'characters': Value(literal:'Vincent Valentine')}, {'characters': Value(literal:'Yuffie Kisaragi')}, {'characters': Value(literal:'Cid Highwind')}, {'characters': Value(literal:'Denzel')}, {'characters': Value(literal:'Red XIII')}, {'characters': Value(literal:'Olivia Benson')}, {'characters': Value(literal:'Elliot Stabler')}, {'characters': Value(literal:'John Munch')}, {'characters': Value(literal:'Donald Cragen')}, {'characters': Value(literal:'Alexandra Cabot (L&O: SVU)')}, {'characters': Value(literal:'Casey Novak')}, {'characters': Value(literal:'Finn Tutuola')}, {'characters': Value(literal:'John Watson')}, {'characters': Value(literal:'Sherlock Holmes')}, {'characters': Value(literal:'Connor (Detroit: Become Human)')}, {'characters': Value(literal:'CyberLife Tower Connor | RK800-60')}, {'characters': Value(literal:'Upgraded Connor | RK900')}, {'characters': Value(literal:'Abby Griffin')}, {'characters': Value(literal:'Clarke Griffin')}, {'characters': Value(literal:'Marcus Kane')}, {'characters': Value(literal:'Kakyoin Noriaki')}, {'characters': Value(literal:'Kujo Jotaro')}, {'characters': Value(literal:'Mentions of DIO')}, {'characters': Value(literal:'Slight appearance of Joseph Joestar')}, {'characters': Value(literal:'Clark Kent')}, {'characters': Value(literal:'Jonathan Kent')}, {'characters': Value(literal:'Lana Lang')}, {'characters': Value(literal:'Lois Lane')}, {'characters': Value(literal:'Martha Kent')}, {'characters': Value(literal:'Jor-El')}, {'characters': Value(literal:'Chloe Sullivan')}, {'characters': Value(literal:'Milton Fine')}, {'characters': Value(literal:'Obi-Wan Kenobi')}, {'characters': Value(literal:'Padmé Amidala')}, {'characters': Value(literal:'(mentioned)')}, {'characters': Value(literal:'Konnan (Professional Wrestling)')}, {'characters': Value(literal:'Ricochet | Prince Puma')}, {'characters': Value(literal:'Vampiro (Professional Wrestling)')}, {'characters': Value(literal:'Wolverine')}, {'characters': Value(literal:'Jade Leopard')}, {'characters': Value(literal:'Silver Cheetah')}, {'characters': Value(literal:'Castiel')}, {'characters': Value(literal:'Dean Winchester')}, {'characters': Value(literal:'Gabriel (Supernatural)')}, {'characters': Value(literal:'Jack Kline')}, {'characters': Value(literal:'Sam Winchester')}, {'characters': Value(literal:'Balthazar (Supernatural)')}, {'characters': Value(literal:'Eileen Leahy')}, {'characters': Value(literal:'Amara (Supernatural)')}, {'characters': Value(literal:'Castiel')}, {'characters': Value(literal:'Dean Winchester')}, {'characters': Value(literal:'Gabriel (Supernatural)')}, {'characters': Value(literal:'Sam Winchester')}, {'characters': Value(literal:'Bruce Banner')}, {'characters': Value(literal:'Clint Barton')}, {'characters': Value(literal:'James ""Bucky"" Barnes')}, {'characters': Value(literal:'James ""Rhodey"" Rhodes')}, {'characters': Value(literal:'Natasha Romanov (Marvel)')}, {'characters': Value(literal:'Steve Rogers')}, {'characters': Value(literal:'Thor (Marvel)')}, {'characters': Value(literal:'Tony Stark')}, {'characters': Value(literal:'Original Characters')}, {'characters': Value(literal:'Original Female Character(s)')}, {'characters': Value(literal:'James Patrick March')}, {'characters': Value(literal:'Tristan Duffy')}, {'characters': Value(literal:'Will Drake')}, {'characters': Value(literal:'Jimmy Darling')}, {'characters': Value(literal:'Dandy Mott')}, {'characters': Value(literal:'Elsa Mars')}, {'characters': Value(literal:'Gloria Mott')}, {'characters': Value(literal:'Countess Elizabeth Johnson')}, {'characters': Value(literal:'Liz Taylor (American Horror Story)')}, {'characters': Value(literal:'Donovan (American Horror Story)')}, {'characters': Value(literal:'Iris (American Horror Story)')}, {'characters': Value(literal:'Finn Wittrock')}, {'characters': Value(literal:'Sirius Black')}, {'characters': Value(literal:'Fabian Prewett')}, {'characters': Value(literal:'Josie Saltzman')}, {'characters': Value(literal:'Original Female Character(s)')}, {'characters': Value(literal:'Rebekah Mikaelson')}, {'characters': Value(literal:'Hope Mikaelson')}, {'characters': Value(literal:'Lizzie Saltzman')}, {'characters': Value(literal:'Caroline Forbes')}, {'characters': Value(literal:'Clark Kent')}, {'characters': Value(literal:'Lois Lane')}, {'characters': Value(literal:'Perry White')}, {'characters': Value(literal:'James ""Jimmy"" Olsen')}, {'characters': Value(literal:'Aomine Daiki')}, {'characters': Value(literal:'Kise Ryouta')}, {'characters': Value(literal:'Kuroko Tetsuya')}, {'characters': Value(literal:'Kagami Taiga')}, {'characters': Value(literal:'Momoi Satsuki')}, {'characters': Value(literal:'Kara Danvers')}, {'characters': Value(literal:'Mon-El (Supergirl TV 2015)')}, {'characters': Value(literal:'Winn Schott Jr.')}, {'characters': Value(literal:'Leslie Willis')}, {'characters': Value(literal:'Lar Gand (Supergirl TV 2015)')}, {'characters': Value(literal:""Hank Henshaw | J'onn J'onzz"")}, {'characters': Value(literal:'Eve Tessmacher')}, {'characters': Value(literal:'Rhea Gand')}, {'characters': Value(literal:'Klaus Hargreeves')}, {'characters': Value(literal:'Diego Hargreeves')}, {'characters': Value(literal:'Number Five | The Boy (Umbrella Academy)')}, {'characters': Value(literal:'Allison Hargreeves')}, {'characters': Value(literal:'Ben Hargreeves')}, {'characters': Value(literal:'Luther Hargreeves')}, {'characters': Value(literal:'Vanya Hargreeves')}, {'characters': Value(literal:'Original Female Character')}, {'characters': Value(literal:'Original Male Character')}, {'characters': Value(literal:'AJ McLean')}, {'characters': Value(literal:'Brian Littrell')}, {'characters': Value(literal:'Howie Dorough')}, {'characters': Value(literal:'Kevin Richardson')}, {'characters': Value(literal:'Nick Carter')}, {'characters': Value(literal:'Lauren Carter')}, {'characters': Value(literal:'Kozume Kenma')}, {'characters': Value(literal:'Kuroo Tetsurou')}, {'characters': Value(literal:'Daishou Suguru')}, {'characters': Value(literal:'Erwin Smith')}, {'characters': Value(literal:'Hange Zoë')}, {'characters': Value(literal:'Levi (Shingeki no Kyojin)')}, {'characters': Value(literal:'Mike Zacharias')}, {'characters': Value(literal:'Moblit Berner')}, {'characters': Value(literal:'Oluo Bozado')}, {'characters': Value(literal:'Petra Ral')}, {'characters': Value(literal:'Nanaba (Shingeki no Kyojin)')}, {'characters': Value(literal:'Zeke (Shingeki no Kyojin)')}, {'characters': Value(literal:'Darius Zackly')}, {'characters': Value(literal:'Dot Pixis')}, {'characters': Value(literal:'104th Training Corps')}, {'characters': Value(literal:'Gunther Schultz')}, {'characters': Value(literal:'Survey Corps (Shingeki no Kyojin)')}, {'characters': Value(literal:'Gelgar (Shingeki no Kyojin)')}]"	454	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Qué personajes aparecen en Bring Me to Life?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/>  
SELECT DISTINCT ?character WHERE { 
?story golem:title ""Bring Me to Life"" . 
?story golem:characters ?character . }
"	"[{'character': Value(literal:'Hermione Granger')}, {'character': Value(literal:'Original Characters')}, {'character': Value(literal:'Eric Northman')}, {'character': Value(literal:'Bill Compton')}, {'character': Value(literal:'Sookie Stackhouse')}, {'character': Value(literal:'Pam Swynford De Beaufort')}, {'character': Value(literal:'Harry Potter')}, {'character': Value(literal:'Minerva McGonagall')}, {'character': Value(literal:'Original Male Character(s)')}, {'character': Value(literal:'Tom Riddle')}, {'character': Value(literal:'Kingsley Shacklebolt')}, {'character': Value(literal:'Moaning Myrtle')}, {'character': Value(literal:'Crowley (Good Omens)')}, {'character': Value(literal:'Anathema Device')}, {'character': Value(literal:'Aziraphale (Good Omens)')}, {'character': Value(literal:'Beelzebub (Good Omens)')}, {'character': Value(literal:'Brian (Good Omens)')}, {'character': Value(literal:'Madame Tracy (Good Omens)')}, {'character': Value(literal:'Newton Pulsifer')}, {'character': Value(literal:'Pepper (Good Omens)')}, {'character': Value(literal:'Sergeant Shadwell (Good Omens)')}, {'character': Value(literal:'Wensleydale (Good Omens)')}, {'character': Value(literal:'Hastur (Good Omens)')}, {'character': Value(literal:'Ligur (Good Omens)')}, {'character': Value(literal:'Dagon (Good Omens)')}, {'character': Value(literal:'Adam (Good Omens)')}, {'character': Value(literal:'Warlock (Good Omens)')}, {'character': Value(literal:'Original Female Character(s)')}, {'character': Value(literal:'Karl Heisenberg')}, {'character': Value(literal:'Bill Weasley')}, {'character': Value(literal:'Ginny Weasley')}, {'character': Value(literal:'Molly Weasley')}, {'character': Value(literal:'Aksel Ackerman')}, {'character': Value(literal:'Samantha Walker')}, {'character': Value(literal:'Victoria Moore | Katarina Ackerman')}, {'character': Value(literal:'Emma Swan')}, {'character': Value(literal:'Captain Hook | Killian Jones')}, {'character': Value(literal:'Jaime Lannister')}, {'character': Value(literal:'Jon Snow')}, {'character': Value(literal:'Tyrion Lannister')}, {'character': Value(literal:'Sansa Stark')}, {'character': Value(literal:'Daenerys Targaryen')}, {'character': Value(literal:'Brienne of Tarth')}, {'character': Value(literal:'Bronn (ASoIaF)')}, {'character': Value(literal:'Podrick Payne')}, {'character': Value(literal:'Tormund Giantsbane')}, {'character': Value(literal:'Kim Jungwoo (NCT)')}, {'character': Value(literal:'Mark Lee (NCT)')}, {'character': Value(literal:'Wong Yuk Hei | Lucas')}, {'character': Value(literal:'Kim Dongyoung | Doyoung')}, {'character': Value(literal:'Lee Taeyong')}, {'character': Value(literal:'Moon Taeil')}, {'character': Value(literal:'Jiāng Chéng | Jiāng Wǎnyín')}, {'character': Value(literal:'Lán Huàn | Lán Xīchén')}, {'character': Value(literal:'Lán Zhàn | Lán Wàngjī')}, {'character': Value(literal:'Wèi Yīng | Wèi Wúxiàn')}, {'character': Value(literal:'Mèng Yáo | Jīn Guāngyáo')}, {'character': Value(literal:'Wēn Níng | Wēn Qiónglín')}, {'character': Value(literal:'Niè Huáisāng')}, {'character': Value(literal:'Niè Míngjué')}, {'character': Value(literal:'Jīn Zǐxuān')}, {'character': Value(literal:'Jiāng Yànlí')}, {'character': Value(literal:'Wēn Qíng')}, {'character': Value(literal:'Xiǎo Xīngchén')}, {'character': Value(literal:'Xuē Yáng | Xuē Chéngměi')}, {'character': Value(literal:'Sòng Lán | Sòng Zǐchēn')}, {'character': Value(literal:'Diego Brando')}, {'character': Value(literal:'Dio Brando')}, {'character': Value(literal:'Giorno Giovanna')}, {'character': Value(literal:'Jonathan Joestar')}, {'character': Value(literal:""Ba'al (SG-1)"")}, {'character': Value(literal:""Ba'al's Host"")}, {'character': Value(literal:'Jonathan | H2ODelirious')}, {'character': Value(literal:'Evan Fong')}, {'character': Value(literal:'Severus Snape')}, {'character': Value(literal:'Aerith Gainsborough')}, {'character': Value(literal:'Angeal Hewley')}, {'character': Value(literal:'Cloud Strife')}, {'character': Value(literal:'Genesis Rhapsodos')}, {'character': Value(literal:'Tifa Lockhart')}, {'character': Value(literal:'Zack Fair')}, {'character': Value(literal:'Sephiroth')}, {'character': Value(literal:'Barret Wallace')}, {'character': Value(literal:'Vincent Valentine')}, {'character': Value(literal:'Yuffie Kisaragi')}, {'character': Value(literal:'Cid Highwind')}, {'character': Value(literal:'Denzel')}, {'character': Value(literal:'Red XIII')}, {'character': Value(literal:'Olivia Benson')}, {'character': Value(literal:'Elliot Stabler')}, {'character': Value(literal:'John Munch')}, {'character': Value(literal:'Donald Cragen')}, {'character': Value(literal:'Alexandra Cabot (L&O: SVU)')}, {'character': Value(literal:'Casey Novak')}, {'character': Value(literal:'Finn Tutuola')}, {'character': Value(literal:'John Watson')}, {'character': Value(literal:'Sherlock Holmes')}, {'character': Value(literal:'Connor (Detroit: Become Human)')}, {'character': Value(literal:'CyberLife Tower Connor | RK800-60')}, {'character': Value(literal:'Upgraded Connor | RK900')}, {'character': Value(literal:'Abby Griffin')}, {'character': Value(literal:'Clarke Griffin')}, {'character': Value(literal:'Marcus Kane')}, {'character': Value(literal:'Kakyoin Noriaki')}, {'character': Value(literal:'Kujo Jotaro')}, {'character': Value(literal:'Mentions of DIO')}, {'character': Value(literal:'Slight appearance of Joseph Joestar')}, {'character': Value(literal:'Clark Kent')}, {'character': Value(literal:'Jonathan Kent')}, {'character': Value(literal:'Lana Lang')}, {'character': Value(literal:'Lois Lane')}, {'character': Value(literal:'Martha Kent')}, {'character': Value(literal:'Jor-El')}, {'character': Value(literal:'Chloe Sullivan')}, {'character': Value(literal:'Milton Fine')}, {'character': Value(literal:'Obi-Wan Kenobi')}, {'character': Value(literal:'Padmé Amidala')}, {'character': Value(literal:'(mentioned)')}, {'character': Value(literal:'Konnan (Professional Wrestling)')}, {'character': Value(literal:'Ricochet | Prince Puma')}, {'character': Value(literal:'Vampiro (Professional Wrestling)')}, {'character': Value(literal:'Wolverine')}, {'character': Value(literal:'Jade Leopard')}, {'character': Value(literal:'Silver Cheetah')}, {'character': Value(literal:'Castiel')}, {'character': Value(literal:'Dean Winchester')}, {'character': Value(literal:'Gabriel (Supernatural)')}, {'character': Value(literal:'Jack Kline')}, {'character': Value(literal:'Sam Winchester')}, {'character': Value(literal:'Balthazar (Supernatural)')}, {'character': Value(literal:'Eileen Leahy')}, {'character': Value(literal:'Amara (Supernatural)')}, {'character': Value(literal:'Bruce Banner')}, {'character': Value(literal:'Clint Barton')}, {'character': Value(literal:'James ""Bucky"" Barnes')}, {'character': Value(literal:'James ""Rhodey"" Rhodes')}, {'character': Value(literal:'Natasha Romanov (Marvel)')}, {'character': Value(literal:'Steve Rogers')}, {'character': Value(literal:'Thor (Marvel)')}, {'character': Value(literal:'Tony Stark')}, {'character': Value(literal:'James Patrick March')}, {'character': Value(literal:'Tristan Duffy')}, {'character': Value(literal:'Will Drake')}, {'character': Value(literal:'Jimmy Darling')}, {'character': Value(literal:'Dandy Mott')}, {'character': Value(literal:'Elsa Mars')}, {'character': Value(literal:'Gloria Mott')}, {'character': Value(literal:'Countess Elizabeth Johnson')}, {'character': Value(literal:'Liz Taylor (American Horror Story)')}, {'character': Value(literal:'Donovan (American Horror Story)')}, {'character': Value(literal:'Iris (American Horror Story)')}, {'character': Value(literal:'Finn Wittrock')}, {'character': Value(literal:'Sirius Black')}, {'character': Value(literal:'Fabian Prewett')}, {'character': Value(literal:'Josie Saltzman')}, {'character': Value(literal:'Rebekah Mikaelson')}, {'character': Value(literal:'Hope Mikaelson')}, {'character': Value(literal:'Lizzie Saltzman')}, {'character': Value(literal:'Caroline Forbes')}, {'character': Value(literal:'Perry White')}, {'character': Value(literal:'James ""Jimmy"" Olsen')}, {'character': Value(literal:'Aomine Daiki')}, {'character': Value(literal:'Kise Ryouta')}, {'character': Value(literal:'Kuroko Tetsuya')}, {'character': Value(literal:'Kagami Taiga')}, {'character': Value(literal:'Momoi Satsuki')}, {'character': Value(literal:'Kara Danvers')}, {'character': Value(literal:'Mon-El (Supergirl TV 2015)')}, {'character': Value(literal:'Winn Schott Jr.')}, {'character': Value(literal:'Leslie Willis')}, {'character': Value(literal:'Lar Gand (Supergirl TV 2015)')}, {'character': Value(literal:""Hank Henshaw | J'onn J'onzz"")}, {'character': Value(literal:'Eve Tessmacher')}, {'character': Value(literal:'Rhea Gand')}, {'character': Value(literal:'Klaus Hargreeves')}, {'character': Value(literal:'Diego Hargreeves')}, {'character': Value(literal:'Number Five | The Boy (Umbrella Academy)')}, {'character': Value(literal:'Allison Hargreeves')}, {'character': Value(literal:'Ben Hargreeves')}, {'character': Value(literal:'Luther Hargreeves')}, {'character': Value(literal:'Vanya Hargreeves')}, {'character': Value(literal:'Original Female Character')}, {'character': Value(literal:'Original Male Character')}, {'character': Value(literal:'AJ McLean')}, {'character': Value(literal:'Brian Littrell')}, {'character': Value(literal:'Howie Dorough')}, {'character': Value(literal:'Kevin Richardson')}, {'character': Value(literal:'Nick Carter')}, {'character': Value(literal:'Lauren Carter')}, {'character': Value(literal:'Kozume Kenma')}, {'character': Value(literal:'Kuroo Tetsurou')}, {'character': Value(literal:'Daishou Suguru')}, {'character': Value(literal:'Erwin Smith')}, {'character': Value(literal:'Hange Zoë')}, {'character': Value(literal:'Levi (Shingeki no Kyojin)')}, {'character': Value(literal:'Mike Zacharias')}, {'character': Value(literal:'Moblit Berner')}, {'character': Value(literal:'Oluo Bozado')}, {'character': Value(literal:'Petra Ral')}, {'character': Value(literal:'Nanaba (Shingeki no Kyojin)')}, {'character': Value(literal:'Zeke (Shingeki no Kyojin)')}, {'character': Value(literal:'Darius Zackly')}, {'character': Value(literal:'Dot Pixis')}, {'character': Value(literal:'104th Training Corps')}, {'character': Value(literal:'Gunther Schultz')}, {'character': Value(literal:'Survey Corps (Shingeki no Kyojin)')}, {'character': Value(literal:'Gelgar (Shingeki no Kyojin)')}]"	0	1	1
455	455	es	¿Qué personajes aparecen en A Hat For Alice?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT ?characters WHERE {  ?story golem:title ""A Hat For Alice"" . ?story golem:characters ?characters . }"	[{'characters': Value(literal:'Harry Potter')}, {'characters': Value(literal:'Luna Lovegood')}]	455	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Qué personajes aparecen en A Hat For Alice?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?character WHERE { 
?story golem:title ""A Hat For Alice"" . 
?story golem:characters ?character . 
}
"	[{'character': Value(literal:'Harry Potter')}, {'character': Value(literal:'Luna Lovegood')}]	0	1	1
456	456	es	¿Qué personajes aparecen en Echoes in the Glass?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT ?characters WHERE {  ?story golem:title ""Echoes in the Glass"" . ?story golem:characters ?characters . }"	"[{'characters': Value(literal:'Albus Dumbledore')}, {'characters': Value(literal:'Draco Malfoy')}, {'characters': Value(literal:'Harry Potter')}, {'characters': Value(literal:'Hermione Granger')}, {'characters': Value(literal:'Ron Weasley')}, {'characters': Value(literal:'Tom Riddle | Voldemort')}, {'characters': Value(literal:'Hedwig (Harry Potter)')}, {'characters': Value(literal:""Draco Malfoy's Owl"")}, {'characters': Value(literal:'Augustus Rookwood')}, {'characters': Value(literal:'Pius Thicknesse')}]"	456	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Qué personajes aparecen en Echoes in the Glass?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?character WHERE { 
  ?story golem:title ""Echoes in the Glass"" . 
  ?story golem:characters ?character . 
}
"	"[{'character': Value(literal:'Albus Dumbledore')}, {'character': Value(literal:'Draco Malfoy')}, {'character': Value(literal:'Harry Potter')}, {'character': Value(literal:'Hermione Granger')}, {'character': Value(literal:'Ron Weasley')}, {'character': Value(literal:'Tom Riddle | Voldemort')}, {'character': Value(literal:'Hedwig (Harry Potter)')}, {'character': Value(literal:""Draco Malfoy's Owl"")}, {'character': Value(literal:'Augustus Rookwood')}, {'character': Value(literal:'Pius Thicknesse')}]"	0	1	1
457	457	es	¿Qué personajes aparecen en And The Saints?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT ?characters WHERE {  ?story golem:title ""And The Saints"" . ?story golem:characters ?characters . }"	[{'characters': Value(literal:'Harry Potter')}, {'characters': Value(literal:'James Potter')}, {'characters': Value(literal:'Lily Evans Potter')}, {'characters': Value(literal:'Peter Pettigrew')}, {'characters': Value(literal:'Remus Lupin')}, {'characters': Value(literal:'Severus Snape')}, {'characters': Value(literal:'Sirius Black')}]	457	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Qué personajes aparecen en And The Saints?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?character WHERE { 
 ?story golem:title ""And The Saints"" . 
 ?story golem:characters ?character . 
}
"	[{'character': Value(literal:'Harry Potter')}, {'character': Value(literal:'James Potter')}, {'character': Value(literal:'Lily Evans Potter')}, {'character': Value(literal:'Peter Pettigrew')}, {'character': Value(literal:'Remus Lupin')}, {'character': Value(literal:'Severus Snape')}, {'character': Value(literal:'Sirius Black')}]	0	1	1
458	458	es	¿Qué personajes aparecen en The Strange Workings of The Riddle House?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT ?characters WHERE {  ?story golem:title ""The Strange Workings of The Riddle House"" . ?story golem:characters ?characters . }"	[{'characters': Value(literal:'Ginny Weasley')}, {'characters': Value(literal:'Harry Potter')}, {'characters': Value(literal:'Tom Riddle')}]	458	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Qué personajes aparecen en The Strange Workings of The Riddle House?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?character WHERE { 
    ?story golem:title ""The Strange Workings of The Riddle House"" . 
    ?story golem:characters ?character . 
}
"	[{'character': Value(literal:'Ginny Weasley')}, {'character': Value(literal:'Harry Potter')}, {'character': Value(literal:'Tom Riddle')}]	0	1	1
459	459	es	¿Qué personajes aparecen en Magician?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT ?characters WHERE {  ?story golem:title ""Magician"" . ?story golem:characters ?characters . }"	[{'characters': Value(literal:'Harry Potter')}, {'characters': Value(literal:'Harry Dresden')}, {'characters': Value(literal:'Johnny Marcone')}, {'characters': Value(literal:'Rashid the Gatekeeper')}, {'characters': Value(literal:'James Potter')}, {'characters': Value(literal:'Lily Evans Potter')}, {'characters': Value(literal:'Petunia Evans Dursley')}, {'characters': Value(literal:'Vernon Dursley')}, {'characters': Value(literal:'Marge Dursley')}, {'characters': Value(literal:'Original Female Character(s)')}, {'characters': Value(literal:'Lucifer Morningstar (Lucifer TV)')}, {'characters': Value(literal:'Chloe Decker')}, {'characters': Value(literal:'Trixie Decker')}, {'characters': Value(literal:'Taako (The Adventure Zone)')}, {'characters': Value(literal:'Kravitz (The Adventure Zone)')}]	459	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Qué personajes aparecen en Magician?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?character WHERE { 
  ?story golem:title ""Magician"" . 
  ?story golem:characters ?character . 
}
"	[{'character': Value(literal:'Harry Potter')}, {'character': Value(literal:'Harry Dresden')}, {'character': Value(literal:'Johnny Marcone')}, {'character': Value(literal:'Rashid the Gatekeeper')}, {'character': Value(literal:'James Potter')}, {'character': Value(literal:'Lily Evans Potter')}, {'character': Value(literal:'Petunia Evans Dursley')}, {'character': Value(literal:'Vernon Dursley')}, {'character': Value(literal:'Marge Dursley')}, {'character': Value(literal:'Original Female Character(s)')}, {'character': Value(literal:'Lucifer Morningstar (Lucifer TV)')}, {'character': Value(literal:'Chloe Decker')}, {'character': Value(literal:'Trixie Decker')}, {'character': Value(literal:'Taako (The Adventure Zone)')}, {'character': Value(literal:'Kravitz (The Adventure Zone)')}]	0	1	1
460	460	es	¿Qué personajes aparecen en If You Could Be Anywhere?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT ?characters WHERE {  ?story golem:title ""If You Could Be Anywhere"" . ?story golem:characters ?characters . }"	[{'characters': Value(literal:'Adrian Pucey')}, {'characters': Value(literal:'Albus Dumbledore')}, {'characters': Value(literal:'Blaise Zabini')}, {'characters': Value(literal:'Cassius Warrington')}, {'characters': Value(literal:'Draco Malfoy')}, {'characters': Value(literal:'Fred Weasley')}, {'characters': Value(literal:'George Weasley')}, {'characters': Value(literal:'Harry Potter')}, {'characters': Value(literal:'Hermione Granger')}, {'characters': Value(literal:'Neville Longbottom')}, {'characters': Value(literal:'Pansy Parkinson')}, {'characters': Value(literal:'Peter Pettigrew')}, {'characters': Value(literal:'Remus Lupin')}, {'characters': Value(literal:'Ron Weasley')}, {'characters': Value(literal:'Severus Snape')}, {'characters': Value(literal:'Sirius Black')}, {'characters': Value(literal:'Theodore Nott')}, {'characters': Value(literal:'Tom Riddle | Voldemort')}, {'characters': Value(literal:'Daphne Greengrass')}, {'characters': Value(literal:'Tracey Davis (Harry Potter)')}, {'characters': Value(literal:'Craig Roberts')}, {'characters': Value(literal:'Magdalene Roberts')}, {'characters': Value(literal:'Poppy Pomfrey')}, {'characters': Value(literal:'Reader')}, {'characters': Value(literal:'Severus Snape')}, {'characters': Value(literal:'Filius Flitwick')}, {'characters': Value(literal:'Pomona Sprout')}]	460	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Qué personajes aparecen en If You Could Be Anywhere?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/>  
SELECT DISTINCT ?character WHERE { 
    ?story golem:title ""If You Could Be Anywhere"" . 
    ?story golem:characters ?character . 
}
"	[{'character': Value(literal:'Adrian Pucey')}, {'character': Value(literal:'Albus Dumbledore')}, {'character': Value(literal:'Blaise Zabini')}, {'character': Value(literal:'Cassius Warrington')}, {'character': Value(literal:'Draco Malfoy')}, {'character': Value(literal:'Fred Weasley')}, {'character': Value(literal:'George Weasley')}, {'character': Value(literal:'Harry Potter')}, {'character': Value(literal:'Hermione Granger')}, {'character': Value(literal:'Neville Longbottom')}, {'character': Value(literal:'Pansy Parkinson')}, {'character': Value(literal:'Peter Pettigrew')}, {'character': Value(literal:'Remus Lupin')}, {'character': Value(literal:'Ron Weasley')}, {'character': Value(literal:'Severus Snape')}, {'character': Value(literal:'Sirius Black')}, {'character': Value(literal:'Theodore Nott')}, {'character': Value(literal:'Tom Riddle | Voldemort')}, {'character': Value(literal:'Daphne Greengrass')}, {'character': Value(literal:'Tracey Davis (Harry Potter)')}, {'character': Value(literal:'Craig Roberts')}, {'character': Value(literal:'Magdalene Roberts')}, {'character': Value(literal:'Poppy Pomfrey')}, {'character': Value(literal:'Reader')}, {'character': Value(literal:'Filius Flitwick')}, {'character': Value(literal:'Pomona Sprout')}]	0	1	1
461	461	es	¿Qué personajes aparecen en A Glimpse of Paradise?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT ?characters WHERE {  ?story golem:title ""A Glimpse of Paradise"" . ?story golem:characters ?characters . }"	[{'characters': Value(literal:'Harry Potter')}, {'characters': Value(literal:'Hermione Granger')}]	461	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Qué personajes aparecen en A Glimpse of Paradise?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?character WHERE { 
    ?story golem:title ""A Glimpse of Paradise"" . 
    ?story golem:characters ?character . 
}
"	[{'character': Value(literal:'Harry Potter')}, {'character': Value(literal:'Hermione Granger')}]	0	1	1
462	462	es	¿Qué personajes aparecen en Puffskein Hunt?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT ?characters WHERE {  ?story golem:title ""Puffskein Hunt"" . ?story golem:characters ?characters . }"	[{'characters': Value(literal:'Hermione Granger')}, {'characters': Value(literal:'Luna Lovegood')}]	462	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Qué personajes aparecen en Puffskein Hunt?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?character WHERE { 
?story golem:title ""Puffskein Hunt"" .
?story golem:characters ?character . 
}
"	[{'character': Value(literal:'Hermione Granger')}, {'character': Value(literal:'Luna Lovegood')}]	0	1	1
463	463	es	¿Qué personajes aparecen en Naruto of The Wizarding World?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT ?characters WHERE {  ?story golem:title ""Naruto of The Wizarding World"" . ?story golem:characters ?characters . }"	[{'characters': Value(literal:'Albus Dumbledore')}, {'characters': Value(literal:'Draco Malfoy')}, {'characters': Value(literal:'Ginny Weasley')}, {'characters': Value(literal:'Harry Potter')}, {'characters': Value(literal:'Hermione Granger')}, {'characters': Value(literal:'Minerva McGonagall')}, {'characters': Value(literal:'Ron Weasley')}, {'characters': Value(literal:'Sirius Black')}, {'characters': Value(literal:'Tom Riddle | Voldemort')}, {'characters': Value(literal:'Tsunade (Naruto)')}, {'characters': Value(literal:'Uzumaki Naruto')}, {'characters': Value(literal:'Kyuubi | Nine-tails | Kurama')}, {'characters': Value(literal:'Uzumaki Kushina')}, {'characters': Value(literal:'Delphi (Harry Potter)')}, {'characters': Value(literal:'Elizabeth Cooper')}]	463	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Qué personajes aparecen en Naruto of The Wizarding World?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?character WHERE { 
?story golem:fandom ""Naruto of The Wizarding World"" . 
?story golem:characters ?character . 
}
"	[]	0	0	1
465	465	es	¿A qué serie pertenece Save the last dance for me?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?series WHERE {  ?story golem:title ""Save the last dance for me"" . ?story golem:series ?series . }"	[{'series': Value(literal:'None')}, {'series': Value(literal:'Blood and Chocolate - YoI 2018 Valentine [2]')}, {'series': Value(literal:'Save the last dance for me [1]')}, {'series': Value(literal:'A life different than my own [4]')}, {'series': Value(literal:'30 Day OTP Challenge [19]')}]	465	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿A qué serie pertenece Save the last dance for me?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?series WHERE { 
  ?story golem:title ""Save the last dance for me"" . 
  ?story golem:series ?series . 
}
"	[{'series': Value(literal:'None')}, {'series': Value(literal:'Blood and Chocolate - YoI 2018 Valentine [2]')}, {'series': Value(literal:'Save the last dance for me [1]')}, {'series': Value(literal:'A life different than my own [4]')}, {'series': Value(literal:'30 Day OTP Challenge [19]')}]	1	0	0
466	466	es	¿A qué serie pertenece Puzzle Pieces?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?series WHERE {  ?story golem:title ""Puzzle Pieces"" . ?story golem:series ?series . }"	"[{'series': Value(literal:'What Went Unseen [1]')}, {'series': Value(literal:'None')}, {'series': Value(literal:'Harry Potter Short Stories : 2021 [55]')}, {'series': Value(literal:'Puzzle Peices [1]')}, {'series': Value(literal:'All The Ways Mandy Finds Out [11]')}, {'series': Value(literal:'Kismet [7]')}, {'series': Value(literal:'Alliance? I think you mean Family. [1]')}, {'series': Value(literal:'A/B/O Janus/Thomas/Roman/Emile/Remy [7]')}, {'series': Value(literal:'Playing Games [1]')}, {'series': Value(literal:'Puzzle Pieces [1]')}, {'series': Value(literal:""can't let you go, your hand prints on my soul [4]"")}, {'series': Value(literal:'Tumblr Prompts [3]')}, {'series': Value(literal:'Fun and Games [2]')}, {'series': Value(literal:'Puzzle Pieces [12]')}, {'series': Value(literal:'SoRiku Week 2018 [2]')}, {'series': Value(literal:'120 Drabble Challenge [15]')}, {'series': Value(literal:'Behind Closed Doors [1]')}, {'series': Value(literal:'Modern Magic [12]')}, {'series': Value(literal:'The Game is Set [2]')}, {'series': Value(literal:'My Name is Blue [11]')}, {'series': Value(literal:'Batter redemption AU [2]')}, {'series': Value(literal:'i am gonna make a name for this someday [1]')}, {'series': Value(literal:'Redemption AU [9]')}, {'series': Value(literal:'Writers Month 2019 Prompts [29]')}, {'series': Value(literal:'Community Drabbles [10]')}, {'series': Value(literal:'Whumptober 2021 [6]')}, {'series': Value(literal:'just keep stumbling forward (baby im waiting for you) [17]')}, {'series': Value(literal:'Jon/Gerry/Martin get what they deserve (nice things) [2]')}, {'series': Value(literal:'Hell Recovery Verse [9]')}, {'series': Value(literal:'Fragments [2]')}, {'series': Value(literal:'Femslash February 2021 [4]')}, {'series': Value(literal:'butterflies and warning signs [2]')}, {'series': Value(literal:'Merlin fics [2]')}, {'series': Value(literal:'The Many Caregivers of Malcolm Bright [4]')}, {'series': Value(literal:'Female Kylo Ren [2]')}, {'series': Value(literal:'100 Prompts with different Series [1]')}, {'series': Value(literal:'Cow!Cas [2]')}, {'series': Value(literal:'Sterek Ficlets [9]')}, {'series': Value(literal:'A Long Hard Road [2]')}, {'series': Value(literal:'Mafia in the Evening SKZ [2]')}, {'series': Value(literal:'Little Skz Adventures! [80]')}, {'series': Value(literal:'no pants petition [5]')}, {'series': Value(literal:'Catching The Rainbow [3]')}, {'series': Value(literal:'December Prompts [30]')}, {'series': Value(literal:'All Fall Together [2]')}, {'series': Value(literal:'Love Is Everything To Me [4]')}, {'series': Value(literal:'This Spideyfam Has Two Dads [6]')}, {'series': Value(literal:'Black Raven Beginnings [1]')}, {'series': Value(literal:'No Big Deal [4]')}, {'series': Value(literal:'2021 - A Year of Prompts [363]')}, {'series': Value(literal:'HitsuKarin Week 2022 [2]')}, {'series': Value(literal:""Miami 'Verse [2]"")}, {'series': Value(literal:'Origins [9]')}, {'series': Value(literal:'Truths & Lies [1]')}, {'series': Value(literal:'A Beautiful, Unconventional Love [1]')}, {'series': Value(literal:'Chair Lift Fanfiction [3]')}, {'series': Value(literal:'the x-files romcom cinematic universe [3]')}, {'series': Value(literal:'all together now [2]')}, {'series': Value(literal:'Harringrove Tumblr Stories [86]')}, {'series': Value(literal:'The Sunday Paper [1]')}]"	466	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿A qué serie pertenece Puzzle Pieces?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/>  
SELECT DISTINCT ?series WHERE { 
?story golem:title ""Puzzle Pieces"" . 
?story golem:series ?series . 
}
"	"[{'series': Value(literal:'What Went Unseen [1]')}, {'series': Value(literal:'None')}, {'series': Value(literal:'Harry Potter Short Stories : 2021 [55]')}, {'series': Value(literal:'Puzzle Peices [1]')}, {'series': Value(literal:'All The Ways Mandy Finds Out [11]')}, {'series': Value(literal:'Kismet [7]')}, {'series': Value(literal:'Alliance? I think you mean Family. [1]')}, {'series': Value(literal:'A/B/O Janus/Thomas/Roman/Emile/Remy [7]')}, {'series': Value(literal:'Playing Games [1]')}, {'series': Value(literal:'Puzzle Pieces [1]')}, {'series': Value(literal:""can't let you go, your hand prints on my soul [4]"")}, {'series': Value(literal:'Tumblr Prompts [3]')}, {'series': Value(literal:'Fun and Games [2]')}, {'series': Value(literal:'Puzzle Pieces [12]')}, {'series': Value(literal:'SoRiku Week 2018 [2]')}, {'series': Value(literal:'120 Drabble Challenge [15]')}, {'series': Value(literal:'Behind Closed Doors [1]')}, {'series': Value(literal:'Modern Magic [12]')}, {'series': Value(literal:'The Game is Set [2]')}, {'series': Value(literal:'My Name is Blue [11]')}, {'series': Value(literal:'Batter redemption AU [2]')}, {'series': Value(literal:'i am gonna make a name for this someday [1]')}, {'series': Value(literal:'Redemption AU [9]')}, {'series': Value(literal:'Writers Month 2019 Prompts [29]')}, {'series': Value(literal:'Community Drabbles [10]')}, {'series': Value(literal:'Whumptober 2021 [6]')}, {'series': Value(literal:'just keep stumbling forward (baby im waiting for you) [17]')}, {'series': Value(literal:'Jon/Gerry/Martin get what they deserve (nice things) [2]')}, {'series': Value(literal:'Hell Recovery Verse [9]')}, {'series': Value(literal:'Fragments [2]')}, {'series': Value(literal:'Femslash February 2021 [4]')}, {'series': Value(literal:'butterflies and warning signs [2]')}, {'series': Value(literal:'Merlin fics [2]')}, {'series': Value(literal:'The Many Caregivers of Malcolm Bright [4]')}, {'series': Value(literal:'Female Kylo Ren [2]')}, {'series': Value(literal:'100 Prompts with different Series [1]')}, {'series': Value(literal:'Cow!Cas [2]')}, {'series': Value(literal:'Sterek Ficlets [9]')}, {'series': Value(literal:'A Long Hard Road [2]')}, {'series': Value(literal:'Mafia in the Evening SKZ [2]')}, {'series': Value(literal:'Little Skz Adventures! [80]')}, {'series': Value(literal:'no pants petition [5]')}, {'series': Value(literal:'Catching The Rainbow [3]')}, {'series': Value(literal:'December Prompts [30]')}, {'series': Value(literal:'All Fall Together [2]')}, {'series': Value(literal:'Love Is Everything To Me [4]')}, {'series': Value(literal:'This Spideyfam Has Two Dads [6]')}, {'series': Value(literal:'Black Raven Beginnings [1]')}, {'series': Value(literal:'No Big Deal [4]')}, {'series': Value(literal:'2021 - A Year of Prompts [363]')}, {'series': Value(literal:'HitsuKarin Week 2022 [2]')}, {'series': Value(literal:""Miami 'Verse [2]"")}, {'series': Value(literal:'Origins [9]')}, {'series': Value(literal:'Truths & Lies [1]')}, {'series': Value(literal:'A Beautiful, Unconventional Love [1]')}, {'series': Value(literal:'Chair Lift Fanfiction [3]')}, {'series': Value(literal:'the x-files romcom cinematic universe [3]')}, {'series': Value(literal:'all together now [2]')}, {'series': Value(literal:'Harringrove Tumblr Stories [86]')}, {'series': Value(literal:'The Sunday Paper [1]')}]"	1	0	0
467	467	es	¿A qué serie pertenece World Gone Mad?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?series WHERE {  ?story golem:title ""World Gone Mad"" . ?story golem:series ?series . }"	[{'series': Value(literal:'None')}, {'series': Value(literal:'Everything from tumblr prompts to Coda’s to lil drabbles [2]')}]	467	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿A qué serie pertenece World Gone Mad?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?series WHERE { 
?story golem:title ""World Gone Mad"" . 
?story golem:series ?series . 
}
"	[{'series': Value(literal:'None')}, {'series': Value(literal:'Everything from tumblr prompts to Coda’s to lil drabbles [2]')}]	1	0	0
468	468	es	¿A qué serie pertenece Lucid Dreaming?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?series WHERE {  ?story golem:title ""Lucid Dreaming"" . ?story golem:series ?series . }"	"[{'series': Value(literal:'Nocturnal Wanderings [2]')}, {'series': Value(literal:'None')}, {'series': Value(literal:'oldies & discontinued [2]')}, {'series': Value(literal:""inkst0rm's OC Stories [2]"")}, {'series': Value(literal:""Ink Your Name 'verse [2]"")}, {'series': Value(literal:'Violaceous Fury [15]')}, {'series': Value(literal:'Altered States [1]')}, {'series': Value(literal:'Sleeping [6]')}, {'series': Value(literal:'The Soul Bond Series [1]')}]"	468	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿A qué serie pertenece Lucid Dreaming?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/>  
SELECT DISTINCT ?series WHERE { 
?story golem:title ""Lucid Dreaming"" . 
?story golem:series ?series . 
}
"	"[{'series': Value(literal:'Nocturnal Wanderings [2]')}, {'series': Value(literal:'None')}, {'series': Value(literal:'oldies & discontinued [2]')}, {'series': Value(literal:""inkst0rm's OC Stories [2]"")}, {'series': Value(literal:""Ink Your Name 'verse [2]"")}, {'series': Value(literal:'Violaceous Fury [15]')}, {'series': Value(literal:'Altered States [1]')}, {'series': Value(literal:'Sleeping [6]')}, {'series': Value(literal:'The Soul Bond Series [1]')}]"	1	0	0
469	469	es	¿A qué serie pertenece Werewolves of the World, Unite!?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?series WHERE {  ?story golem:title ""Werewolves of the World, Unite!"" . ?story golem:series ?series . }"	[{'series': Value(literal:'None')}]	469	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿A qué serie pertenece Werewolves of the World, Unite!?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?series WHERE { 
  ?story golem:title ""Werewolves of the World, Unite!"" . 
  ?story golem:series ?series . 
}
"	[{'series': Value(literal:'None')}]	1	0	0
470	470	es	¿A qué serie pertenece Strumpet?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?series WHERE {  ?story golem:title ""Strumpet"" . ?story golem:series ?series . }"	[{'series': Value(literal:'Nefarious [2]')}]	470	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿A qué serie pertenece Strumpet?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?series WHERE { 
  ?story golem:title ""Strumpet"" . 
  ?story golem:series ?series . 
}
"	[{'series': Value(literal:'Nefarious [2]')}]	1	0	0
471	471	es	¿A qué serie pertenece The Creature You Know?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?series WHERE {  ?story golem:title ""The Creature You Know"" . ?story golem:series ?series . }"	[{'series': Value(literal:'None')}]	471	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿A qué serie pertenece The Creature You Know?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?series WHERE { 
  ?story golem:title ""The Creature You Know"" . 
  ?story golem:series ?series . 
}
"	[{'series': Value(literal:'None')}]	1	0	0
472	472	es	¿A qué serie pertenece Life As We Know It?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?series WHERE {  ?story golem:title ""Life As We Know It"" . ?story golem:series ?series . }"	[{'series': Value(literal:'None')}, {'series': Value(literal:'Death Is Not The End [2]')}, {'series': Value(literal:'Life as We Know It / Keep on Keeping on [1]')}, {'series': Value(literal:'Arcane Alternate Endings [2]')}, {'series': Value(literal:'New Beginnings series [2]')}, {'series': Value(literal:'Kakasaku Week 2016 [5]')}, {'series': Value(literal:'Psychos In Love [10]')}, {'series': Value(literal:'Urban Decay [2]')}, {'series': Value(literal:'Life [1]')}, {'series': Value(literal:'Life As We Know It [1]')}, {'series': Value(literal:'Friends Forever [3]')}]	472	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿A qué serie pertenece Life As We Know It?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?series WHERE { 
  ?story golem:title ""Life As We Know It"" . 
  ?story golem:series ?series . 
}
"	[{'series': Value(literal:'None')}, {'series': Value(literal:'Death Is Not The End [2]')}, {'series': Value(literal:'Life as We Know It / Keep on Keeping on [1]')}, {'series': Value(literal:'Arcane Alternate Endings [2]')}, {'series': Value(literal:'New Beginnings series [2]')}, {'series': Value(literal:'Kakasaku Week 2016 [5]')}, {'series': Value(literal:'Psychos In Love [10]')}, {'series': Value(literal:'Urban Decay [2]')}, {'series': Value(literal:'Life [1]')}, {'series': Value(literal:'Life As We Know It [1]')}, {'series': Value(literal:'Friends Forever [3]')}]	1	0	0
473	473	es	¿A qué serie pertenece Moonrise?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?series WHERE {  ?story golem:title ""Moonrise"" . ?story golem:series ?series . }"	"[{'series': Value(literal:'Moonrise [1]')}, {'series': Value(literal:'None')}, {'series': Value(literal:'Izuku and company... [1]')}, {'series': Value(literal:'Prompts and Challenges [8]')}, {'series': Value(literal:'Voyager Drabbles [4]')}, {'series': Value(literal:'Nothing Emboldens Sin So Much As Mercy [4]')}, {'series': Value(literal:'(Archived) When The Sun Loved The Moon [1]')}, {'series': Value(literal:'a little death [5]')}, {'series': Value(literal:'The Legend of the Cursed Vaults [1]')}, {'series': Value(literal:""The Moon's Attachment [2]"")}, {'series': Value(literal:'Archaic [2]')}, {'series': Value(literal:'Adjoining: a Sentinel Carrierverse Series [1]')}, {'series': Value(literal:'At the Heart of It All [2]')}, {'series': Value(literal:'The Phoenix and the Dragon [7]')}, {'series': Value(literal:'Natsume Yuujinchou Week 2016 [6]')}, {'series': Value(literal:'Donuts in My Bra and Other Stories [11]')}, {'series': Value(literal:'Moonrise [3]')}, {'series': Value(literal:'Mikazuki 三日月 [1]')}, {'series': Value(literal:'Drenched in Moonlight [2]')}, {'series': Value(literal:'Wisdom of the Evening Star [8]')}, {'series': Value(literal:'Sex and Feelings [1]')}]"	473	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿A qué serie pertenece Moonrise?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?series WHERE { 
?story golem:title ""Moonrise"" . 
?story golem:series ?series . 
}
"	"[{'series': Value(literal:'Moonrise [1]')}, {'series': Value(literal:'None')}, {'series': Value(literal:'Izuku and company... [1]')}, {'series': Value(literal:'Prompts and Challenges [8]')}, {'series': Value(literal:'Voyager Drabbles [4]')}, {'series': Value(literal:'Nothing Emboldens Sin So Much As Mercy [4]')}, {'series': Value(literal:'(Archived) When The Sun Loved The Moon [1]')}, {'series': Value(literal:'a little death [5]')}, {'series': Value(literal:'The Legend of the Cursed Vaults [1]')}, {'series': Value(literal:""The Moon's Attachment [2]"")}, {'series': Value(literal:'Archaic [2]')}, {'series': Value(literal:'Adjoining: a Sentinel Carrierverse Series [1]')}, {'series': Value(literal:'At the Heart of It All [2]')}, {'series': Value(literal:'The Phoenix and the Dragon [7]')}, {'series': Value(literal:'Natsume Yuujinchou Week 2016 [6]')}, {'series': Value(literal:'Donuts in My Bra and Other Stories [11]')}, {'series': Value(literal:'Moonrise [3]')}, {'series': Value(literal:'Mikazuki 三日月 [1]')}, {'series': Value(literal:'Drenched in Moonlight [2]')}, {'series': Value(literal:'Wisdom of the Evening Star [8]')}, {'series': Value(literal:'Sex and Feelings [1]')}]"	1	0	0
474	474	es	¿A qué serie pertenece Slytherins Don't Do Valentine's Day?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?series WHERE {  ?story golem:title ""Slytherins Don't Do Valentine's Day"" . ?story golem:series ?series . }"	[{'series': Value(literal:'The Night Rounds of Snape & McGonagall [3]')}]	474	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿A qué serie pertenece Slytherins Don't Do Valentine's Day?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?series WHERE { 
  ?story golem:title ""Slytherins Don't Do Valentine's Day"" . 
  ?story golem:series ?series . 
}
"	[{'series': Value(literal:'The Night Rounds of Snape & McGonagall [3]')}]	1	0	0
477	477	es	¿Cuántos Kudos recibió The prey of the golden eyed Hawk?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?kudos WHERE {  ?story golem:title ""The prey of the golden eyed Hawk"" . ?story golem:numberOfKudos ?kudos . }"	[{'kudos': Value(typed-literal:'61')}]	477	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Cuántos Kudos recibió The prey of the golden eyed Hawk?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?kudos WHERE { 
?story golem:title ""The prey of the golden eyed Hawk"" . 
?story golem:numberOfKudos ?kudos . 
}
"	[{'kudos': Value(typed-literal:'61')}]	1	0	0
478	478	es	¿Cuántos Kudos recibió How Harry Became Reborn?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?kudos WHERE {  ?story golem:title ""How Harry Became Reborn"" . ?story golem:numberOfKudos ?kudos . }"	[{'kudos': Value(typed-literal:'521')}]	478	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Cuántos Kudos recibió How Harry Became Reborn?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?kudos WHERE { 
  ?story golem:title ""How Harry Became Reborn"" . 
  ?story golem:numberOfKudos ?kudos . 
}
"	[{'kudos': Value(typed-literal:'521')}]	1	0	0
479	479	es	¿Cuántos Kudos recibió My Sweet Vampire?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?kudos WHERE {  ?story golem:title ""My Sweet Vampire"" . ?story golem:numberOfKudos ?kudos . }"	[{'kudos': Value(typed-literal:'42')}, {'kudos': Value(typed-literal:'24')}]	479	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Cuántos Kudos recibió My Sweet Vampire?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/>  
SELECT DISTINCT ?kudos WHERE { 
?story golem:title ""My Sweet Vampire"" . 
?story golem:numberOfKudos ?kudos . 
}
"	[{'kudos': Value(typed-literal:'42')}, {'kudos': Value(typed-literal:'24')}]	1	0	0
480	480	es	¿Cuántos Kudos recibió A Cauldron Full of Hot, Strong Love?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?kudos WHERE {  ?story golem:title ""A Cauldron Full of Hot, Strong Love"" . ?story golem:numberOfKudos ?kudos . }"	[{'kudos': Value(typed-literal:'55')}, {'kudos': Value(literal:'None')}, {'kudos': Value(typed-literal:'16')}, {'kudos': Value(typed-literal:'30')}, {'kudos': Value(typed-literal:'13')}]	480	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Cuántos Kudos recibió A Cauldron Full of Hot, Strong Love?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?kudos WHERE { 
?story golem:title ""A Cauldron Full of Hot, Strong Love"" . 
?story golem:numberOfKudos ?kudos . }
"	[{'kudos': Value(typed-literal:'55')}, {'kudos': Value(literal:'None')}, {'kudos': Value(typed-literal:'16')}, {'kudos': Value(typed-literal:'30')}, {'kudos': Value(typed-literal:'13')}]	1	0	0
481	481	es	¿Cuántos Kudos recibió I Hate You And I Hope You Know That.?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?kudos WHERE {  ?story golem:title ""I Hate You And I Hope You Know That."" . ?story golem:numberOfKudos ?kudos . }"	[{'kudos': Value(typed-literal:'64')}]	481	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Cuántos Kudos recibió I Hate You And I Hope You Know That.?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?kudos WHERE { 
?story golem:title ""I Hate You And I Hope You Know That."" . 
?story golem:numberOfKudos ?kudos . 
}
"	[{'kudos': Value(typed-literal:'64')}]	1	0	0
482	482	es	¿Cuántos Kudos recibió Of spring and treacle tarts?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?kudos WHERE {  ?story golem:title ""Of spring and treacle tarts"" . ?story golem:numberOfKudos ?kudos . }"	[{'kudos': Value(typed-literal:'78')}]	482	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Cuántos Kudos recibió Of spring and treacle tarts?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?kudos WHERE { 
?story golem:title ""Of spring and treacle tarts"" . 
?story golem:numberOfKudos ?kudos . }
"	[{'kudos': Value(typed-literal:'78')}]	1	0	0
483	483	es	¿Cuántos Kudos recibió If only, if only?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?kudos WHERE {  ?story golem:title ""If only, if only"" . ?story golem:numberOfKudos ?kudos . }"	[{'kudos': Value(typed-literal:'12')}, {'kudos': Value(typed-literal:'247')}, {'kudos': Value(typed-literal:'18')}]	483	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Cuántos Kudos recibió If only, if only?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?kudos WHERE { 
?story golem:title ""If only, if only"" . 
?story golem:numberOfKudos ?kudos . 
}
"	[{'kudos': Value(typed-literal:'12')}, {'kudos': Value(typed-literal:'247')}, {'kudos': Value(typed-literal:'18')}]	1	0	0
484	484	es	¿Cuántos Kudos recibió Coffee Shop?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?kudos WHERE {  ?story golem:title ""Coffee Shop"" . ?story golem:numberOfKudos ?kudos . }"	[{'kudos': Value(typed-literal:'300')}, {'kudos': Value(typed-literal:'28')}, {'kudos': Value(typed-literal:'101')}, {'kudos': Value(typed-literal:'4')}, {'kudos': Value(typed-literal:'110')}, {'kudos': Value(typed-literal:'49')}, {'kudos': Value(typed-literal:'92')}, {'kudos': Value(typed-literal:'13')}, {'kudos': Value(typed-literal:'5')}, {'kudos': Value(literal:'None')}, {'kudos': Value(typed-literal:'25')}, {'kudos': Value(typed-literal:'21')}, {'kudos': Value(typed-literal:'30')}, {'kudos': Value(typed-literal:'22')}, {'kudos': Value(typed-literal:'10')}, {'kudos': Value(typed-literal:'3')}, {'kudos': Value(typed-literal:'18')}, {'kudos': Value(typed-literal:'321')}, {'kudos': Value(typed-literal:'65')}, {'kudos': Value(typed-literal:'42')}, {'kudos': Value(typed-literal:'48')}, {'kudos': Value(typed-literal:'14')}, {'kudos': Value(typed-literal:'34')}, {'kudos': Value(typed-literal:'51')}, {'kudos': Value(typed-literal:'8')}, {'kudos': Value(typed-literal:'38')}, {'kudos': Value(typed-literal:'1375')}, {'kudos': Value(typed-literal:'1')}, {'kudos': Value(typed-literal:'104')}, {'kudos': Value(typed-literal:'106')}, {'kudos': Value(typed-literal:'47')}, {'kudos': Value(typed-literal:'11')}, {'kudos': Value(typed-literal:'7')}, {'kudos': Value(typed-literal:'40')}, {'kudos': Value(typed-literal:'31')}, {'kudos': Value(typed-literal:'19')}, {'kudos': Value(typed-literal:'1126')}, {'kudos': Value(typed-literal:'130')}, {'kudos': Value(typed-literal:'24')}, {'kudos': Value(typed-literal:'79')}, {'kudos': Value(typed-literal:'105')}, {'kudos': Value(typed-literal:'112')}, {'kudos': Value(typed-literal:'6')}, {'kudos': Value(typed-literal:'36')}, {'kudos': Value(typed-literal:'85')}, {'kudos': Value(typed-literal:'74')}, {'kudos': Value(typed-literal:'41')}, {'kudos': Value(typed-literal:'142')}, {'kudos': Value(typed-literal:'15')}, {'kudos': Value(typed-literal:'16')}, {'kudos': Value(typed-literal:'57')}, {'kudos': Value(typed-literal:'77')}, {'kudos': Value(typed-literal:'26')}, {'kudos': Value(typed-literal:'2')}, {'kudos': Value(typed-literal:'78')}, {'kudos': Value(typed-literal:'480')}, {'kudos': Value(typed-literal:'71')}, {'kudos': Value(typed-literal:'72')}, {'kudos': Value(typed-literal:'60')}, {'kudos': Value(typed-literal:'70')}, {'kudos': Value(typed-literal:'67')}, {'kudos': Value(typed-literal:'204')}, {'kudos': Value(typed-literal:'9')}, {'kudos': Value(typed-literal:'478')}, {'kudos': Value(typed-literal:'119')}, {'kudos': Value(typed-literal:'56')}, {'kudos': Value(typed-literal:'157')}, {'kudos': Value(typed-literal:'232')}, {'kudos': Value(typed-literal:'86')}, {'kudos': Value(typed-literal:'402')}, {'kudos': Value(typed-literal:'45')}, {'kudos': Value(typed-literal:'180')}, {'kudos': Value(typed-literal:'155')}, {'kudos': Value(typed-literal:'50')}, {'kudos': Value(typed-literal:'307')}, {'kudos': Value(typed-literal:'497')}, {'kudos': Value(typed-literal:'89')}, {'kudos': Value(typed-literal:'162')}, {'kudos': Value(typed-literal:'100')}, {'kudos': Value(typed-literal:'29')}, {'kudos': Value(typed-literal:'61')}, {'kudos': Value(typed-literal:'12')}, {'kudos': Value(typed-literal:'17')}]	484	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Cuántos Kudos recibió Coffee Shop?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?kudos WHERE { 
?story golem:title ""Coffee Shop"" . 
?story golem:numberOfKudos ?kudos . 
}
"	[{'kudos': Value(typed-literal:'300')}, {'kudos': Value(typed-literal:'28')}, {'kudos': Value(typed-literal:'101')}, {'kudos': Value(typed-literal:'4')}, {'kudos': Value(typed-literal:'110')}, {'kudos': Value(typed-literal:'49')}, {'kudos': Value(typed-literal:'92')}, {'kudos': Value(typed-literal:'13')}, {'kudos': Value(typed-literal:'5')}, {'kudos': Value(literal:'None')}, {'kudos': Value(typed-literal:'25')}, {'kudos': Value(typed-literal:'21')}, {'kudos': Value(typed-literal:'30')}, {'kudos': Value(typed-literal:'22')}, {'kudos': Value(typed-literal:'10')}, {'kudos': Value(typed-literal:'3')}, {'kudos': Value(typed-literal:'18')}, {'kudos': Value(typed-literal:'321')}, {'kudos': Value(typed-literal:'65')}, {'kudos': Value(typed-literal:'42')}, {'kudos': Value(typed-literal:'48')}, {'kudos': Value(typed-literal:'14')}, {'kudos': Value(typed-literal:'34')}, {'kudos': Value(typed-literal:'51')}, {'kudos': Value(typed-literal:'8')}, {'kudos': Value(typed-literal:'38')}, {'kudos': Value(typed-literal:'1375')}, {'kudos': Value(typed-literal:'1')}, {'kudos': Value(typed-literal:'104')}, {'kudos': Value(typed-literal:'106')}, {'kudos': Value(typed-literal:'47')}, {'kudos': Value(typed-literal:'11')}, {'kudos': Value(typed-literal:'7')}, {'kudos': Value(typed-literal:'40')}, {'kudos': Value(typed-literal:'31')}, {'kudos': Value(typed-literal:'19')}, {'kudos': Value(typed-literal:'1126')}, {'kudos': Value(typed-literal:'130')}, {'kudos': Value(typed-literal:'24')}, {'kudos': Value(typed-literal:'79')}, {'kudos': Value(typed-literal:'105')}, {'kudos': Value(typed-literal:'112')}, {'kudos': Value(typed-literal:'6')}, {'kudos': Value(typed-literal:'36')}, {'kudos': Value(typed-literal:'85')}, {'kudos': Value(typed-literal:'74')}, {'kudos': Value(typed-literal:'41')}, {'kudos': Value(typed-literal:'142')}, {'kudos': Value(typed-literal:'15')}, {'kudos': Value(typed-literal:'16')}, {'kudos': Value(typed-literal:'57')}, {'kudos': Value(typed-literal:'77')}, {'kudos': Value(typed-literal:'26')}, {'kudos': Value(typed-literal:'2')}, {'kudos': Value(typed-literal:'78')}, {'kudos': Value(typed-literal:'480')}, {'kudos': Value(typed-literal:'71')}, {'kudos': Value(typed-literal:'72')}, {'kudos': Value(typed-literal:'60')}, {'kudos': Value(typed-literal:'70')}, {'kudos': Value(typed-literal:'67')}, {'kudos': Value(typed-literal:'204')}, {'kudos': Value(typed-literal:'9')}, {'kudos': Value(typed-literal:'478')}, {'kudos': Value(typed-literal:'119')}, {'kudos': Value(typed-literal:'56')}, {'kudos': Value(typed-literal:'157')}, {'kudos': Value(typed-literal:'232')}, {'kudos': Value(typed-literal:'86')}, {'kudos': Value(typed-literal:'402')}, {'kudos': Value(typed-literal:'45')}, {'kudos': Value(typed-literal:'180')}, {'kudos': Value(typed-literal:'155')}, {'kudos': Value(typed-literal:'50')}, {'kudos': Value(typed-literal:'307')}, {'kudos': Value(typed-literal:'497')}, {'kudos': Value(typed-literal:'89')}, {'kudos': Value(typed-literal:'162')}, {'kudos': Value(typed-literal:'100')}, {'kudos': Value(typed-literal:'29')}, {'kudos': Value(typed-literal:'61')}, {'kudos': Value(typed-literal:'12')}, {'kudos': Value(typed-literal:'17')}]	1	0	0
485	485	es	¿Cuántos Kudos recibió Relationship Manifesto?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?kudos WHERE {  ?story golem:title ""Relationship Manifesto"" . ?story golem:numberOfKudos ?kudos . }"	[{'kudos': Value(typed-literal:'130')}]	485	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Cuántos Kudos recibió Relationship Manifesto?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?kudos WHERE { 
?story golem:title ""Relationship Manifesto"" . 
?story golem:numberOfKudos ?kudos . 
}
"	[{'kudos': Value(typed-literal:'130')}]	1	0	0
486	486	es	¿Cuántos Kudos recibió I'll be your chaperone?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?kudos WHERE {  ?story golem:title ""I'll be your chaperone"" . ?story golem:numberOfKudos ?kudos . }"	[{'kudos': Value(typed-literal:'185')}]	486	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Cuántos Kudos recibió I'll be your chaperone?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?kudos WHERE { 
  ?story golem:title ""I'll be your chaperone"" . 
  ?story golem:numberOfKudos ?kudos . 
}
"	[{'kudos': Value(typed-literal:'185')}]	1	0	0
488	488	es	¿Dónde está publicada nights we belong to?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?publisher WHERE {  ?story golem:title ""nights we belong to"" . ?story golem:publisher ?publisher . }"	[{'publisher': Value(literal:'archiveofourown.org')}]	488	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Dónde está publicada nights we belong to?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?publisher WHERE { 
  ?story golem:title ""nights we belong to"" . 
  ?story golem:publisher ?publisher . 
}
"	[{'publisher': Value(literal:'archiveofourown.org')}]	1	0	0
489	489	es	¿Dónde está publicada Vertigo?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?publisher WHERE {  ?story golem:title ""Vertigo"" . ?story golem:publisher ?publisher . }"	[{'publisher': Value(literal:'archiveofourown.org')}]	489	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Dónde está publicada Vertigo?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?publisher WHERE { 
?story golem:title ""Vertigo"" . 
?story golem:publisher ?publisher . 
}
"	[{'publisher': Value(literal:'archiveofourown.org')}]	1	0	0
490	490	es	¿Dónde está publicada Getting To Know You?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?publisher WHERE {  ?story golem:title ""Getting To Know You"" . ?story golem:publisher ?publisher . }"	[{'publisher': Value(literal:'archiveofourown.org')}]	490	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Dónde está publicada Getting To Know You?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?publisher WHERE { 
  ?story golem:title ""Getting To Know You"" . 
  ?story golem:publisher ?publisher . 
}
"	[{'publisher': Value(literal:'archiveofourown.org')}]	1	0	0
491	491	es	¿Dónde está publicada Content to Stay Forever Locked in His Embrace?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?publisher WHERE {  ?story golem:title ""Content to Stay Forever Locked in His Embrace"" . ?story golem:publisher ?publisher . }"	[{'publisher': Value(literal:'archiveofourown.org')}]	491	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Dónde está publicada Content to Stay Forever Locked in His Embrace?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?publisher WHERE { 
?story golem:title ""Content to Stay Forever Locked in His Embrace"" . 
?story golem:publisher ?publisher . 
}
"	[{'publisher': Value(literal:'archiveofourown.org')}]	1	0	0
492	492	es	¿Dónde está publicada In The Dark?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?publisher WHERE {  ?story golem:title ""In The Dark"" . ?story golem:publisher ?publisher . }"	[{'publisher': Value(literal:'archiveofourown.org')}]	492	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Dónde está publicada In The Dark?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?publisher WHERE { 
  ?story golem:title ""In The Dark"" . 
  ?story golem:publisher ?publisher . 
}
"	[{'publisher': Value(literal:'archiveofourown.org')}]	1	0	0
493	493	es	¿Dónde está publicada Virus?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?publisher WHERE {  ?story golem:title ""Virus"" . ?story golem:publisher ?publisher . }"	[{'publisher': Value(literal:'archiveofourown.org')}]	493	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Dónde está publicada Virus?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/>  
SELECT DISTINCT ?publisher WHERE { 
?story golem:title ""Virus"" . 
?story golem:publisher ?publisher . 
}
"	[{'publisher': Value(literal:'archiveofourown.org')}]	1	0	0
494	494	es	¿Dónde está publicada Of Mice and Men?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?publisher WHERE {  ?story golem:title ""Of Mice and Men"" . ?story golem:publisher ?publisher . }"	[{'publisher': Value(literal:'archiveofourown.org')}]	494	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Dónde está publicada Of Mice and Men?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?publisher WHERE { 
?story golem:title ""Of Mice and Men"" . 
?story golem:publisher ?publisher . 
}
"	[{'publisher': Value(literal:'archiveofourown.org')}]	1	0	0
495	495	es	¿Dónde está publicada Lucky You?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?publisher WHERE {  ?story golem:title ""Lucky You"" . ?story golem:publisher ?publisher . }"	[{'publisher': Value(literal:'archiveofourown.org')}]	495	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Dónde está publicada Lucky You?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/>  
SELECT DISTINCT ?publisher WHERE { 
?story golem:title ""Lucky You"" . 
?story golem:publisher ?publisher . 
}
"	[{'publisher': Value(literal:'archiveofourown.org')}]	1	0	0
496	496	es	¿Dónde está publicada Daddy’s boy?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?publisher WHERE {  ?story golem:title ""Daddy’s boy"" . ?story golem:publisher ?publisher . }"	[{'publisher': Value(literal:'archiveofourown.org')}]	496	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Dónde está publicada Daddy’s boy?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?publisher WHERE { 
?story golem:title ""Daddy’s boy"" . 
?story golem:publisher ?publisher . 
}
"	[{'publisher': Value(literal:'archiveofourown.org')}]	1	0	0
497	497	es	¿Dónde está publicada Harriet Potter and the Philosopher's Stone?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?publisher WHERE {  ?story golem:title ""Harriet Potter and the Philosopher's Stone"" . ?story golem:publisher ?publisher . }"	[{'publisher': Value(literal:'archiveofourown.org')}]	497	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Dónde está publicada Harriet Potter and the Philosopher's Stone?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/>  
SELECT DISTINCT ?publisher WHERE { 
?story golem:title ""Harriet Potter and the Philosopher's Stone"" . 
?story golem:publisher ?publisher . 
}
"	[{'publisher': Value(literal:'archiveofourown.org')}]	1	0	0
499	499	es	¿De qué trata Magical Moment in the Tent?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?series ?collection ?content_warning ?romantic_category (GROUP_CONCAT(DISTINCT ?keyword; separator="", "") AS ?keywords) ?summary WHERE { ?story golem:title ""Magical Moment in the Tent"" . ?story golem:keyword ?keyword . ?story golem:romanticCategory ?romantic_category . ?story golem:series ?series . ?story golem:collections ?collection . ?story golem:contentWarning ?content_warning . ?story golem:summary ?summary . }"	"[{'series': Value(literal:'None'), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'Underage'), 'romantic_category': Value(literal:'F/M'), 'keywords': Value(literal:'Accidental Voyeurism, Anal, CFNM, Cucking, Cuckolding, Cum shot, Dirty Talk, Exposure, Female Domination, Femdom, Ginny Weasley Bashing, Humiliation, Jealously, Jerking, Masturbation, Mutual Masturbation, Penis Size, Shame, Size Difference, Size Kink, Verbal Abuse, Verbal Humiliation, Voyeurism, cum load, encourgement, wanking, whore'), 'summary': Value(literal:""Hermione, posessed by the cursed necklace, takes Harry's mind off things for a brief magical moment."")}]"	499	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿De qué trata Magical Moment in the Tent?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?summary WHERE { 
  ?story golem:title ""Magical Moment in the Tent"" . 
  ?story golem:summary ?summary . 
}
"	"[{'summary': Value(literal:""Hermione, posessed by the cursed necklace, takes Harry's mind off things for a brief magical moment."")}]"	0	1	1
500	500	es	¿De qué trata (fanart) Wolfstar prompts?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?series ?collection ?content_warning ?romantic_category (GROUP_CONCAT(DISTINCT ?keyword; separator="", "") AS ?keywords) ?summary WHERE { ?story golem:title ""(fanart) Wolfstar prompts"" . ?story golem:keyword ?keyword . ?story golem:romanticCategory ?romantic_category . ?story golem:series ?series . ?story golem:collections ?collection . ?story golem:contentWarning ?content_warning . ?story golem:summary ?summary . }"	"[{'series': Value(literal:'None'), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'No Archive Warnings Apply'), 'romantic_category': Value(literal:'M/M'), 'keywords': Value(literal:""Alternate Universe - Rock Band, First War with Voldemort, Lie Low At Lupin's (Harry Potter), Marauders Era (Harry Potter), Nudity, Post-Harry Potter and the Goblet of Fire, Recreational Drug Use, Sexual Content, Sirius Black as Padfoot, Trans Remus Lupin""), 'summary': Value(literal:'Prompt: Sirius makes cookies for a grumpy Remus')}]"	500	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿De qué trata (fanart) Wolfstar prompts?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?summary WHERE { 
?story golem:fandom ""Wolfstar"" . 
?story golem:characters ?characters . 
FILTER(contains(?characters, ""Wolfstar"")) . 
?story golem:summary ?summary . 
}
"	[]	0	0	1
501	501	es	¿De qué trata Little Black Book?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?series ?collection ?content_warning ?romantic_category (GROUP_CONCAT(DISTINCT ?keyword; separator="", "") AS ?keywords) ?summary WHERE { ?story golem:title ""Little Black Book"" . ?story golem:keyword ?keyword . ?story golem:romanticCategory ?romantic_category . ?story golem:series ?series . ?story golem:collections ?collection . ?story golem:contentWarning ?content_warning . ?story golem:summary ?summary . }"	"[{'series': Value(literal:'the inside of my head is a very dark place [2]'), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'Graphic Depictions Of Violence'), 'romantic_category': Value(literal:'Gen'), 'keywords': Value(literal:'Angst, Lestrade is an ass, PTSD ?, Self Harm, dark!john, really really angsty'), 'summary': Value(literal:""In the middle of a drugs bust, Lestrade & co find something less than savoury in the flat. Only thing is? It's not Sherlock's, and that changes everything. They will never treat John the same again. From a prompt from the kink meme. Series: the inside of my head is a very dark place [2]"")}, {'series': Value(literal:'None'), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'No Archive Warnings Apply'), 'romantic_category': Value(literal:'Gen'), 'keywords': Value(literal:""Gemma Is a Crazy Bitch, John's Journal, Season/Series 01, What-If""), 'summary': Value(literal:'""He\'d been asking questions about his dad\'s vision for the club. She had to get the book away from Jax before he read any more of it."" Gemma schemes to steal her late husband\'s journal.')}, {'series': Value(literal:'None'), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'No Archive Warnings Apply'), 'romantic_category': Value(literal:'Multi'), 'keywords': Value(literal:'Alternate Universe - Succubi & Incubi, Autofellatio, BDSM, Blindfolds, Blow Jobs, Bondage, Consent Play, Crossdressing, Cum Play, Fivesome - M/M/M/M/M, Gags, Gangbang, Knotting, Office Sex, Prostate Massage, Sex Toys, Spanking, Vibrators, Wall Sex'), 'summary': Value(literal:""A collection of filthy, shamelessly smutty drabbles and mini-fics. Oh, the things you'd find in a SOLDIER's little black book. Mostly ASGZC, or various pairings within. Yaoi, threesomes and moresomes, various kinks. Chapter by chapter listing now provided, so you can find what you're looking for more easily! CHAPTER 1: ASGZC, Cloud gives Zack the most filthy kiss imaginable. CHATPER 2: Angeal/Genesis, autofellatio. CHAPTER 3: Zack/Cloud/Aerith, crossdressing. CHAPTER 4: ASGZC, Cloud has a fantasy about having a vibrator in his ass and the boyfriends tormenting him with it. CHAPTER 5: Sephiroth/Cloud, puppet!Cloud + toys. CHAPTER 6: Genesis/Cloud, vibrator adventures. CHAPTER 7: Angeal/Sephiroth, spanking. CHAPTER 8: Zack/Cloud, marking and comeplay. CHAPTER 9: Sephiroth/Cloud, sex against the wall in Sephiroth's office. CHAPTER 10: Genesis/Cloud, post-DOC with lots of bondage. CHAPTER 11: Sephiroth/Cloud, knotting. CHAPTER 12: ASGZC, incubi AU. CHAPTER 13: Sephiroth/Cloud, making out. CHAPTER 14: Cloud/Sephiroth, prostate massage. CHAPTER 15: ASGZC, crossdressing, gangbang. CHAPTER 16: Sephiroth/Cloud, virgin killer sweater."")}, {'series': Value(literal:'The Jackie and Hyde Rom-Com Project [1]'), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'Creator Chose Not To Use Archive Warnings'), 'romantic_category': Value(literal:'F/M'), 'keywords': Value(literal:'Angst, Angst and Feels, Background Eric Forman and Donna Pinciotti, Drama & Romance, Eventual Happy Ending, Eventual Michael Kelso and Brooke Rockwell, Fluff, Hyde has trust issues, Jackie Burkhart and Steven Hyde endgame, Jackie also has trust issues, Jackie and Hyde centric, Other Additional Tags to Be Added, Romantic Comedy, based on a movie'), 'summary': Value(literal:""“I don’t know why you haven’t looked for his Little Black Book yet.” “Little Black Book? What does that mean?” “You know… it's the list of names belonging to the previous lovers a person has had. If he hasn’t told you about these girls himself, I can guarantee he’s got one.” . . . If there was one thing Jackie Burkhart knew to be true, it was that she loved Steven Hyde. After learning that he may not be as open with her as she thought, Jackie sets out to uncover what he refuses to tell her himself. If omission is the greatest form of  lie, how long had he been a liar?"")}, {'series': Value(literal:'None'), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'No Archive Warnings Apply'), 'romantic_category': Value(literal:'M/M'), 'keywords': Value(literal:""Fluff, Podfic Length: 0-10 Minutes, Poetry, Tumblr Prompt, also available as a podfic! link in the beginning note, the whole thing isn't poetry there's just like 1 poem in there""), 'summary': Value(literal:""Crowley has been writing an awful lot in a little notebook, and Aziraphale is painfully curious what it's all about."")}, {'series': Value(literal:'None'), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'Creator Chose Not To Use Archive Warnings'), 'romantic_category': Value(literal:'F/M'), 'keywords': Value(literal:'Light BDSM, Light Bondage, Master/Slave, Mind Games, Restraints, Spanking'), 'summary': Value(literal:'Six months after the events of their fondness stories, Yuxiang is given Peking Duck’s sin diary from the kingdom he helped destroy. What follows is a descent into depravity.')}, {'series': Value(literal:'St. Amelia’s [2]'), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'No Archive Warnings Apply'), 'romantic_category': Value(literal:'Gen'), 'keywords': Value(literal:'Other Additional Tags to Be Added'), 'summary': Value(literal:""It's never a bad idea to keep track of your contacts. Series: St. Amelia’s [2]"")}, {'series': Value(literal:'None'), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'Major Character Death'), 'romantic_category': Value(literal:'Multi'), 'keywords': Value(literal:'Het, Slash'), 'summary': Value(literal:'Tony Stark has had many meaningful relationships in his life. Most of them have involved sex.')}, {'series': Value(literal:'None'), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'Major Character Death'), 'romantic_category': Value(literal:'F/M'), 'keywords': Value(literal:'Alternate Universe - Modern Setting, Dead Dove: Do Not Eat, Emotional/Psychological Abuse, Imprisonment, Mental Instability, Non-Consensual Drug Use, Smut, Stockholm Syndrome, Straight Up Abuse, reader is kira'), 'summary': Value(literal:""Life is monotony. The only thing that's getting Soul through the boring day to day is Kira and reading of their vigilantism. That is, at least, until Lady Luck deigned to smile on him on a Thursday night between deliveries. (you were doomed the moment he opened the door)"")}, {'series': Value(literal:'None'), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'Creator Chose Not To Use Archive Warnings'), 'romantic_category': Value(literal:'Multi'), 'keywords': Value(literal:'Aged-Up Character(s), Class 1-A Shenanigans (My Hero Academia), Class 1-B Shenanigans (My Hero Academia), Expect more partners, Kacchako is endgame, Ochabowl, Out of Character, Shameless Smut, Smut, Todochako, Uraraka sleeps around, kacchako, smut with plot'), 'summary': Value(literal:'FuckGirl!Uraraka has a list of all the classmates she’s slept with, notes of what they like and how long it takes for them to come, dick size and curvature. Just about anyone above a 5 is on the list except for the resident gremlin and virgin boy: Bakugou.')}, {'series': Value(literal:'None'), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'Creator Chose Not To Use Archive Warnings'), 'romantic_category': Value(literal:'M/M'), 'keywords': Value(literal:'Daddy Kink, Diary/Journal, Fingerfucking, Gay Sex, I lied about the fluff, Im not going to Hell, Josh fucks Tyler with his drumstick, Just a teeny bit of plot, PWP, Plot What Plot/Porn Without Plot, Porn, Rough Sex, Sex, Smut, Spanking, That falls into the wrong hands, Very Secret Diary, just a little bit of fluff'), 'summary': Value(literal:""It was a meant to be a songwriting book. It held lyrics, doodles….and thoughts about Josh. How Tyler felt about Josh. The dirty fantasies about Josh. The things he wanted Josh to do to him. The things he wanted to do to Josh. In a split second…. It's gone. And everything spills off the pages…."")}, {'series': Value(literal:'None'), 'collection': Value(literal:'Evakteket Birthday Challenge'), 'content_warning': Value(literal:'No Archive Warnings Apply'), 'romantic_category': Value(literal:'M/M'), 'keywords': Value(literal:'Alternate Universe, Alternate Universe - Canon Divergence, Alternate Universe - College/University, Alternate Universe - Different First Meeting, Anal Play, Crossdressing, Edgeplay, Evakteket Challenge, Feminization, Masturbation, Naughty, POV Isak Valtersen, Pining, Prompt Fic, Sex Toys, Smut, Stalking, Underwear, Underwear Kink, Underwear Theft, caught red-handed'), 'summary': Value(literal:""prompt: Caught Red-handed, College/University, Canon Divergence Isak Valtersen is studying his third year at the University of Oslo and having the time of his life. Enter Evy Bech Næsheim, straight out of Nissen, in his stockings, mini skirts and bubblegum scented lip gloss. But why won't the new campus slut give Isak the time of day?"")}, {'series': Value(literal:'None'), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'No Archive Warnings Apply'), 'romantic_category': Value(literal:'M/M'), 'keywords': Value(literal:'Alternate Universe - High School, Coming Out, Depression, Diary/Journal, Fluff, Fluff and Angst, High School, Light Angst, Very Secret Diary, klance'), 'summary': Value(literal:'The little black book that Keith carried with him EVERYWHERE was the thing in life he cherished most. It had everything in it, from his depression clouded thoughts to his major crush on his long time best friend Lance McClain to songs he wrote. What will happen when those thoughts become public knowledge?')}, {'series': Value(literal:'FFXIVWrite 2020 [3]'), 'collection': Value(literal:'#FFxivWrite2020 Final Fantasy 30 Day Writing Challenge'), 'content_warning': Value(literal:'No Archive Warnings Apply'), 'romantic_category': Value(literal:'Gen'), 'keywords': Value(literal:'Alcohol, Canon Compliant, Patch 5.0: Shadowbringers Spoilers, Prompt Fill, Tumblr: FFXIVwrite, Tumblr: FFXIVwrite2020'), 'summary': Value(literal:'Thancred initially noticed Urianger’s little black book during their first Moonfire Faire back in Eorzea. His head pounding with hangover, he spared little thought for it. The man practiced arcanima after all, and it was rarer to see him without a book in hand. It did seem a tad more odd when he had it out around the bonfire the next night, but most of Thancred’s attention was on a buxom Viera by the name of Arjm and most decidedly not on the silent looks his Elezen companion kept casting from under his cowl. A cowl, at the beach in the heat of a Costa del Sol summer. Really. Urianger keeps a little black book of Thancred\'s conquests. Fill for the FFXIV write 2020 prompt ""lush.""')}, {'series': Value(literal:'None'), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'Graphic Depictions Of Violence'), 'romantic_category': Value(literal:'F/F'), 'keywords': Value(literal:'Alternate Universe - College/University, Alternate Universe - Human, Attempted Murder, lapidot - Freeform, storyline is focused around lapidot, trigger warning, tw, water tw'), 'summary': Value(literal:'Peridot is a friend-less jerk trying to get through college who just happens to rescue a girl. expect some dumb gem refrences')}, {'series': Value(literal:'None'), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'No Archive Warnings Apply'), 'romantic_category': Value(literal:'M/M'), 'keywords': Value(literal:'221B Ficlet, blame twitter'), 'summary': Value(literal:'I wrote a tweet speculating about Sherlock\'s ""little black book"" and @BenBatched said she wanted to see it as a fic and I guess I wasn\'t gonna get my NaNoWriMo book started tonight anyway... (Those of you who are doing NaNo2019, I\'m wendymarlowe over there. I wanna be your friend!)')}, {'series': Value(literal:'None'), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'No Archive Warnings Apply'), 'romantic_category': Value(literal:'F/F'), 'keywords': Value(literal:""Alcohol consumption and other merriment, Also Bisexual!Erin, EVENTUAL holtzbert, In which Erin receives flirting tips from a smitten Holtzmann, i'm currently on summer vacation and was hit with inspiration, vacation fic""), 'summary': Value(literal:""Erin's plans for the team to go on a weekend vacation are hijacked by and argument between Patty and Holtzmann over who in the group has the most 'game'. The relaxing getaway instead becomes something of a competition, with pretty surprising results."")}, {'series': Value(literal:'None'), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'No Archive Warnings Apply'), 'romantic_category': Value(literal:'M/M'), 'keywords': Value(literal:'Pre-Slash'), 'summary': Value(literal:'That Tony had a little black book was probably not much of a surprise to anyone.')}, {'series': Value(literal:'None'), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'No Archive Warnings Apply'), 'romantic_category': Value(literal:'M/M'), 'keywords': Value(literal:'Alternate Universe - Succubi & Incubi, Autofellatio, BDSM, Blindfolds, Blow Jobs, Bondage, Consent Play, Crossdressing, Cum Play, Fivesome - M/M/M/M/M, Gags, Gangbang, Knotting, Office Sex, Prostate Massage, Sex Toys, Spanking, Vibrators, Wall Sex'), 'summary': Value(literal:""A collection of filthy, shamelessly smutty drabbles and mini-fics. Oh, the things you'd find in a SOLDIER's little black book. Mostly ASGZC, or various pairings within. Yaoi, threesomes and moresomes, various kinks. Chapter by chapter listing now provided, so you can find what you're looking for more easily! CHAPTER 1: ASGZC, Cloud gives Zack the most filthy kiss imaginable. CHATPER 2: Angeal/Genesis, autofellatio. CHAPTER 3: Zack/Cloud/Aerith, crossdressing. CHAPTER 4: ASGZC, Cloud has a fantasy about having a vibrator in his ass and the boyfriends tormenting him with it. CHAPTER 5: Sephiroth/Cloud, puppet!Cloud + toys. CHAPTER 6: Genesis/Cloud, vibrator adventures. CHAPTER 7: Angeal/Sephiroth, spanking. CHAPTER 8: Zack/Cloud, marking and comeplay. CHAPTER 9: Sephiroth/Cloud, sex against the wall in Sephiroth's office. CHAPTER 10: Genesis/Cloud, post-DOC with lots of bondage. CHAPTER 11: Sephiroth/Cloud, knotting. CHAPTER 12: ASGZC, incubi AU. CHAPTER 13: Sephiroth/Cloud, making out. CHAPTER 14: Cloud/Sephiroth, prostate massage. CHAPTER 15: ASGZC, crossdressing, gangbang. CHAPTER 16: Sephiroth/Cloud, virgin killer sweater."")}, {'series': Value(literal:'None'), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'Creator Chose Not To Use Archive Warnings'), 'romantic_category': Value(literal:'F/M'), 'keywords': Value(literal:'Aged-Up Character(s), Class 1-A Shenanigans (My Hero Academia), Class 1-B Shenanigans (My Hero Academia), Expect more partners, Kacchako is endgame, Ochabowl, Out of Character, Shameless Smut, Smut, Todochako, Uraraka sleeps around, kacchako, smut with plot'), 'summary': Value(literal:'FuckGirl!Uraraka has a list of all the classmates she’s slept with, notes of what they like and how long it takes for them to come, dick size and curvature. Just about anyone above a 5 is on the list except for the resident gremlin and virgin boy: Bakugou.')}, {'series': Value(literal:'None'), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'Creator Chose Not To Use Archive Warnings'), 'romantic_category': Value(literal:'M/M'), 'keywords': Value(literal:'Cute, Not Actually Unrequited Love, Severus is a softy, Unrequited Love'), 'summary': Value(literal:'Prompt: little black book')}, {'series': Value(literal:'None'), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'Creator Chose Not To Use Archive Warnings'), 'romantic_category': Value(literal:'M/M'), 'keywords': Value(literal:'Angst, Auror Draco Malfoy, Auror Harry Potter, Auror Partners, Eventual Smut, Explicit Language, Mood Swings, Pranks and Practical Jokes, Sassy Draco, Teasing'), 'summary': Value(literal:""The last thing Harry Potter wanted to see after the battle of Hogwarts was Draco Malfoy. So, of course, with his luck, he found himself sharing a workspace with him on a daily basis. Their relationship began on neutral terms, naturally, considering they had both saved each other's lives a handful of times and Harry had testified for both Draco and his mother at their trial, but with that grew acquaintanceship, and then Draco's swift and inevitable descend back into insufferableness. Draco had turned messing with Harry into a sport; some sort of twisted game at which he excelled in more than he ever would at even his own profession. Draco's incessant teasing almost began feeling familiar to him, but when his vexatious tendencies seem to come to a sudden halt Harry finds himself missing the arrogant git he had grown so used to spending his days in an ill-lit office with."")}, {'series': Value(literal:'None'), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'Creator Chose Not To Use Archive Warnings'), 'romantic_category': Value(literal:'F/F'), 'keywords': Value(literal:'Aged-Up Character(s), Class 1-A Shenanigans (My Hero Academia), Class 1-B Shenanigans (My Hero Academia), Expect more partners, Kacchako is endgame, Ochabowl, Out of Character, Shameless Smut, Smut, Todochako, Uraraka sleeps around, kacchako, smut with plot'), 'summary': Value(literal:'FuckGirl!Uraraka has a list of all the classmates she’s slept with, notes of what they like and how long it takes for them to come, dick size and curvature. Just about anyone above a 5 is on the list except for the resident gremlin and virgin boy: Bakugou.')}, {'series': Value(literal:'None'), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'No Archive Warnings Apply'), 'romantic_category': Value(literal:'F/M'), 'keywords': Value(literal:'Community: kakasaku, Humor, Romance'), 'summary': Value(literal:'Kakashi isn\'t the only one who enjoys ""interesting"" titles like Icha Icha Paradise. Sakura would die of embarrassment if anyone ever found out... KakaSaku. Complete.')}, {'series': Value(literal:'None'), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'No Archive Warnings Apply'), 'romantic_category': Value(literal:'M/M'), 'keywords': Value(literal:'Fade to Black, Past Relationship(s), Post Dgs2, background barok/stronghart, background kazuma/jigoku, brief brief mention of klint/stronghart, mentions of fisting, mentions of whipping'), 'summary': Value(literal:'“Is it too early in our relationship for me to ask about whatever was going on between you and Stronghart?” “You’ve never been too good at pillow talk.” “I’m assuming that’s a yes, then? Too early?” (Barok and Kazuma swap stories.)')}]"	501	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿De qué trata Little Black Book?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?summary WHERE { 
?story golem:title ""Little Black Book"" . 
?story golem:summary ?summary . 
}
"	"[{'summary': Value(literal:'Prompt: little black book')}, {'summary': Value(literal:'Hermione finds a Little Black Book in the common room...*random crack*')}, {'summary': Value(literal:""The last thing Harry Potter wanted to see after the battle of Hogwarts was Draco Malfoy. So, of course, with his luck, he found himself sharing a workspace with him on a daily basis. Their relationship began on neutral terms, naturally, considering they had both saved each other's lives a handful of times and Harry had testified for both Draco and his mother at their trial, but with that grew acquaintanceship, and then Draco's swift and inevitable descend back into insufferableness. Draco had turned messing with Harry into a sport; some sort of twisted game at which he excelled in more than he ever would at even his own profession. Draco's incessant teasing almost began feeling familiar to him, but when his vexatious tendencies seem to come to a sudden halt Harry finds himself missing the arrogant git he had grown so used to spending his days in an ill-lit office with."")}, {'summary': Value(literal:'Peridot is a friend-less jerk trying to get through college who just happens to rescue a girl. expect some dumb gem refrences')}, {'summary': Value(literal:'Thancred initially noticed Urianger’s little black book during their first Moonfire Faire back in Eorzea. His head pounding with hangover, he spared little thought for it. The man practiced arcanima after all, and it was rarer to see him without a book in hand. It did seem a tad more odd when he had it out around the bonfire the next night, but most of Thancred’s attention was on a buxom Viera by the name of Arjm and most decidedly not on the silent looks his Elezen companion kept casting from under his cowl. A cowl, at the beach in the heat of a Costa del Sol summer. Really. Urianger keeps a little black book of Thancred\'s conquests. Fill for the FFXIV write 2020 prompt ""lush.""')}, {'summary': Value(literal:""A collection of filthy, shamelessly smutty drabbles and mini-fics. Oh, the things you'd find in a SOLDIER's little black book. Mostly ASGZC, or various pairings within. Yaoi, threesomes and moresomes, various kinks. Chapter by chapter listing now provided, so you can find what you're looking for more easily! CHAPTER 1: ASGZC, Cloud gives Zack the most filthy kiss imaginable. CHATPER 2: Angeal/Genesis, autofellatio. CHAPTER 3: Zack/Cloud/Aerith, crossdressing. CHAPTER 4: ASGZC, Cloud has a fantasy about having a vibrator in his ass and the boyfriends tormenting him with it. CHAPTER 5: Sephiroth/Cloud, puppet!Cloud + toys. CHAPTER 6: Genesis/Cloud, vibrator adventures. CHAPTER 7: Angeal/Sephiroth, spanking. CHAPTER 8: Zack/Cloud, marking and comeplay. CHAPTER 9: Sephiroth/Cloud, sex against the wall in Sephiroth's office. CHAPTER 10: Genesis/Cloud, post-DOC with lots of bondage. CHAPTER 11: Sephiroth/Cloud, knotting. CHAPTER 12: ASGZC, incubi AU. CHAPTER 13: Sephiroth/Cloud, making out. CHAPTER 14: Cloud/Sephiroth, prostate massage. CHAPTER 15: ASGZC, crossdressing, gangbang. CHAPTER 16: Sephiroth/Cloud, virgin killer sweater."")}, {'summary': Value(literal:'Bodie has a secret.')}, {'summary': Value(literal:'That Tony had a little black book was probably not much of a surprise to anyone.')}, {'summary': Value(literal:""Desperate to tell Dean how he feels about him, Sam consults 3 unlikely experts from Dean's little black book."")}, {'summary': Value(literal:""This is a copy of the story I just entered into a contest. There are no names used, it's just a wife recounting her tale. No relation to anyone. It's about when she found a little black book and 20k. I should add it had to be under 2000 words."")}, {'summary': Value(literal:""Life is monotony. The only thing that's getting Soul through the boring day to day is Kira and reading of their vigilantism. That is, at least, until Lady Luck deigned to smile on him on a Thursday night between deliveries. (you were doomed the moment he opened the door)"")}, {'summary': Value(literal:""Erin's plans for the team to go on a weekend vacation are hijacked by and argument between Patty and Holtzmann over who in the group has the most 'game'. The relaxing getaway instead becomes something of a competition, with pretty surprising results."")}, {'summary': Value(literal:'Elle has an obsession.')}, {'summary': Value(literal:'“Is it too early in our relationship for me to ask about whatever was going on between you and Stronghart?” “You’ve never been too good at pillow talk.” “I’m assuming that’s a yes, then? Too early?” (Barok and Kazuma swap stories.)')}, {'summary': Value(literal:""Crowley has been writing an awful lot in a little notebook, and Aziraphale is painfully curious what it's all about."")}, {'summary': Value(literal:'The little black book that Keith carried with him EVERYWHERE was the thing in life he cherished most. It had everything in it, from his depression clouded thoughts to his major crush on his long time best friend Lance McClain to songs he wrote. What will happen when those thoughts become public knowledge?')}, {'summary': Value(literal:""It's never a bad idea to keep track of your contacts. Series: St. Amelia’s [2]"")}, {'summary': Value(literal:'Kakashi isn\'t the only one who enjoys ""interesting"" titles like Icha Icha Paradise. Sakura would die of embarrassment if anyone ever found out... KakaSaku. Complete.')}, {'summary': Value(literal:""It was a meant to be a songwriting book. It held lyrics, doodles….and thoughts about Josh. How Tyler felt about Josh. The dirty fantasies about Josh. The things he wanted Josh to do to him. The things he wanted to do to Josh. In a split second…. It's gone. And everything spills off the pages…."")}, {'summary': Value(literal:'Six months after the events of their fondness stories, Yuxiang is given Peking Duck’s sin diary from the kingdom he helped destroy. What follows is a descent into depravity.')}, {'summary': Value(literal:""In the middle of a drugs bust, Lestrade & co find something less than savoury in the flat. Only thing is? It's not Sherlock's, and that changes everything. They will never treat John the same again. From a prompt from the kink meme. Series: the inside of my head is a very dark place [2]"")}, {'summary': Value(literal:'FuckGirl!Uraraka has a list of all the classmates she’s slept with, notes of what they like and how long it takes for them to come, dick size and curvature. Just about anyone above a 5 is on the list except for the resident gremlin and virgin boy: Bakugou.')}, {'summary': Value(literal:""Just a thing of things that I write on Tumblr that aren't actual full length stories"")}, {'summary': Value(literal:'Merlin finds a little black book and what he finds inside terrifies him. Luckily he knows someone he can turn to with the information he finds.')}, {'summary': Value(literal:'Mulder deals with PMS as only Mulder can')}, {'summary': Value(literal:""If you were to ask someone to describe Mason Pines, the most popular answer would likely be “smart”. At  19, Mason was the youngest senior to ever walk the halls of West Coast Tech, and he only ever received full marks for his work. But his intelligence wasn’t his only defining feature. Anyone who got close enough could tell you that. If you were to ask someone to describe Mason Pines, none would respond with “murderer”. A supernatural killer, a detective who never shows their face, and a tragedy what's left of the Pines family wished to leave in the past all collide. And to think, it's all because of one little black book. Series: Death Note AU [1]"")}, {'summary': Value(literal:""Beca finds a sketch book in her bag, only it isn't hers. There's no name inside, just a bunch of drawings. Really good drawings. (Mitchsen, obviously.)"")}, {'summary': Value(literal:""prompt: Caught Red-handed, College/University, Canon Divergence Isak Valtersen is studying his third year at the University of Oslo and having the time of his life. Enter Evy Bech Næsheim, straight out of Nissen, in his stockings, mini skirts and bubblegum scented lip gloss. But why won't the new campus slut give Isak the time of day?"")}, {'summary': Value(literal:'""He\'d been asking questions about his dad\'s vision for the club. She had to get the book away from Jax before he read any more of it."" Gemma schemes to steal her late husband\'s journal.')}, {'summary': Value(literal:""“I don’t know why you haven’t looked for his Little Black Book yet.” “Little Black Book? What does that mean?” “You know… it's the list of names belonging to the previous lovers a person has had. If he hasn’t told you about these girls himself, I can guarantee he’s got one.” . . . If there was one thing Jackie Burkhart knew to be true, it was that she loved Steven Hyde. After learning that he may not be as open with her as she thought, Jackie sets out to uncover what he refuses to tell her himself. If omission is the greatest form of  lie, how long had he been a liar?"")}, {'summary': Value(literal:'Tony Stark has had many meaningful relationships in his life. Most of them have involved sex.')}, {'summary': Value(literal:'I wrote a tweet speculating about Sherlock\'s ""little black book"" and @BenBatched said she wanted to see it as a fic and I guess I wasn\'t gonna get my NaNoWriMo book started tonight anyway... (Those of you who are doing NaNo2019, I\'m wendymarlowe over there. I wanna be your friend!)')}]"	0	1	1
502	502	es	¿De qué trata Not a blind date?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?series ?collection ?content_warning ?romantic_category (GROUP_CONCAT(DISTINCT ?keyword; separator="", "") AS ?keywords) ?summary WHERE { ?story golem:title ""Not a blind date"" . ?story golem:keyword ?keyword . ?story golem:romanticCategory ?romantic_category . ?story golem:series ?series . ?story golem:collections ?collection . ?story golem:contentWarning ?content_warning . ?story golem:summary ?summary . }"	"[{'series': Value(literal:'None'), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'No Archive Warnings Apply'), 'romantic_category': Value(literal:'M/M'), 'keywords': Value(literal:""Based on a Tumblr Post, Blind Date, Cheaters never win, Don't copy to another site, but not really""), 'summary': Value(literal:'Person A is apparently stood up until Person B comes to the rescue. But then Person C shows up and gets what he deserves for being a prick in the first place. Rated t for a bit of language.')}]"	502	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿De qué trata Not a blind date?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?summary WHERE { 
?story golem:title ""Not a blind date"" . 
?story golem:summary ?summary . 
}
"	[{'summary': Value(literal:'Person A is apparently stood up until Person B comes to the rescue. But then Person C shows up and gets what he deserves for being a prick in the first place. Rated t for a bit of language.')}]	0	1	1
503	503	es	¿De qué trata Hiding Scrawl, Licking Freckles, and Other Average Wizard Things (Podfic)?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?series ?collection ?content_warning ?romantic_category (GROUP_CONCAT(DISTINCT ?keyword; separator="", "") AS ?keywords) ?summary WHERE { ?story golem:title ""Hiding Scrawl, Licking Freckles, and Other Average Wizard Things (Podfic)"" . ?story golem:keyword ?keyword . ?story golem:romanticCategory ?romantic_category . ?story golem:series ?series . ?story golem:collections ?collection . ?story golem:contentWarning ?content_warning . ?story golem:summary ?summary . }"	[{'series': Value(literal:'None'), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'No Archive Warnings Apply'), 'romantic_category': Value(literal:'M/M'), 'keywords': Value(literal:'Alternate Universe - Soulmates, Audio Format: M4B, Audio Format: MP3, Fluff, Hogwarts Eighth Year, I apologize for my English accents, I refuse to apologize for my Irish accent though, It was too fun, Podfic, Podfic Length: 20-30 Minutes, Soulmate-Identifying Marks, Tooth-Rotting Fluff'), 'summary': Value(literal:'Someone out there is obsessed with his freckles, and damn it, Seamus Finnigan wants to know who. - Uselessly fluffy Soulmate AU where the thoughts of your soulmate inscribe themselves on your skin in an shifting magic tattoo.')}, {'series': Value(literal:'None'), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'No Archive Warnings Apply'), 'romantic_category': Value(literal:'F/M'), 'keywords': Value(literal:'Alternate Universe - Soulmates, Audio Format: M4B, Audio Format: MP3, Fluff, Hogwarts Eighth Year, I apologize for my English accents, I refuse to apologize for my Irish accent though, It was too fun, Podfic, Podfic Length: 20-30 Minutes, Soulmate-Identifying Marks, Tooth-Rotting Fluff'), 'summary': Value(literal:'Someone out there is obsessed with his freckles, and damn it, Seamus Finnigan wants to know who. - Uselessly fluffy Soulmate AU where the thoughts of your soulmate inscribe themselves on your skin in an shifting magic tattoo.')}]	503	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿De qué trata Hiding Scrawl, Licking Freckles, and Other Average Wizard Things (Podfic)?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?summary WHERE { 
  ?story golem:title ""Hiding Scrawl, Licking Freckles, and Other Average Wizard Things (Podfic)"" . 
  ?story golem:summary ?summary . 
}
"	[{'summary': Value(literal:'Someone out there is obsessed with his freckles, and damn it, Seamus Finnigan wants to know who. - Uselessly fluffy Soulmate AU where the thoughts of your soulmate inscribe themselves on your skin in an shifting magic tattoo.')}]	0	1	1
504	504	es	¿De qué trata Elements of War?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?series ?collection ?content_warning ?romantic_category (GROUP_CONCAT(DISTINCT ?keyword; separator="", "") AS ?keywords) ?summary WHERE { ?story golem:title ""Elements of War"" . ?story golem:keyword ?keyword . ?story golem:romanticCategory ?romantic_category . ?story golem:series ?series . ?story golem:collections ?collection . ?story golem:contentWarning ?content_warning . ?story golem:summary ?summary . }"	[{'series': Value(literal:'None'), 'collection': Value(literal:'The Hex Files'), 'content_warning': Value(literal:'No Archive Warnings Apply'), 'romantic_category': Value(literal:'M/M'), 'keywords': Value(literal:'AU, Hogwarts Seventh Year, War'), 'summary': Value(literal:'This fic is unfinished - and may well remain that way. It got overtaken by reality and Deathly Hallows.')}]	504	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿De qué trata Elements of War?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?summary WHERE { 
?story golem:title ""Elements of War"" . 
?story golem:summary ?summary . 
}
"	[{'summary': Value(literal:'This fic is unfinished - and may well remain that way. It got overtaken by reality and Deathly Hallows.')}]	0	1	1
505	505	es	¿De qué trata Are You Firing Me??	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?series ?collection ?content_warning ?romantic_category (GROUP_CONCAT(DISTINCT ?keyword; separator="", "") AS ?keywords) ?summary WHERE { ?story golem:title ""Are You Firing Me?"" . ?story golem:keyword ?keyword . ?story golem:romanticCategory ?romantic_category . ?story golem:series ?series . ?story golem:collections ?collection . ?story golem:contentWarning ?content_warning . ?story golem:summary ?summary . }"	[{'series': Value(literal:'None'), 'collection': Value(literal:'Marvelously Magical Bingo 2020'), 'content_warning': Value(literal:'No Archive Warnings Apply'), 'romantic_category': Value(literal:'F/M'), 'keywords': Value(literal:'Post-Avengers: Infinity War Part 1 (Movie)'), 'summary': Value(literal:'Steve Rogers has a strict code against dating coworkers.')}]	505	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿De qué trata Are You Firing Me??

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?summary WHERE { 
  ?story golem:title ""Are You Firing Me?"" . 
  ?story golem:summary ?summary . 
}
"	[{'summary': Value(literal:'Steve Rogers has a strict code against dating coworkers.')}]	0	1	1
506	506	es	¿De qué trata Haunted [podfic]?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?series ?collection ?content_warning ?romantic_category (GROUP_CONCAT(DISTINCT ?keyword; separator="", "") AS ?keywords) ?summary WHERE { ?story golem:title ""Haunted [podfic]"" . ?story golem:keyword ?keyword . ?story golem:romanticCategory ?romantic_category . ?story golem:series ?series . ?story golem:collections ?collection . ?story golem:contentWarning ?content_warning . ?story golem:summary ?summary . }"	"[{'series': Value(literal:'None'), 'collection': Value(literal:'HP Drizzle Fest 2018'), 'content_warning': Value(literal:'No Archive Warnings Apply'), 'romantic_category': Value(literal:'M/M'), 'keywords': Value(literal:'Angst and Hurt/Comfort, Podfic, Podfic Length: 0-10 Minutes, inappropriate graveyard fondling'), 'summary': Value(literal:'Podfic of ""Haunted"" by icicle33 Author\'s original summary: Draco always has a follower when he visits Snape\'s grave.')}, {'series': Value(literal:'None'), 'collection': Value(literal:'Pod_O_Ween 2019'), 'content_warning': Value(literal:'No Archive Warnings Apply'), 'romantic_category': Value(literal:'Gen'), 'keywords': Value(literal:'Alternate Universe - Canon Divergence, Audio Format: MP3, Audio Format: Streaming, Force Ghost(s), Podfic, Podfic Length: 10-20 Minutes'), 'summary': Value(literal:'The 501st and 212th are haunted. They are aware.')}]"	506	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿De qué trata Haunted [podfic]?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?summary WHERE { 
?story golem:title ""Haunted [podfic]"" . 
?story golem:summary ?summary . 
}
"	"[{'summary': Value(literal:'Podfic of ""Haunted"" by icicle33 Author\'s original summary: Draco always has a follower when he visits Snape\'s grave.')}, {'summary': Value(literal:'The 501st and 212th are haunted. They are aware.')}]"	0	1	1
507	507	es	¿De qué trata The Snow Prince?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?series ?collection ?content_warning ?romantic_category (GROUP_CONCAT(DISTINCT ?keyword; separator="", "") AS ?keywords) ?summary WHERE { ?story golem:title ""The Snow Prince"" . ?story golem:keyword ?keyword . ?story golem:romanticCategory ?romantic_category . ?story golem:series ?series . ?story golem:collections ?collection . ?story golem:contentWarning ?content_warning . ?story golem:summary ?summary . }"	"[{'series': Value(literal:'None'), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'Creator Chose Not To Use Archive Warnings'), 'romantic_category': Value(literal:'M/M'), 'keywords': Value(literal:'Alternate Universe - Modern with Magic, Alternate Universe - Small Town, Alternate Universe - Snow Queen Fusion, Blizzards & Snowstorms, Elemental Magic, Fairy Tale Elements, Frostbite, Hypothermia, Snow and Ice, Strangers to Lovers, Work In Progress, Yesung-centric'), 'summary': Value(literal:'None')}, {'series': Value(literal:'None'), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'No Archive Warnings Apply'), 'romantic_category': Value(literal:'M/M'), 'keywords': Value(literal:'Anal Sex, Cuddling & Snuggling, Domestic, Established Relationship, Father-Daughter Relationship, Fluff, Kid Fic, MILD - Freeform, Marriage, Nightmares, Oral Sex, POV Bucky Barnes, Pancakes, Post-Traumatic Stress Disorder - PTSD, Shower Sex, Smut, Storytelling, bucky uses some creative license'), 'summary': Value(literal:'or: Nora Barnes-Rogers needs a bedtime story.  Later, Steve likes to hear the grown-up version.')}, {'series': Value(literal:""2019 Valentine's Requests [9]""), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'No Archive Warnings Apply'), 'romantic_category': Value(literal:'M/M'), 'keywords': Value(literal:'Fairy Tale Elements'), 'summary': Value(literal:'Bucky kinda wants to know how he skips to the part where someone says ‘and they lived happily ever after, the end.’')}, {'series': Value(literal:'None'), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'No Archive Warnings Apply'), 'romantic_category': Value(literal:'F/M'), 'keywords': Value(literal:'Pre-Despair'), 'summary': Value(literal:'When she turns around to look at the puppy’s owner, the remnants of a smile still gracing her lips, she finds him staring at her with a contemplative expression. “What?” she asks, a bit defensively. “Is there something on my face?” He blinks quickly and immediately averts his gaze, burying his chin in his scarf once more. “Ah, n-no, I simply…that is…” He clears his throat, and Mahiru wonders where all of his bravado has gone.')}, {'series': Value(literal:'None'), 'collection': Value(literal:'Chocomint Fairy Tale Compilation'), 'content_warning': Value(literal:'No Archive Warnings Apply'), 'romantic_category': Value(literal:'M/M'), 'keywords': Value(literal:'Alternate Universe - Fairy Tale, Alternate Universe - Snow Queen Fusion, Body Horror, Illustrated, Snow Queen Elements'), 'summary': Value(literal:""Upon a beautiful day in late summer, Mikleo's heart is frozen by a terrible curse, and he is spirited away by a woman in dazzling winter white. Sorey sets out on a journey to save his one true love, and winds up making friends with half the continent along the way. (A variation on The Snow Queen , written for the 2018 Chocomint Fairy Tale Compilation. With illustrations by Nami/defragmentise!)"")}, {'series': Value(literal:'None'), 'collection': Value(literal:'Come at Once (if convenient)'), 'content_warning': Value(literal:'No Archive Warnings Apply'), 'romantic_category': Value(literal:'M/M'), 'keywords': Value(literal:'Established Relationship, Romance, Temperature Play'), 'summary': Value(literal:'A midwinter tryst brings its own heat.')}, {'series': Value(literal:""Momo's Fairytales [4]""), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'Creator Chose Not To Use Archive Warnings'), 'romantic_category': Value(literal:'M/M'), 'keywords': Value(literal:""Alternate Universe - Fairy Tale, Alternate Universe - Fantasy, How Todoroki and Izuku met, Takes place before The Witch's Cottage and The Swan Prince, This one is a bit darker than the other stories""), 'summary': Value(literal:""Todoroki has lived locked up in a tower since he was seven years old due to his powers. His father abandoned him there with no word of when he'd return. His mother left behind a puzzle for him to solve to break the tower's seal and escape, but Todoroki had long since given up on solving it or any hope of seeing anyone ever again."")}, {'series': Value(literal:""things I scribbled when I should've been studying [9]""), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'No Archive Warnings Apply'), 'romantic_category': Value(literal:'M/M'), 'keywords': Value(literal:""Adventure, Alternate Universe - Fairy Tale, Eventual Romance, Fairy Tale Elements, Snow Queen Elements, alecto carrow's daughter, magical beasts, that can talk because I said so""), 'summary': Value(literal:'Teddy had heard tales of the Prince of Snow before – he used to like them when he was little – and he was frightened, because the Prince of Snow was a powerful fairy and no one knew where he had come from, but it was said that he was cold and cruel.')}, {'series': Value(literal:'None'), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'Creator Chose Not To Use Archive Warnings'), 'romantic_category': Value(literal:'M/M'), 'keywords': Value(literal:'Alternate Universe - Fantasy, Alternate Universe - Snow Queen Fusion, Childhood Friends, Fluff and Angst, Friendship/Love'), 'summary': Value(literal:'""Yuuri had to admit, his curiosity was piqued. He had heard stories of the Snow Queen before, but had never thought that she was real. Then again, he thought, if those fairies that kept snatching twigs from their woodpile existed, why wouldn’t their queen?"" The Snow Queen by Hans Christian Andersen meets Yuuri!!! On Ice.')}, {'series': Value(literal:'None'), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'Creator Chose Not To Use Archive Warnings'), 'romantic_category': Value(literal:'Multi'), 'keywords': Value(literal:'Alternate Universe - Fantasy, Alternate Universe - Snow Queen Fusion, Childhood Friends, Fluff and Angst, Friendship/Love'), 'summary': Value(literal:'""Yuuri had to admit, his curiosity was piqued. He had heard stories of the Snow Queen before, but had never thought that she was real. Then again, he thought, if those fairies that kept snatching twigs from their woodpile existed, why wouldn’t their queen?"" The Snow Queen by Hans Christian Andersen meets Yuuri!!! On Ice.')}, {'series': Value(literal:""Momo's Fairytales [4]""), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'Creator Chose Not To Use Archive Warnings'), 'romantic_category': Value(literal:'Gen'), 'keywords': Value(literal:""Alternate Universe - Fairy Tale, Alternate Universe - Fantasy, How Todoroki and Izuku met, Takes place before The Witch's Cottage and The Swan Prince, This one is a bit darker than the other stories""), 'summary': Value(literal:""Todoroki has lived locked up in a tower since he was seven years old due to his powers. His father abandoned him there with no word of when he'd return. His mother left behind a puzzle for him to solve to break the tower's seal and escape, but Todoroki had long since given up on solving it or any hope of seeing anyone ever again."")}, {'series': Value(literal:""things I scribbled when I should've been studying [9]""), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'No Archive Warnings Apply'), 'romantic_category': Value(literal:'F/M'), 'keywords': Value(literal:""Adventure, Alternate Universe - Fairy Tale, Eventual Romance, Fairy Tale Elements, Snow Queen Elements, alecto carrow's daughter, magical beasts, that can talk because I said so""), 'summary': Value(literal:'Teddy had heard tales of the Prince of Snow before – he used to like them when he was little – and he was frightened, because the Prince of Snow was a powerful fairy and no one knew where he had come from, but it was said that he was cold and cruel.')}, {'series': Value(literal:'Crossing the Divide [2]'), 'collection': Value(literal:'None'), 'content_warning': Value(literal:'No Archive Warnings Apply'), 'romantic_category': Value(literal:'M/M'), 'keywords': Value(literal:'Angst, Drabble, Poetry'), 'summary': Value(literal:""This poem is the second part of my Crossing the Divide series.  Fraser, Kowalski, Vecchio and the others belong to Alliance Communications and the great Pauls (both Haggis and Gross). As always, for Cindy, VJ and Sophie. I would also like to send a special thank you to Frasrgrl. Karol, my hat's off to you."")}]"	507	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿De qué trata The Snow Prince?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?summary WHERE { 
?story golem:title ""The Snow Prince"" . 
?story golem:summary ?summary . 
}
"	"[{'summary': Value(literal:'Teddy had heard tales of the Prince of Snow before – he used to like them when he was little – and he was frightened, because the Prince of Snow was a powerful fairy and no one knew where he had come from, but it was said that he was cold and cruel.')}, {'summary': Value(literal:""This poem is the second part of my Crossing the Divide series.  Fraser, Kowalski, Vecchio and the others belong to Alliance Communications and the great Pauls (both Haggis and Gross). As always, for Cindy, VJ and Sophie. I would also like to send a special thank you to Frasrgrl. Karol, my hat's off to you."")}, {'summary': Value(literal:'When she turns around to look at the puppy’s owner, the remnants of a smile still gracing her lips, she finds him staring at her with a contemplative expression. “What?” she asks, a bit defensively. “Is there something on my face?” He blinks quickly and immediately averts his gaze, burying his chin in his scarf once more. “Ah, n-no, I simply…that is…” He clears his throat, and Mahiru wonders where all of his bravado has gone.')}, {'summary': Value(literal:""Todoroki has lived locked up in a tower since he was seven years old due to his powers. His father abandoned him there with no word of when he'd return. His mother left behind a puzzle for him to solve to break the tower's seal and escape, but Todoroki had long since given up on solving it or any hope of seeing anyone ever again."")}, {'summary': Value(literal:'""Yuuri had to admit, his curiosity was piqued. He had heard stories of the Snow Queen before, but had never thought that she was real. Then again, he thought, if those fairies that kept snatching twigs from their woodpile existed, why wouldn’t their queen?"" The Snow Queen by Hans Christian Andersen meets Yuuri!!! On Ice.')}, {'summary': Value(literal:'A midwinter tryst brings its own heat.')}, {'summary': Value(literal:'None')}, {'summary': Value(literal:'or: Nora Barnes-Rogers needs a bedtime story.  Later, Steve likes to hear the grown-up version.')}, {'summary': Value(literal:'Bucky kinda wants to know how he skips to the part where someone says ‘and they lived happily ever after, the end.’')}, {'summary': Value(literal:'Yes, the lyrics are from Frozen and the story is inspired by it. I wanted to try one similar to it because I love Frozen, especially Elsa.')}, {'summary': Value(literal:""Upon a beautiful day in late summer, Mikleo's heart is frozen by a terrible curse, and he is spirited away by a woman in dazzling winter white. Sorey sets out on a journey to save his one true love, and winds up making friends with half the continent along the way. (A variation on The Snow Queen , written for the 2018 Chocomint Fairy Tale Compilation. With illustrations by Nami/defragmentise!)"")}]"	0	1	1
512	512	es	¿Se muere algún personaje principal en The Path Less Travelled By?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?warning WHERE {  ?story golem:title ""The Path Less Travelled By"" . ?story golem:contentWarning ?warning . FILTER(?warning = ""Major Character Death"") }"	[{'warning': Value(literal:'Major Character Death')}]	512	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Se muere algún personaje principal en The Path Less Travelled By?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?mainCharacter WHERE { 
?story golem:title ""The Path Less Travelled By"" . 
?story golem:characters ?character . 
?character a gc:MainCharacter . 
FILTER NOT EXISTS { ?character gc:death ""true"" }
}
"	[]	0	0	1
513	513	es	¿Se muere algún personaje principal en In The Distance?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?warning WHERE {  ?story golem:title ""In The Distance"" . ?story golem:contentWarning ?warning . FILTER(?warning = ""Major Character Death"") }"	[{'warning': Value(literal:'Major Character Death')}]	513	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Se muere algún personaje principal en In The Distance?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/>  
SELECT DISTINCT ?character WHERE { 
  ?story golem:title ""In The Distance"" . 
  ?story golem:characters ?character . 
}
"	[{'character': Value(literal:'Neville Longbottom')}, {'character': Value(literal:'Stiles Stilinski')}, {'character': Value(literal:'Peter Hale')}, {'character': Value(literal:'Scott McCall')}, {'character': Value(literal:'Draco Malfoy')}, {'character': Value(literal:'Ginny Weasley')}, {'character': Value(literal:'Marcus Flint')}, {'character': Value(literal:'Katie Bell')}]	0	1	1
515	515	es	¿Se muere algún personaje principal en The Ritual?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?warning WHERE {  ?story golem:title ""The Ritual"" . ?story golem:contentWarning ?warning . FILTER(?warning = ""Major Character Death"") }"	[{'warning': Value(literal:'Major Character Death')}]	515	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Se muere algún personaje principal en The Ritual?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?character WHERE { 
?story golem:title ""The Ritual"" . 
?story golem:characters ?character . 
FILTER (regex(?character, ""主角""))
}
"	[]	0	0	1
518	518	es	¿Se muere algún personaje principal en Poet.?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?warning WHERE {  ?story golem:title ""Poet."" . ?story golem:contentWarning ?warning . FILTER(?warning = ""Major Character Death"") }"	[{'warning': Value(literal:'Major Character Death')}]	518	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Se muere algún personaje principal en Poet.?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?character WHERE { 
?story golem:title ""Poet."" . 
?story golem:characters ?character . 
FILTER (?character != """") . 
}
"	[{'character': Value(literal:'Andromeda Black Tonks')}, {'character': Value(literal:'James Potter')}, {'character': Value(literal:'Lily Evans Potter')}, {'character': Value(literal:'Peter Pettigrew')}, {'character': Value(literal:'Regulus Black')}, {'character': Value(literal:'Remus Lupin')}, {'character': Value(literal:'Sirius Black')}, {'character': Value(literal:'Bartemius Crouch Jr.')}, {'character': Value(literal:'Walburga Black')}, {'character': Value(literal:'Kreacher (Harry Potter)')}, {'character': Value(literal:'Pandora Lovegood')}, {'character': Value(literal:'Milo Thatch')}, {'character': Value(literal:'Kida Nedakh')}, {'character': Value(literal:'Kashekim Nedakh')}, {'character': Value(literal:'Queen of Atlantis (Atlantis: The Lost Empire)')}, {'character': Value(literal:'Draco Malfoy')}, {'character': Value(literal:'Ginny Weasley')}, {'character': Value(literal:'Hermione Granger')}, {'character': Value(literal:'Lucius Malfoy')}, {'character': Value(literal:'Narcissa Black Malfoy')}, {'character': Value(literal:'Theodore Nott')}]	0	1	1
521	521	es	¿En qué historias sale Joe Cruz?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT ?title WHERE {  ?story golem:title ?title . ?story golem:characters ""Joe Cruz"" . }"	"[{'title': Value(literal:'Out of the Dark')}, {'title': Value(literal:'Drabbles of all kinds')}, {'title': Value(literal:'Sizzling Chicago')}, {'title': Value(literal:'Mine To Protect')}, {'title': Value(literal:'Elusive Redemption')}, {'title': Value(literal:'Lucky Stars *ON HOLD')}, {'title': Value(literal:'Family Knows Best: Firehouse 51')}, {'title': Value(literal:""He's My Best Friend"")}, {'title': Value(literal:'The Night That Changed It All')}, {'title': Value(literal:'51secret')}, {'title': Value(literal:'State of My Head')}, {'title': Value(literal:""I didn't count on that"")}, {'title': Value(literal:""Let's Hang Out"")}, {'title': Value(literal:'Secret Ingredient')}, {'title': Value(literal:'My Way or the Highway')}, {'title': Value(literal:'Running Out of Time')}, {'title': Value(literal:'End Game')}, {'title': Value(literal:'(Not Automatically) A Certain Guarantee')}, {'title': Value(literal:'Into the Unknown')}, {'title': Value(literal:'Wake up')}, {'title': Value(literal:'Star Trek')}, {'title': Value(literal:'Yeah, I Would')}, {'title': Value(literal:'The Right Mate')}, {'title': Value(literal:'What It Took to Move Forward')}, {'title': Value(literal:'Safe Haven')}, {'title': Value(literal:'Apartment 4B')}, {'title': Value(literal:'Blue Eyes')}, {'title': Value(literal:'I told you so')}, {'title': Value(literal:""Baby, It's Cold Outside"")}, {'title': Value(literal:'The Second Day of Christmas')}, {'title': Value(literal:'The Third Day of Christmas')}, {'title': Value(literal:'The Best Christmas')}, {'title': Value(literal:'Secret Santa')}, {'title': Value(literal:'Hopelessly Devoted to You')}, {'title': Value(literal:'Better Love')}, {'title': Value(literal:'the golden age')}, {'title': Value(literal:'The Seventh Day of Christmas')}, {'title': Value(literal:""what happens when we die? (the answer's in the sky)"")}, {'title': Value(literal:'Heart and Soul')}, {'title': Value(literal:'Consequences of a night')}, {'title': Value(literal:'Sparks Plus Flames')}, {'title': Value(literal:'Hold My Heart')}, {'title': Value(literal:'I Choose You')}, {'title': Value(literal:'Guilt and Secrecy are a tricky thing [ON HOLD]')}, {'title': Value(literal:'Down is Faster than Up')}, {'title': Value(literal:'Perfectly Imperfect')}, {'title': Value(literal:'Summer Surprise')}, {'title': Value(literal:'The One Where Everyone Finds Out')}, {'title': Value(literal:'fight of my life')}, {'title': Value(literal:'Forever')}, {'title': Value(literal:'The Long Haul')}, {'title': Value(literal:'In my defense, I was left unsupervised')}, {'title': Value(literal:'One Night')}, {'title': Value(literal:'Distance or happiness?')}, {'title': Value(literal:'Welcome to Firehouse 51')}, {'title': Value(literal:'Happiness')}, {'title': Value(literal:'Foundations')}, {'title': Value(literal:""Happy Valentine's day"")}, {'title': Value(literal:'Be Patient With My Love')}, {'title': Value(literal:'Tripping Over It')}, {'title': Value(literal:'Quit Meeting Like This')}, {'title': Value(literal:'Heavy is the Head')}, {'title': Value(literal:'A Home')}, {'title': Value(literal:'Sevasey: moments')}, {'title': Value(literal:'Hearts Entwined')}, {'title': Value(literal:'lost in your current')}, {'title': Value(literal:'Moving On')}, {'title': Value(literal:'Someone Who Gets It')}, {'title': Value(literal:'One of those days')}, {'title': Value(literal:'Just one day')}, {'title': Value(literal:'Floating')}, {'title': Value(literal:'All I ever wanted was happiness')}, {'title': Value(literal:'Run This Town')}, {'title': Value(literal:'The Light At The End Of The Tunnel')}, {'title': Value(literal:'New Friends, New Beginnings')}, {'title': Value(literal:""i'm alive, if living's just a beating heart"")}, {'title': Value(literal:'our story isn’t finished yet')}, {'title': Value(literal:'Witnessing Affection')}, {'title': Value(literal:'and now I’m covered (in you)')}, {'title': Value(literal:'What You Deserve')}, {'title': Value(literal:'But Not Forgotten')}, {'title': Value(literal:'CFD Family')}, {'title': Value(literal:'Electric Love')}, {'title': Value(literal:'What Comes Next?')}, {'title': Value(literal:'The Rest of Our Lives')}, {'title': Value(literal:'Burned (Kelly Severide)')}, {'title': Value(literal:'What I Would Do To Have Another Try')}, {'title': Value(literal:'What I Wouldn’t Do To Have Another Try')}, {'title': Value(literal:""but if souls are strong, they'll go on and on { and we will hardly know the time has passed }"")}, {'title': Value(literal:'Chicago Fire')}, {'title': Value(literal:'wherever is your heart i call home')}, {'title': Value(literal:""I Won't Let You Fall"")}, {'title': Value(literal:'She’s Gone (2)')}, {'title': Value(literal:""She's Gone (3)"")}, {'title': Value(literal:'Legacy of 51')}, {'title': Value(literal:'they look hopeful but you, you should not stay')}, {'title': Value(literal:""She's Gone (5)"")}, {'title': Value(literal:""That One, It's Perfect"")}, {'title': Value(literal:'All About Hallie')}, {'title': Value(literal:'That Age Old Story')}, {'title': Value(literal:'Flowing Blood')}, {'title': Value(literal:'A Marine Love')}, {'title': Value(literal:'The Not-So-Secret Secret')}, {'title': Value(literal:'Old Friends, New Beginnings')}, {'title': Value(literal:'A through Z: A Collection of Brettelli One-Shots')}, {'title': Value(literal:'Time')}, {'title': Value(literal:'The longest Ride')}, {'title': Value(literal:'First Response')}, {'title': Value(literal:'Exasperation is thy name')}, {'title': Value(literal:'Game Day')}, {'title': Value(literal:'Trapped')}, {'title': Value(literal:'Something We Both Wanted (Wish You Were Here)')}, {'title': Value(literal:'Buck runs')}, {'title': Value(literal:""He's always a mystery to me"")}, {'title': Value(literal:'Save Me')}, {'title': Value(literal:'Surpresa de Verão')}, {'title': Value(literal:'Quando a vida te vira ao avesso')}, {'title': Value(literal:'Our Life Under Flames')}, {'title': Value(literal:'Warriors')}, {'title': Value(literal:'Sports Can be Dangerous')}, {'title': Value(literal:'Fan Art Portraits and Character Index')}, {'title': Value(literal:'Friendship Worth Saving.')}, {'title': Value(literal:'Secret Marriage.')}, {'title': Value(literal:'One Call Away')}, {'title': Value(literal:""maybe someday we'll live our lives out loud"")}, {'title': Value(literal:'My Miracle')}, {'title': Value(literal:'Past Lives')}, {'title': Value(literal:'Panic')}, {'title': Value(literal:'Smoke Filled Room')}, {'title': Value(literal:'Afire Love')}, {'title': Value(literal:'Charlotte/Jeff Clarke')}, {'title': Value(literal:'The Fear of the Past')}, {'title': Value(literal:'Back To The Future')}, {'title': Value(literal:'Training Day')}, {'title': Value(literal:'One Night')}, {'title': Value(literal:""I'll Tell You What You Already Know"")}, {'title': Value(literal:'The Boy Who Sold His Soul to the Devil in Chicago')}, {'title': Value(literal:'The Sevasey Collection')}, {'title': Value(literal:""Arson's Heat - A Chicago Fire Story."")}, {'title': Value(literal:'Three times Casey blushes and someone sees it and one time Severide did and everyone sees it.')}, {'title': Value(literal:'Small Problem')}, {'title': Value(literal:'As One Day Ends')}, {'title': Value(literal:'Few Words')}, {'title': Value(literal:'Hold On')}, {'title': Value(literal:'A New Kind of Game')}, {'title': Value(literal:'Something Exotic')}, {'title': Value(literal:'We Are Forever')}, {'title': Value(literal:'Burning eyes')}, {'title': Value(literal:""I'll Follow You Into the Dark"")}, {'title': Value(literal:'Envisioning The Carnage')}, {'title': Value(literal:'Reverse')}, {'title': Value(literal:'Somewhere In Between')}, {'title': Value(literal:'Do Something')}, {'title': Value(literal:'How beautiful it is to exist')}, {'title': Value(literal:'Through the Fire comes a Family')}, {'title': Value(literal:'Radio')}, {'title': Value(literal:'Brothers')}, {'title': Value(literal:'Radio Silence')}, {'title': Value(literal:'Last Chance')}, {'title': Value(literal:'Exposure')}, {'title': Value(literal:'Tales Of 51')}, {'title': Value(literal:'Cinderella of Chicago')}, {'title': Value(literal:'Spooky')}, {'title': Value(literal:'Whumptober 2019 - 02 - Explosion')}, {'title': Value(literal:'Where You Belong')}, {'title': Value(literal:'Whumptober 2019 - 09 - Shackled')}, {'title': Value(literal:'Scarlet Chicago')}, {'title': Value(literal:'Whumptober 2019 - 14 - Tear-stained')}, {'title': Value(literal:'Where you go, I go')}, {'title': Value(literal:'Whumptober 2019 - 16 - Pinned Down')}, {'title': Value(literal:'Walk Me Home')}, {'title': Value(literal:'The Sevasey Collection')}, {'title': Value(literal:'Aussie One Chicago')}, {'title': Value(literal:'Sudden Changes')}, {'title': Value(literal:""I'll Defend Your Honour (Even When You Don't Need Me To)"")}, {'title': Value(literal:'Taken')}, {'title': Value(literal:'Love Is Looking For You')}, {'title': Value(literal:'Your Room in My Heart')}, {'title': Value(literal:'Full House')}, {'title': Value(literal:'Everything has Changed')}, {'title': Value(literal:'Kept Under Covers')}, {'title': Value(literal:'Holly Jolly Christmas')}, {'title': Value(literal:'Nursing on a Poison')}, {'title': Value(literal:'You’re Where I’ll Be')}, {'title': Value(literal:'Love is Blind')}, {'title': Value(literal:'Wait For It')}, {'title': Value(literal:""I'll Stand By You"")}, {'title': Value(literal:'Infinity')}, {'title': Value(literal:'Icarus Was Human Too')}, {'title': Value(literal:'Catch The Wind')}, {'title': Value(literal:'Blue and Red blood')}, {'title': Value(literal:'Crispy Realization')}, {'title': Value(literal:'pretty.')}, {'title': Value(literal:'This City is Going to Break my Heart')}, {'title': Value(literal:'Chicago Fire Tidbits')}, {'title': Value(literal:'The Right Place For Me Is Beside You')}, {'title': Value(literal:'48 Hours')}, {'title': Value(literal:'Blinded by the lights')}, {'title': Value(literal:'Unexpected')}, {'title': Value(literal:'Confession')}, {'title': Value(literal:'That Sinking Feeling')}, {'title': Value(literal:'In His Arms')}, {'title': Value(literal:'Aching Heart')}, {'title': Value(literal:'Just Me, You and Them')}, {'title': Value(literal:'Honor, Love and BDSM Polyamourous Fire Fighters')}, {'title': Value(literal:'Just A Thought')}, {'title': Value(literal:'Raising Amelia')}, {'title': Value(literal:'A Place to call Home')}, {'title': Value(literal:'A new Passion')}, {'title': Value(literal:'Ready?')}, {'title': Value(literal:'Dinner with Friends')}, {'title': Value(literal:'Unexpected')}, {'title': Value(literal:'Let the Bough Break')}, {'title': Value(literal:'9:58')}, {'title': Value(literal:'Every Breath You Take')}, {'title': Value(literal:'Damn it, Casey!')}, {'title': Value(literal:'Game Changing')}, {'title': Value(literal:""I'm Here For You - Always"")}, {'title': Value(literal:'Just Take This Heart')}, {'title': Value(literal:'The Right Time')}, {'title': Value(literal:'Save Me')}, {'title': Value(literal:'Hero Worship')}, {'title': Value(literal:'Chicago Fire 26 Reasons Why')}, {'title': Value(literal:'As it Stands')}, {'title': Value(literal:'Catch a Break')}, {'title': Value(literal:'Falling')}, {'title': Value(literal:'Meeting the Family')}, {'title': Value(literal:'misunderstandings')}]"	521	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿En qué historias sale Joe Cruz?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?story WHERE { 
?character golem:name ""Joe Cruz"" .
?character golem:characters ?story .
}
"	[]	0	0	1
522	522	es	¿En qué historias sale Gollum | Sméagol?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT ?title WHERE {  ?story golem:title ?title . ?story golem:characters ""Gollum | Sméagol"" . }"	"[{'title': Value(literal:'The Debate of the Victor and the Wizard (Original)')}, {'title': Value(literal:'A Meeting of the Minds')}, {'title': Value(literal:'The Elvenqueen')}, {'title': Value(literal:'Riddles & Redemption')}, {'title': Value(literal:'The Birth')}, {'title': Value(literal:'Evil Author Day 2020')}, {'title': Value(literal:'The Princess of Gondor Returns')}, {'title': Value(literal:'Píseň lávy')}, {'title': Value(literal:'Babcia Ruth i Kryształ Mocy')}, {'title': Value(literal:'Harry Potter and the One to Rule Them All')}, {'title': Value(literal:'A different kind of therapy')}, {'title': Value(literal:'Born from Fire')}, {'title': Value(literal:'The Hobbit: The Stuffed Animal Edition')}, {'title': Value(literal:'The Ballad of Bilbo Baggins')}, {'title': Value(literal:'[VID] Enter the Wu-Tang: 36 Chambers of Death (Collector’s Edition)')}, {'title': Value(literal:'The Gang Goes Camping')}, {'title': Value(literal:'Taking the Hobbits to Isengard')}, {'title': Value(literal:'The taming of Smeagol')}, {'title': Value(literal:'The destruction of the Ring')}, {'title': Value(literal:'在路上')}, {'title': Value(literal:'Recherche plus ou moins fructueuse')}, {'title': Value(literal:'Os tambores da guerra')}, {'title': Value(literal:'最爱的戒指')}, {'title': Value(literal:'Harry potter x ouran high school host club')}, {'title': Value(literal:'Volume 1- It begins')}, {'title': Value(literal:'The heir of Smeagol')}, {'title': Value(literal:'Pumpkins')}, {'title': Value(literal:'To Prepare A Whole Duck')}, {'title': Value(literal:'The Last Dragon')}, {'title': Value(literal:'First as a Tragedy, Then as  a Comedy')}, {'title': Value(literal:'The Guardian of Erebor')}, {'title': Value(literal:'As My Friend Has Stood By Me, So Shall I')}, {'title': Value(literal:'molten gold')}, {'title': Value(literal:'Flogging Molly is a Dwarven Punk Band')}, {'title': Value(literal:'On the Road Again')}, {'title': Value(literal:'Lord of the Limericks')}, {'title': Value(literal:'Harebell (Sam)')}, {'title': Value(literal:'Forgot (Gollum)')}, {'title': Value(literal:'Spoiling Nice Fish')}, {'title': Value(literal:'Melltithio')}, {'title': Value(literal:'brevity')}, {'title': Value(literal:'With Many Voices')}, {'title': Value(literal:'Precious')}, {'title': Value(literal:'Trinkets')}, {'title': Value(literal:'Old Yule Ficlets')}, {'title': Value(literal:'A Hundred Silver Lamps')}, {'title': Value(literal:'Remembrances at the End of All Things')}, {'title': Value(literal:'Daughters of the West')}, {'title': Value(literal:'Happy Birthday Sméagol')}, {'title': Value(literal:'The Road Goes Ever On - A Tale of Fellowship')}, {'title': Value(literal:'All Who Are Hungry')}, {'title': Value(literal:'Dead Rangers Walking')}, {'title': Value(literal:'Return To Me[Thorin Oakenshield Love Story]')}, {'title': Value(literal:'Born in Fire')}, {'title': Value(literal:""Bunk'd: LOTR Edition"")}, {'title': Value(literal:'The story of Frodo, the One Ring and how they fell in love')}, {'title': Value(literal:'For Frodo')}, {'title': Value(literal:'A night at Mordor')}, {'title': Value(literal:'The Masterwork')}, {'title': Value(literal:'In the Fridge')}, {'title': Value(literal:'Light in the Shadows')}, {'title': Value(literal:'Interloper')}, {'title': Value(literal:'Ghosts of the Past')}, {'title': Value(literal:'Gollum')}, {'title': Value(literal:'Party of None, Shadow of War')}, {'title': Value(literal:""La soif de l'or"")}, {'title': Value(literal:'Világok között')}, {'title': Value(literal:'Винчестеры тоже плачут')}, {'title': Value(literal:'Vive memor leti')}, {'title': Value(literal:'The Zero Dimension')}, {'title': Value(literal:'Heroes in Middle-earth')}, {'title': Value(literal:'Road Trip')}, {'title': Value(literal:'Into the Blue')}, {'title': Value(literal:'Universally Acknowledged')}, {'title': Value(literal:'An Oath of Snow and Shadow')}, {'title': Value(literal:'An Acorn and A Mountain')}, {'title': Value(literal:'Roommates')}, {'title': Value(literal:'Room Mates')}, {'title': Value(literal:'Of Feathers, Claws and Werebird Hobbits')}, {'title': Value(literal:'The Highest Treasure')}, {'title': Value(literal:'Mist Upon the Eyes')}, {'title': Value(literal:'A ""Little"" Problem')}, {'title': Value(literal:'Faerie Lore')}, {'title': Value(literal:'The Beginning Of A Adventure')}, {'title': Value(literal:'Per rectum')}, {'title': Value(literal:'I Will Always Be With You')}, {'title': Value(literal:'A Not So Unwelcome Journey')}, {'title': Value(literal:'Bilbo Baggins: Frying Pan Wielder')}, {'title': Value(literal:""Things I Have Loved I'm Allowed to Keep"")}, {'title': Value(literal:'The Hobbit (with a twist)')}, {'title': Value(literal:'I Can Finally Rest')}, {'title': Value(literal:'Traveling with Idiots')}, {'title': Value(literal:'War-Zone Shopping')}, {'title': Value(literal:'Frodo and Sam go to… Wreck-it Ralph?!?!')}, {'title': Value(literal:'Wood Ears')}, {'title': Value(literal:'A Question of Luck')}, {'title': Value(literal:'Bottomless')}, {'title': Value(literal:'Ringburn')}, {'title': Value(literal:'Who Put the Blood')}, {'title': Value(literal:'[vid] Odds Are')}, {'title': Value(literal:'Wine')}, {'title': Value(literal:'The Precious Baby Phenomenon Unpacked: A Treatise on Obstetric Care in The Returned by I.L. Finwiel and the Istar Institute')}, {'title': Value(literal:'Green Taters')}, {'title': Value(literal:'An Ode to Frodo')}, {'title': Value(literal:""Schrödinger's Hobbit"")}, {'title': Value(literal:'My Precious')}, {'title': Value(literal:'Friend')}, {'title': Value(literal:'Snaccc Time with Smeagol')}, {'title': Value(literal:'Eggy Farts')}, {'title': Value(literal:'End of Innocence')}, {'title': Value(literal:'A New Home')}, {'title': Value(literal:'Like father like son')}, {'title': Value(literal:'Ringless')}, {'title': Value(literal:'The Drums of War')}, {'title': Value(literal:'A Fine Line Between Light and Darkness')}, {'title': Value(literal:'The Gentleman')}, {'title': Value(literal:'A Sage Decision')}, {'title': Value(literal:'Precious, Beloved')}, {'title': Value(literal:""L'anello non è libertà"")}, {'title': Value(literal:'Io, me e me stesso')}, {'title': Value(literal:'Los tambores de guerra')}, {'title': Value(literal:'CURSED: Nights at the VA')}, {'title': Value(literal:'Battle of the mind and the heart')}, {'title': Value(literal:'A Study In Soufflés')}, {'title': Value(literal:'A Second Chance')}, {'title': Value(literal:'Come Wander')}, {'title': Value(literal:'The Tomb of Halanord')}, {'title': Value(literal:'The Unexpected Adventure')}, {'title': Value(literal:'An Unexpected Tagalong')}, {'title': Value(literal:'A Cracking Celebration')}, {'title': Value(literal:'Riddles in the Dark')}, {'title': Value(literal:'The Quest for Ourselves')}, {'title': Value(literal:'Diary of a Mirkwood Elf')}, {'title': Value(literal:'Burrower')}, {'title': Value(literal:'You are not Ape')}, {'title': Value(literal:'Riddling in the Dark')}, {'title': Value(literal:'Unmaking the Ring')}, {'title': Value(literal:'The Lord of The Rings: The Two Towers (Re-imagined)')}, {'title': Value(literal:'The Lord of The Rings: Return of The King (Re-imagined)')}, {'title': Value(literal:'The Path To Decay')}, {'title': Value(literal:'Reptile')}, {'title': Value(literal:'Luna')}, {'title': Value(literal:'Tesoro')}, {'title': Value(literal:'Sauron Trending Topic')}, {'title': Value(literal:'The Sword At The Edge Of The World')}, {'title': Value(literal:'The Nothing')}, {'title': Value(literal:'Alterim')}, {'title': Value(literal:'A Game of Life or Death (and Riddles)')}, {'title': Value(literal:""L'escalier de Cirith Ungol"")}, {'title': Value(literal:""La rentrée d'Eowyn"")}, {'title': Value(literal:'De tódolos xeitos en que se pode')}, {'title': Value(literal:""It's A Funny Story..."")}, {'title': Value(literal:'Well there was a time that you let me know')}, {'title': Value(literal:'The Fog')}, {'title': Value(literal:'Unto the Ending of the World')}, {'title': Value(literal:'Cold Snap')}, {'title': Value(literal:""The Elf's Wolf"")}, {'title': Value(literal:'Shadow Of Catra')}, {'title': Value(literal:'Lord of the Rings Trilogy • One Ring to Rule Them All [20th Anniversary] - FanVid')}, {'title': Value(literal:'The Power of the Ring')}, {'title': Value(literal:""La sai l'ultima? (Che cos'ho in tasca?)"")}, {'title': Value(literal:'Vater in meinen Träumen')}, {'title': Value(literal:'The drums of war')}, {'title': Value(literal:'Hobit aneb Tajný deník nájemného společníka')}, {'title': Value(literal:'Лесные тени')}, {'title': Value(literal:'Multi-Fandom • ""What did it cost?"" [Fanvid]')}, {'title': Value(literal:'A new Quest, a new Fellowship')}, {'title': Value(literal:'Our Flag Means Extra Death')}, {'title': Value(literal:'Transported')}, {'title': Value(literal:'So Far From Home')}, {'title': Value(literal:'An Unexpected Attachment')}, {'title': Value(literal:'River of Deceit')}, {'title': Value(literal:'Lord Of The Rings, Fellowship Of The Carrot')}, {'title': Value(literal:'We Wants It')}, {'title': Value(literal:'~and Anduin is near~')}, {'title': Value(literal:'Bath Time in Ithilien')}, {'title': Value(literal:'The Magical Unifying Powers of Gratuitous Selfies')}, {'title': Value(literal:""it was pity that stayed faramir's bow, young baggins"")}, {'title': Value(literal:'Middle Earth Parody Songs')}, {'title': Value(literal:'A God Has Cursed Me With This Sight')}, {'title': Value(literal:'Point of Origin')}, {'title': Value(literal:""Wayland's Smithy"")}, {'title': Value(literal:'The House of Angmar')}, {'title': Value(literal:'goodbye, hello')}, {'title': Value(literal:'Gollum')}, {'title': Value(literal:'Drabbles and One Shots of Lord Of The Rings')}, {'title': Value(literal:'Golum and Frodo, a love stoty')}, {'title': Value(literal:'Nowhere to go but Down')}, {'title': Value(literal:'Fish')}, {'title': Value(literal:'The Return of the (Witch) King')}, {'title': Value(literal:'Encyclopaedia Middle-Earth')}, {'title': Value(literal:'That night with Gollum')}, {'title': Value(literal:'Ancient Legends Return')}, {'title': Value(literal:'night moves')}, {'title': Value(literal:'rest my bones besides yours, my precious one')}, {'title': Value(literal:'The stairs of Cirith Ungol')}, {'title': Value(literal:'The End of All Things')}, {'title': Value(literal:'The Music of Memories')}, {'title': Value(literal:'fire and rain')}, {'title': Value(literal:'The Beginnings and Ends of Shadow Lie Between the Light and Darkness.')}, {'title': Value(literal:""Elwen's Drabbledom"")}, {'title': Value(literal:'The Last Mighty Child of Ungoliant')}, {'title': Value(literal:'Come over, Mister Frodo!')}, {'title': Value(literal:'Song of Exile')}, {'title': Value(literal:""Red as a Rose, Black as Raven's wing, White as the Arkenstone."")}, {'title': Value(literal:'Lord of Eryn Lasgalen')}, {'title': Value(literal:'A Change of Fate')}, {'title': Value(literal:'A Slight Change of Pace')}, {'title': Value(literal:'The Importance of Language')}, {'title': Value(literal:'Insight')}, {'title': Value(literal:'Opposites Attract')}, {'title': Value(literal:'Parasite')}, {'title': Value(literal:'One Voice to Torture Them All')}, {'title': Value(literal:'Precious')}, {'title': Value(literal:'A Balanced Meal')}, {'title': Value(literal:""The Took's Arrangement"")}, {'title': Value(literal:'Hollow Halls')}, {'title': Value(literal:'Unbroken')}, {'title': Value(literal:'What Fool Invented Kissing')}, {'title': Value(literal:'An End of Dying')}, {'title': Value(literal:'The Demon of the Galactic World')}, {'title': Value(literal:'Fellowship Discord Sings (""The Road Goes Ever On And On"")')}, {'title': Value(literal:'Carry You')}, {'title': Value(literal:""Starfleet Special Forces: Dominion's End"")}, {'title': Value(literal:'You put the ring....where')}, {'title': Value(literal:'Cold')}, {'title': Value(literal:'Ménage à Trois')}, {'title': Value(literal:'Smeagols Love.')}, {'title': Value(literal:'The Show')}, {'title': Value(literal:'The Kindest')}, {'title': Value(literal:'The Only Gold in Gray')}, {'title': Value(literal:'Eyes Like Mine')}, {'title': Value(literal:'Inside')}, {'title': Value(literal:'The Ten-Minute Two Towers')}, {'title': Value(literal:'Precious')}, {'title': Value(literal:""Smeagol's Song"")}, {'title': Value(literal:""Don't Stir until Daybreak"")}, {'title': Value(literal:'Through the Darkness')}, {'title': Value(literal:'Hush')}, {'title': Value(literal:'Searchers & Lovers & Leavers')}, {'title': Value(literal:'One Monocle To Spy On Them All')}, {'title': Value(literal:'Saudade')}, {'title': Value(literal:'A Change Would Do You Good')}, {'title': Value(literal:'Soit dit en passant')}, {'title': Value(literal:'Las Hojas del Destino')}, {'title': Value(literal:'Прелесть')}, {'title': Value(literal:'This Long and Winding Road')}, {'title': Value(literal:'A Sudden Keen Glance')}, {'title': Value(literal:'War of the Ring: Deleted Scenes and Abandoned Concepts')}, {'title': Value(literal:'Short Story about Love')}, {'title': Value(literal:'You Can Never Go Home')}, {'title': Value(literal:'Across The Barriers of Mortality')}, {'title': Value(literal:'Hope From Ashes')}, {'title': Value(literal:'Warrior of the Sea')}, {'title': Value(literal:'shattered into ash')}, {'title': Value(literal:'In All the Ways There Were')}, {'title': Value(literal:'The Very Last Time Sméagol Was Alone')}, {'title': Value(literal:'Reunion in Mirkwood')}, {'title': Value(literal:'The Road After Imladris')}, {'title': Value(literal:'Imprisonment at Barad-dûr')}, {'title': Value(literal:'A Hard Truth')}, {'title': Value(literal:'The Prize')}, {'title': Value(literal:'Impractical Hobbits: Round Five!')}, {'title': Value(literal:'A Meeting in the Dark')}, {'title': Value(literal:'Gollum x Reader')}, {'title': Value(literal:'Lord of the Rings: Fairest of Them All (Choices)')}, {'title': Value(literal:'The sound of the wind')}, {'title': Value(literal:'""Let me tell you the tales of High Adventure""')}, {'title': Value(literal:'Wish Fulfillment')}, {'title': Value(literal:'your hand in my hand, so still and discreet')}, {'title': Value(literal:'Moments Between')}, {'title': Value(literal:'The Halfling Who Would Be King')}, {'title': Value(literal:'The Unforgiven')}, {'title': Value(literal:'return')}, {'title': Value(literal:'The Temptation of Galadriel')}, {'title': Value(literal:'Thief in the Night')}, {'title': Value(literal:'sharing the load.')}, {'title': Value(literal:""Queen's Gambit"")}, {'title': Value(literal:'Unexpected Consequences')}, {'title': Value(literal:'Strength and Will')}, {'title': Value(literal:""The One Rings's Diary"")}, {'title': Value(literal:'War of the Ring')}, {'title': Value(literal:'Por ahora')}, {'title': Value(literal:'Хоббиты: правда и вымысел')}, {'title': Value(literal:'The Fault In Our Concussions')}, {'title': Value(literal:'Behind the Scars')}, {'title': Value(literal:'You will find me right where I fell')}, {'title': Value(literal:'bilbo and the horrible, no good, very bad journey')}, {'title': Value(literal:'An Unexpected Angel')}, {'title': Value(literal:'The Return of Gollum')}, {'title': Value(literal:'Apart Forever... Nay, Forever A Part')}, {'title': Value(literal:'Wanderer')}, {'title': Value(literal:'Moonlit')}, {'title': Value(literal:'The Courage of Hobbits')}, {'title': Value(literal:'Ithildin')}, {'title': Value(literal:'The Hobbit: An Unexpected Addition')}, {'title': Value(literal:""The Hobbit: Death's Returning Door"")}, {'title': Value(literal:'Fallen Kings')}, {'title': Value(literal:""I've Never Had to Knock on Wood, But I Know Someone Who Has"")}, {'title': Value(literal:'Where the Precious Goes')}, {'title': Value(literal:'The Labyrinth')}, {'title': Value(literal:'In the End')}, {'title': Value(literal:'The Thief Will Wonder No More')}, {'title': Value(literal:'Two Sides Of One Coin')}, {'title': Value(literal:'Gollum on his Quest for Frodos Ring')}, {'title': Value(literal:'Much Ado About Baggins')}, {'title': Value(literal:""A Secret Gate, Book 1: Home's Heart"")}, {'title': Value(literal:'The night it all becomes clear')}, {'title': Value(literal:'Riddles in the Dark')}, {'title': Value(literal:'Not Over Yet')}, {'title': Value(literal:'Dwarfses in the Dark')}, {'title': Value(literal:'Four Fingers')}, {'title': Value(literal:""Gollum's Lament"")}, {'title': Value(literal:'The Peoples of Arda')}, {'title': Value(literal:'Cat of the Fellowship')}, {'title': Value(literal:'Make it Out Alive')}, {'title': Value(literal:'moonstones')}, {'title': Value(literal:'Samwise Gamgee vs A Small Naked Cat')}, {'title': Value(literal:'Nine Companions, Almost')}, {'title': Value(literal:'LOTR flashfic 5+1')}, {'title': Value(literal:'Bauble-Eyes')}, {'title': Value(literal:'Out of Reach')}, {'title': Value(literal:'Two hungry uncles gyrating to the beat')}, {'title': Value(literal:'Ladies of the Ring: Return of the King')}, {'title': Value(literal:'The Two Prettiest')}, {'title': Value(literal:'Why One Should Not Stray So Close To Dol Guldor')}, {'title': Value(literal:'Precious, My Precious')}, {'title': Value(literal:'Addicted to the One Ring')}, {'title': Value(literal:'Gollum’s Redemption')}, {'title': Value(literal:'[Video] Большой пшик')}, {'title': Value(literal:'Happiness is a Warm Gun')}, {'title': Value(literal:'What The... Who the Hell is That?')}, {'title': Value(literal:'yoda fatal vores palpatine')}]"	522	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿En qué historias sale Gollum | Sméagol?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?storyTitle WHERE { 
?story golem:characters ""Gollum | Sméagol"" . 
?story golem:title ?storyTitle . 
}
"	"[{'storyTitle': Value(literal:'The Debate of the Victor and the Wizard (Original)')}, {'storyTitle': Value(literal:'A Meeting of the Minds')}, {'storyTitle': Value(literal:'The Elvenqueen')}, {'storyTitle': Value(literal:'Riddles & Redemption')}, {'storyTitle': Value(literal:'The Birth')}, {'storyTitle': Value(literal:'Evil Author Day 2020')}, {'storyTitle': Value(literal:'The Princess of Gondor Returns')}, {'storyTitle': Value(literal:'Píseň lávy')}, {'storyTitle': Value(literal:'Babcia Ruth i Kryształ Mocy')}, {'storyTitle': Value(literal:'Harry Potter and the One to Rule Them All')}, {'storyTitle': Value(literal:'A different kind of therapy')}, {'storyTitle': Value(literal:'Born from Fire')}, {'storyTitle': Value(literal:'The Hobbit: The Stuffed Animal Edition')}, {'storyTitle': Value(literal:'The Ballad of Bilbo Baggins')}, {'storyTitle': Value(literal:'[VID] Enter the Wu-Tang: 36 Chambers of Death (Collector’s Edition)')}, {'storyTitle': Value(literal:'The Gang Goes Camping')}, {'storyTitle': Value(literal:'Taking the Hobbits to Isengard')}, {'storyTitle': Value(literal:'The taming of Smeagol')}, {'storyTitle': Value(literal:'The destruction of the Ring')}, {'storyTitle': Value(literal:'在路上')}, {'storyTitle': Value(literal:'Recherche plus ou moins fructueuse')}, {'storyTitle': Value(literal:'Os tambores da guerra')}, {'storyTitle': Value(literal:'最爱的戒指')}, {'storyTitle': Value(literal:'Harry potter x ouran high school host club')}, {'storyTitle': Value(literal:'Volume 1- It begins')}, {'storyTitle': Value(literal:'The heir of Smeagol')}, {'storyTitle': Value(literal:'Pumpkins')}, {'storyTitle': Value(literal:'To Prepare A Whole Duck')}, {'storyTitle': Value(literal:'The Last Dragon')}, {'storyTitle': Value(literal:'First as a Tragedy, Then as  a Comedy')}, {'storyTitle': Value(literal:'The Guardian of Erebor')}, {'storyTitle': Value(literal:'As My Friend Has Stood By Me, So Shall I')}, {'storyTitle': Value(literal:'molten gold')}, {'storyTitle': Value(literal:'Flogging Molly is a Dwarven Punk Band')}, {'storyTitle': Value(literal:'On the Road Again')}, {'storyTitle': Value(literal:'Lord of the Limericks')}, {'storyTitle': Value(literal:'Harebell (Sam)')}, {'storyTitle': Value(literal:'Forgot (Gollum)')}, {'storyTitle': Value(literal:'Spoiling Nice Fish')}, {'storyTitle': Value(literal:'Melltithio')}, {'storyTitle': Value(literal:'brevity')}, {'storyTitle': Value(literal:'With Many Voices')}, {'storyTitle': Value(literal:'Precious')}, {'storyTitle': Value(literal:'Trinkets')}, {'storyTitle': Value(literal:'Old Yule Ficlets')}, {'storyTitle': Value(literal:'A Hundred Silver Lamps')}, {'storyTitle': Value(literal:'Remembrances at the End of All Things')}, {'storyTitle': Value(literal:'Daughters of the West')}, {'storyTitle': Value(literal:'Happy Birthday Sméagol')}, {'storyTitle': Value(literal:'The Road Goes Ever On - A Tale of Fellowship')}, {'storyTitle': Value(literal:'All Who Are Hungry')}, {'storyTitle': Value(literal:'Dead Rangers Walking')}, {'storyTitle': Value(literal:'Return To Me[Thorin Oakenshield Love Story]')}, {'storyTitle': Value(literal:'Born in Fire')}, {'storyTitle': Value(literal:""Bunk'd: LOTR Edition"")}, {'storyTitle': Value(literal:'The story of Frodo, the One Ring and how they fell in love')}, {'storyTitle': Value(literal:'For Frodo')}, {'storyTitle': Value(literal:'A night at Mordor')}, {'storyTitle': Value(literal:'The Masterwork')}, {'storyTitle': Value(literal:'In the Fridge')}, {'storyTitle': Value(literal:'Light in the Shadows')}, {'storyTitle': Value(literal:'Interloper')}, {'storyTitle': Value(literal:'Ghosts of the Past')}, {'storyTitle': Value(literal:'Gollum')}, {'storyTitle': Value(literal:'Party of None, Shadow of War')}, {'storyTitle': Value(literal:""La soif de l'or"")}, {'storyTitle': Value(literal:'Világok között')}, {'storyTitle': Value(literal:'Винчестеры тоже плачут')}, {'storyTitle': Value(literal:'Vive memor leti')}, {'storyTitle': Value(literal:'The Zero Dimension')}, {'storyTitle': Value(literal:'Heroes in Middle-earth')}, {'storyTitle': Value(literal:'Road Trip')}, {'storyTitle': Value(literal:'Into the Blue')}, {'storyTitle': Value(literal:'Universally Acknowledged')}, {'storyTitle': Value(literal:'An Oath of Snow and Shadow')}, {'storyTitle': Value(literal:'An Acorn and A Mountain')}, {'storyTitle': Value(literal:'Roommates')}, {'storyTitle': Value(literal:'Room Mates')}, {'storyTitle': Value(literal:'Of Feathers, Claws and Werebird Hobbits')}, {'storyTitle': Value(literal:'The Highest Treasure')}, {'storyTitle': Value(literal:'Mist Upon the Eyes')}, {'storyTitle': Value(literal:'A ""Little"" Problem')}, {'storyTitle': Value(literal:'Faerie Lore')}, {'storyTitle': Value(literal:'The Beginning Of A Adventure')}, {'storyTitle': Value(literal:'Per rectum')}, {'storyTitle': Value(literal:'I Will Always Be With You')}, {'storyTitle': Value(literal:'A Not So Unwelcome Journey')}, {'storyTitle': Value(literal:'Bilbo Baggins: Frying Pan Wielder')}, {'storyTitle': Value(literal:""Things I Have Loved I'm Allowed to Keep"")}, {'storyTitle': Value(literal:'The Hobbit (with a twist)')}, {'storyTitle': Value(literal:'I Can Finally Rest')}, {'storyTitle': Value(literal:'Traveling with Idiots')}, {'storyTitle': Value(literal:'War-Zone Shopping')}, {'storyTitle': Value(literal:'Frodo and Sam go to… Wreck-it Ralph?!?!')}, {'storyTitle': Value(literal:'Wood Ears')}, {'storyTitle': Value(literal:'A Question of Luck')}, {'storyTitle': Value(literal:'Bottomless')}, {'storyTitle': Value(literal:'Ringburn')}, {'storyTitle': Value(literal:'Who Put the Blood')}, {'storyTitle': Value(literal:'[vid] Odds Are')}, {'storyTitle': Value(literal:'Wine')}, {'storyTitle': Value(literal:'The Precious Baby Phenomenon Unpacked: A Treatise on Obstetric Care in The Returned by I.L. Finwiel and the Istar Institute')}, {'storyTitle': Value(literal:'Green Taters')}, {'storyTitle': Value(literal:'An Ode to Frodo')}, {'storyTitle': Value(literal:""Schrödinger's Hobbit"")}, {'storyTitle': Value(literal:'My Precious')}, {'storyTitle': Value(literal:'Friend')}, {'storyTitle': Value(literal:'Snaccc Time with Smeagol')}, {'storyTitle': Value(literal:'Eggy Farts')}, {'storyTitle': Value(literal:'End of Innocence')}, {'storyTitle': Value(literal:'A New Home')}, {'storyTitle': Value(literal:'Like father like son')}, {'storyTitle': Value(literal:'Ringless')}, {'storyTitle': Value(literal:'The Drums of War')}, {'storyTitle': Value(literal:'A Fine Line Between Light and Darkness')}, {'storyTitle': Value(literal:'The Gentleman')}, {'storyTitle': Value(literal:'A Sage Decision')}, {'storyTitle': Value(literal:'Precious, Beloved')}, {'storyTitle': Value(literal:""L'anello non è libertà"")}, {'storyTitle': Value(literal:'Io, me e me stesso')}, {'storyTitle': Value(literal:'Los tambores de guerra')}, {'storyTitle': Value(literal:'CURSED: Nights at the VA')}, {'storyTitle': Value(literal:'Battle of the mind and the heart')}, {'storyTitle': Value(literal:'A Study In Soufflés')}, {'storyTitle': Value(literal:'A Second Chance')}, {'storyTitle': Value(literal:'Come Wander')}, {'storyTitle': Value(literal:'The Tomb of Halanord')}, {'storyTitle': Value(literal:'The Unexpected Adventure')}, {'storyTitle': Value(literal:'An Unexpected Tagalong')}, {'storyTitle': Value(literal:'A Cracking Celebration')}, {'storyTitle': Value(literal:'Riddles in the Dark')}, {'storyTitle': Value(literal:'The Quest for Ourselves')}, {'storyTitle': Value(literal:'Diary of a Mirkwood Elf')}, {'storyTitle': Value(literal:'Burrower')}, {'storyTitle': Value(literal:'You are not Ape')}, {'storyTitle': Value(literal:'Riddling in the Dark')}, {'storyTitle': Value(literal:'Unmaking the Ring')}, {'storyTitle': Value(literal:'The Lord of The Rings: The Two Towers (Re-imagined)')}, {'storyTitle': Value(literal:'The Lord of The Rings: Return of The King (Re-imagined)')}, {'storyTitle': Value(literal:'The Path To Decay')}, {'storyTitle': Value(literal:'Reptile')}, {'storyTitle': Value(literal:'Luna')}, {'storyTitle': Value(literal:'Tesoro')}, {'storyTitle': Value(literal:'Sauron Trending Topic')}, {'storyTitle': Value(literal:'The Sword At The Edge Of The World')}, {'storyTitle': Value(literal:'The Nothing')}, {'storyTitle': Value(literal:'Alterim')}, {'storyTitle': Value(literal:'A Game of Life or Death (and Riddles)')}, {'storyTitle': Value(literal:""L'escalier de Cirith Ungol"")}, {'storyTitle': Value(literal:""La rentrée d'Eowyn"")}, {'storyTitle': Value(literal:'De tódolos xeitos en que se pode')}, {'storyTitle': Value(literal:""It's A Funny Story..."")}, {'storyTitle': Value(literal:'Well there was a time that you let me know')}, {'storyTitle': Value(literal:'The Fog')}, {'storyTitle': Value(literal:'Unto the Ending of the World')}, {'storyTitle': Value(literal:'Cold Snap')}, {'storyTitle': Value(literal:""The Elf's Wolf"")}, {'storyTitle': Value(literal:'Shadow Of Catra')}, {'storyTitle': Value(literal:'Lord of the Rings Trilogy • One Ring to Rule Them All [20th Anniversary] - FanVid')}, {'storyTitle': Value(literal:'The Power of the Ring')}, {'storyTitle': Value(literal:""La sai l'ultima? (Che cos'ho in tasca?)"")}, {'storyTitle': Value(literal:'Vater in meinen Träumen')}, {'storyTitle': Value(literal:'The drums of war')}, {'storyTitle': Value(literal:'Hobit aneb Tajný deník nájemného společníka')}, {'storyTitle': Value(literal:'Лесные тени')}, {'storyTitle': Value(literal:'Multi-Fandom • ""What did it cost?"" [Fanvid]')}, {'storyTitle': Value(literal:'A new Quest, a new Fellowship')}, {'storyTitle': Value(literal:'Our Flag Means Extra Death')}, {'storyTitle': Value(literal:'Transported')}, {'storyTitle': Value(literal:'So Far From Home')}, {'storyTitle': Value(literal:'An Unexpected Attachment')}, {'storyTitle': Value(literal:'River of Deceit')}, {'storyTitle': Value(literal:'Lord Of The Rings, Fellowship Of The Carrot')}, {'storyTitle': Value(literal:'We Wants It')}, {'storyTitle': Value(literal:'~and Anduin is near~')}, {'storyTitle': Value(literal:'Bath Time in Ithilien')}, {'storyTitle': Value(literal:'The Magical Unifying Powers of Gratuitous Selfies')}, {'storyTitle': Value(literal:""it was pity that stayed faramir's bow, young baggins"")}, {'storyTitle': Value(literal:'Middle Earth Parody Songs')}, {'storyTitle': Value(literal:'A God Has Cursed Me With This Sight')}, {'storyTitle': Value(literal:'Point of Origin')}, {'storyTitle': Value(literal:""Wayland's Smithy"")}, {'storyTitle': Value(literal:'The House of Angmar')}, {'storyTitle': Value(literal:'goodbye, hello')}, {'storyTitle': Value(literal:'Drabbles and One Shots of Lord Of The Rings')}, {'storyTitle': Value(literal:'Golum and Frodo, a love stoty')}, {'storyTitle': Value(literal:'Nowhere to go but Down')}, {'storyTitle': Value(literal:'Fish')}, {'storyTitle': Value(literal:'The Return of the (Witch) King')}, {'storyTitle': Value(literal:'Encyclopaedia Middle-Earth')}, {'storyTitle': Value(literal:'That night with Gollum')}, {'storyTitle': Value(literal:'Ancient Legends Return')}, {'storyTitle': Value(literal:'night moves')}, {'storyTitle': Value(literal:'rest my bones besides yours, my precious one')}, {'storyTitle': Value(literal:'The stairs of Cirith Ungol')}, {'storyTitle': Value(literal:'The End of All Things')}, {'storyTitle': Value(literal:'The Music of Memories')}, {'storyTitle': Value(literal:'fire and rain')}, {'storyTitle': Value(literal:'The Beginnings and Ends of Shadow Lie Between the Light and Darkness.')}, {'storyTitle': Value(literal:""Elwen's Drabbledom"")}, {'storyTitle': Value(literal:'The Last Mighty Child of Ungoliant')}, {'storyTitle': Value(literal:'Come over, Mister Frodo!')}, {'storyTitle': Value(literal:'Song of Exile')}, {'storyTitle': Value(literal:""Red as a Rose, Black as Raven's wing, White as the Arkenstone."")}, {'storyTitle': Value(literal:'Lord of Eryn Lasgalen')}, {'storyTitle': Value(literal:'A Change of Fate')}, {'storyTitle': Value(literal:'A Slight Change of Pace')}, {'storyTitle': Value(literal:'The Importance of Language')}, {'storyTitle': Value(literal:'Insight')}, {'storyTitle': Value(literal:'Opposites Attract')}, {'storyTitle': Value(literal:'Parasite')}, {'storyTitle': Value(literal:'One Voice to Torture Them All')}, {'storyTitle': Value(literal:'A Balanced Meal')}, {'storyTitle': Value(literal:""The Took's Arrangement"")}, {'storyTitle': Value(literal:'Hollow Halls')}, {'storyTitle': Value(literal:'Unbroken')}, {'storyTitle': Value(literal:'What Fool Invented Kissing')}, {'storyTitle': Value(literal:'An End of Dying')}, {'storyTitle': Value(literal:'The Demon of the Galactic World')}, {'storyTitle': Value(literal:'Fellowship Discord Sings (""The Road Goes Ever On And On"")')}, {'storyTitle': Value(literal:'Carry You')}, {'storyTitle': Value(literal:""Starfleet Special Forces: Dominion's End"")}, {'storyTitle': Value(literal:'You put the ring....where')}, {'storyTitle': Value(literal:'Cold')}, {'storyTitle': Value(literal:'Ménage à Trois')}, {'storyTitle': Value(literal:'Smeagols Love.')}, {'storyTitle': Value(literal:'The Show')}, {'storyTitle': Value(literal:'The Kindest')}, {'storyTitle': Value(literal:'The Only Gold in Gray')}, {'storyTitle': Value(literal:'Eyes Like Mine')}, {'storyTitle': Value(literal:'Inside')}, {'storyTitle': Value(literal:'The Ten-Minute Two Towers')}, {'storyTitle': Value(literal:""Smeagol's Song"")}, {'storyTitle': Value(literal:""Don't Stir until Daybreak"")}, {'storyTitle': Value(literal:'Through the Darkness')}, {'storyTitle': Value(literal:'Hush')}, {'storyTitle': Value(literal:'Searchers & Lovers & Leavers')}, {'storyTitle': Value(literal:'One Monocle To Spy On Them All')}, {'storyTitle': Value(literal:'Saudade')}, {'storyTitle': Value(literal:'A Change Would Do You Good')}, {'storyTitle': Value(literal:'Soit dit en passant')}, {'storyTitle': Value(literal:'Las Hojas del Destino')}, {'storyTitle': Value(literal:'Прелесть')}, {'storyTitle': Value(literal:'This Long and Winding Road')}, {'storyTitle': Value(literal:'A Sudden Keen Glance')}, {'storyTitle': Value(literal:'War of the Ring: Deleted Scenes and Abandoned Concepts')}, {'storyTitle': Value(literal:'Short Story about Love')}, {'storyTitle': Value(literal:'You Can Never Go Home')}, {'storyTitle': Value(literal:'Across The Barriers of Mortality')}, {'storyTitle': Value(literal:'Hope From Ashes')}, {'storyTitle': Value(literal:'Warrior of the Sea')}, {'storyTitle': Value(literal:'shattered into ash')}, {'storyTitle': Value(literal:'In All the Ways There Were')}, {'storyTitle': Value(literal:'The Very Last Time Sméagol Was Alone')}, {'storyTitle': Value(literal:'Reunion in Mirkwood')}, {'storyTitle': Value(literal:'The Road After Imladris')}, {'storyTitle': Value(literal:'Imprisonment at Barad-dûr')}, {'storyTitle': Value(literal:'A Hard Truth')}, {'storyTitle': Value(literal:'The Prize')}, {'storyTitle': Value(literal:'Impractical Hobbits: Round Five!')}, {'storyTitle': Value(literal:'A Meeting in the Dark')}, {'storyTitle': Value(literal:'Gollum x Reader')}, {'storyTitle': Value(literal:'Lord of the Rings: Fairest of Them All (Choices)')}, {'storyTitle': Value(literal:'The sound of the wind')}, {'storyTitle': Value(literal:'""Let me tell you the tales of High Adventure""')}, {'storyTitle': Value(literal:'Wish Fulfillment')}, {'storyTitle': Value(literal:'your hand in my hand, so still and discreet')}, {'storyTitle': Value(literal:'Moments Between')}, {'storyTitle': Value(literal:'The Halfling Who Would Be King')}, {'storyTitle': Value(literal:'The Unforgiven')}, {'storyTitle': Value(literal:'return')}, {'storyTitle': Value(literal:'The Temptation of Galadriel')}, {'storyTitle': Value(literal:'Thief in the Night')}, {'storyTitle': Value(literal:'sharing the load.')}, {'storyTitle': Value(literal:""Queen's Gambit"")}, {'storyTitle': Value(literal:'Unexpected Consequences')}, {'storyTitle': Value(literal:'Strength and Will')}, {'storyTitle': Value(literal:""The One Rings's Diary"")}, {'storyTitle': Value(literal:'War of the Ring')}, {'storyTitle': Value(literal:'Por ahora')}, {'storyTitle': Value(literal:'Хоббиты: правда и вымысел')}, {'storyTitle': Value(literal:'The Fault In Our Concussions')}, {'storyTitle': Value(literal:'Behind the Scars')}, {'storyTitle': Value(literal:'You will find me right where I fell')}, {'storyTitle': Value(literal:'bilbo and the horrible, no good, very bad journey')}, {'storyTitle': Value(literal:'An Unexpected Angel')}, {'storyTitle': Value(literal:'The Return of Gollum')}, {'storyTitle': Value(literal:'Apart Forever... Nay, Forever A Part')}, {'storyTitle': Value(literal:'Wanderer')}, {'storyTitle': Value(literal:'Moonlit')}, {'storyTitle': Value(literal:'The Courage of Hobbits')}, {'storyTitle': Value(literal:'Ithildin')}, {'storyTitle': Value(literal:'The Hobbit: An Unexpected Addition')}, {'storyTitle': Value(literal:""The Hobbit: Death's Returning Door"")}, {'storyTitle': Value(literal:'Fallen Kings')}, {'storyTitle': Value(literal:""I've Never Had to Knock on Wood, But I Know Someone Who Has"")}, {'storyTitle': Value(literal:'Where the Precious Goes')}, {'storyTitle': Value(literal:'The Labyrinth')}, {'storyTitle': Value(literal:'In the End')}, {'storyTitle': Value(literal:'The Thief Will Wonder No More')}, {'storyTitle': Value(literal:'Two Sides Of One Coin')}, {'storyTitle': Value(literal:'Gollum on his Quest for Frodos Ring')}, {'storyTitle': Value(literal:'Much Ado About Baggins')}, {'storyTitle': Value(literal:""A Secret Gate, Book 1: Home's Heart"")}, {'storyTitle': Value(literal:'The night it all becomes clear')}, {'storyTitle': Value(literal:'Not Over Yet')}, {'storyTitle': Value(literal:'Dwarfses in the Dark')}, {'storyTitle': Value(literal:'Four Fingers')}, {'storyTitle': Value(literal:""Gollum's Lament"")}, {'storyTitle': Value(literal:'The Peoples of Arda')}, {'storyTitle': Value(literal:'Cat of the Fellowship')}, {'storyTitle': Value(literal:'Make it Out Alive')}, {'storyTitle': Value(literal:'moonstones')}, {'storyTitle': Value(literal:'Samwise Gamgee vs A Small Naked Cat')}, {'storyTitle': Value(literal:'Nine Companions, Almost')}, {'storyTitle': Value(literal:'LOTR flashfic 5+1')}, {'storyTitle': Value(literal:'Bauble-Eyes')}, {'storyTitle': Value(literal:'Out of Reach')}, {'storyTitle': Value(literal:'Two hungry uncles gyrating to the beat')}, {'storyTitle': Value(literal:'Ladies of the Ring: Return of the King')}, {'storyTitle': Value(literal:'The Two Prettiest')}, {'storyTitle': Value(literal:'Why One Should Not Stray So Close To Dol Guldor')}, {'storyTitle': Value(literal:'Precious, My Precious')}, {'storyTitle': Value(literal:'Addicted to the One Ring')}, {'storyTitle': Value(literal:'Gollum’s Redemption')}, {'storyTitle': Value(literal:'[Video] Большой пшик')}, {'storyTitle': Value(literal:'Happiness is a Warm Gun')}, {'storyTitle': Value(literal:'What The... Who the Hell is That?')}, {'storyTitle': Value(literal:'yoda fatal vores palpatine')}]"	0	1	1
523	523	es	¿En qué historias sale Apple?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT ?title WHERE {  ?story golem:title ?title . ?story golem:characters ""Apple"" . }"	"[{'title': Value(literal:'drarry is threatened by an apple')}, {'title': Value(literal:'Demise of Drapple')}, {'title': Value(literal:'Harry Potter and The Fruity Adventure (not starring Harry Potter)')}, {'title': Value(literal:'【Drapple】Goodbye Yesterday')}, {'title': Value(literal:'Draco and an Apple')}, {'title': Value(literal:""Draoc's Misunderstood Love - A Drapple Fic"")}, {'title': Value(literal:'Об одобренных техниках воскрешения')}, {'title': Value(literal:'Oh my Dittoceus! - Kerchoo x Reader.')}, {'title': Value(literal:'Damaged But Never Broken')}, {'title': Value(literal:'Infinite DC: The Cyber War')}, {'title': Value(literal:'The Fruit Bowl')}, {'title': Value(literal:'Feel, love')}, {'title': Value(literal:'Oh Apple')}, {'title': Value(literal:'A Short Drapple Fic')}, {'title': Value(literal:'Finding Happiness')}, {'title': Value(literal:'Look At Me')}, {'title': Value(literal:'Art: Do take a bite, Potter')}, {'title': Value(literal:'Apples and Cream')}, {'title': Value(literal:'For never was a story of more woe than this of Shakespeare and his Apple')}, {'title': Value(literal:'Miroir sans tain')}, {'title': Value(literal:'Bittersweet')}, {'title': Value(literal:""Art: You can't win, Harry"")}, {'title': Value(literal:'Drapplarry')}, {'title': Value(literal:'The Drapple Disorder')}, {'title': Value(literal:'Drapple One Shots')}, {'title': Value(literal:'Their love stretched from his heart to her core.')}, {'title': Value(literal:'I Choose You!')}, {'title': Value(literal:'Fused Desires')}, {'title': Value(literal:'red')}, {'title': Value(literal:'Private School')}, {'title': Value(literal:'Apples to Apples')}, {'title': Value(literal:'Littiebub x jeud hot fanfec')}, {'title': Value(literal:""Where's The Million? | Inanimate Insanity Murder Case"")}, {'title': Value(literal:'Second Coming')}, {'title': Value(literal:'Food of Love')}, {'title': Value(literal:'idv segsy fanfics')}, {'title': Value(literal:'Checkmate')}, {'title': Value(literal:'Psychiatric Consultation of an Ex-Death Eater')}, {'title': Value(literal:'Crack Read Apple Pansy (Parkinson)')}, {'title': Value(literal:'Draco and The Mysterious Green Apple')}, {'title': Value(literal:'Drapple')}, {'title': Value(literal:'Loving you to the core')}, {'title': Value(literal:'The Apple of My Eye')}, {'title': Value(literal:'Re-Encounters of the Apple Kind')}, {'title': Value(literal:'An Apple Called Apple')}, {'title': Value(literal:'The Forbidden Fruit')}, {'title': Value(literal:'Apples & Addiction')}, {'title': Value(literal:""Ichor: fool's gold"")}, {'title': Value(literal:'metronome')}, {'title': Value(literal:'Dancing The Night Away')}, {'title': Value(literal:'From Across The Room')}, {'title': Value(literal:'Golden Delicious')}, {'title': Value(literal:""Eve's Got Nothing On Me"")}, {'title': Value(literal:'That Awkward Moment When You Get Stuck In A Cell And Go Into Heat')}, {'title': Value(literal:'Out of Distractions')}, {'title': Value(literal:'Gwapple: The Greatest Ship To Ever Exist')}, {'title': Value(literal:'Nothing To Say')}, {'title': Value(literal:""Bon-Bon's Imaginary Friend"")}, {'title': Value(literal:'Drapple Lovestory')}, {'title': Value(literal:'Request!')}, {'title': Value(literal:'Drapple angst for your soul')}, {'title': Value(literal:""Shalashaska's crack ships"")}, {'title': Value(literal:'Drapple')}, {'title': Value(literal:'I regret (everything)')}, {'title': Value(literal:'LilBoyLovers.com')}, {'title': Value(literal:'Bedroom Floor // L.P.')}, {'title': Value(literal:'A Feather Plucked')}, {'title': Value(literal:'Mark of the Gods')}, {'title': Value(literal:'apple fucks a bitch')}, {'title': Value(literal:'Strange But Not A Stranger')}, {'title': Value(literal:""The game won't end until the KING falls"")}, {'title': Value(literal:'Sanctuary of Lost Souls')}]"	523	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿En qué historias sale Apple?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?storyTitle WHERE { 
  ?story golem:characters ""Apple"" . 
  ?story dc:title ?storyTitle . 
}
"	[{'storyTitle': Value(literal:'Demise of Drapple')}, {'storyTitle': Value(literal:'Drapple')}, {'storyTitle': Value(literal:'Apples & Addiction')}, {'storyTitle': Value(literal:'Art: Do take a bite, Potter')}]	0	1	1
524	524	es	¿En qué historias sale Hakamada Izou?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT ?title WHERE {  ?story golem:title ?title . ?story golem:characters ""Hakamada Izou"" . }"	[{'title': Value(literal:'浴室')}, {'title': Value(literal:'a cup of tea at the ledge of your window')}]	524	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿En qué historias sale Hakamada Izou?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?story WHERE { 
?character golem:name ""Hakamada Izou"" . 
?story golem:characters ?character . 
}
"	[]	0	0	1
525	525	es	¿En qué historias sale 鬼麒主?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT ?title WHERE {  ?story golem:title ?title . ?story golem:characters ""鬼麒主"" . }"	[{'title': Value(literal:'【霹雳布袋戏】捡到只小狐狸')}, {'title': Value(literal:'【霹雳布袋戏】灵犀遗梦')}, {'title': Value(literal:'【鬼饺法】礼物')}, {'title': Value(literal:'【玉离经中心】梦境')}, {'title': Value(literal:'【玉云｜玉鬼】那所谓有情人的眼泪')}, {'title': Value(literal:'【玉鬼】替代')}, {'title': Value(literal:'[霹靂][玉鬼] 你的孩子不是你的孩子')}, {'title': Value(literal:'[鬼麒主伏字羲]鬼龍王艷摘')}, {'title': Value(literal:'所谓父子（霹雳同人）')}, {'title': Value(literal:'【云玉】一个鸡飞狗跳的车')}, {'title': Value(literal:'【鬼法/玉法】失控')}, {'title': Value(literal:'【鬼法】血河')}, {'title': Value(literal:'【玉鬼】诱因（全）')}, {'title': Value(literal:'【邪鬼】淫紋：子宮高潮')}, {'title': Value(literal:'【鬼帝玉3P】好玩不过嫂子和小叔子')}, {'title': Value(literal:'【霹雳正剧向同人】沧江别')}, {'title': Value(literal:'【伏字羲中心】鬼狱往事')}, {'title': Value(literal:'[霹靂][玉鬼] 愛讓你潑婦罵街不可愛')}, {'title': Value(literal:'【伏字羲中心】倾城')}]	525	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿En qué historias sale 鬼麒主?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/>  
SELECT DISTINCT ?story_title WHERE { 
?character golem:name ""鬼麒主"" . 
?story golem:characters ?character . 
?story golem:title ?story_title . 
}
"	[]	0	0	1
526	526	es	¿En qué historias sale Anduin Lothar?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT ?title WHERE {  ?story golem:title ?title . ?story golem:characters ""Anduin Lothar"" . }"	"[{'title': Value(literal:'胜于雄辩Louder than Words')}, {'title': Value(literal:""A Midsummer Night's Dream 仲夏夜之梦"")}, {'title': Value(literal:'人来人往')}, {'title': Value(literal:'bandage')}, {'title': Value(literal:'Lothar/Khadgar同居三十题')}, {'title': Value(literal:'Brief Encounter')}, {'title': Value(literal:'[卡洛][魔兽电影]Por Una Cabeza(ABO/OOC/NC17)')}, {'title': Value(literal:'Various Storms & Saints | 风暴与圣徒')}, {'title': Value(literal:'驯狮棍')}, {'title': Value(literal:'Injuries')}, {'title': Value(literal:'Ink & Lavender')}, {'title': Value(literal:'Gifting Season')}, {'title': Value(literal:'Summer Trifle')}, {'title': Value(literal:'Make Me Your One (And Only) 让我成为你的（唯一）')}, {'title': Value(literal:'Madness of Deathwing 死亡之翼的狂乱')}, {'title': Value(literal:'Bedtime Fable')}, {'title': Value(literal:'This Land Is Mine')}, {'title': Value(literal:'【洛卡】浩劫与重生  The Dark and The Light')}, {'title': Value(literal:'【魔兽/Warchaft】【洛卡】【NC17】浩劫与重生  The Dark and The Light')}, {'title': Value(literal:'Ravensbane')}, {'title': Value(literal:'The Road of Redemption')}, {'title': Value(literal:'Что делать с надоедливым Магом.')}, {'title': Value(literal:'Охуеть какой кроссовер 4')}, {'title': Value(literal:'Тексты с Инктобера')}, {'title': Value(literal:'Pájaro azul | 蓝鸟')}, {'title': Value(literal:'瀑城之巅')}, {'title': Value(literal:'Of Love and Family 爱与家庭')}, {'title': Value(literal:'光明不会告诉你的事')}, {'title': Value(literal:'The Tell-Tale Heart')}, {'title': Value(literal:'Power of the Twilight 暮光之力')}, {'title': Value(literal:'一碟秘密A Saucerful Of Secrets')}, {'title': Value(literal:'Spell')}, {'title': Value(literal:'白河夜船')}, {'title': Value(literal:'孤高之人')}, {'title': Value(literal:'Soulmates are Inconvenient 灵魂的弱点')}, {'title': Value(literal:'Far from any road')}, {'title': Value(literal:'完美标本 Prime Specimen')}, {'title': Value(literal:'秘药')}, {'title': Value(literal:'Light A Fire')}, {'title': Value(literal:'爱与死如影随形')}, {'title': Value(literal:'The Forged Throne')}, {'title': Value(literal:'born with it, after all')}, {'title': Value(literal:'What did you do?')}, {'title': Value(literal:'Distractions')}, {'title': Value(literal:'Your Majesty')}, {'title': Value(literal:'Powerful!')}, {'title': Value(literal:'Tides of Light')}, {'title': Value(literal:'Один раз, когда спасение Лорда-Регента не было спасением конкретно Лорда-Регента, и пять, когда всё же было')}, {'title': Value(literal:'One Shot NanoWriMo Prompts - Destiel & Liontrust')}, {'title': Value(literal:'Witness')}, {'title': Value(literal:'AU Snippet: Dark Deals')}, {'title': Value(literal:'a bad seed grown')}, {'title': Value(literal:'The Royal Alpha')}, {'title': Value(literal:'Remind Me Of What Is Gone')}, {'title': Value(literal:'GUILT')}, {'title': Value(literal:'Prologue')}, {'title': Value(literal:'Warcraft - Of Fel and Iron')}, {'title': Value(literal:'To Break the Cycle')}, {'title': Value(literal:'Rebuilding Trust')}, {'title': Value(literal:'And So It Goes')}, {'title': Value(literal:'The Master, the Apprentice, and the Demon Cat')}, {'title': Value(literal:'The Quest for Cheering Up a Guardian')}, {'title': Value(literal:'Come Back To Me')}, {'title': Value(literal:'Big Raven, Big Problem?')}, {'title': Value(literal:'The Quest for Claiming a Guardian')}, {'title': Value(literal:'The Vampire of Azeroth')}, {'title': Value(literal:'Morning Kiss')}, {'title': Value(literal:'Spellbound')}, {'title': Value(literal:'His Guardian')}, {'title': Value(literal:'Of Mages and Their Mana Jacuzzies')}, {'title': Value(literal:'Overprotective')}, {'title': Value(literal:'Winter Night')}, {'title': Value(literal:'Small But Scary')}, {'title': Value(literal:'Not Compatible')}, {'title': Value(literal:'Romancing The Soldier')}, {'title': Value(literal:'Feathers')}, {'title': Value(literal:'The King, the Mage, and the Soldier Walking Into a Store')}, {'title': Value(literal:'Fly Again')}, {'title': Value(literal:""The King's Bad Day"")}, {'title': Value(literal:'Night Terror')}, {'title': Value(literal:'Kinktober 2021 ~ Part C')}, {'title': Value(literal:'A Pile of Snuggles')}, {'title': Value(literal:'The Best Place to Be')}, {'title': Value(literal:'Seasonal Sickness')}, {'title': Value(literal:""Let's Talk About Fishing"")}, {'title': Value(literal:'Power of the Twilight')}, {'title': Value(literal:""Coming over for a 'visit'"")}, {'title': Value(literal:'The Windiest Night')}, {'title': Value(literal:'LionTrust Tumblr Fills')}, {'title': Value(literal:'Take the pain')}, {'title': Value(literal:'The Wildest Night')}, {'title': Value(literal:'Various Storms & Saints')}, {'title': Value(literal:'The Lady and The Knight')}, {'title': Value(literal:'Bad side')}, {'title': Value(literal:'Bromance: A Lothar/Khadgar Story')}, {'title': Value(literal:'The one with the braiding')}, {'title': Value(literal:'Come back')}, {'title': Value(literal:'Turning the Tables')}, {'title': Value(literal:""The Demon's Game"")}, {'title': Value(literal:'Of Blueflame and Whiskers')}, {'title': Value(literal:'The Ale Never Ends Round Here')}, {'title': Value(literal:'Of Mages and Mana')}, {'title': Value(literal:'Incertitude')}, {'title': Value(literal:'twisting corridors')}, {'title': Value(literal:'The Night in Lordaeron')}, {'title': Value(literal:'The Things We Had')}, {'title': Value(literal:'Gotcha!')}, {'title': Value(literal:'A Whisper of Death')}, {'title': Value(literal:'Whatever May Come')}, {'title': Value(literal:'I Put A Spell On You')}, {'title': Value(literal:'Long Lost')}, {'title': Value(literal:'4986')}, {'title': Value(literal:'Drunk Confessions')}, {'title': Value(literal:'Parental Instinct')}, {'title': Value(literal:'The One to Do With the Night Sky')}, {'title': Value(literal:'Finding Khadgar (and Falling in Love On The Way)')}, {'title': Value(literal:'To Begin Anew')}, {'title': Value(literal:'Trace of Silver')}, {'title': Value(literal:""Let's Try Something New"")}, {'title': Value(literal:'Spell Gone Awry')}, {'title': Value(literal:'To Serve')}, {'title': Value(literal:'To Serve No More')}, {'title': Value(literal:'Late Nights')}, {'title': Value(literal:'Karazhan Chronicles')}, {'title': Value(literal:'Alone')}, {'title': Value(literal:'Trust')}, {'title': Value(literal:'Lonely (working title)')}, {'title': Value(literal:'Kissing Him')}, {'title': Value(literal:'Replacement')}, {'title': Value(literal:'What to Do with a Bored (sort of) Guardian')}, {'title': Value(literal:'What to Do with a Lord Commander')}, {'title': Value(literal:'In the Arms of an Angel')}, {'title': Value(literal:'Where I Belong')}, {'title': Value(literal:'Anchored')}, {'title': Value(literal:'Not the Smartest Idea')}, {'title': Value(literal:'A Generated Slash')}, {'title': Value(literal:'Opposing Ends')}, {'title': Value(literal:'Steamy Romance: Library Edition')}, {'title': Value(literal:'In Restless Dreams I Walked Alone')}, {'title': Value(literal:'What to Do with a Lover')}, {'title': Value(literal:'On A White Horse')}, {'title': Value(literal:'Echoes of the Past')}, {'title': Value(literal:'Khadgar needs you most')}, {'title': Value(literal:""A Lion's Pride"")}, {'title': Value(literal:'Happy Birthday')}, {'title': Value(literal:'To Impress The Lion')}, {'title': Value(literal:'Conduit')}, {'title': Value(literal:'Aftermath')}, {'title': Value(literal:'The Studious Apprentice')}, {'title': Value(literal:'Stretching Your Wings')}, {'title': Value(literal:'Branded')}, {'title': Value(literal:""Khadgar's Very Strange Fantasy"")}, {'title': Value(literal:""Lothar's Very Strange Fantasy"")}, {'title': Value(literal:'Memories')}, {'title': Value(literal:'Felmage')}, {'title': Value(literal:""Apprentice's Diary"")}, {'title': Value(literal:'From Darkness, Light')}, {'title': Value(literal:'What to do with a Faerie Dragon Mage')}, {'title': Value(literal:'Divergence')}, {'title': Value(literal:'Snow Day')}, {'title': Value(literal:'Playing Dirty')}, {'title': Value(literal:'The Lion Of The Ebon Blade')}, {'title': Value(literal:""Don't get too close, it's dark inside"")}, {'title': Value(literal:'Loneliness Makes Us Weak')}, {'title': Value(literal:'Felhunter')}, {'title': Value(literal:'When the Cold of Winter Comes')}, {'title': Value(literal:'Dreadknight')}, {'title': Value(literal:'The House of Cards')}, {'title': Value(literal:'Not Just the Hormones')}, {'title': Value(literal:'Of Mages and Mountains')}, {'title': Value(literal:'Felscarred')}, {'title': Value(literal:'Free Falling')}, {'title': Value(literal:""Lothar's Secret"")}, {'title': Value(literal:""The Dread Horseman of Hallow's End"")}, {'title': Value(literal:'Requiem of the Wind')}, {'title': Value(literal:""The Lion's Prey"")}, {'title': Value(literal:'A Raven Crossed the Moon')}, {'title': Value(literal:'Sanguineous')}, {'title': Value(literal:'And as my thoughts fly, you anchor me')}, {'title': Value(literal:'Consanguineous')}, {'title': Value(literal:'I Will Not Kiss You')}, {'title': Value(literal:'Breathe You In (Like Oxygen)')}, {'title': Value(literal:'Uptown Funk Me Up')}, {'title': Value(literal:'Kiss (While Your Lips Are Still Red)')}, {'title': Value(literal:""The Kid's Are(n't) Alright"")}, {'title': Value(literal:'A Taste of Iron')}, {'title': Value(literal:'Raven Trust')}, {'title': Value(literal:'The Ebon Lion')}, {'title': Value(literal:'Exsanguinous')}, {'title': Value(literal:'Not as Innocent as You Think')}, {'title': Value(literal:'One Thousand Words, More or Less...')}, {'title': Value(literal:'About Khadgar')}, {'title': Value(literal:'Reunion')}, {'title': Value(literal:""Calls You Home (You're Stronger Than You Know)"")}, {'title': Value(literal:'The House of the Lion')}, {'title': Value(literal:'Blood Sins')}, {'title': Value(literal:'Ohne Dich')}, {'title': Value(literal:'Home Is')}, {'title': Value(literal:'Shower Time')}, {'title': Value(literal:'A Kiss for Waking')}, {'title': Value(literal:'We choose our own destiny')}, {'title': Value(literal:'Come Home (魔兽）')}, {'title': Value(literal:'For My King 为吾王')}, {'title': Value(literal:'Long Adventure')}, {'title': Value(literal:'The Ebon Horseman')}, {'title': Value(literal:'You Reached into the Heavens')}, {'title': Value(literal:'Stay Alive')}, {'title': Value(literal:'Onioncraft')}, {'title': Value(literal:'Strong Shoulders Bear More Weight')}, {'title': Value(literal:'Accursed')}, {'title': Value(literal:'Anduin Lothar Is Super Suave, Definitely')}, {'title': Value(literal:'Day One: Firsts')}, {'title': Value(literal:'Educational Field Trip')}, {'title': Value(literal:'Liontrust Week 2017')}, {'title': Value(literal:'Day Two: Family')}, {'title': Value(literal:'Why Are There So Many Hot People in the Library?')}, {'title': Value(literal:""Captain's Log"")}, {'title': Value(literal:'Day Three: AU')}, {'title': Value(literal:""I've Seen Your Frown and It's Like Looking Down the Barrel of a Gun"")}, {'title': Value(literal:'Day Four: Angst')}, {'title': Value(literal:'Azsuna Interlude')}, {'title': Value(literal:'Bilingual Misunderstandings')}, {'title': Value(literal:'Day Five: NSFW')}, {'title': Value(literal:""He's Color"")}, {'title': Value(literal:'Day Six: Soulmates')}, {'title': Value(literal:'Warcraft prompt fills')}, {'title': Value(literal:'Super Powers Mean Super Problems')}, {'title': Value(literal:'Day Seven: Free Day')}, {'title': Value(literal:'The Once and Future King')}, {'title': Value(literal:'Guardian')}, {'title': Value(literal:'Corruption')}, {'title': Value(literal:'Follow You Into The Dark')}, {'title': Value(literal:'The Further I Fly (The Closer I Get To Home)')}, {'title': Value(literal:'Champions')}, {'title': Value(literal:'For Life')}, {'title': Value(literal:'Of Hope and Pain')}, {'title': Value(literal:'Dinner and Dessert')}, {'title': Value(literal:'The Eagles of Azeroth')}, {'title': Value(literal:'Pets and People')}, {'title': Value(literal:'Date')}, {'title': Value(literal:'Whose That Silver Haired Mage?')}, {'title': Value(literal:'Heat in Hellfire')}, {'title': Value(literal:'Reunion')}, {'title': Value(literal:'The Dream From The Nightmare')}, {'title': Value(literal:'Magic')}, {'title': Value(literal:'Consent')}, {'title': Value(literal:'Collar')}, {'title': Value(literal:'Incubus')}, {'title': Value(literal:'Rainbow Connection')}, {'title': Value(literal:'The One With The Shaving')}, {'title': Value(literal:'A Unicorn (kinda) Crashes Their Wedding')}, {'title': Value(literal:'The Lion, The Raven and the Trust Between Them')}, {'title': Value(literal:'Magical Hands')}, {'title': Value(literal:'And The Bells Were Ringing Out')}, {'title': Value(literal:'One Night In Karazhan')}, {'title': Value(literal:'有间书局Once Upon A Bookstore （又名：论小卡如何深陷大三角文的毒害不可自拔）')}, {'title': Value(literal:'Les Abandonées')}, {'title': Value(literal:'Stolen King')}, {'title': Value(literal:'Walk Away (Maybe)')}, {'title': Value(literal:'That Perfect Moment')}, {'title': Value(literal:'Have Patience')}, {'title': Value(literal:'Nothing Wrong With That')}, {'title': Value(literal:'Binding')}, {'title': Value(literal:'Today, Yesterday, Tomorrow')}, {'title': Value(literal:'and who by brave assent')}, {'title': Value(literal:'Burning Bright')}, {'title': Value(literal:'The bite that binds the gift')}, {'title': Value(literal:'Baby Callan to the Tower Came')}, {'title': Value(literal:'Secrets of the Royal Bedchamber')}, {'title': Value(literal:'War Trophy')}, {'title': Value(literal:'Thrall')}, {'title': Value(literal:'Still')}, {'title': Value(literal:'eye of gold, thigh of blue')}, {'title': Value(literal:'How Not to Waste a Perfectly Useful Human to Gryphon Transformation')}, {'title': Value(literal:'Instructions Unclear')}, {'title': Value(literal:'the nights that follow')}, {'title': Value(literal:'Academic Classification')}, {'title': Value(literal:'Show Me Your Eyes')}, {'title': Value(literal:'roads leading home')}, {'title': Value(literal:'Master and Apprentice')}, {'title': Value(literal:'Riding a Gryphon')}, {'title': Value(literal:'Come Undone')}, {'title': Value(literal:'The Conquest')}, {'title': Value(literal:'Panic Switch')}, {'title': Value(literal:'Time in a Bottle')}, {'title': Value(literal:'Of Love and Mages')}, {'title': Value(literal:'The Road to Stranglethorn')}, {'title': Value(literal:'Not So Slow Fall')}, {'title': Value(literal:'Gotta Be Somebody')}, {'title': Value(literal:'Birthday Magic')}, {'title': Value(literal:'Far Too Long')}, {'title': Value(literal:""Khadgar's Lion & Anduin's Spell-Chucker"")}, {'title': Value(literal:'Here We Are')}, {'title': Value(literal:'For You I Will')}, {'title': Value(literal:'Little Lothar')}, {'title': Value(literal:""Why Mages Shouldn't Drink"")}, {'title': Value(literal:'Unkiss Me')}, {'title': Value(literal:'Anthem of the Angels')}, {'title': Value(literal:'Corruption of Men')}, {'title': Value(literal:'that one time khadgar called lothar ""master"" in front of everybody')}, {'title': Value(literal:'The Proud Lion and the Silly Bookworm')}, {'title': Value(literal:'wise decisions')}, {'title': Value(literal:'The Sacrifices We Make for Peace')}, {'title': Value(literal:""It's Just A Game!"")}, {'title': Value(literal:'Whumptober 2018')}, {'title': Value(literal:'Fictober 2018 - The Lion, The Raven and the Trust Between Them - The Drabbles')}, {'title': Value(literal:'Precipitous')}, {'title': Value(literal:'Non-Conventional Vows')}, {'title': Value(literal:'A LionTrust Christmas Collection')}, {'title': Value(literal:'Breath on the Water')}, {'title': Value(literal:'The LionTrust Way to Ring in The New Year')}, {'title': Value(literal:'What Makes Us Strong')}, {'title': Value(literal:'Bless Me, Father')}, {'title': Value(literal:""for near is where you'll meet"")}, {'title': Value(literal:""I've had it with you"")}, {'title': Value(literal:'Calling All Gnomes')}, {'title': Value(literal:""Lothar's Birthday"")}, {'title': Value(literal:'Wartime Butterflies')}, {'title': Value(literal:'Stargazing Butterflies')}, {'title': Value(literal:'Tradition')}, {'title': Value(literal:'Gryphons and Butterflies')}, {'title': Value(literal:'closer than the wound')}, {'title': Value(literal:'City Butterflies')}, {'title': Value(literal:'Embrasse Moi')}, {'title': Value(literal:'Salt and Shadow')}, {'title': Value(literal:'Whatever It Takes; Break The Chains')}, {'title': Value(literal:""Don't Go"")}, {'title': Value(literal:'Coffee Fueled Mages')}, {'title': Value(literal:'Darkness find light')}, {'title': Value(literal:'Healing Butterflies')}, {'title': Value(literal:'Taste of Magic')}, {'title': Value(literal:'Stay For You')}, {'title': Value(literal:'Secret meet')}, {'title': Value(literal:'peace talks')}, {'title': Value(literal:'The Wettest Night')}, {'title': Value(literal:'first dates')}, {'title': Value(literal:'Come as You are, as I Want You to be')}, {'title': Value(literal:'Regaining Trust')}, {'title': Value(literal:'Inner turmoil')}, {'title': Value(literal:'visitation rights')}, {'title': Value(literal:'Home for the Heroes')}, {'title': Value(literal:'Lionhearted')}, {'title': Value(literal:'Trust in Need')}, {'title': Value(literal:'Glow')}, {'title': Value(literal:'Trust in Doubt')}, {'title': Value(literal:'No Success Without Sacrifice')}, {'title': Value(literal:'Trust in Hope')}, {'title': Value(literal:'Whispers in the Dark')}, {'title': Value(literal:'Posession')}, {'title': Value(literal:'Only When You Sleep')}, {'title': Value(literal:'broadswords and rune wards')}, {'title': Value(literal:'arms wide open')}, {'title': Value(literal:'(let me) catch my breath')}, {'title': Value(literal:'Exodus for the Heroes')}, {'title': Value(literal:'the warm glow of survival')}, {'title': Value(literal:'Observations from the Old Guard')}, {'title': Value(literal:'Breaking Light')}, {'title': Value(literal:'Soulmates are Inconvenient')}, {'title': Value(literal:'Walking in the twilight')}, {'title': Value(literal:'Not Everything')}, {'title': Value(literal:'When We Were Dreaming')}, {'title': Value(literal:'Не один')}, {'title': Value(literal:'Silence')}, {'title': Value(literal:""For A Jock You're Whiny"")}, {'title': Value(literal:'No Retreat')}, {'title': Value(literal:'The Night Guard and the Librarian')}, {'title': Value(literal:'They Both Take Practice')}, {'title': Value(literal:""That's Not My Name"")}, {'title': Value(literal:'Rest for the Heroes')}, {'title': Value(literal:'Nursemaid')}, {'title': Value(literal:'Nightmares')}, {'title': Value(literal:'Not that stupid')}, {'title': Value(literal:'The Best Kind of Strange')}, {'title': Value(literal:'Impure Imagination')}, {'title': Value(literal:'Do Not Open')}, {'title': Value(literal:'Little Lion Man')}, {'title': Value(literal:'Two hits and a kiss.')}, {'title': Value(literal:'the world falls (to the side)')}, {'title': Value(literal:""Let's Get To Work...Or Not"")}, {'title': Value(literal:'LionTrust A/B/O AU part 1 of ?')}, {'title': Value(literal:'Roar with your heart and soul')}, {'title': Value(literal:'LionTrust A/B/O AU part 2 of ? (or, in which Khadgar goes into heat for the first time after he and Lothar have become mates)')}, {'title': Value(literal:'Drinking Problem')}, {'title': Value(literal:'make me your one (and only)')}, {'title': Value(literal:'Mage Fixation')}, {'title': Value(literal:""Khadgar and Anduin take Denny's"")}, {'title': Value(literal:'A Contrary Omega and an Equally Contrary Alpha')}, {'title': Value(literal:'LionTrust Modern AU crack')}, {'title': Value(literal:'The Worst That Can Happen')}, {'title': Value(literal:'The Shopboy and the Biker')}, {'title': Value(literal:'Something to Tell You')}, {'title': Value(literal:'Teacher')}, {'title': Value(literal:'Flowers for You, My Love')}, {'title': Value(literal:'My Khadgars')}, {'title': Value(literal:'Liontrust Prompt Fills')}, {'title': Value(literal:'The Loneliest Day')}, {'title': Value(literal:'In Another Life')}, {'title': Value(literal:'In the Blink of an Eye')}, {'title': Value(literal:""Can't breathe ..."")}, {'title': Value(literal:'The Dustiest Day')}, {'title': Value(literal:""Blink and You'll Miss It"")}, {'title': Value(literal:'Felmage')}, {'title': Value(literal:""Pretend That I'm Okay"")}, {'title': Value(literal:'That One Time With The Desk')}, {'title': Value(literal:'LionTrust Fuck or Die')}, {'title': Value(literal:'War Of Hearts')}, {'title': Value(literal:'Impure Imagination 不洁幻想')}, {'title': Value(literal:'Raven Magic')}, {'title': Value(literal:'A Blink and a Bath')}, {'title': Value(literal:'Life Is But A Dream')}, {'title': Value(literal:'Let Me See You')}, {'title': Value(literal:'Starved')}, {'title': Value(literal:'Somewhere Between Heaven and Hell')}, {'title': Value(literal:""He's a tease"")}, {'title': Value(literal:'LionTrust Truth Spell Fic')}, {'title': Value(literal:'From Darkness, Light')}, {'title': Value(literal:'A Sleepy Misunderstanding')}, {'title': Value(literal:'LionTrust A/B/O AU part 3 of ? or The Appearance of Garona')}, {'title': Value(literal:'Love me Sweetly')}, {'title': Value(literal:'Everything You Want')}, {'title': Value(literal:'Confessions')}, {'title': Value(literal:'Anniversary')}, {'title': Value(literal:'Relief in Release')}, {'title': Value(literal:'LionTrust Angst')}, {'title': Value(literal:'A Vision Come True')}, {'title': Value(literal:'The Night of Deliverance')}, {'title': Value(literal:'Scattered Sleeping')}, {'title': Value(literal:'A Curse or A Blessing')}, {'title': Value(literal:'The Road to Hell')}, {'title': Value(literal:""The Night Doesn't Want to End."")}, {'title': Value(literal:'End Game (The Lion and the Mage)')}, {'title': Value(literal:'From Darkness, Light')}, {'title': Value(literal:'A Friendly Spar')}, {'title': Value(literal:'Are You Ready?')}, {'title': Value(literal:'Wanting')}, {'title': Value(literal:'No Magic Strong Enough')}, {'title': Value(literal:'The Lonely Tower')}, {'title': Value(literal:'Savior')}, {'title': Value(literal:""Love in the last place you'd expect"")}, {'title': Value(literal:'From Darkness Comes Light')}, {'title': Value(literal:'Make Me')}, {'title': Value(literal:'sunset boulevard (when i wake up)')}, {'title': Value(literal:'A Simple Misstep')}, {'title': Value(literal:'Something... something... something...')}, {'title': Value(literal:'FairyAU Drabble')}, {'title': Value(literal:'Seeking Shelter')}, {'title': Value(literal:""If it works it ain't stupid"")}, {'title': Value(literal:'Bloom and Grow')}, {'title': Value(literal:'riding shotgun')}, {'title': Value(literal:'Old Friends, New Beginnings')}, {'title': Value(literal:'Dark Desires')}, {'title': Value(literal:'Necessity')}, {'title': Value(literal:'Apparently Dragons Like Flowers')}, {'title': Value(literal:'raske seis (beaten breath)')}, {'title': Value(literal:'LionTrust Dragon Fic')}, {'title': Value(literal:'Smol Mage and Manpain Lion')}, {'title': Value(literal:'I will not die today')}, {'title': Value(literal:'Apparently Lothar Needs To Sleep')}, {'title': Value(literal:'Lick')}, {'title': Value(literal:'3 Warriors, 1 Mage')}, {'title': Value(literal:""What's in a name?"")}, {'title': Value(literal:'Apparently Bellies Are Important')}, {'title': Value(literal:'LionTrust Dragon Fic 2')}, {'title': Value(literal:'These Bright Blue City Lights')}, {'title': Value(literal:'Begging Me To Open Up My Mouth')}, {'title': Value(literal:'Inexorable')}, {'title': Value(literal:'Soulmates Never Die')}, {'title': Value(literal:'What If')}, {'title': Value(literal:'The Gift')}, {'title': Value(literal:'Artist')}, {'title': Value(literal:'Doing Something Stupid')}, {'title': Value(literal:'Unfit')}, {'title': Value(literal:'As Good As it Gets')}, {'title': Value(literal:'Anduin')}, {'title': Value(literal:'The Lion, the Dragon-Mage, and Minus the Wardrobe')}, {'title': Value(literal:'Stay')}, {'title': Value(literal:'Sleep')}, {'title': Value(literal:'Home')}, {'title': Value(literal:'burning blue')}, {'title': Value(literal:'Apparently Dragons Shed')}, {'title': Value(literal:'A Marriage of Convenience')}, {'title': Value(literal:'Beyond the Walls of Stormwind')}, {'title': Value(literal:'Our Boys')}, {'title': Value(literal:""I Think I'm Gonna Marry You"")}, {'title': Value(literal:'History 320')}, {'title': Value(literal:'Cappuccino')}, {'title': Value(literal:'When All Else Dies There Is Still Hope')}, {'title': Value(literal:'Small Steps')}, {'title': Value(literal:'With Charcoal Hands')}, {'title': Value(literal:""Can't We Just Be Us?"")}, {'title': Value(literal:'Their Little Toy')}, {'title': Value(literal:'Paperclips')}, {'title': Value(literal:'Daddy')}, {'title': Value(literal:'The Smallest Lion')}, {'title': Value(literal:'Eyes on Me')}, {'title': Value(literal:'We Share One Heart')}, {'title': Value(literal:'Worthy')}, {'title': Value(literal:'Soul Mates Solace')}, {'title': Value(literal:'Do You Regret It?')}, {'title': Value(literal:'An Ictus of the Heart')}, {'title': Value(literal:'Breathe')}, {'title': Value(literal:'Nursemage')}, {'title': Value(literal:'Sabotage')}, {'title': Value(literal:'Apparently Khadgar Has A Secret')}, {'title': Value(literal:'Covetous Love')}, {'title': Value(literal:'Only You')}, {'title': Value(literal:'The Longest Night')}, {'title': Value(literal:""Tell Me What It's Like"")}, {'title': Value(literal:'Dry earth cannot help but soak up water.')}, {'title': Value(literal:'How Well Do You Know Him?')}, {'title': Value(literal:'To Take A Mage')}, {'title': Value(literal:'The Death Of Innocence')}, {'title': Value(literal:""blunt thou the lion's paws"")}, {'title': Value(literal:'Youthful Indiscretions')}, {'title': Value(literal:'Like Dancing')}, {'title': Value(literal:'Alone, We Fall')}, {'title': Value(literal:""Khadgar's Little Curse"")}, {'title': Value(literal:'And All The Days In Between')}, {'title': Value(literal:'Together We Rise')}, {'title': Value(literal:'Rocket Man')}, {'title': Value(literal:'Claiming Khadgar and Setting Things Right')}, {'title': Value(literal:'Song of the Caged Bird')}, {'title': Value(literal:""Lothar's Mage"")}, {'title': Value(literal:'The Human Emotion')}, {'title': Value(literal:'A Short Distance')}, {'title': Value(literal:""Love Like You'll Never Be Hurt"")}, {'title': Value(literal:'Stronger Together (because loneliness makes you weak)')}, {'title': Value(literal:'Uncorrupted')}, {'title': Value(literal:'Passing Time')}, {'title': Value(literal:'Whisper (your love onto my skin)')}, {'title': Value(literal:'Take Me Down')}, {'title': Value(literal:'Khadgars and Lothars')}, {'title': Value(literal:""I'm covered in the colors - Pulled apart at the seams"")}, {'title': Value(literal:'Dragons of Stormwind')}, {'title': Value(literal:'Long Road Home')}, {'title': Value(literal:""The Lion's Mage."")}, {'title': Value(literal:'When the Queen commands...')}, {'title': Value(literal:'What to Do with an Annoying Mage')}, {'title': Value(literal:'Roll Over')}, {'title': Value(literal:'The Human Strain')}, {'title': Value(literal:'Bestow Him Peace')}, {'title': Value(literal:'Gifts from Family')}, {'title': Value(literal:'Joust Do It!')}, {'title': Value(literal:'Ooh!')}, {'title': Value(literal:'Make Me a Match')}, {'title': Value(literal:'Map of Anduin')}, {'title': Value(literal:'Under the Stars')}, {'title': Value(literal:'Fine Dining')}, {'title': Value(literal:'Learning How to Dance')}, {'title': Value(literal:'Tiny Little Secret')}, {'title': Value(literal:""Khadgar's Day Out"")}, {'title': Value(literal:'Aging Gracefully')}, {'title': Value(literal:'Meanwhile in Stormwind - Liontrust Edition')}, {'title': Value(literal:""Lothar's Library Visit"")}, {'title': Value(literal:'Nightmare')}, {'title': Value(literal:'The Human Trust')}, {'title': Value(literal:'Blood and Shadows')}, {'title': Value(literal:'Anduin, Greatstaff of Khadgar')}, {'title': Value(literal:'Midnight')}, {'title': Value(literal:""Hold on Tight (We'll be Bright)"")}, {'title': Value(literal:'Quietus')}, {'title': Value(literal:'Appropriation')}, {'title': Value(literal:'Khadgar Comes On Little Cat Feet')}, {'title': Value(literal:'That Smart Mouth')}, {'title': Value(literal:'Bad Idea?')}, {'title': Value(literal:'From Light Comes Darkness, And From Darkness, Light')}, {'title': Value(literal:'Evacuating the City')}, {'title': Value(literal:'All is Not Well (Between Us)')}, {'title': Value(literal:'The Last Night')}, {'title': Value(literal:'I Needed That')}, {'title': Value(literal:'Cloudcatching')}, {'title': Value(literal:'He Lives')}, {'title': Value(literal:'Progress of Ravens')}, {'title': Value(literal:'Hallow Shadows')}, {'title': Value(literal:'Cycles')}, {'title': Value(literal:'The Dragon Master')}, {'title': Value(literal:'Hurt Me')}, {'title': Value(literal:'An Old Battered Shield')}, {'title': Value(literal:'What to do with a Pirate')}, {'title': Value(literal:'Betray My Name')}, {'title': Value(literal:'Wunjo')}, {'title': Value(literal:""We'll Never Kneel Before You"")}, {'title': Value(literal:'Liontrust 20 x 200 Challenge')}, {'title': Value(literal:'Fill Me Up')}, {'title': Value(literal:'On the Sea and Sky')}, {'title': Value(literal:'New Beginnings')}, {'title': Value(literal:'Nearshore')}, {'title': Value(literal:'Be More Careful')}, {'title': Value(literal:'Enough')}, {'title': Value(literal:'Unsteady')}, {'title': Value(literal:'Tuffy')}, {'title': Value(literal:'Sapphires')}, {'title': Value(literal:'The Missing Cow')}, {'title': Value(literal:'Winter Veil')}, {'title': Value(literal:'Just Another Unwilling Party Guest')}, {'title': Value(literal:'The Springs')}, {'title': Value(literal:'I need a lift...are you for hire?')}, {'title': Value(literal:'Say Please')}, {'title': Value(literal:""Tuffy's Tapestry"")}, {'title': Value(literal:'The Mountains Have People')}, {'title': Value(literal:'And you had me')}, {'title': Value(literal:""Hero's Call: If it's not social, leave a message."")}, {'title': Value(literal:'While You Were Asleep')}, {'title': Value(literal:'Searching For Spring')}, {'title': Value(literal:'To Share and Share Alike')}, {'title': Value(literal:'Outlandish')}, {'title': Value(literal:'Feeling')}, {'title': Value(literal:'Toi, Encore toi et toujours toi (par Mana2702)')}, {'title': Value(literal:'Lazos del destino')}, {'title': Value(literal:'Охуеть какой кроссовер 3')}, {'title': Value(literal:'Решение')}, {'title': Value(literal:'Два цвета тьмы')}, {'title': Value(literal:'В [моём] будущем нет ничего, кроме демонов')}, {'title': Value(literal:'Отдых')}, {'title': Value(literal:'Сплетни, слухи и румянец')}, {'title': Value(literal:'Драконы Риннов')}, {'title': Value(literal:'Прелестный бутончик')}, {'title': Value(literal:'Much ado about nothing')}, {'title': Value(literal:'Что-то неизбежно меняется')}, {'title': Value(literal:'Легенда')}, {'title': Value(literal:'Missed Lessons')}, {'title': Value(literal:'WoW Drabbles')}, {'title': Value(literal:'Silence That I Keep')}, {'title': Value(literal:'Tapestries in Skin')}, {'title': Value(literal:'Of Magic and Romanticism')}, {'title': Value(literal:'Solace in Stealth')}, {'title': Value(literal:'Dancer of the Sky')}, {'title': Value(literal:'Fel Inquisition')}, {'title': Value(literal:'The Songs of Conspiracy')}]"	526	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿En qué historias sale Anduin Lothar?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?storyTitle WHERE { 
    ?character golem:name ""Anduin Lothar"" . 
    ?character golem:appearsIn ?story . 
    ?story golem:title ?storyTitle . 
}
"	[]	0	0	1
527	527	es	¿En qué historias sale 纪晓芙?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT ?title WHERE {  ?story golem:title ?title . ?story golem:characters ""纪晓芙"" . }"	[{'title': Value(literal:'龙泉剑的自白')}, {'title': Value(literal:'此生惟你之逍芙恋')}, {'title': Value(literal:'密室囚禁')}, {'title': Value(literal:'星云情缘之逍芙恋')}, {'title': Value(literal:'坐忘峰pwp')}, {'title': Value(literal:'引力战争')}, {'title': Value(literal:'还君明珠之逍芙恋')}, {'title': Value(literal:'龙阳南风之逍芙恋')}, {'title': Value(literal:'我的“机器人”男友 番外车')}, {'title': Value(literal:'逍芙现代车pwp')}, {'title': Value(literal:'初夜前后')}, {'title': Value(literal:'【新倚天|逍芙】了无痕')}, {'title': Value(literal:'凌云')}, {'title': Value(literal:'重逢')}, {'title': Value(literal:'受伤那一晚')}, {'title': Value(literal:'【新倚天|AU】无量星海')}, {'title': Value(literal:'逍芙五一西湖游')}]	527	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿En qué historias sale 纪晓芙?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?story WHERE { 
?character golem:name ""纪晓芙"" .
?story golem:characters ?character .
}
"	[]	0	0	1
528	528	es	¿En qué historias sale 北辰胤?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT ?title WHERE {  ?story golem:title ?title . ?story golem:characters ""北辰胤"" . }"	[{'title': Value(literal:'【胤凰】求得')}, {'title': Value(literal:'【胤凰】一个普通的清晨')}, {'title': Value(literal:'【胤凰】知味')}]	528	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿En qué historias sale 北辰胤?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?story WHERE { 
?character golem:name ""北辰胤"" . 
?story golem:characters ?character . 
}
"	[]	0	0	1
529	529	es	¿En qué historias sale various cats?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT ?title WHERE {  ?story golem:title ?title . ?story golem:characters ""various cats"" . }"	[{'title': Value(literal:'A Month in the Life of Sad Spinster Sirius Black: In Which He Unwittingly Stars in a Sexy Mechanic Soft Porno (except, not really)')}, {'title': Value(literal:'Ouroboros')}, {'title': Value(literal:'Grapejuice Blues')}, {'title': Value(literal:'the eye of the beholder')}, {'title': Value(literal:'Finding a Forever Home')}, {'title': Value(literal:'Cats')}, {'title': Value(literal:'Only Human')}, {'title': Value(literal:'Insufficient Personalities')}, {'title': Value(literal:'Legends never die')}, {'title': Value(literal:'amaranth in your tea')}, {'title': Value(literal:'sourpuss')}, {'title': Value(literal:'Of Shadowhunters and Strays')}, {'title': Value(literal:'By Theft or Force')}, {'title': Value(literal:'Lallikatt')}, {'title': Value(literal:'Just The Way It Goes')}]	529	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿En qué historias sale various cats?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?storyTitle WHERE { 
?story golem:characters ""various cats"" . 
?story dc:title ?storyTitle . 
}
"	[]	0	0	1
530	530	es	¿En qué historias sale Laura Schreibner?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT ?title WHERE {  ?story golem:title ?title . ?story golem:characters ""Laura Schreibner"" . }"	"[{'title': Value(literal:'Magic and More')}, {'title': Value(literal:'Abschiede (September 2019)')}, {'title': Value(literal:'And So I Became A We')}, {'title': Value(literal:'I Will Rescue You')}, {'title': Value(literal:'he ain’t heavy')}, {'title': Value(literal:'And the walls kept tumbling down')}, {'title': Value(literal:'searching for someone of my own kind')}, {'title': Value(literal:'Kaleidoscope')}, {'title': Value(literal:'My new hobby is thinking about you')}, {'title': Value(literal:'Laura Through The Years')}, {'title': Value(literal:'Contact Me, If You Want')}, {'title': Value(literal:'breaking my heart (in all the right ways)')}, {'title': Value(literal:'just me, her and the moon')}, {'title': Value(literal:""he thinks he'd blow our minds"")}, {'title': Value(literal:'how terrible it is to love something that death can touch')}, {'title': Value(literal:""Feels Like We've Been Living In Fast Forward"")}, {'title': Value(literal:'counting to fifty')}, {'title': Value(literal:""Smokey Robinson and Friday's with Laura"")}, {'title': Value(literal:'Something broken about this')}, {'title': Value(literal:'every doubt we had is coming undone')}, {'title': Value(literal:'The Goblin King')}, {'title': Value(literal:'Exhale')}, {'title': Value(literal:'Football Song')}, {'title': Value(literal:'Panicked Hearts')}, {'title': Value(literal:'Left, Right')}, {'title': Value(literal:'4 Chords')}, {'title': Value(literal:'94 percent of the time')}, {'title': Value(literal:'Berlin, Take Me Home.')}, {'title': Value(literal:'between the two of us')}, {'title': Value(literal:'And I walk onto the big-screen with You')}, {'title': Value(literal:'For the Last Time')}, {'title': Value(literal:'i am here, always and eternally')}, {'title': Value(literal:'I’m so in love with you, honey')}, {'title': Value(literal:'Cheesecake-Sweet')}, {'title': Value(literal:'High on Loving You.')}, {'title': Value(literal:'Swimming and You')}, {'title': Value(literal:'Morning In America')}, {'title': Value(literal:""you're all that matters"")}, {'title': Value(literal:'Mine')}, {'title': Value(literal:'Truth Hurts')}, {'title': Value(literal:""When You Move, I'm Moved"")}, {'title': Value(literal:'Pregnancy Test...')}, {'title': Value(literal:'i wanna tip toe through your bliss, boy')}, {'title': Value(literal:'The feeling of falling in love')}, {'title': Value(literal:""Don't Do That"")}, {'title': Value(literal:'Die Tonight')}, {'title': Value(literal:'days of pain for a lifetime of happiness')}, {'title': Value(literal:'He lays down')}, {'title': Value(literal:'Would you open your eyes?')}, {'title': Value(literal:'twenty-nine')}, {'title': Value(literal:'Solitaire')}, {'title': Value(literal:'How much I didn’t want to stay')}, {'title': Value(literal:'Shakshuka')}, {'title': Value(literal:'Why is there fourty-fucking-seven Z’s in one word?')}, {'title': Value(literal:'i always miss you')}, {'title': Value(literal:'Davenzi Podcast')}, {'title': Value(literal:'Welcome To New York')}, {'title': Value(literal:'I Just Got Payed')}, {'title': Value(literal:'Blister in the Sun')}, {'title': Value(literal:'Let’s go Blues?')}, {'title': Value(literal:'Swimming In The Moonlight')}, {'title': Value(literal:'How to Get a Boyfriend (Who Is a Rockstar). A Guide by Matteo Florenzi')}, {'title': Value(literal:'the sun is up, the sky is blue')}, {'title': Value(literal:'David and Matteo Make a Playlist')}, {'title': Value(literal:'Just look into the sky (and it becomes you)')}, {'title': Value(literal:'Burning (Quietly)')}, {'title': Value(literal:'we got moves')}, {'title': Value(literal:""to believe i walk alone (is a lie that i've been told)"")}, {'title': Value(literal:'I Am Not A Robot')}, {'title': Value(literal:'the good side')}, {'title': Value(literal:'Late Night Surprises')}, {'title': Value(literal:'Immortalise This Moment')}, {'title': Value(literal:'how the wind dances on the sand')}, {'title': Value(literal:'lacking pain or passion')}, {'title': Value(literal:'all of my goodness is going with you now')}, {'title': Value(literal:'Coffee, Gay Gurus, and a Dance')}, {'title': Value(literal:'how the snow whispers as it falls')}, {'title': Value(literal:'these twists and turns of fate')}, {'title': Value(literal:'Escape | Chapter 1 David Schreibner’s Story')}, {'title': Value(literal:'I’m pretending you ain’t been on my mind')}, {'title': Value(literal:'Instagram Stalking on a Sunday Night')}, {'title': Value(literal:'you could ruin me, dear (if only you asked)')}, {'title': Value(literal:'you + i')}, {'title': Value(literal:'Burnin’ N’ Itchin’')}, {'title': Value(literal:'how everything sings at the end')}, {'title': Value(literal:'tonight, we run')}, {'title': Value(literal:'lemongrass and sleep')}, {'title': Value(literal:'Wasted')}, {'title': Value(literal:""I just wanna be the reason you can smile til you're sore"")}, {'title': Value(literal:'You can try')}, {'title': Value(literal:'Plus One')}, {'title': Value(literal:'Like Stars, Falling in Love')}, {'title': Value(literal:'But now I am here!')}, {'title': Value(literal:'only of you')}, {'title': Value(literal:""David's Journey"")}, {'title': Value(literal:'Soul-utions to Myth-conceptions')}, {'title': Value(literal:'Finding Home')}, {'title': Value(literal:'When the world gets too loud I know where to find you')}, {'title': Value(literal:'fifteen flares in those ocean eyes')}, {'title': Value(literal:""I'll Be Home for Christmas"")}, {'title': Value(literal:'Into Forever')}, {'title': Value(literal:'Hear me out and love will follow')}, {'title': Value(literal:'Inheritance')}, {'title': Value(literal:""it's been a few years since i've felt sure of what i want"")}, {'title': Value(literal:'Just Got Paid')}, {'title': Value(literal:'Oh Holy Night')}, {'title': Value(literal:'Italian Summer (lol ur not harry styles)')}, {'title': Value(literal:'My Name is David Schreibner')}, {'title': Value(literal:""'cause we've been driving so long i can't remember how we got here"")}, {'title': Value(literal:'every version of me dead and buried in the yard outside')}, {'title': Value(literal:'the best parts of ourselves')}, {'title': Value(literal:'lonely is all we are')}, {'title': Value(literal:'i’ve got some spells up my sleeves')}, {'title': Value(literal:'A change in style')}, {'title': Value(literal:'The Proverbial Shoe (A David and Matteo Make a Playlist verse story)')}, {'title': Value(literal:'I caught a glimpse, now it haunts me')}, {'title': Value(literal:'a smile for every moment')}, {'title': Value(literal:'a different kind of magic')}, {'title': Value(literal:'Crazy stupid, you and me')}, {'title': Value(literal:'Open Your Eyes')}, {'title': Value(literal:'How to Make Love Without Falling in Love')}, {'title': Value(literal:'Ultraviolet')}, {'title': Value(literal:'Of Love, Affection and Memories')}, {'title': Value(literal:'Lost to you')}, {'title': Value(literal:'pick me, choose me, love me')}, {'title': Value(literal:'reach back from those mistakes before they can find us')}, {'title': Value(literal:'Life Interupted')}, {'title': Value(literal:'with my mid-youth crisis all said and done')}, {'title': Value(literal:'Anything for Family')}, {'title': Value(literal:'Missing Moments (March-April 2019)')}, {'title': Value(literal:'All the time in the world (May 2019)')}, {'title': Value(literal:'So in love, so at a loss')}, {'title': Value(literal:'No rose without thorns')}, {'title': Value(literal:'Music For The Soul')}, {'title': Value(literal:'a story we can tell another time')}, {'title': Value(literal:'Still our hands match')}, {'title': Value(literal:'Better')}, {'title': Value(literal:'Exhale the Past, Inhale the Future')}, {'title': Value(literal:'you dig deep with your nails and flash your teeth')}, {'title': Value(literal:'Mechanical Hearts')}, {'title': Value(literal:'November Rain')}, {'title': Value(literal:'For All Eternity')}, {'title': Value(literal:""your ship may be coming in. you're weak, but not giving in"")}, {'title': Value(literal:'Und alles nur wegen dir')}, {'title': Value(literal:'Feierei (März 2020)')}, {'title': Value(literal:'D2 auf D4 (April 2020)')}, {'title': Value(literal:'Ein Jahr Davenzi (Mai 2020)')}, {'title': Value(literal:'Como las flores en primavera, (eres demasiado hermoso para ser lastimado).')}, {'title': Value(literal:'Druck - 압박 (KR Translation) Season 3')}, {'title': Value(literal:'On a side note (I like you)')}, {'title': Value(literal:""maybe i will wait until you're fast asleep, dreaming things i have the right to see, maybe you are dreaming you're in love with me"")}, {'title': Value(literal:'On the way (July 2019)')}, {'title': Value(literal:""i like the way that your face looks when i'm arguing with you"")}, {'title': Value(literal:'One week, seven days ...')}, {'title': Value(literal:'This Love is Still Ours')}, {'title': Value(literal:'Wearing autumn on my sleeve')}, {'title': Value(literal:'hanging pictures on air')}, {'title': Value(literal:'Cold')}, {'title': Value(literal:'Not now')}, {'title': Value(literal:'As the light shows your face, I’ll never be the same')}, {'title': Value(literal:'The Same And Different')}, {'title': Value(literal:'Irgendwas mit Zukunft (Februar 2020)')}, {'title': Value(literal:'And everyone around me makes me feel fucking alone')}, {'title': Value(literal:'Missing Moments (März-April 2019)')}, {'title': Value(literal:'Alle Zeit der Welt (Mai 2019)')}, {'title': Value(literal:'Auf dem Weg (Juli 2019)')}]"	530	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿En qué historias sale Laura Schreibner?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?story WHERE { 
?author gc:name ""Laura Schreibner"". 
?story gc:characters ?character . 
?character gc:name ""Laura Schreibner"" . 
}
"	[]	0	0	1
531	531	es	¿Cuántas historias se publican al año?	prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT (COUNT(DISTINCT ?story) as ?uploads) WHERE {  ?story golem:story_id ?id }	[{'uploads': Value(typed-literal:'8546450')}]	531	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Cuántas historias se publican al año?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT (COUNT(?story) AS ?number_of_stories) WHERE { 
  ?story a golem:Story .
}
"	[{'number_of_stories': Value(typed-literal:'0')}]	0	1	1
533	533	es	¿Cuántas historias de Crows - 高橋ヒロシ hay publicadas?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT (COUNT(DISTINCT ?story) as ?uploads) WHERE { ?story golem:fandom ""Crows - 高橋ヒロシ"" . }"	[{'uploads': Value(typed-literal:'6')}]	533	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Cuántas historias de Crows - 高橋ヒロシ hay publicadas?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/>  
prefix dc: <http://purl.org/dc/terms/>  
prefix gc: <https://ontology.golemlab.eu/>  
SELECT COUNT(?stories) AS ?number_of_stories WHERE { 
  ?story dc:publisher ""Crows - 高橋ヒロシ"" . 
}
"	[{'number_of_stories': Value(typed-literal:'0')}]	0	1	1
534	534	es	¿Cuántas historias de Valley of Tears (TV) hay publicadas?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT (COUNT(DISTINCT ?story) as ?uploads) WHERE { ?story golem:fandom ""Valley of Tears (TV)"" . }"	[{'uploads': Value(typed-literal:'49')}]	534	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Cuántas historias de Valley of Tears (TV) hay publicadas?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT COUNT(?story) AS ?number_of_stories WHERE { 
  ?story golem:series ""Valley of Tears (TV)"" . 
  ?story golem:publicationStatus ""Completed"" . 
}
"	[{'number_of_stories': Value(typed-literal:'0')}]	0	1	1
535	535	es	¿Cuántas historias de 少年隊 hay publicadas?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT (COUNT(DISTINCT ?story) as ?uploads) WHERE { ?story golem:fandom ""少年隊"" . }"	[{'uploads': Value(typed-literal:'1')}]	535	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Cuántas historias de 少年隊 hay publicadas?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/>  
SELECT COUNT(?story) AS ?number_of_stories WHERE { 
?story golem:publisher ""少年隊"" . 
?story golem:publicationStatus ""completed"" . 
}
"	[{'number_of_stories': Value(typed-literal:'0')}]	0	1	1
536	536	es	¿Cuántas historias de ハクタカ 白鷹雨音の捜査ファイル hay publicadas?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT (COUNT(DISTINCT ?story) as ?uploads) WHERE { ?story golem:fandom ""ハクタカ 白鷹雨音の捜査ファイル"" . }"	[{'uploads': Value(typed-literal:'5')}]	536	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Cuántas historias de ハクタカ 白鷹雨音の捜査ファイル hay publicadas?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/>
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>
SELECT COUNT(?story) AS ?number_of_stories WHERE { 
?story golem:fandom ""ハクタカ 白鷹雨音の捜査ファイル"" . 
}
"	[{'number_of_stories': Value(typed-literal:'5')}]	0	1	1
537	537	es	¿Cuántas historias de 正泰-Fandom hay publicadas?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT (COUNT(DISTINCT ?story) as ?uploads) WHERE { ?story golem:fandom ""正泰-Fandom"" . }"	[{'uploads': Value(typed-literal:'1')}]	537	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Cuántas historias de 正泰-Fandom hay publicadas?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT COUNT(?story) AS ?number_of_stories WHERE { 
?story golem:fandom ""正泰-Fandom"" . 
?story golem:publicationStatus ""Completed"" . 
}
"	[{'number_of_stories': Value(typed-literal:'1')}]	0	1	1
538	538	es	¿Cuántas historias de Zero no Kiseki hay publicadas?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT (COUNT(DISTINCT ?story) as ?uploads) WHERE { ?story golem:fandom ""Zero no Kiseki"" . }"	[{'uploads': Value(typed-literal:'7')}]	538	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Cuántas historias de Zero no Kiseki hay publicadas?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT COUNT(?story) AS ?number_of_stories WHERE { 
?story golem:fandom ""Zero no Kiseki"" . 
}
"	[{'number_of_stories': Value(typed-literal:'7')}]	0	1	1
539	539	es	¿Cuántas historias de Zichuan - Lǎo Zhū hay publicadas?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT (COUNT(DISTINCT ?story) as ?uploads) WHERE { ?story golem:fandom ""Zichuan - Lǎo Zhū"" . }"	[{'uploads': Value(typed-literal:'20')}]	539	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Cuántas historias de Zichuan - Lǎo Zhū hay publicadas?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT COUNT(?story) AS ?number_of_stories WHERE { 
  ?story golem:fandom ""Zichuan - Lǎo Zhū"" . 
}
"	[{'number_of_stories': Value(typed-literal:'20')}]	0	1	1
540	540	es	¿Cuántas historias de 拜托了班长 hay publicadas?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT (COUNT(DISTINCT ?story) as ?uploads) WHERE { ?story golem:fandom ""拜托了班长"" . }"	[{'uploads': Value(typed-literal:'1')}]	540	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Cuántas historias de 拜托了班长 hay publicadas?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT COUNT(?stories) AS ?number_of_stories WHERE { 
 ?story golem:fandom ""拜托了班长"" . 
}
"	[{'number_of_stories': Value(typed-literal:'0')}]	0	1	1
541	541	es	¿Cuántas historias de Yī Jí Lǜ Shī [Xīng Jì] - Mù Sū Lǐ hay publicadas?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT (COUNT(DISTINCT ?story) as ?uploads) WHERE { ?story golem:fandom ""Yī Jí Lǜ Shī [Xīng Jì] - Mù Sū Lǐ"" . }"	[{'uploads': Value(typed-literal:'19')}]	541	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Cuántas historias de Yī Jí Lǜ Shī [Xīng Jì] - Mù Sū Lǐ hay publicadas?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT COUNT(?story) AS ?number_of_stories WHERE { 
?story golem:fandom ""Yī Jí Lǜ Shī [Xīng Jì] - Mù Sū Lǐ"" . 
}
"	[{'number_of_stories': Value(typed-literal:'19')}]	0	1	1
542	542	es	¿Cuántas historias de 江澄 - Fandom hay publicadas?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT (COUNT(DISTINCT ?story) as ?uploads) WHERE { ?story golem:fandom ""江澄 - Fandom"" . }"	[{'uploads': Value(typed-literal:'31')}]	542	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Cuántas historias de 江澄 - Fandom hay publicadas?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT COUNT(?story) AS ?number_of_stories WHERE { 
?story golem:fandom ""江澄 - Fandom"" . 
?story golem:publicationStatus ?status . 
FILTER( ?status = ""Completed"" ) 
}
"	[{'number_of_stories': Value(typed-literal:'29')}]	0	1	1
544	544	es	¿Cuántos Kudos reciben las historias de 你是不是输不起 de media?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?kudos) AS ?average_number_of_kudos WHERE { ?story golem:fandom ""你是不是输不起"" . ?story golem:numberOfKudos ?kudos . }"	[{'average_number_of_kudos': Value(typed-literal:'1.833333333333333')}]	544	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Cuántos Kudos reciben las historias de 你是不是输不起 de media?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT AVG(?kudos) AS ?avg_number_of_kudos WHERE { 
?story golem:fandom ""你是不是输不起"" . 
?story golem:numberOfKudos ?kudos . 
}
"	[{'avg_number_of_kudos': Value(typed-literal:'1.833333333333333')}]	0	1	1
545	545	es	¿Cuántos Kudos reciben las historias de NCT（乐队） de media?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?kudos) AS ?average_number_of_kudos WHERE { ?story golem:fandom ""NCT（乐队）"" . ?story golem:numberOfKudos ?kudos . }"	[{'average_number_of_kudos': Value(typed-literal:'3.8')}]	545	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Cuántos Kudos reciben las historias de NCT（乐队） de media?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT AVG(?kudos) AS ?avg_number_of_kudos WHERE { 
?story golem:fandom ""NCT（乐队）"" . 
?story golem:numberOfKudos ?kudos . 
}
"	[{'avg_number_of_kudos': Value(typed-literal:'3.8')}]	0	1	1
546	546	es	¿Cuántos Kudos reciben las historias de 尘不到 de media?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?kudos) AS ?average_number_of_kudos WHERE { ?story golem:fandom ""尘不到"" . ?story golem:numberOfKudos ?kudos . }"	[{'average_number_of_kudos': Value(typed-literal:'73')}]	546	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Cuántos Kudos reciben las historias de 尘不到 de media?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/>  
prefix dc: <http://purl.org/dc/terms/>  
prefix gc: <https://ontology.golemlab.eu/>  
SELECT AVG(?kudos) AS ?avg_number_of_kudos WHERE { 
?story golem:fandom ""尘不到"" . 
?story golem:numberOfKudos ?kudos . 
}
"	[{'avg_number_of_kudos': Value(typed-literal:'73')}]	0	1	1
547	547	es	¿Cuántos Kudos reciben las historias de 珈琲いかがでしょう de media?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?kudos) AS ?average_number_of_kudos WHERE { ?story golem:fandom ""珈琲いかがでしょう"" . ?story golem:numberOfKudos ?kudos . }"	[{'average_number_of_kudos': Value(typed-literal:'0')}]	547	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Cuántos Kudos reciben las historias de 珈琲いかがでしょう de media?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/>
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>
SELECT AVG(?kudos) AS ?avg_number_of_kudos WHERE {
  ?story golem:fandom ""珈琲いかがでしょう"" .
  ?story golem:numberOfKudos ?kudos .
}
"	[{'avg_number_of_kudos': Value(typed-literal:'0')}]	0	1	1
548	548	es	¿Cuántos Kudos reciben las historias de The Thick of It (TV) de media?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?kudos) AS ?average_number_of_kudos WHERE { ?story golem:fandom ""The Thick of It (TV)"" . ?story golem:numberOfKudos ?kudos . }"	[{'average_number_of_kudos': Value(typed-literal:'62.045708955223881')}]	548	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Cuántos Kudos reciben las historias de The Thick of It (TV) de media?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/>  
SELECT AVG(?kudos) AS ?avg_number_of_kudos WHERE { 
?story golem:fandom ""The Thick of It (TV)"" . 
?story golem:numberOfKudos ?kudos . 
}
"	[{'avg_number_of_kudos': Value(typed-literal:'62.045708955223881')}]	0	1	1
549	549	es	¿Cuántos Kudos reciben las historias de zx - Fandom de media?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?kudos) AS ?average_number_of_kudos WHERE { ?story golem:fandom ""zx - Fandom"" . ?story golem:numberOfKudos ?kudos . }"	[{'average_number_of_kudos': Value(typed-literal:'5')}]	549	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Cuántos Kudos reciben las historias de zx - Fandom de media?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT AVG(?kudos) AS ?avg_number_of_kudos WHERE { 
?story golem:fandom ""zx - Fandom"" . 
?story golem:numberOfKudos ?kudos . 
}
"	[{'avg_number_of_kudos': Value(typed-literal:'5')}]	0	1	1
550	550	es	¿Cuántos Kudos reciben las historias de Fei Ren Zai (Manhua) de media?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?kudos) AS ?average_number_of_kudos WHERE { ?story golem:fandom ""Fei Ren Zai (Manhua)"" . ?story golem:numberOfKudos ?kudos . }"	[{'average_number_of_kudos': Value(typed-literal:'2')}]	550	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Cuántos Kudos reciben las historias de Fei Ren Zai (Manhua) de media?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT AVG(?kudos) AS ?avg_number_of_kudos WHERE { 
  ?story golem:fandom ""Fei Ren Zai (Manhua)"" . 
  ?story golem:numberOfKudos ?kudos . 
}
"	[{'avg_number_of_kudos': Value(typed-literal:'2')}]	0	1	1
551	551	es	¿Cuántos Kudos reciben las historias de 丞×飞 - Fandom de media?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?kudos) AS ?average_number_of_kudos WHERE { ?story golem:fandom ""丞×飞 - Fandom"" . ?story golem:numberOfKudos ?kudos . }"	[{'average_number_of_kudos': Value(typed-literal:'336')}]	551	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Cuántos Kudos reciben las historias de 丞×飞 - Fandom de media?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT AVG(?kudos) AS ?avg_number_of_kudos WHERE { 
?story golem:fandom ""丞×飞 - Fandom"" . 
?story golem:numberOfKudos ?kudos . 
}
"	[{'avg_number_of_kudos': Value(typed-literal:'336')}]	0	1	1
552	552	es	¿Cuántos Kudos reciben las historias de 宇梓同行 - Fandom de media?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?kudos) AS ?average_number_of_kudos WHERE { ?story golem:fandom ""宇梓同行 - Fandom"" . ?story golem:numberOfKudos ?kudos . }"	[{'average_number_of_kudos': Value(typed-literal:'2')}]	552	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Cuántos Kudos reciben las historias de 宇梓同行 - Fandom de media?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT AVG(?kudos) AS ?avg_number_of_kudos WHERE { 
?story golem:fandom ""宇梓同行 - Fandom"" . 
?story golem:numberOfKudos ?kudos . 
}
"	[{'avg_number_of_kudos': Value(typed-literal:'2')}]	0	1	1
553	553	es	¿Cuántos Kudos reciben las historias de Salut les copains ! - Forneri de media?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?kudos) AS ?average_number_of_kudos WHERE { ?story golem:fandom ""Salut les copains ! - Forneri"" . ?story golem:numberOfKudos ?kudos . }"	[{'average_number_of_kudos': Value(typed-literal:'0.5')}]	553	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Cuántos Kudos reciben las historias de Salut les copains ! - Forneri de media?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT AVG(?kudos) AS ?avg_number_of_kudos WHERE { 
?story golem:fandom ""Salut les copains ! - Forneri"" . 
?story golem:numberOfKudos ?kudos . 
}
"	[{'avg_number_of_kudos': Value(typed-literal:'0.5')}]	0	1	1
554	554	es	¿Cuántos autores han publicado alguna historia?	prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT (COUNT(DISTINCT ?author) as ?uploads) WHERE { ?story golem:author ?author . }	[{'uploads': Value(typed-literal:'1234209')}]	554	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Cuántos autores han publicado alguna historia?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?author WHERE { 
  ?story dc:publisher ?author . 
}
"	[]	0	0	1
555	555	es	¿Cuántas historias no han recibido ninguna reacción?	prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT COUNT(?story) as ?no_feedback_stories WHERE { ?story golem:numberOfComments ?comments . ?story golem:numberOfKudos ?kudos . FILTER(?comments=0 && ?kudos=0) }	[{'no_feedback_stories': Value(typed-literal:'401')}]	555	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Cuántas historias no han recibido ninguna reacción?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT COUNT(?story) AS ?number_of_stories_without_reactions WHERE {
  ?story a golem:Story .
  FILTER NOT EXISTS { ?story golem:numberOfKudos ?kudos }
}
"	[{'number_of_stories_without_reactions': Value(typed-literal:'0')}]	0	1	1
557	557	es	¿Quién escribió [podfic] Things We Wish For by Avioleta?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?author WHERE {  ?story golem:title ""[podfic] Things We Wish For by Avioleta"" . ?story golem:author ?author . }"	[{'author': Value(literal:'A000026005')}]	557	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Quién escribió [podfic] Things We Wish For by Avioleta?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?author WHERE { 
  ?story golem:title ""Things We Wish For"" . 
  ?story dc:creator ?author . 
}
"	[]	0	0	1
558	558	es	¿Quién escribió Until you came along?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?author WHERE {  ?story golem:title ""Until you came along"" . ?story golem:author ?author . }"	[{'author': Value(literal:'A000279081')}, {'author': Value(literal:'A000895946')}]	558	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Quién escribió Until you came along?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/>  
SELECT DISTINCT ?author WHERE { 
?story golem:title ""Until you came along"" . 
?story dc:creator ?author . }
"	[]	0	0	1
559	559	es	¿Quién escribió Obsidian and the Wizarding World?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?author WHERE {  ?story golem:title ""Obsidian and the Wizarding World"" . ?story golem:author ?author . }"	[{'author': Value(literal:'A000233375')}]	559	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Quién escribió Obsidian and the Wizarding World?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/>  
SELECT DISTINCT ?author WHERE { 
?story golem:title ""Obsidian and the Wizarding World"" . 
?story dc:creator ?author . 
}
"	[]	0	0	1
560	560	es	¿Quién escribió Professor Malfoy and the New Herbology Professor?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?author WHERE {  ?story golem:title ""Professor Malfoy and the New Herbology Professor"" . ?story golem:author ?author . }"	[{'author': Value(literal:'A000282633')}]	560	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Quién escribió Professor Malfoy and the New Herbology Professor?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?author WHERE { 
  ?story golem:title ""Professor Malfoy and the New Herbology Professor"" . 
  ?story dc:creator ?author . 
}
"	[]	0	0	1
561	561	es	¿Quién escribió learnt what love means together?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?author WHERE {  ?story golem:title ""learnt what love means together"" . ?story golem:author ?author . }"	[{'author': Value(literal:'A000119468')}]	561	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Quién escribió learnt what love means together?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?author WHERE { 
  ?story golem:title ""learnt what love means together"" . 
  ?story dc:creator ?author . 
}
"	[]	0	0	1
562	562	es	¿Quién escribió Finding Home?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?author WHERE {  ?story golem:title ""Finding Home"" . ?story golem:author ?author . }"	[{'author': Value(literal:'A000264392')}, {'author': Value(literal:'A000264159')}, {'author': Value(literal:'A000278818')}, {'author': Value(literal:'A000000297')}, {'author': Value(literal:'A000025771')}, {'author': Value(literal:'A000286932')}, {'author': Value(literal:'A000049276')}, {'author': Value(literal:'A000001560')}, {'author': Value(literal:'A000014562')}, {'author': Value(literal:'A000018337')}, {'author': Value(literal:'A000219632')}, {'author': Value(literal:'A000185768')}, {'author': Value(literal:'A000340825')}, {'author': Value(literal:'A000401712')}, {'author': Value(literal:'A000036294')}, {'author': Value(literal:'A000005408')}, {'author': Value(literal:'A000385857')}, {'author': Value(literal:'A000048263')}, {'author': Value(literal:'A000064161')}, {'author': Value(literal:'A000002401')}, {'author': Value(literal:'A000026170')}, {'author': Value(literal:'A000040994')}, {'author': Value(literal:'A000106016')}, {'author': Value(literal:'A000036899')}, {'author': Value(literal:'A000527115')}, {'author': Value(literal:'A000097026')}, {'author': Value(literal:'A000489032')}, {'author': Value(literal:'A000019350')}, {'author': Value(literal:'A000001312')}, {'author': Value(literal:'A000526760')}, {'author': Value(literal:'A000544125')}, {'author': Value(literal:'A000015619')}, {'author': Value(literal:'A000006310')}, {'author': Value(literal:'A000008458')}, {'author': Value(literal:'A000416965')}, {'author': Value(literal:'A000009469')}, {'author': Value(literal:'A000000000')}, {'author': Value(literal:'A000062683')}, {'author': Value(literal:'A000239307')}, {'author': Value(literal:'A000543711')}, {'author': Value(literal:'A000543734')}, {'author': Value(literal:'A000002068')}, {'author': Value(literal:'A000276300')}, {'author': Value(literal:'A000061662')}, {'author': Value(literal:'A000004151')}, {'author': Value(literal:'A000012197')}, {'author': Value(literal:'A000094256')}, {'author': Value(literal:'A000051489')}, {'author': Value(literal:'A000038463')}, {'author': Value(literal:'A000020914')}, {'author': Value(literal:'A000308297')}, {'author': Value(literal:'A000233735')}, {'author': Value(literal:'A000416114')}, {'author': Value(literal:'A000623849')}, {'author': Value(literal:'A000000679')}, {'author': Value(literal:'A000100557')}, {'author': Value(literal:'A000217239')}, {'author': Value(literal:'A000595207')}, {'author': Value(literal:'A000001552')}, {'author': Value(literal:'A000014495')}, {'author': Value(literal:'A001127021')}, {'author': Value(literal:'A000011985')}, {'author': Value(literal:'A000011006')}, {'author': Value(literal:'A000020011')}, {'author': Value(literal:'A000215525')}, {'author': Value(literal:'A000001613')}, {'author': Value(literal:'A000004421')}, {'author': Value(literal:'A000000002')}, {'author': Value(literal:'A000000189')}, {'author': Value(literal:'A000229104')}, {'author': Value(literal:'A000299708')}, {'author': Value(literal:'A000084305')}, {'author': Value(literal:'A000236498')}, {'author': Value(literal:'A000078002')}, {'author': Value(literal:'A000108184')}, {'author': Value(literal:'A000557829')}, {'author': Value(literal:'A000455006')}, {'author': Value(literal:'A000055398')}, {'author': Value(literal:'A000102925')}, {'author': Value(literal:'A000226703')}, {'author': Value(literal:'A000319376')}, {'author': Value(literal:'A000094709')}, {'author': Value(literal:'A000057251')}, {'author': Value(literal:'A000104096')}, {'author': Value(literal:'A000037886')}, {'author': Value(literal:'A000214695')}, {'author': Value(literal:'A000047449')}, {'author': Value(literal:'A000097250')}, {'author': Value(literal:'A000481757')}, {'author': Value(literal:'A000061128')}, {'author': Value(literal:'A000217109')}, {'author': Value(literal:'A000462102')}, {'author': Value(literal:'A000082558')}, {'author': Value(literal:'A000464892')}, {'author': Value(literal:'A000483315')}, {'author': Value(literal:'A000000130')}, {'author': Value(literal:'A000561539')}, {'author': Value(literal:'A000010363')}, {'author': Value(literal:'A000472729')}, {'author': Value(literal:'A000047882')}, {'author': Value(literal:'A000000214')}, {'author': Value(literal:'A000007321')}, {'author': Value(literal:'A000005717')}, {'author': Value(literal:'A000049348')}, {'author': Value(literal:'A000033241')}, {'author': Value(literal:'A000016511')}, {'author': Value(literal:'A000508556')}, {'author': Value(literal:'A000529337')}, {'author': Value(literal:'A000049559')}, {'author': Value(literal:'A000021306')}, {'author': Value(literal:'A000001573')}, {'author': Value(literal:'A000001356')}, {'author': Value(literal:'A000004310')}, {'author': Value(literal:'A000592959')}, {'author': Value(literal:'A000242916')}, {'author': Value(literal:'A000006799')}, {'author': Value(literal:'A001184089')}, {'author': Value(literal:'A000216390')}, {'author': Value(literal:'A000002394')}, {'author': Value(literal:'A000080373')}, {'author': Value(literal:'A000218957')}, {'author': Value(literal:'A000322440')}, {'author': Value(literal:'A000004935')}, {'author': Value(literal:'A000228669')}, {'author': Value(literal:'A000521648')}, {'author': Value(literal:'A000057999')}, {'author': Value(literal:'A000026743')}, {'author': Value(literal:'A000432016')}, {'author': Value(literal:'A000037544')}, {'author': Value(literal:'A999999999')}, {'author': Value(literal:'A000380488')}, {'author': Value(literal:'A000020001')}, {'author': Value(literal:'A000010952')}, {'author': Value(literal:'A000386692')}, {'author': Value(literal:'A000551845')}, {'author': Value(literal:'A000613558')}, {'author': Value(literal:'A000607557')}, {'author': Value(literal:'A000003595')}, {'author': Value(literal:'A000602737')}, {'author': Value(literal:'A000006130')}, {'author': Value(literal:'A000002317')}, {'author': Value(literal:'A000057672')}, {'author': Value(literal:'A000005288')}, {'author': Value(literal:'A000623221')}, {'author': Value(literal:'A000608687')}, {'author': Value(literal:'A000214471')}, {'author': Value(literal:'A000433053')}, {'author': Value(literal:'A000163167')}, {'author': Value(literal:'A000034334')}, {'author': Value(literal:'A000038730')}, {'author': Value(literal:'A000442901')}, {'author': Value(literal:'A000552347')}, {'author': Value(literal:'A000655211')}, {'author': Value(literal:'A000020266')}, {'author': Value(literal:'A001160441')}, {'author': Value(literal:'A001118110')}, {'author': Value(literal:'A001237223')}, {'author': Value(literal:'A001142638')}, {'author': Value(literal:'A001167086')}, {'author': Value(literal:'A000545309')}, {'author': Value(literal:'A000095296')}, {'author': Value(literal:'A000027446')}, {'author': Value(literal:'A000005089')}, {'author': Value(literal:'A000270820')}, {'author': Value(literal:'A000210516')}, {'author': Value(literal:'A000399814')}, {'author': Value(literal:'A000121795')}, {'author': Value(literal:'A000001680')}, {'author': Value(literal:'A000010610')}, {'author': Value(literal:'A000102730')}, {'author': Value(literal:'A000654905')}, {'author': Value(literal:'A000659814')}, {'author': Value(literal:'A000644610')}, {'author': Value(literal:'A000029329')}, {'author': Value(literal:'A000645916')}, {'author': Value(literal:'A000716767')}, {'author': Value(literal:'A000222288')}, {'author': Value(literal:'A000030029')}, {'author': Value(literal:'A000550496')}, {'author': Value(literal:'A000661988')}, {'author': Value(literal:'A000225165')}, {'author': Value(literal:'A000245601')}, {'author': Value(literal:'A000042240')}, {'author': Value(literal:'A000003571')}, {'author': Value(literal:'A000433196')}, {'author': Value(literal:'A000177149')}, {'author': Value(literal:'A000424619')}, {'author': Value(literal:'A000675883')}, {'author': Value(literal:'A000738788')}, {'author': Value(literal:'A000013197')}, {'author': Value(literal:'A000030621')}, {'author': Value(literal:'A000631143')}, {'author': Value(literal:'A000420987')}, {'author': Value(literal:'A000675285')}, {'author': Value(literal:'A000020579')}, {'author': Value(literal:'A000037974')}, {'author': Value(literal:'A000009806')}, {'author': Value(literal:'A000246132')}, {'author': Value(literal:'A000718034')}, {'author': Value(literal:'A000014124')}, {'author': Value(literal:'A000322554')}, {'author': Value(literal:'A000002882')}, {'author': Value(literal:'A000323996')}, {'author': Value(literal:'A000062411')}, {'author': Value(literal:'A000421534')}, {'author': Value(literal:'A000024323')}, {'author': Value(literal:'A000002881')}, {'author': Value(literal:'A000011723')}, {'author': Value(literal:'A000701481')}, {'author': Value(literal:'A000753411')}, {'author': Value(literal:'A000169961')}, {'author': Value(literal:'A000002838')}, {'author': Value(literal:'A000145697')}, {'author': Value(literal:'A000016551')}, {'author': Value(literal:'A000728682')}, {'author': Value(literal:'A000456108')}, {'author': Value(literal:'A000070332')}, {'author': Value(literal:'A000244767')}, {'author': Value(literal:'A000247648')}, {'author': Value(literal:'A000049909')}, {'author': Value(literal:'A000494217')}, {'author': Value(literal:'A000441915')}, {'author': Value(literal:'A000521801')}, {'author': Value(literal:'A000590821')}, {'author': Value(literal:'A000049454')}, {'author': Value(literal:'A000098153')}, {'author': Value(literal:'A000745096')}, {'author': Value(literal:'A000377679')}, {'author': Value(literal:'A000744251')}, {'author': Value(literal:'A000734113')}, {'author': Value(literal:'A000413337')}, {'author': Value(literal:'A000091110')}, {'author': Value(literal:'A000016607')}, {'author': Value(literal:'A000022303')}, {'author': Value(literal:'A000029155')}, {'author': Value(literal:'A000748570')}, {'author': Value(literal:'A000032230')}, {'author': Value(literal:'A000010547')}, {'author': Value(literal:'A000839437')}, {'author': Value(literal:'A000403573')}, {'author': Value(literal:'A000005155')}, {'author': Value(literal:'A000234247')}, {'author': Value(literal:'A000010837')}, {'author': Value(literal:'A000000452')}, {'author': Value(literal:'A000788721')}, {'author': Value(literal:'A000000004')}, {'author': Value(literal:'A000046874')}, {'author': Value(literal:'A000411694')}, {'author': Value(literal:'A000087071')}, {'author': Value(literal:'A000008112')}, {'author': Value(literal:'A000464374')}, {'author': Value(literal:'A000086152')}, {'author': Value(literal:'A000007076')}, {'author': Value(literal:'A000036045')}, {'author': Value(literal:'A000385491')}, {'author': Value(literal:'A000747305')}, {'author': Value(literal:'A000003384')}, {'author': Value(literal:'A000094705')}, {'author': Value(literal:'A000099327')}, {'author': Value(literal:'A000076199')}, {'author': Value(literal:'A000019992')}, {'author': Value(literal:'A000092697')}, {'author': Value(literal:'A000001458')}, {'author': Value(literal:'A000014649')}, {'author': Value(literal:'A000071341')}, {'author': Value(literal:'A000904872')}, {'author': Value(literal:'A000339826')}, {'author': Value(literal:'A000802329')}, {'author': Value(literal:'A000521810')}, {'author': Value(literal:'A000008792')}, {'author': Value(literal:'A000017782')}, {'author': Value(literal:'A000474630')}, {'author': Value(literal:'A000076695')}, {'author': Value(literal:'A000038234')}, {'author': Value(literal:'A000032803')}, {'author': Value(literal:'A000018034')}, {'author': Value(literal:'A000289554')}, {'author': Value(literal:'A000003822')}, {'author': Value(literal:'A000285603')}, {'author': Value(literal:'A000869106')}, {'author': Value(literal:'A000000041')}, {'author': Value(literal:'A000370482')}, {'author': Value(literal:'A000448801')}, {'author': Value(literal:'A000014540')}, {'author': Value(literal:'A000034287')}, {'author': Value(literal:'A000510060')}, {'author': Value(literal:'A000014983')}, {'author': Value(literal:'A000067147')}, {'author': Value(literal:'A000540553')}, {'author': Value(literal:'A000018402')}, {'author': Value(literal:'A001028725')}, {'author': Value(literal:'A000109232')}, {'author': Value(literal:'A000038959')}, {'author': Value(literal:'A000285840')}, {'author': Value(literal:'A000078882')}, {'author': Value(literal:'A000456324')}, {'author': Value(literal:'A000833127')}, {'author': Value(literal:'A000000135')}, {'author': Value(literal:'A000435193')}, {'author': Value(literal:'A000000088')}, {'author': Value(literal:'A000814433')}, {'author': Value(literal:'A000035411')}, {'author': Value(literal:'A000063299')}, {'author': Value(literal:'A000642780')}, {'author': Value(literal:'A000075506')}, {'author': Value(literal:'A000006547')}, {'author': Value(literal:'A000016682')}, {'author': Value(literal:'A000074083')}, {'author': Value(literal:'A000047765')}, {'author': Value(literal:'A000301434')}, {'author': Value(literal:'A000054409')}, {'author': Value(literal:'A000500460')}, {'author': Value(literal:'A000001570')}, {'author': Value(literal:'A000004614')}, {'author': Value(literal:'A000479092')}, {'author': Value(literal:'A000106758')}, {'author': Value(literal:'A000001548')}, {'author': Value(literal:'A000012991')}, {'author': Value(literal:'A000545115')}, {'author': Value(literal:'A000000697')}, {'author': Value(literal:'A000939821')}, {'author': Value(literal:'A000008050')}, {'author': Value(literal:'A000801713')}, {'author': Value(literal:'A000875069')}, {'author': Value(literal:'A000378924')}, {'author': Value(literal:'A000110885')}, {'author': Value(literal:'A000894730')}, {'author': Value(literal:'A000060109')}, {'author': Value(literal:'A000000313')}, {'author': Value(literal:'A000094190')}, {'author': Value(literal:'A000888574')}, {'author': Value(literal:'A000065805')}, {'author': Value(literal:'A001240329')}, {'author': Value(literal:'A001111861')}, {'author': Value(literal:'A000355899')}, {'author': Value(literal:'A000000923')}, {'author': Value(literal:'A000627112')}, {'author': Value(literal:'A000296394')}, {'author': Value(literal:'A000010264')}, {'author': Value(literal:'A000040449')}, {'author': Value(literal:'A000074775')}, {'author': Value(literal:'A000079070')}, {'author': Value(literal:'A000017151')}, {'author': Value(literal:'A000000790')}, {'author': Value(literal:'A000012976')}, {'author': Value(literal:'A000060043')}, {'author': Value(literal:'A000019351')}, {'author': Value(literal:'A000034298')}, {'author': Value(literal:'A000047949')}, {'author': Value(literal:'A000466157')}, {'author': Value(literal:'A000046719')}, {'author': Value(literal:'A000052796')}, {'author': Value(literal:'A000660658')}, {'author': Value(literal:'A000041728')}, {'author': Value(literal:'A000038454')}, {'author': Value(literal:'A000877092')}, {'author': Value(literal:'A000124299')}, {'author': Value(literal:'A000797580')}, {'author': Value(literal:'A000009000')}, {'author': Value(literal:'A000010860')}, {'author': Value(literal:'A000004150')}, {'author': Value(literal:'A000027806')}, {'author': Value(literal:'A000038547')}, {'author': Value(literal:'A000000274')}, {'author': Value(literal:'A000001494')}, {'author': Value(literal:'A000031969')}, {'author': Value(literal:'A000033846')}, {'author': Value(literal:'A000021880')}, {'author': Value(literal:'A000000500')}, {'author': Value(literal:'A000847841')}, {'author': Value(literal:'A000000397')}, {'author': Value(literal:'A000083659')}, {'author': Value(literal:'A000536973')}, {'author': Value(literal:'A000433142')}, {'author': Value(literal:'A001095659')}, {'author': Value(literal:'A000018397')}, {'author': Value(literal:'A001120773')}, {'author': Value(literal:'A001107864')}, {'author': Value(literal:'A000824330')}, {'author': Value(literal:'A000246128')}, {'author': Value(literal:'A000053891')}, {'author': Value(literal:'A000000105')}, {'author': Value(literal:'A000042893')}, {'author': Value(literal:'A000317641')}, {'author': Value(literal:'A000305576')}, {'author': Value(literal:'A000633323')}, {'author': Value(literal:'A000015632')}, {'author': Value(literal:'A000061618')}, {'author': Value(literal:'A000021999')}, {'author': Value(literal:'A000011692')}, {'author': Value(literal:'A000004535')}, {'author': Value(literal:'A000247724')}, {'author': Value(literal:'A000663161')}, {'author': Value(literal:'A000149295')}, {'author': Value(literal:'A000001638')}, {'author': Value(literal:'A001012351')}, {'author': Value(literal:'A000000014')}, {'author': Value(literal:'A000028795')}, {'author': Value(literal:'A000035241')}, {'author': Value(literal:'A000029383')}, {'author': Value(literal:'A000074930')}, {'author': Value(literal:'A000004675')}, {'author': Value(literal:'A000997180')}, {'author': Value(literal:'A000009899')}, {'author': Value(literal:'A000004859')}, {'author': Value(literal:'A001004967')}, {'author': Value(literal:'A000004990')}, {'author': Value(literal:'A000054457')}, {'author': Value(literal:'A000979965')}, {'author': Value(literal:'A000090854')}, {'author': Value(literal:'A000324775')}, {'author': Value(literal:'A000000047')}, {'author': Value(literal:'A000023275')}, {'author': Value(literal:'A000007999')}, {'author': Value(literal:'A000956155')}, {'author': Value(literal:'A000052143')}, {'author': Value(literal:'A000039307')}, {'author': Value(literal:'A000088183')}, {'author': Value(literal:'A000045191')}, {'author': Value(literal:'A000353040')}, {'author': Value(literal:'A000087142')}, {'author': Value(literal:'A000041720')}, {'author': Value(literal:'A000082784')}, {'author': Value(literal:'A000015637')}, {'author': Value(literal:'A000979945')}, {'author': Value(literal:'A000044259')}, {'author': Value(literal:'A000027996')}, {'author': Value(literal:'A000624218')}, {'author': Value(literal:'A000236684')}, {'author': Value(literal:'A001096999')}, {'author': Value(literal:'A000022561')}, {'author': Value(literal:'A000891641')}, {'author': Value(literal:'A000002688')}, {'author': Value(literal:'A000442960')}, {'author': Value(literal:'A000001926')}, {'author': Value(literal:'A001039483')}, {'author': Value(literal:'A000020122')}, {'author': Value(literal:'A001041162')}, {'author': Value(literal:'A000128036')}, {'author': Value(literal:'A000008065')}, {'author': Value(literal:'A000942593')}, {'author': Value(literal:'A001036847')}, {'author': Value(literal:'A000157533')}, {'author': Value(literal:'A001021021')}, {'author': Value(literal:'A000000156')}, {'author': Value(literal:'A000074699')}, {'author': Value(literal:'A000555627')}, {'author': Value(literal:'A000038058')}, {'author': Value(literal:'A000012080')}, {'author': Value(literal:'A000878796')}, {'author': Value(literal:'A000000062')}, {'author': Value(literal:'A000035355')}, {'author': Value(literal:'A000000046')}, {'author': Value(literal:'A000045252')}, {'author': Value(literal:'A000121648')}, {'author': Value(literal:'A000110275')}, {'author': Value(literal:'A000385073')}, {'author': Value(literal:'A001044718')}, {'author': Value(literal:'A001031550')}, {'author': Value(literal:'A000888210')}, {'author': Value(literal:'A000030148')}, {'author': Value(literal:'A000335085')}, {'author': Value(literal:'A000040937')}, {'author': Value(literal:'A001021250')}, {'author': Value(literal:'A001031234')}, {'author': Value(literal:'A000247556')}, {'author': Value(literal:'A000031318')}, {'author': Value(literal:'A001131195')}, {'author': Value(literal:'A001108406')}, {'author': Value(literal:'A001189782')}, {'author': Value(literal:'A001114405')}, {'author': Value(literal:'A000066612')}, {'author': Value(literal:'A000980906')}, {'author': Value(literal:'A000010122')}, {'author': Value(literal:'A000000702')}, {'author': Value(literal:'A000028392')}, {'author': Value(literal:'A000103226')}, {'author': Value(literal:'A000550339')}, {'author': Value(literal:'A000005130')}, {'author': Value(literal:'A000006811')}, {'author': Value(literal:'A000002064')}, {'author': Value(literal:'A000004782')}, {'author': Value(literal:'A000430029')}, {'author': Value(literal:'A000496272')}, {'author': Value(literal:'A000000677')}, {'author': Value(literal:'A000997646')}, {'author': Value(literal:'A000010265')}, {'author': Value(literal:'A000685880')}, {'author': Value(literal:'A000104329')}, {'author': Value(literal:'A000002540')}, {'author': Value(literal:'A000037670')}, {'author': Value(literal:'A001043359')}, {'author': Value(literal:'A000893025')}, {'author': Value(literal:'A000012569')}, {'author': Value(literal:'A000000982')}, {'author': Value(literal:'A000039391')}, {'author': Value(literal:'A000215447')}, {'author': Value(literal:'A000033178')}, {'author': Value(literal:'A000000070')}, {'author': Value(literal:'A000005335')}, {'author': Value(literal:'A001125559')}, {'author': Value(literal:'A001119387')}, {'author': Value(literal:'A001105207')}, {'author': Value(literal:'A001159948')}, {'author': Value(literal:'A001244033')}, {'author': Value(literal:'A000040177')}, {'author': Value(literal:'A001027602')}, {'author': Value(literal:'A000275767')}, {'author': Value(literal:'A000286881')}, {'author': Value(literal:'A000030274')}, {'author': Value(literal:'A000002413')}, {'author': Value(literal:'A000331279')}, {'author': Value(literal:'A000342902')}, {'author': Value(literal:'A000225599')}, {'author': Value(literal:'A000056674')}, {'author': Value(literal:'A000488795')}, {}, {'author': Value(literal:'A000092823')}, {'author': Value(literal:'A000431930')}]	562	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Quién escribió Finding Home?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
SELECT DISTINCT ?author WHERE { 
    ?story golem:title ""Finding Home"" . 
    ?story dc:creator ?author . 
}
"	[]	0	0	1
563	563	es	¿Quién escribió Stronger?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?author WHERE {  ?story golem:title ""Stronger"" . ?story golem:author ?author . }"	[{'author': Value(literal:'A000059059')}, {'author': Value(literal:'A000357163')}, {'author': Value(literal:'A000063266')}, {'author': Value(literal:'A000060043')}, {'author': Value(literal:'A000001002')}, {'author': Value(literal:'A000187056')}, {'author': Value(literal:'A000080519')}, {'author': Value(literal:'A000344107')}, {'author': Value(literal:'A000042284')}, {'author': Value(literal:'A000014656')}, {'author': Value(literal:'A000002413')}, {'author': Value(literal:'A000036583')}, {'author': Value(literal:'A000106349')}, {'author': Value(literal:'A000091285')}, {'author': Value(literal:'A000124628')}, {'author': Value(literal:'A000040563')}, {'author': Value(literal:'A000036091')}, {'author': Value(literal:'A000048769')}, {'author': Value(literal:'A000023465')}, {'author': Value(literal:'A000000000')}, {'author': Value(literal:'A000097504')}, {'author': Value(literal:'A000527887')}, {'author': Value(literal:'A000432543')}, {'author': Value(literal:'A000005387')}, {'author': Value(literal:'A000153694')}, {'author': Value(literal:'A000002011')}, {'author': Value(literal:'A000056587')}, {'author': Value(literal:'A001129630')}, {'author': Value(literal:'A001163130')}, {'author': Value(literal:'A000091597')}, {'author': Value(literal:'A000001791')}, {'author': Value(literal:'A000264917')}, {'author': Value(literal:'A000071854')}, {'author': Value(literal:'A000467543')}, {'author': Value(literal:'A000000083')}, {'author': Value(literal:'A000202745')}, {'author': Value(literal:'A000000786')}, {'author': Value(literal:'A000001758')}, {'author': Value(literal:'A000641800')}, {'author': Value(literal:'A000018776')}, {'author': Value(literal:'A000025358')}, {'author': Value(literal:'A000039405')}, {'author': Value(literal:'A000001604')}, {'author': Value(literal:'A000027197')}, {'author': Value(literal:'A001112186')}, {'author': Value(literal:'A001172835')}, {'author': Value(literal:'A000001278')}, {'author': Value(literal:'A000005719')}, {'author': Value(literal:'A000097966')}, {'author': Value(literal:'A000556236')}, {'author': Value(literal:'A000227608')}, {'author': Value(literal:'A000035230')}, {'author': Value(literal:'A000039001')}, {'author': Value(literal:'A000039436')}, {'author': Value(literal:'A000002461')}, {'author': Value(literal:'A000010745')}, {'author': Value(literal:'A000004006')}, {'author': Value(literal:'A000003746')}, {'author': Value(literal:'A001119683')}, {'author': Value(literal:'A000024981')}, {'author': Value(literal:'A000022126')}, {'author': Value(literal:'A000018260')}, {'author': Value(literal:'A000002302')}, {'author': Value(literal:'A000000511')}, {'author': Value(literal:'A000005643')}, {'author': Value(literal:'A000000953')}, {'author': Value(literal:'A000015832')}, {'author': Value(literal:'A000248214')}, {'author': Value(literal:'A000725967')}, {'author': Value(literal:'A000016495')}, {'author': Value(literal:'A000000235')}, {'author': Value(literal:'A000003120')}, {'author': Value(literal:'A000015143')}, {'author': Value(literal:'A000545345')}, {'author': Value(literal:'A000087611')}, {'author': Value(literal:'A000084660')}, {'author': Value(literal:'A000096283')}, {'author': Value(literal:'A000003882')}, {'author': Value(literal:'A000001907')}, {'author': Value(literal:'A000006520')}, {'author': Value(literal:'A000766847')}, {'author': Value(literal:'A000043542')}, {'author': Value(literal:'A000000210')}, {'author': Value(literal:'A000073663')}, {'author': Value(literal:'A000059601')}, {'author': Value(literal:'A000821025')}, {'author': Value(literal:'A000774893')}, {'author': Value(literal:'A001021289')}, {'author': Value(literal:'A000817358')}, {'author': Value(literal:'A000000100')}, {'author': Value(literal:'A000000605')}, {'author': Value(literal:'A000390377')}, {'author': Value(literal:'A001178186')}, {'author': Value(literal:'A000050730')}, {'author': Value(literal:'A000691703')}, {'author': Value(literal:'A000691026')}, {'author': Value(literal:'A000012190')}, {'author': Value(literal:'A000000120')}, {'author': Value(literal:'A001231611')}, {'author': Value(literal:'A000043403')}, {'author': Value(literal:'A000920416')}, {'author': Value(literal:'A000750814')}, {'author': Value(literal:'A000008959')}, {'author': Value(literal:'A000246635')}, {'author': Value(literal:'A000001495')}, {'author': Value(literal:'A000000431')}, {'author': Value(literal:'A000088968')}, {'author': Value(literal:'A000187972')}, {'author': Value(literal:'A000863013')}, {'author': Value(literal:'A001074438')}, {'author': Value(literal:'A000005360')}, {'author': Value(literal:'A000084092')}, {'author': Value(literal:'A000082155')}, {'author': Value(literal:'A000112717')}, {'author': Value(literal:'A000076647')}, {'author': Value(literal:'A000077216')}, {'author': Value(literal:'A000010605')}, {'author': Value(literal:'A000016976')}, {'author': Value(literal:'A000786516')}, {'author': Value(literal:'A000002139')}, {'author': Value(literal:'A000066068')}, {'author': Value(literal:'A000007048')}, {'author': Value(literal:'A000013792')}, {'author': Value(literal:'A000005252')}, {'author': Value(literal:'A000001923')}, {'author': Value(literal:'A000012270')}, {'author': Value(literal:'A000003467')}, {'author': Value(literal:'A000026622')}, {'author': Value(literal:'A000000454')}, {'author': Value(literal:'A000059013')}, {'author': Value(literal:'A000029090')}, {'author': Value(literal:'A000625898')}, {'author': Value(literal:'A000012295')}, {'author': Value(literal:'A000115410')}, {'author': Value(literal:'A000053963')}, {'author': Value(literal:'A000154115')}, {'author': Value(literal:'A000023819')}, {'author': Value(literal:'A000528231')}, {'author': Value(literal:'A000419493')}, {'author': Value(literal:'A000006625')}, {'author': Value(literal:'A000047240')}, {'author': Value(literal:'A001037304')}, {'author': Value(literal:'A000090831')}, {'author': Value(literal:'A000024901')}, {'author': Value(literal:'A000006954')}, {'author': Value(literal:'A001123827')}, {'author': Value(literal:'A001125238')}, {'author': Value(literal:'A000052041')}, {'author': Value(literal:'A000029329')}, {'author': Value(literal:'A000297369')}, {'author': Value(literal:'A000055024')}]	563	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Quién escribió Stronger?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?author WHERE { 
?story golem:title ""Stronger"" . 
?story dc:creator ?author . 
}
"	[]	0	0	1
564	564	es	¿Quién escribió Ron's body?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?author WHERE {  ?story golem:title ""Ron's body"" . ?story golem:author ?author . }"	[{'author': Value(literal:'A000063813')}]	564	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Quién escribió Ron's body?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?author WHERE { 
  ?story golem:title ""Ron's body"" . 
  ?story dc:creator ?author . 
}
"	[]	0	0	1
565	565	es	¿Quién escribió Happy accidents?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?author WHERE {  ?story golem:title ""Happy accidents"" . ?story golem:author ?author . }"	[{'author': Value(literal:'A000287200')}, {'author': Value(literal:'A000010855')}, {'author': Value(literal:'A999999999')}, {'author': Value(literal:'A000001365')}, {'author': Value(literal:'A000589349')}, {'author': Value(literal:'A000147314')}]	565	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Quién escribió Happy accidents?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?author WHERE { 
?story golem:title ""Happy accidents"" . 
?story dc:creator ?author . 
}
"	[]	0	0	1
566	566	es	¿Quién escribió Things are Different Now?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?author WHERE {  ?story golem:title ""Things are Different Now"" . ?story golem:author ?author . }"	[{'author': Value(literal:'A000008460')}, {'author': Value(literal:'A000106944')}, {'author': Value(literal:'A001152386')}, {'author': Value(literal:'A000145440')}, {'author': Value(literal:'A000016954')}]	566	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Quién escribió Things are Different Now?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?author WHERE { 
  ?story golem:title ""Things are Different Now"" . 
  ?story dc:creator ?author . 
}
"	[]	0	0	1
568	568	es	Muéstrame los resúmenes de historias de 西子绪	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?summary WHERE {  ?story golem:fandom ""西子绪"" . ?story golem:summary ?summary . }"	[{'summary': Value(literal:'幻想农场/白月狐X陆清酒/R（幼角，下药，产乳，双根）')}]	568	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: Muéstrame los resúmenes de historias de 西子绪

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?summary WHERE { 
?story gc:fandom ""西子绪"" . 
?story golem:summary ?summary . 
}
"	[]	0	0	1
569	569	es	Muéstrame los resúmenes de historias de 催麥	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?summary WHERE {  ?story golem:fandom ""催麥"" . ?story golem:summary ?summary . }"	[{'summary': Value(literal:'＊女裝ＰＬＡＹ注意 ＊Ｒ１８注意')}]	569	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: Muéstrame los resúmenes de historias de 催麥

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?summary WHERE { 
?story golem:fandom ""催麥"" . 
?story golem:summary ?summary . 
}
"	[{'summary': Value(literal:'＊女裝ＰＬＡＹ注意 ＊Ｒ１８注意')}]	1	0	0
570	570	es	Muéstrame los resúmenes de historias de 哈厂	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?summary WHERE {  ?story golem:fandom ""哈厂"" . ?story golem:summary ?summary . }"	[{'summary': Value(literal:'None')}]	570	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: Muéstrame los resúmenes de historias de 哈厂

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?summary WHERE { 
?story golem:fandom ""哈厂"" . 
?story golem:summary ?summary . 
}
"	[{'summary': Value(literal:'None')}]	1	0	0
571	571	es	Muéstrame los resúmenes de historias de 龚俊 张哲瀚/赵泛舟 张泯 - Fandom	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?summary WHERE {  ?story golem:fandom ""龚俊 张哲瀚/赵泛舟 张泯 - Fandom"" . ?story golem:summary ?summary . }"	[{'summary': Value(literal:'多情人小张总泯X绿茶小狗舟，相互放不下的破镜重圆，1V1，HE 设定上是这样但写出来不知道会怎样，只是想开车而已。')}]	571	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: Muéstrame los resúmenes de historias de 龚俊 张哲瀚/赵泛舟 张泯 - Fandom

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT ?summary WHERE { 
  ?story dc:title ""龚俊 张哲瀚/赵泛舟 张泯"" .
  ?story golem:fandom ""Fandom"" .
  ?story golem:summary ?summary .
}
"	[]	0	0	1
572	572	es	Muéstrame los resúmenes de historias de 杀龙	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?summary WHERE {  ?story golem:fandom ""杀龙"" . ?story golem:summary ?summary . }"	[{'summary': Value(literal:'None')}, {'summary': Value(literal:'hornhub年终巨献《情迷惊世婚礼》。 是个PWP。')}]	572	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: Muéstrame los resúmenes de historias de 杀龙

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?summary WHERE { 
?story golem:fandom ""杀龙"" . 
?story golem:summary ?summary . 
}
"	[{'summary': Value(literal:'None')}, {'summary': Value(literal:'hornhub年终巨献《情迷惊世婚礼》。 是个PWP。')}]	1	0	0
573	573	es	Muéstrame los resúmenes de historias de 梦比优斯奥特曼 - Fandom	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?summary WHERE {  ?story golem:fandom ""梦比优斯奥特曼 - Fandom"" . ?story golem:summary ?summary . }"	[{'summary': Value(literal:'Summary：行星阿柏与他谈论一切事，谈论可爱之物也谈论爱。')}, {'summary': Value(literal:'CP：博伽茹X希卡利 阿柏X希卡利 预警：非自愿、怪味堕胎（也不算堕胎） 欢迎评论，我需要一些写文方面的建议qaq，如果有话要讲的话，请不要客气。')}, {'summary': Value(literal:'四个梦比优斯X希卡利 有在模仿姜姜的文风（写得很差劲）。 不会写东西，正在寻找适合自己的表达方式。 如果有批评建议请不要客气。')}, {'summary': Value(literal:'交换身体')}, {'summary': Value(literal:'五次未来 没有 约会（以及一次他确实约会了）。')}, {'summary': Value(literal:'梦比优斯跟希卡利确定了在搭档以外的恋人关系，希卡利花了不少时间，教导他热情的恋人要如何做爱。现在，该到检验学习成果的时候了。')}, {'summary': Value(literal:'缓缓的补档中……')}, {'summary': Value(literal:'梦比优斯在很多方面都很奇怪，尤其是在热切地渴望展示自己在地球上学到的东西的时候。 就像这样。 这到底是什么鬼。')}, {'summary': Value(literal:'他曾想要知道，何时光之国的光辉会亮得他无法承受。')}]	573	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: Muéstrame los resúmenes de historias de 梦比优斯奥特曼 - Fandom

Query:
"	"
prefix golem: <https://golemlab.eu/graph/>
prefix dc: <http://purl.org/dc/terms/>
prefix gc: <https://ontology.golemlab.eu/>
SELECT DISTINCT ?summary WHERE {
  ?story golem:fandom ""梦比优斯奥特曼 - Fandom"" .
  ?story golem:summary ?summary .
}
"	[{'summary': Value(literal:'Summary：行星阿柏与他谈论一切事，谈论可爱之物也谈论爱。')}, {'summary': Value(literal:'CP：博伽茹X希卡利 阿柏X希卡利 预警：非自愿、怪味堕胎（也不算堕胎） 欢迎评论，我需要一些写文方面的建议qaq，如果有话要讲的话，请不要客气。')}, {'summary': Value(literal:'四个梦比优斯X希卡利 有在模仿姜姜的文风（写得很差劲）。 不会写东西，正在寻找适合自己的表达方式。 如果有批评建议请不要客气。')}, {'summary': Value(literal:'交换身体')}, {'summary': Value(literal:'五次未来 没有 约会（以及一次他确实约会了）。')}, {'summary': Value(literal:'梦比优斯跟希卡利确定了在搭档以外的恋人关系，希卡利花了不少时间，教导他热情的恋人要如何做爱。现在，该到检验学习成果的时候了。')}, {'summary': Value(literal:'缓缓的补档中……')}, {'summary': Value(literal:'梦比优斯在很多方面都很奇怪，尤其是在热切地渴望展示自己在地球上学到的东西的时候。 就像这样。 这到底是什么鬼。')}, {'summary': Value(literal:'他曾想要知道，何时光之国的光辉会亮得他无法承受。')}]	1	0	0
574	574	es	Muéstrame los resúmenes de historias de 监狱 - Fandom	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?summary WHERE {  ?story golem:fandom ""监狱 - Fandom"" . ?story golem:summary ?summary . }"	[{'summary': Value(literal:'战俘故事')}]	574	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: Muéstrame los resúmenes de historias de 监狱 - Fandom

Query:
"	"
prefix golem: <https://golemlab.eu/graph/>  
prefix dc: <http://purl.org/dc/terms/>  
prefix gc: <https://ontology.golemlab.eu/> 
SELECT ?summary WHERE { 
?story golem:fandom ""监狱 - Fandom"" . 
?story golem:summary ?summary . 
}
"	[{'summary': Value(literal:'战俘故事')}]	1	0	0
575	575	es	Muéstrame los resúmenes de historias de Uploader RPF	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?summary WHERE {  ?story golem:fandom ""Uploader RPF"" . ?story golem:summary ?summary . }"	[{'summary': Value(literal:'那里的镜头有他一份。')}, {'summary': Value(literal:'“记住，像他这样才能活下来。”')}, {'summary': Value(literal:'他知道的。')}, {'summary': Value(literal:'“你干嘛呢？”')}, {'summary': Value(literal:'“我来接他啦。”')}, {'summary': Value(literal:'想碰你。')}, {'summary': Value(literal:'反正都知道接下来干什么，不如省省力气。')}, {'summary': Value(literal:'某幻荣幸地穿越了。')}]	575	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: Muéstrame los resúmenes de historias de Uploader RPF

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?summary WHERE { 
?story a gc:Story .
?story golem:publisher ""Uploader RPF"" .
?story golem:summary ?summary .
}
"	[]	0	0	1
576	576	es	Muéstrame los resúmenes de historias de 庭外	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?summary WHERE {  ?story golem:fandom ""庭外"" . ?story golem:summary ?summary . }"	[{'summary': Value(literal:'冷门cp 章政X薛冬 “你是我形单影只生活里的一枚扣子，扣紧了我的心，不让它再跑出来。”')}]	576	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: Muéstrame los resúmenes de historias de 庭外

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?summary WHERE { 
 ?story golem:fandom ""庭外"" . 
 ?story golem:summary ?summary . 
}
"	[{'summary': Value(literal:'冷门cp 章政X薛冬 “你是我形单影只生活里的一枚扣子，扣紧了我的心，不让它再跑出来。”')}]	1	0	0
577	577	es	Muéstrame los resúmenes de historias de 只因我們天生一對 - Fandom	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?summary WHERE {  ?story golem:fandom ""只因我們天生一對 - Fandom"" . ?story golem:summary ?summary . }"	"[{'summary': Value(literal:'簡體中文版： 翻譯由Google提供 中國用戶請使用VPN連接')}, {'summary': Value(literal:'-原著向但有略作修改，HE清水文 -靈感來自History2越界主題曲和2gether -這是一篇FMV衍生同人小說 點擊鏈接以獲取糧食 > 【SarawatXTine】越界(劇情向) | 2gether The Series FMV 建議食用方法：先看文再看MV :) 簡介： 後來Sarawat想，到底是什麼，讓他可以鼓起勇氣無視世間流言蜚語，跨越那道似乎堅不可摧的高牆，牽住Tine的手不再後退？是演唱會裡那驚鴻一瞥？還是朝夕相對時逐漸積累的心動？這時，躺在他身旁的Tine從背後抱住了他，胸膛緊貼著他背部微彎的線條，像兩片完美契合的拼圖。 大概，只因我們天生一對。')}, {'summary': Value(literal:""主持人P'Aof在2019年11月書展的訪問中，爆料Bright夢見他自己親吻Win的趣事。作為笑談。 那時Bright根本不會知道，從此之後的數個夜晚，凡是夢見有Win存在的場景，一次一次，都遠比親吻更多。 時間線：2019-2020.5月。"")}, {'summary': Value(literal:'小甜文，輕鬆無虐')}, {'summary': Value(literal:""在Bright vachirawit——他現在偶爾也會直接喊他「Phi」了——出現之前，Mick覺得自己是世界上最了解、最欣賞、最喜歡自家哥哥的人。是P'Win的頭號鐵粉。 但自從這位比他更適合穿哥哥衣服的傢伙出現之後，一切就不一樣了。 【那些閃電，指向你】系列外一章。時間線：弟弟視角回憶2019-2020.6月。"")}, {'summary': Value(literal:'泰國薑蔘(plai) +青檸+甜橙！Alpha x 冷空氣（古巴香脂）！Beta 先天性嗅覺失調Sarawat v.s. 皮膚過敏好鼻師Tine，不靠費洛蒙的感官之戀XD')}]"	577	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: Muéstrame los resúmenes de historias de 只因我們天生一對 - Fandom

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT DISTINCT ?summary WHERE { 
?story golem:fandom ""只因我們天生一對 - Fandom"" . 
?story golem:summary ?summary . 
}
"	"[{'summary': Value(literal:'簡體中文版： 翻譯由Google提供 中國用戶請使用VPN連接')}, {'summary': Value(literal:'-原著向但有略作修改，HE清水文 -靈感來自History2越界主題曲和2gether -這是一篇FMV衍生同人小說 點擊鏈接以獲取糧食 > 【SarawatXTine】越界(劇情向) | 2gether The Series FMV 建議食用方法：先看文再看MV :) 簡介： 後來Sarawat想，到底是什麼，讓他可以鼓起勇氣無視世間流言蜚語，跨越那道似乎堅不可摧的高牆，牽住Tine的手不再後退？是演唱會裡那驚鴻一瞥？還是朝夕相對時逐漸積累的心動？這時，躺在他身旁的Tine從背後抱住了他，胸膛緊貼著他背部微彎的線條，像兩片完美契合的拼圖。 大概，只因我們天生一對。')}, {'summary': Value(literal:""主持人P'Aof在2019年11月書展的訪問中，爆料Bright夢見他自己親吻Win的趣事。作為笑談。 那時Bright根本不會知道，從此之後的數個夜晚，凡是夢見有Win存在的場景，一次一次，都遠比親吻更多。 時間線：2019-2020.5月。"")}, {'summary': Value(literal:'小甜文，輕鬆無虐')}, {'summary': Value(literal:""在Bright vachirawit——他現在偶爾也會直接喊他「Phi」了——出現之前，Mick覺得自己是世界上最了解、最欣賞、最喜歡自家哥哥的人。是P'Win的頭號鐵粉。 但自從這位比他更適合穿哥哥衣服的傢伙出現之後，一切就不一樣了。 【那些閃電，指向你】系列外一章。時間線：弟弟視角回憶2019-2020.6月。"")}, {'summary': Value(literal:'泰國薑蔘(plai) +青檸+甜橙！Alpha x 冷空氣（古巴香脂）！Beta 先天性嗅覺失調Sarawat v.s. 皮膚過敏好鼻師Tine，不靠費洛蒙的感官之戀XD')}]"	1	0	0
578	578	es	¿Cuál es el recuento promedio de palabras?	prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT (AVG(?words) as ?avg_words) WHERE { ?story golem:numberOfWords ?words . }	[{'avg_words': Value(typed-literal:'8180.185545444649115')}]	578	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Cuál es el recuento promedio de palabras?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT AVG(?wordCount) AS ?average_word_count WHERE {
  ?story golem:numberOfWords ?wordCount .
}
"	[{'average_word_count': Value(typed-literal:'8180.185545444649115')}]	0	1	1
580	580	es	¿Cuántas historias están marcadas como Theo is a Seer?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT COUNT(DISTINCT ?story) as ?stories WHERE { ?story golem:keyword ""Theo is a Seer"" . }"	[{'stories': Value(typed-literal:'2')}]	580	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Cuántas historias están marcadas como Theo is a Seer?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT COUNT(?story) AS ?number_of_stories WHERE { 
?story golem:characters ""Theo is a Seer"" . }
"	[{'number_of_stories': Value(typed-literal:'0')}]	0	1	1
581	581	es	¿Cuántas historias están marcadas como this could be gen or pre-het????	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT COUNT(DISTINCT ?story) as ?stories WHERE { ?story golem:keyword ""this could be gen or pre-het???"" . }"	[{'stories': Value(typed-literal:'1')}]	581	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Cuántas historias están marcadas como this could be gen or pre-het????

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT COUNT(?story) AS ?number_of_stories WHERE { 
?story golem:keyword ""this could be gen"" . 
?story golem:keyword ""pre-het"" . 
}
"	[{'number_of_stories': Value(typed-literal:'0')}]	0	1	1
582	582	es	¿Cuántas historias están marcadas como Written Pre-Order of the Phoenix?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT COUNT(DISTINCT ?story) as ?stories WHERE { ?story golem:keyword ""Written Pre-Order of the Phoenix"" . }"	[{'stories': Value(typed-literal:'27')}]	582	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Cuántas historias están marcadas como Written Pre-Order of the Phoenix?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT COUNT(?story) AS ?number_of_stories WHERE { 
?story golem:keyword ""Written Pre-Order of the Phoenix"" . 
}
"	[{'number_of_stories': Value(typed-literal:'27')}]	0	1	1
583	583	es	¿Cuántas historias están marcadas como Child Ron Weasley?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT COUNT(DISTINCT ?story) as ?stories WHERE { ?story golem:keyword ""Child Ron Weasley"" . }"	[{'stories': Value(typed-literal:'1')}]	583	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Cuántas historias están marcadas como Child Ron Weasley?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT COUNT(?story) AS ?number_of_stories WHERE { 
?story golem:characters ""Child Ron Weasley"" . 
}
"	[{'number_of_stories': Value(typed-literal:'0')}]	0	1	1
584	584	es	¿Cuántas historias están marcadas como Bisexual Regulus Black?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT COUNT(DISTINCT ?story) as ?stories WHERE { ?story golem:keyword ""Bisexual Regulus Black"" . }"	[{'stories': Value(typed-literal:'113')}]	584	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Cuántas historias están marcadas como Bisexual Regulus Black?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT COUNT(?story) AS ?count WHERE { 
  ?story golem:characters ""Bisexual Regulus Black"" .
}
"	[{'count': Value(typed-literal:'0')}]	0	1	1
585	585	es	¿Cuántas historias están marcadas como See how many you can figure out?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT COUNT(DISTINCT ?story) as ?stories WHERE { ?story golem:keyword ""See how many you can figure out"" . }"	[{'stories': Value(typed-literal:'1')}]	585	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Cuántas historias están marcadas como See how many you can figure out?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT COUNT(?story) AS ?number_of_stories WHERE { 
?story golem:title ""See how many you can figure out"" . 
}
"	[{'number_of_stories': Value(typed-literal:'0')}]	0	1	1
586	586	es	¿Cuántas historias están marcadas como Remus has BPD/Bipolar Disorder?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT COUNT(DISTINCT ?story) as ?stories WHERE { ?story golem:keyword ""Remus has BPD/Bipolar Disorder"" . }"	[{'stories': Value(typed-literal:'2')}]	586	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Cuántas historias están marcadas como Remus has BPD/Bipolar Disorder?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT COUNT(?story) AS ?number_of_stories WHERE { 
?story golem:characters ""Remus Lupin"" . 
?story gc:romanticCategory ""BPD/Bipolar Disorder"" . 
}
"	[{'number_of_stories': Value(typed-literal:'0')}]	0	1	1
587	587	es	¿Cuántas historias están marcadas como Chickens?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT COUNT(DISTINCT ?story) as ?stories WHERE { ?story golem:keyword ""Chickens"" . }"	[{'stories': Value(typed-literal:'436')}]	587	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Cuántas historias están marcadas como Chickens?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT COUNT(?story) AS ?number_of_stories WHERE { 
?story golem:keyword ""Chickens"" . 
}
"	[{'number_of_stories': Value(typed-literal:'436')}]	0	1	1
588	588	es	¿Cuántas historias están marcadas como Character Turned Into a Ghost?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT COUNT(DISTINCT ?story) as ?stories WHERE { ?story golem:keyword ""Character Turned Into a Ghost"" . }"	[{'stories': Value(typed-literal:'2059')}]	588	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Cuántas historias están marcadas como Character Turned Into a Ghost?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT COUNT(?story) AS ?number_of_stories WHERE { 
  ?story golem:romanticCategory ""Character Turned Into a Ghost"" . 
}
"	[{'number_of_stories': Value(typed-literal:'0')}]	0	1	1
589	589	es	¿Cuántas historias están marcadas como did I mention dumb??	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT COUNT(DISTINCT ?story) as ?stories WHERE { ?story golem:keyword ""did I mention dumb?"" . }"	[{'stories': Value(typed-literal:'1')}]	589	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Cuántas historias están marcadas como did I mention dumb??

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT COUNT(?story) AS ?number_of_stories WHERE { 
?story golem:keyword ""did I mention dumb"" . 
}
"	[{'number_of_stories': Value(typed-literal:'0')}]	0	1	1
590	590	es	¿Cuántos autores hay representados en los datos?	prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT (COUNT(DISTINCT ?author) as ?authors) WHERE { ?story golem:author ?author . }	[{'authors': Value(typed-literal:'1234209')}]	590	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Cuántos autores hay representados en los datos?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT COUNT(DISTINCT ?author) AS ?number_of_authors WHERE { 
?story a gc:Story .
?story gc:creator ?author .
}
"	[{'number_of_authors': Value(typed-literal:'0')}]	0	1	1
591	591	es	¿Cuántas historias hay en Archive of Our Own?	prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT COUNT(DISTINCT ?story) as ?stories WHERE { ?story golem:story_id ?id }	[{'stories': Value(typed-literal:'8546450')}]	591	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Cuántas historias hay en Archive of Our Own?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT COUNT(?story) AS ?total_stories WHERE { 
?story a golem:Story .
}
"	[{'total_stories': Value(typed-literal:'0')}]	0	1	1
593	593	es	¿Cuántos comentarios tienen de media las historias de 夏油傑 - Fandom?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""夏油傑 - Fandom"" . ?story golem:numberOfComments ?comments . }"	[{'avg_number_of_comments': Value(typed-literal:'0')}]	593	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Cuántos comentarios tienen de media las historias de 夏油傑 - Fandom?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/>  
SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { 
?story golem:fandom ""夏油傑 - Fandom"" . 
?story golem:numberOfComments ?comments . 
}
"	[{'avg_number_of_comments': Value(typed-literal:'0')}]	1	0	0
594	594	es	¿Cuántos comentarios tienen de media las historias de Shiritsu Bakaleya Koukou?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""Shiritsu Bakaleya Koukou"" . ?story golem:numberOfComments ?comments . }"	[{'avg_number_of_comments': Value(typed-literal:'1.117647058823529')}]	594	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Cuántos comentarios tienen de media las historias de Shiritsu Bakaleya Koukou?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { 
?story golem:fandom ""Shiritsu Bakaleya Koukou"" . 
?story golem:numberOfComments ?comments . 
}
"	[{'avg_number_of_comments': Value(typed-literal:'1.117647058823529')}]	1	0	0
595	595	es	¿Cuántos comentarios tienen de media las historias de jaoyin?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""jaoyin"" . ?story golem:numberOfComments ?comments . }"	[{'avg_number_of_comments': Value(typed-literal:'1')}]	595	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Cuántos comentarios tienen de media las historias de jaoyin?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { 
    ?story golem:fandom ""jaoyin"" . 
    ?story golem:numberOfComments ?comments . 
}
"	[{'avg_number_of_comments': Value(typed-literal:'1')}]	1	0	0
596	596	es	¿Cuántos comentarios tienen de media las historias de fast and furious：Hobbs and Shaw?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""fast and furious：Hobbs and Shaw"" . ?story golem:numberOfComments ?comments . }"	[{'avg_number_of_comments': Value(typed-literal:'1')}]	596	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Cuántos comentarios tienen de media las historias de fast and furious：Hobbs and Shaw?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { 
?story golem:fandom ""fast and furious：Hobbs and Shaw"" . 
?story golem:numberOfComments ?comments . 
}
"	[{'avg_number_of_comments': Value(typed-literal:'1')}]	1	0	0
597	597	es	¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""黒蝶のサイケデリカ"" . ?story golem:numberOfComments ?comments . }"	[{'avg_number_of_comments': Value(typed-literal:'1.857142857142857')}]	597	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de fast and furious：Hobbs and Shaw?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""fast and furious：Hobbs and Shaw"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Cuántos comentarios tienen de media las historias de 黒蝶のサイケデリカ?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/>  
prefix dc: <http://purl.org/dc/terms/>  
prefix gc: <https://ontology.golemlab.eu/>  
SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { 
    ?story golem:fandom ""黒蝶のサイケデリカ"" . 
    ?story golem:numberOfComments ?comments . 
}
"	[{'avg_number_of_comments': Value(typed-literal:'1.857142857142857')}]	1	0	0
598	598	es	¿Cuántos comentarios tienen de media las historias de German literature rpf?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""German literature rpf"" . ?story golem:numberOfComments ?comments . }"	[{'avg_number_of_comments': Value(typed-literal:'2.333333333333333')}]	598	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de fast and furious：Hobbs and Shaw?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""fast and furious：Hobbs and Shaw"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Cuántos comentarios tienen de media las historias de German literature rpf?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { 
?story golem:fandom ""German literature rpf"" . 
?story golem:numberOfComments ?comments . 
}
"	[{'avg_number_of_comments': Value(typed-literal:'2.333333333333333')}]	1	0	0
599	599	es	¿Cuántos comentarios tienen de media las historias de 咩咩师兄弟?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""咩咩师兄弟"" . ?story golem:numberOfComments ?comments . }"	[{'avg_number_of_comments': Value(typed-literal:'0')}]	599	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de fast and furious：Hobbs and Shaw?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""fast and furious：Hobbs and Shaw"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Cuántos comentarios tienen de media las historias de 咩咩师兄弟?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { 
    ?story golem:fandom ""咩咩师兄弟"" . 
    ?story golem:numberOfComments ?comments . 
}
"	[{'avg_number_of_comments': Value(typed-literal:'0')}]	1	0	0
600	600	es	¿Cuántos comentarios tienen de media las historias de kn；Jn?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""kn；Jn"" . ?story golem:numberOfComments ?comments . }"	[{'avg_number_of_comments': Value(typed-literal:'0')}]	600	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de fast and furious：Hobbs and Shaw?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""fast and furious：Hobbs and Shaw"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Cuántos comentarios tienen de media las historias de kn；Jn?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { 
?story golem:fandom ""kn;Jn"" . 
?story golem:numberOfComments ?comments . 
}
"	[{}]	0	1	1
601	601	es	¿Cuántos comentarios tienen de media las historias de アレクサンドル・デュマ?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""アレクサンドル・デュマ"" . ?story golem:numberOfComments ?comments . }"	[{'avg_number_of_comments': Value(typed-literal:'0')}]	601	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de fast and furious：Hobbs and Shaw?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""fast and furious：Hobbs and Shaw"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Cuántos comentarios tienen de media las historias de アレクサンドル・デュマ?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { 
  ?story golem:fandom ""アレクサンドル・デュマ"" . 
  ?story golem:numberOfComments ?comments . 
}
"	[{'avg_number_of_comments': Value(typed-literal:'0')}]	1	0	0
602	602	es	¿Cuántos comentarios tienen de media las historias de ダンジョン飯?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""ダンジョン飯"" . ?story golem:numberOfComments ?comments . }"	[{'avg_number_of_comments': Value(typed-literal:'1.833333333333333')}]	602	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de fast and furious：Hobbs and Shaw?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""fast and furious：Hobbs and Shaw"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Cuántos comentarios tienen de media las historias de ダンジョン飯?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { 
    ?story golem:fandom ""ダンジョン飯"" . 
    ?story golem:numberOfComments ?comments . 
}
"	[{'avg_number_of_comments': Value(typed-literal:'1.833333333333333')}]	1	0	0
636	636	es	¿Cuántas historias están marcadas como explícitas?	"prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT COUNT(?story) as ?explicit_stories WHERE { ?story golem:rating ""Explicit"" . }"	[{'explicit_stories': Value(typed-literal:'1432006')}]	636	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de fast and furious：Hobbs and Shaw?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""fast and furious：Hobbs and Shaw"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Cuántas historias están marcadas como explícitas?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT COUNT(?story) AS ?explicit_stories WHERE { 
?story golem:contentWarning ""explicit"" .
}
"	[{'explicit_stories': Value(typed-literal:'0')}]	0	1	1
637	637	es	¿Cuántas reacciones suele conseguir una historia?	prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?kudos) AS ?average_number_of_kudos AVG(?comments) AS ?average_number_of_comments WHERE { ?story golem:numberOfKudos ?kudos . ?story golem:numberOfComments ?comments . }	[{'average_number_of_kudos': Value(typed-literal:'152.312722451740173'), 'average_number_of_comments': Value(typed-literal:'25.433749929559123')}]	637	"
Your task is to translate a question in natural language into a SPARQL query for the GOLEM knowledge graph.
The query must follow these guidelines:
1. SPARQL queries must include the following prefix:
   prefix golem: <https://golemlab.eu/graph/>
2. Enclose SPARQL queries within <SPARQL> </SPARQL> tags.
3. You must generate 1 query(ies).
4. It is very important that you use only the predicates provided below.
5. Examples are provided below for guidance.

###
Predicates:
https://golemlab.eu/graph/numberOfComments
https://golemlab.eu/graph/numberOfKudos
https://golemlab.eu/graph/publicationStatus
https://golemlab.eu/graph/dateModified
https://golemlab.eu/graph/characters
https://golemlab.eu/graph/collections
https://golemlab.eu/graph/fandom
https://golemlab.eu/graph/publisher
https://golemlab.eu/graph/rating
https://golemlab.eu/graph/series
https://golemlab.eu/graph/story_id
https://golemlab.eu/graph/summary
https://golemlab.eu/graph/numberOfChapters
https://golemlab.eu/graph/datePublished
https://golemlab.eu/graph/keyword
https://golemlab.eu/graph/contentWarning
https://golemlab.eu/graph/numberOfWords
https://golemlab.eu/graph/socialRelationships
https://golemlab.eu/graph/datePackaged
https://golemlab.eu/graph/romanticCategory
https://golemlab.eu/graph/noOfPairings
https://golemlab.eu/graph/topPartner
https://golemlab.eu/graph/topPartnerPairings
https://golemlab.eu/graph/averageWordLength
https://golemlab.eu/graph/MSTTR
https://golemlab.eu/graph/bigramEntropy
https://golemlab.eu/graph/wordEntropy
https://golemlab.eu/graph/fleschGrade
https://golemlab.eu/graph/fleschEase
https://golemlab.eu/graph/SMOG
https://golemlab.eu/graph/ARI
https://golemlab.eu/graph/daleChallNew
https://golemlab.eu/graph/nominalRatio
https://golemlab.eu/graph/nominalRatioInverse


###
Examples:


    Question: ¿Cuántos capítulos tiene this title is a wip of which i hate, like this fic and my life?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?chapters WHERE {  ?story golem:title ""this title is a wip of which i hate, like this fic and my life"" . ?story golem:numberOfChapters ?chapters . }
    </SPARQL>

    ###
    

    Question: ¿Cuántos comentarios tienen de media las historias de fast and furious：Hobbs and Shaw?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT AVG(?comments) AS ?avg_number_of_comments WHERE { ?story golem:fandom ""fast and furious：Hobbs and Shaw"" . ?story golem:numberOfComments ?comments . }
    </SPARQL>

    ###
    

    Question: ¿Está completada la historia A Small Steep Valley?

    Query:
    <SPARQL>
    prefix golem: <https://golemlab.eu/graph/>  prefix dc: <http://purl.org/dc/terms/> prefix gc: <https://ontology.golemlab.eu/>  SELECT DISTINCT ?status WHERE {  ?story golem:title ""A Small Steep Valley"" . ?story golem:publicationStatus ?status . }
    </SPARQL>

    ###
    

Question: ¿Cuántas reacciones suele conseguir una historia?

Query:
"	"
prefix golem: <https://golemlab.eu/graph/> 
prefix dc: <http://purl.org/dc/terms/> 
prefix gc: <https://ontology.golemlab.eu/> 
SELECT AVG(?kudos) AS ?avg_number_of_kudos WHERE { 
?story golem:numberOfKudos ?kudos . 
}
"	[{'avg_number_of_kudos': Value(typed-literal:'145.001746196927525')}]	0	1	1
